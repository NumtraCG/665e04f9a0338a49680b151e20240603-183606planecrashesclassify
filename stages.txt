[{"_id": "665e04f9a0338a49680b1521", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/Plane Crashes.csv", "in": [], "out": ["665e04f9a0338a49680b1522"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "PlaneCrashes", "comment": "", "pipeline_id": "665e04f9a0338a49680b151e", "sub_type": "HDFS", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/uploadedSourceFiles/Plane Crashes.csv", "filename": "Plane Crashes.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "domain": "http://172.31.59.158", "port": "40070", "dirPath": "/FileStore/platform", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "status": "new", "position": {"x": -80, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/source/hdfs-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#333333", "type": "source", "text": "Plane Crashes", "slug": "hdfs", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "_id": "665e04f9a0338a49680b1521", "dbValues": {"url": "/FileStore/platform/uploadedSourceFiles/Plane Crashes.csv", "filename": "Plane Crashes.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "domain": "http://172.31.59.158", "port": "40070", "dirPath": "/FileStore/platform", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "Date", "alias": "Date", "type": "date", "position": 0}, {"inherited": true, "checked": true, "field": "Time", "alias": "Time", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Aircraft", "alias": "Aircraft", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "Operator", "alias": "Operator", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "Registration", "alias": "Registration", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Flight phase", "alias": "Flight phase", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Flight type", "alias": "Flight type", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "Survivors", "alias": "Survivors", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Crash site", "alias": "Crash site", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "Schedule", "alias": "Schedule", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "MSN", "alias": "MSN", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "YOM", "alias": "YOM", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "Flight number", "alias": "Flight number", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "Crash location", "alias": "Crash location", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "Country", "alias": "Country", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "Region", "alias": "Region", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "Crew on board", "alias": "Crew on board", "type": "String", "position": 16}, {"inherited": true, "checked": true, "field": "Crew fatalities", "alias": "Crew fatalities", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "Pax on board", "alias": "Pax on board", "type": "String", "position": 18}, {"inherited": true, "checked": true, "field": "PAX fatalities", "alias": "PAX fatalities", "type": "String", "position": 19}, {"inherited": true, "checked": true, "field": "Other fatalities", "alias": "Other fatalities", "type": "String", "position": 20}, {"inherited": true, "checked": true, "field": "Total fatalities", "alias": "Total fatalities", "type": "numeric", "position": 21}, {"inherited": true, "checked": true, "field": "Circumstances", "alias": "Circumstances", "type": "String", "position": 22}, {"inherited": true, "checked": true, "field": "Crash cause", "alias": "Crash cause", "type": "String", "position": 23}], "actual_schema": [{"inherited": true, "checked": true, "field": "Date", "alias": "Date", "type": "date", "position": 0}, {"inherited": true, "checked": true, "field": "Time", "alias": "Time", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Aircraft", "alias": "Aircraft", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "Operator", "alias": "Operator", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "Registration", "alias": "Registration", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Flight phase", "alias": "Flight phase", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Flight type", "alias": "Flight type", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "Survivors", "alias": "Survivors", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Crash site", "alias": "Crash site", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "Schedule", "alias": "Schedule", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "MSN", "alias": "MSN", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "YOM", "alias": "YOM", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "Flight number", "alias": "Flight number", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "Crash location", "alias": "Crash location", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "Country", "alias": "Country", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "Region", "alias": "Region", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "Crew on board", "alias": "Crew on board", "type": "String", "position": 16}, {"inherited": true, "checked": true, "field": "Crew fatalities", "alias": "Crew fatalities", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "Pax on board", "alias": "Pax on board", "type": "String", "position": 18}, {"inherited": true, "checked": true, "field": "PAX fatalities", "alias": "PAX fatalities", "type": "String", "position": 19}, {"inherited": true, "checked": true, "field": "Other fatalities", "alias": "Other fatalities", "type": "String", "position": 20}, {"inherited": true, "checked": true, "field": "Total fatalities", "alias": "Total fatalities", "type": "numeric", "position": 21}, {"inherited": true, "checked": true, "field": "Circumstances", "alias": "Circumstances", "type": "String", "position": 22}, {"inherited": true, "checked": true, "field": "Crash cause", "alias": "Crash cause", "type": "String", "position": 23}], "selected_schema": [], "created_at": "2024-06-03 18:01:29.586000", "joinSchema": [], "updated_at": "2024-06-05 18:23:43.996000", "__v": 0, "sampleData": [{"Date": "5/2/1918", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Signal Corps - USSC", "Registration": "AS-32084", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Dayton - Dayton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Dayton-McCook Field Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The single engine airplane departed Dayton-McCook Field for a local test flight. Shortly after takeoff, the aircraft stalled and crashed, killing both occupants. Crew: Maj Oscar Brindley, Lt Col Henry Damm.", "Crash cause": "Technical failure"}, {"Date": "6/8/1918", "Time": "NA", "Aircraft": "Handley Page V/1500", "Operator": "Handley Page Aircraft Company Ltd", "Registration": "E4104", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cricklewood - Cricklewood", "MSN": "NA", "YOM": "1918", "Flight number": "NA", "Crash location": "Cricklewood London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Assembled at Cricklewood Airfield in May 1918, the aircraft departed Cricklewood for its 13th test flight, carrying six crew members. Shortly after takeoff, while climbing to a height of about 700-800 feet, all four engines stopped. The pilot elected to return for an emergency landing when the aircraft stalled and crashed in a field located in front of 21 Garrick Avenue in Golders Green, bursting into flames. Colonel Ogilvie, who was seating in the tail gunner position at the back of the plane, survived, while all five other occupants were killed. Crew: Cpt Vernon Earl George Busby, pilot, \u2020 Mr. Bertram G. Cooper, \u2020 Mr. R. P. Cooper, \u2020 Mr. W. H. Hathaway, \u2020 Mr. J. W. Windebank, \u2020 Colonel Ogilvie.", "Crash cause": "Technical failure"}, {"Date": "3/10/1919", "Time": "NA", "Aircraft": "Handley Page H.P.12", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-62447", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Elizabeth New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on a river bank near Elizabeth, NJ, following an engine failure.", "Crash cause": "Technical failure"}, {"Date": "3/18/1919", "Time": "NA", "Aircraft": "Handley Page H.P.12", "Operator": "Royal Air Force - RAF", "Registration": "D8340", "Flight phase": "Landing (descent or approach)", "Flight type": "Aerial photography", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Castle Bromwich - Castle Bromwich", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Castle Bromwich West Midlands", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The twin engine airplane was returning to Castle Bromwich following an aerial photography mission. Upon landing, the pilot encountered strong crosswinds when the aircraft slipped into the ground, crashed and came to rest with its nose stuck in the ground. All five occupants evacuated safely while the aircraft was damaged beyond repair.", "Crash cause": "Weather"}, {"Date": "4/15/1919", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "U.S. Air Mail Service", "Registration": "3", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Newark Delaware", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While flying in poor weather conditions, the aircraft impacted trees and crashed in a wooded area located 3 miles north of Newark. Crew fate unknown.", "Crash cause": "Weather"}, {"Date": "8/6/1919", "Time": "NA", "Aircraft": "Avro 536", "Operator": "Avro Air Transport", "Registration": "G-EAAO", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Hounslow Heath \u2013 Sandhurst", "MSN": "ATC.4", "YOM": "1919", "Flight number": "NA", "Crash location": "Sandhurst Berkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Following an uneventful flight from Hounslow Heath, the single engine airplane was approaching Sandhurst Airfield when it stalled and crashed. All three passengers were injured and the pilot was killed. Crew: Cpt Herbert Richard Hastings. Passengers: Maj H. S. Phillips, Mr. E. Kohler, Mr. A. J. Whittingdon.", "Crash cause": "Unknown"}, {"Date": "8/21/1919", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Avro Air Transport", "Registration": "G-EAGO", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "D9343", "YOM": "1919", "Flight number": "NA", "Crash location": "Southport Merseyside", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was forces to attempt an emergency landig for unknown reasons. The aircraft crashed in a field near Southpoer and was damaged beyond repair. The pilot was injured.", "Crash cause": "Unknown"}, {"Date": "9/20/1919", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "SC-24269", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Marfa Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft crashed upon landing at Marfa Airport. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "10/17/1919", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-30547", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coronado California", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft crashed on landing at Coronado-Rockwell Field, CA. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "3/5/1920", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "SC-23961", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Fort Sill-Henry Post Field AFB Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in the Fort Sill Reserve, some five km southwest of the airbase. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "3/6/1920", "Time": "NA", "Aircraft": "Farman F.40", "Operator": "Martin Seidler", "Registration": "CH-16", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Porrentruy - Porrentruy", "MSN": "3437", "YOM": "1919", "Flight number": "NA", "Crash location": "Porrentruy Jura", "Country": "Switzerland", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Martin Seidler, sole on board, was completing a local flight in Porrentruy when he lost control of the airplane that crashed in a field. The pilot escaped uninjured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "3/24/1920", "Time": "NA", "Aircraft": "Junkers-Larsen JL-6 (Junkers F.13)", "Operator": "Junkers-Larsen", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Demonstration", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Roosevelt Field - Roosevelt Field", "MSN": "536", "YOM": "1920", "Flight number": "NA", "Crash location": "Roosevelt Field New York", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Emil Monz was performing a demonstration flight at Roosevelt Field Airport. Shortly after take off, while climbing to a height of about 100 feet, the propeller disintegrated. The pilot attempted an emergency landing when the aircraft crashed near the runway. The pilot evacuated safely and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "3/26/1920", "Time": "NA", "Aircraft": "Handley Page H.P.12", "Operator": "Royal Air Force - RAF", "Registration": "E9744", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "El Qantara Ismailia", "Country": "Egypt", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff. Crew faite unknown.", "Crash cause": "Unknown"}, {"Date": "3/31/1920", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Handley Page Transport", "Registration": "G-EAHW", "Flight phase": "Flight", "Flight type": "Aerial photography", "Survivors": "Yes", "Crash site": "City", "Schedule": "Cricklewood - Biggin Hill", "MSN": "E3364", "YOM": "1919", "Flight number": "NA", "Crash location": "Southwark Park London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Cricklewood on a flight to Biggin Hill for an aerial photography mission on behalf of Aerofilms Ltd, carrying one photographer and one pilot. En route, the pilot encountered technical problems and elected to make an emergency landing in Southwark Park. The aircraft crashed in a small lake and was damaged beyond repair. Both occupants escapes uninjured.", "Crash cause": "Technical failure"}, {"Date": "4/1/1920", "Time": "NA", "Aircraft": "Handley Page H.P.12", "Operator": "Royal Air Force - RAF", "Registration": "F302", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Desert", "Schedule": "Khartoum - Cairo", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abu Hamad River Nile (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+0646><U+0647><U+0631> <U+0627><U+0644><U+0646><U+064A><U+0644>)", "Country": "Sudan", "Region": "Africa", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The twin engine aircraft departed Khartoum on a flight to Cairo. En route, the airplane suffered a structural failure and crashed near Abu Hamad, about 450 km north of Khartoum, bursting into flames. All four occupants were killed. Crew: F/O John Barclay Jaques, F/O Desmond Wilkie Sibley, Sgt Edmund West Wadey, AC2 Reginald Colin Meldrum.", "Crash cause": "Unknown"}, {"Date": "4/29/1920", "Time": "NA", "Aircraft": "Farman F.40", "Operator": "Compa\u00f1ia Colombiana de Navegaci\u00f3n A\u00e9rea", "Registration": "Cartagena", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Barranquilla - Barranquilla", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Barranquilla Atl\u00e1ntico", "Country": "Colombia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The aircraft was performing a local flight with three passengers and one pilot on board. Shortly after takeoff, while climbing to a height of about 100 metres, the aircraft was caught by a strong wind, rolled to the left and hit the ground. While all three passengers were seriously injured, the pilot was killed. They were completing their first flight. Crew: Jacques Jourdanet, pilot. Passengers: Mrs. Pepa Restrepo de V\u00e1squez and her both sons.", "Crash cause": "Weather"}, {"Date": "4/30/1920", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Vickers-Armstrongs Ltd", "Registration": "G-EACV", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Joyce Green - Brooklands", "MSN": "E4233", "YOM": "1919", "Flight number": "NA", "Crash location": "Joyce Green (Dartford) Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a training flight from Joyce Green Airport, in Dartford, Kent, to Brooklands Airport, Weybridge, Surrey. Shortly after take off, he lost control of the aircraft that crashed in a field. While the pilot was injured, the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "7/4/1920", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Central Aircraft Company", "Registration": "G-EAGI", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Twickenham \u2013 Northolt", "MSN": "E4234", "YOM": "1919", "Flight number": "NA", "Crash location": "Twickenham London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Twickenham, while climbing, the pilot encountered technical problems. The aircraft stalled and crashed in a field. Both occupants were injured and the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "7/20/1920", "Time": "NA", "Aircraft": "Farman F.40", "Operator": "Compa\u00f1ia Colombiana de Navegaci\u00f3n A\u00e9rea", "Registration": "Santa Marta", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Cartagena - Barranquilla", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cartagena Bol\u00edvar", "Country": "Colombia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from the bay of Cartagena, while climbing, the engine stopped. The pilot F\u00e9lix Fratoni lost control of the aircraft that lost height and crashed in the sea. The pilot and a passenger were killed while a second passenger was injured. Miguel Araujo, Director of the newspaper 'El Porvenir', was the only survivor.", "Crash cause": "Human factor"}, {"Date": "8/28/1920", "Time": "NA", "Aircraft": "Savoia S.16", "Operator": "Regia Marina Italiana", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2503", "YOM": "NA", "Flight number": "NA", "Crash location": "Kallnach Bern", "Country": "Switzerland", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances, injuring both crew members, Umberto Maddalena and Nanneti.", "Crash cause": "Unknown"}, {"Date": "9/23/1920", "Time": "NA", "Aircraft": "Avro 504", "Operator": "H. W. B. Hansford", "Registration": "G-EAJQ", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "H2587", "YOM": "1919", "Flight number": "NA", "Crash location": "Honiton Devon", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. The aircraft was destroyed and the pilot was injured.", "Crash cause": "Unknown"}, {"Date": "10/2/1920", "Time": "NA", "Aircraft": "Salmson 2.A2", "Operator": "Lignes A\u00e9riennes Lat\u00e9co\u00e8re", "Registration": "F-ALAI", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Toulouse - Barcelona", "MSN": "31", "YOM": "1920", "Flight number": "NA", "Crash location": "Port-Vendres Pyr\u00e9n\u00e9es-Orientales", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a mail flight from Toulouse to Barcelona when the aircraft crashed in unknown circumstances some 5 km north of Cape B\u00e9ar, near Port-Vendres. Crew: Jean Rodier, pilot Marie-Fran\u00e7ois Marty-Mah\u00e9, mechanic.", "Crash cause": "Unknown"}, {"Date": "11/6/1920", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "U.S. Air Mail Service", "Registration": "178", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Salt Lake City \u2013 Cheyenne", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tie Siding Wyoming", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While cruising in poor visibility due to fog, the aircraft hit a mountain near Tie Siding, Wyoming. The pilot J. P. Woodward was killed.", "Crash cause": "Human factor"}, {"Date": "11/22/1920", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYBN", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Camp Borden Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "2/20/1921", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Air Force - RAF", "Registration": "E9691", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Baghdad - Baghdad", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Baghdad Baghdad (<U+0628><U+063A><U+062F><U+0627><U+062F>)", "Country": "Iraq", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot, sole on board, was completing a local training flight in Baghdad. En route, the engine failed. The pilot elected to make an emergency landing when the aircraft crashed in the Tigre River, near the district of Karrada, in Baghdad. The pilot was injured and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "3/4/1921", "Time": "NA", "Aircraft": "Caproni Ca.60", "Operator": "Caproni Trasporti", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Lake Maggiore - Lake Maggiore", "MSN": "1", "YOM": "1921", "Flight number": "NA", "Crash location": "Lake Maggiore Piedmont", "Country": "Italy", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot, sole on board, was engaged in a test flight on this first prototype equipped with nine wings and eight engines. This flight was the first test of the aircraft which was just built few days earlier. After takeoff from Lake Maggiore, while climbing to a height of 18 meters (some 60 feet), the eaplane stalled and crashed in the lake. The pilot Captain Semprini was slightly injured and the aircraft was destroyed. The project was later abandoned.", "Crash cause": "Unknown"}, {"Date": "4/1/1921", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYBD", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Camp Borden - Camp Borden", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Camp Borden Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "4/2/1921", "Time": "NA", "Aircraft": "Curtiss JN-4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-44864", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Fort Sill - Fort Sill", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Fort Sill-Henry Post Field AFB Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot, sole on board, was completing a local training flight at Fort Sill-Henry Post Field. The engine failed in-flight, forcing the pilot to attempt an emergency landing. The aircraft was damaged beyond repair and the pilot escaped uninjured.", "Crash cause": "Technical failure"}, {"Date": "5/11/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63566", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Fort Sill - Fort Sill", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Fort Sill-Henry Post Field AFB Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "6/12/1921", "Time": "NA", "Aircraft": "Curtiss JN-4", "Operator": "McCall-Hanrahan Air Service", "Registration": "G-CAAH", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Calgary - Calgary", "MSN": "M3100", "YOM": "1920", "Flight number": "NA", "Crash location": "Calgary Alberta", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane was completing a local flight when it crashed in unknown circumstances in Bowness Park, Calgary. The pilot P. J. A. Fleming was injured and the passenger Mr. Alf Mabee was killed.", "Crash cause": "Unknown"}, {"Date": "6/17/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63916", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Oceana NAS (Virgnia Beach) Virginia", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following an engine failure in flight, the pilot was forced to make an emergency landing 10 km from Oceana NAS. Crew fate unknown.", "Crash cause": "Technical failure"}, {"Date": "6/23/1921", "Time": "NA", "Aircraft": "Bl\u00e9riot Spad 27", "Operator": "Compagnie des Messageries A\u00e9riennes - CMA", "Registration": "F-CMAY", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Croydon - Paris", "MSN": "1254", "YOM": "1920", "Flight number": "NA", "Crash location": "Bekesbourne Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Croydon to Paris-Le Bourget, the pilot encountered technical problems and elected to make an emergency landing in Bekesbourne. At low height, the aircraft collided with a telephone line then crashed on the railway road between Bekesbourne and Adisham. All three occupants evacuated safely, only the pilot suffered minor injuries. The aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "7/11/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63690", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "New Point Comfort Virginia", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "7/13/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63525", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Luke Field AFB, Ford Island Hawaii", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after takeoff from Luke AFB, Ford Island, Pearl Harbor, Hawaii. Pilot fate unknown.", "Crash cause": "Technical failure"}, {"Date": "8/10/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63502", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Fort Sill-Henry Post Field AFB Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft collided with a USAAS De Havilland DH.4B registered AS-63129 while taking off from Fort Sill-Henry Post Field AFB. The collision occurred in unknown circumstances and the fate of both crew is also unknown.", "Crash cause": "Unknown"}, {"Date": "11/26/1921", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Stallard Airways", "Registration": "G-EAFQ", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Penshurst - Ashford", "MSN": "E4180", "YOM": "1919", "Flight number": "NA", "Crash location": "Hildenborough Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Showing off to a crowd often leads to embarrassment, as the pilot of an Avro 504 K discovered back in 1921. G-EAFQ was supposed to be flying from Penshurst to Ashford on the afternoon of 26th November - at the controls was Mr. R.H. Leavy, with a Mr. T. Baden-Powell as passenger. After making a short test flight the pilot took off again with the intention of heading for a temporary aerodrome at Ashford. On climbing to about 600 feet in an easterly direction, Leavy commenced a gradual turn to port until the Avro 504 arrived over a football ground on which a game was in progress. The machine was then banked vertically and the pilot, at 400 feet, waved his arm at the spectators. Unfortunately G-EAFQ fell rapidly into a side-slip and only partially recovered before striking the ground about 200 yards outside the touchline. The aircraft was fitted with dual controls - the passenger had not, however, interfered with them in any way. The men scrambled from the wreckage, Mr. Leavy having received nothing worse than cuts to the face, and Mr. Baden-Powell was unhurt.", "Crash cause": "Human factor"}, {"Date": "12/21/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63249", "Flight phase": "NA", "Flight type": "Military", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Stockdale Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "3/31/1922", "Time": "NA", "Aircraft": "De Havilland DH.6", "Operator": "Brompton Motor Company", "Registration": "G-EAWU", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "F3439", "YOM": "1921", "Flight number": "NA", "Crash location": "Isle of Wight Isle of Wight", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft was completing a plaisance flight over the Isle of Wight when it crashed for unknown reasons. Both occupants evacuated safely and the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "5/6/1922", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Grahame-White Aviation", "Registration": "G-EBCL", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "E9227", "YOM": "1922", "Flight number": "NA", "Crash location": "Newport Isle of Wight", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Crashed on takeoff, killing the pilot, sole on board.", "Crash cause": "Unknown"}, {"Date": "5/9/1922", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63395", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Dallas Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff.", "Crash cause": "Unknown"}, {"Date": "5/17/1922", "Time": "14H 30M 0S", "Aircraft": "Fokker F3", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "H-NABT", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Amsterdam - Rotterdam - Croydon", "MSN": "1532", "YOM": "1921", "Flight number": "NA", "Crash location": "Hythe Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Rotterdam-Waalhaven Airport at 1214LT and the pilot landed at Calais where it stopped for about 45 minutes for weather improvement. While cruising over The Channel and approaching the English coast, the pilot encountered poor visibility due to fog and low clouds. He continued along the shore and arrived in Hythe, Kent, when the aircraft hit a tree and crashed in a field. All four occupants were rescued and one passenger was slightly injured. At the time of the accident, visibility did not exceed 75 yards. Crew: W. Warnaar, pilot.", "Crash cause": "Human factor"}, {"Date": "6/2/1922", "Time": "NA", "Aircraft": "Avro 504", "Operator": "\u00c9cole A\u00e9ro", "Registration": "CH-39", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lausanne - Lausanne", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lausanne-Bl\u00e9cherette Vaud", "Country": "Switzerland", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was completing a local training flight at Lausanne-Bl\u00e9cherette Airport. The single engine airplane crashed in unknown circumstances, killing both occupants Emile Johner and Mr. Glaser.", "Crash cause": "Unknown"}, {"Date": "6/11/1922", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-68678", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Augusta Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following an engine failure in flight, the pilot made an emergency landing in an open field. While the pilot was uninjured, the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "7/8/1922", "Time": "7H 0M 0S", "Aircraft": "LVG C.VI", "Operator": "Nederlands-Indische Luchtvaart Onderneming", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Batavia \u2013 Semarang", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Jakarta City District of Jakarta", "Country": "Indonesia", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after takeoff from Antjol in Batavia, the aircraft impacted trees and crashed. A passenger was injured while three other occupants were killed.", "Crash cause": "Unknown"}, {"Date": "7/22/1922", "Time": "NA", "Aircraft": "Hansa Brandenburg W.33", "Operator": "JL Tiedemanns Tobaksfabrik", "Registration": "N.21", "Flight phase": "Flight", "Flight type": "Executive/Corporate/Business", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "7", "YOM": "1922", "Flight number": "NA", "Crash location": "R\u00f8rvik Nord-Tr\u00f8ndelag", "Country": "Norway", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft was performing a regional flight when it crashed in unknown circumstances in the Namsdalen Valley located near R\u00f8rvik. Both occupants were killed. The aircraft was named 'Tiger'.", "Crash cause": "Unknown"}, {"Date": "8/23/1922", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Air Force - RAF", "Registration": "E9910", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Abu Sueir - Abu Sueir", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abu Sueir Ismailia", "Country": "Egypt", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was completing a training sorti at Abu Sueir Airport. While completing a turn at a height of 300 feet, the crew lost control of the airplane that entered a dive and crashed. Both pilots were killed. Crew: F/O F. W. G. Bedford, F/O H. F. Potter.", "Crash cause": "Unknown"}, {"Date": "9/20/1922", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Registration": "D-27", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Goetsenhoven AFB - Goetsenhoven AFB", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Goetsenhoven AFB (Tienen) Flemish Brabant", "Country": "Belgium", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Oscar Dumortier was performing a training mission. On approach to Goetsenhoven AFB located 2 km south of Tienen, the aircraft crashed in an open field located in Outgaarden. The aircraft was destroyed and the pilot killed.", "Crash cause": "Unknown"}, {"Date": "12/3/1922", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-ALNA", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Toulouse - Barcelona - Valencia - Alicante - M\u00e1laga - Rabat", "MSN": "14", "YOM": "1920", "Flight number": "NA", "Crash location": "Fez F\u00e8s-Boulemane", "Country": "Morocco", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Alphonse Gensollen was performing a flight between France and Argentina. While cruising in the region of Fez, he encountered low visibility due to foggy conditions. He reduced his altitude to maintain a visual contact with the ground when the aircraft collided with trees and crashed on a hill. The pilot was killed.", "Crash cause": "Human factor"}, {"Date": "3/17/1923", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Junkers Flugzeug %26 Motorenwerke", "Registration": "D-217", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Albina - Macap\u00e1", "MSN": "633", "YOM": "1922", "Flight number": "NA", "Crash location": "Oiapoque Amap\u00e1", "Country": "Brazil", "Region": "South America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was conducting flights in South America to promote the sale of the Junkers F.13 to local operators. The aircraft departed Albina Airport, Suriname, bound to Macap\u00e1, Brazil. Just after passing the border between French Guyana and Brazil, the crew encountered poor weather conditions and elected to make an emergency landing on the Oiapoque River, near Oiapoque. In unknown circumstances, the aircraft crashed in the river and was damaged beyond repair. While the pilot Drewsky was injured, the mechanic Thill was killed.", "Crash cause": "Weather"}, {"Date": "4/12/1923", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-AEEK", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Oran \u2013 Casablanca", "MSN": "160", "YOM": "1922", "Flight number": "NA", "Crash location": "Casablanca Grand Casablanca", "Country": "Morocco", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "A connecting rod broke in flight, causing the engine to fail. The crew was forced to attempt an emergency landing. While both crew escaped uninjured, the aircraft was destroyed. The radionavigator was Juan Munar.", "Crash cause": "Technical failure"}, {"Date": "5/11/1923", "Time": "NA", "Aircraft": "Junkers-Larsen JL-6 (Junkers F.13)", "Operator": "Roald Amundsen", "Registration": "Elisabeth", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Wainwright - Wainwright", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wainwright Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Oskar Omdal was performing a local test flight on this aircraft named 'Elisabeth'. Shortly after takeoff from Wainwright, the aircraft stalled and crashed in a lagoon. While the pilot was uninjured, the aircraft was damaged beyond repair as a ski was torn off and went through the engine. The aircraft, owned by the Norwegian explorer Roald Amundsen, was performing some tests before an expedition to the Spitzberg archipelago.", "Crash cause": "Technical failure"}, {"Date": "6/23/1923", "Time": "13H 30M 0S", "Aircraft": "Bl\u00e9riot 115", "Operator": "Bl\u00e9riot", "Registration": "F-ESBB", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Le Touquet - Toussus-le-Noble", "MSN": "1", "YOM": "1923", "Flight number": "NA", "Crash location": "Dam\u00e9raucourt Oise", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "After taking part to an airshow in Le Touquet to introduce this new four engine aircraft (first prototype), the crew was returning to his base in Toussus-le-Noble. While cruising at an altitude of 600 metres over Dam\u00e9raucourt, some 4 km north of Grandvilliers, the aircraft went out of control and crashed in the forest of Vieuville. While the mechanic was uninjured, the pilot was killed instantly. The aircraft was named 'Le Mammouth'. Crew: Jean Casale, pilot, Gaston Boulet, mechanic.", "Crash cause": "Technical failure"}, {"Date": "9/10/1923", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Midland Aviation", "Registration": "G-EAGB", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "H5173", "YOM": "1919", "Flight number": "NA", "Crash location": "Evesham Worcestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "10/18/1923", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Brazilian Air Force - Avia\u00e7\u00e3o Militar", "Registration": "2", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Campo dos Afonsos - Campo dos Afonsos", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Campo dos Afonsos AFB Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was completing a local training mission at Campo dos Afonsos AFB when the aircraft crashed in unknown circumstances. A crew member was seriously injured and both other occupants were killed.", "Crash cause": "Unknown"}, {"Date": "5/27/1924", "Time": "NA", "Aircraft": "De Havilland DH.34", "Operator": "Imperial Airways", "Registration": "G-EBBR", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brussels - Ostend - Croydon", "MSN": "28", "YOM": "1922", "Flight number": "NA", "Crash location": "Ostend West Flanders", "Country": "Belgium", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff for unknown reasons. All occupants escaped unhurt while the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "2/5/1925", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-ALXE", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Rio de Janeiro - Salvador - Recife", "MSN": "118", "YOM": "1922", "Flight number": "NA", "Crash location": "Salvador Bahia", "Country": "Brazil", "Region": "South America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After takeoff, the aircraft overturned and came to rest upside down on a beach. All three crew members escaped uninjured and the aircraft was damaged beyond repair. Crew: Paul Vachet, pilot, Joseph Roig, pilot, No\u00ebl Gauthier, engineer.", "Crash cause": "Unknown"}, {"Date": "3/22/1925", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Zakavia", "Registration": "RR-ECA", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Tbilisi - Sukhumi", "MSN": "590", "YOM": "1920", "Flight number": "NA", "Crash location": "Tbilisi Tbilisi City District", "Country": "Georgia", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after take off from Tbilisi Airport, the single engine aircraft went out of control and crashed, bursting into flames. All five occupants were killed, among them three official of the Georgian Government en route to a Soviet Congress in Sukhumi.", "Crash cause": "Unknown"}, {"Date": "3/27/1925", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Portuguese Air Force - Aeron\u00e1utica Militar", "Registration": "13", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Barcarena Estremadura - Lisbon District", "Country": "Portugal", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was completing a training flight when the airplane crashed in unknown circumstances in Barcarena. All three occupants were killed.", "Crash cause": "Unknown"}, {"Date": "4/7/1925", "Time": "11H 0M 0S", "Aircraft": "Vickers Virginia", "Operator": "Royal Air Force - RAF", "Registration": "J7439", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Manston - Manston", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Birchington-on-Sea Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew departed Manston Airport in the morning to complete a training mission over the North Sea and the Thames Estuary. At the end of the mission, while returning, the crew encountered poor visibility due to fog. The captain decided to ditch the aircraft off Birchington-on-Sea, Kent. The aircraft crashed in the sea and was later recovered. The copilot and another crew were killed while the captain and another crew were injured. Crew: Eric Alfred Claude Bushell, pilot, Neil Coull Walker, copilot, \u2020 Ernest Edward Mills, \u2020 Horace Eustace Grellis.", "Crash cause": "Weather"}, {"Date": "5/25/1925", "Time": "5H 0M 0S", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-AFBB", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "M\u00e1laga \u2013 Alicante \u2013 Barcelona \u2013 Toulouse", "MSN": "202", "YOM": "1923", "Flight number": "NA", "Crash location": "Alicante Valencian Community", "Country": "Spain", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from Alicante-Els \u00c0ngels Airfield, while climbing to a height of 150 metres, the pilot encountered unfavorable winds (strong downdrafts). The aircraft lost height and crashed, bursting into flames. Both crew members were killed while all three passengers were seriously injured. The weather was very bad at the time of the accident as another pilot of the company refused to start the flight. He was replaced by Raoul Berjaud, Station Manager, at the last minute. Crew: Raoul Berjaud, pilot, \u00c9mile Lempereur, mechanic.", "Crash cause": "Weather"}, {"Date": "7/14/1925", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "H9814", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Netheravon - Netheravon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Charlton Wiltshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot departed RAF Netheravon on a solo training flight. En route, he lost control of the airplane that crashed in a field located in Charlton, about 45 km northwest of RAF Netheravon. The pilot F/O John Ryan was killed.", "Crash cause": "Unknown"}, {"Date": "8/1/1925", "Time": "NA", "Aircraft": "Farman F.60 Goliath", "Operator": "Farman Line", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Paris - Brussels", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Soignies Hainaut", "Country": "Belgium", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "8", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Paris to Brussels, the crew encountered an unexpected situation and was forced to attempt an emergency landing. The aircraft crash landed in an open field in Soignies and was damaged. All 10 occupants evacuated safely but the aircraft was damaged beyond repair after being attacked by a bull.", "Crash cause": "Unknown"}, {"Date": "8/27/1925", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Schlesische Luftverkehrs", "Registration": "D-559", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "755", "YOM": "1925", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Named 'Ziegenmelker', the aircraft crashed in unknown circumstances, in Germany? Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "10/22/1925", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYBH", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Camp Borden - Camp Borden", "MSN": "H9624", "YOM": "NA", "Flight number": "NA", "Crash location": "Camp Borden Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a local training flight at Camp Borden Airfield when the airplane crashed in unknown circumstances. Both pilots were injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "12/16/1925", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "E2914", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Manston", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Manston Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, was completing a local training mission at Manston Airport. Shortly after takeoff, while in initial climb, he lost control of the airplane that crashed on the ground. The pilot LAC Edward Emmanuel Dunn was killed.", "Crash cause": "Unknown"}, {"Date": "3/2/1926", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A3-14", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Point Cook - Point Cook", "MSN": "H3031", "YOM": "1920", "Flight number": "NA", "Crash location": "Point Cook (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot D. Ross was performing a training mission at RAAF Point Cook when the accident occurred in unknown circumstances. While the pilot was injured, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "3/8/1926", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Deutsche Lufthansa", "Registration": "D-290", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin - Berlin", "MSN": "665", "YOM": "1923", "Flight number": "NA", "Crash location": "Berlin-Staaken Berlin", "Country": "Germany", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing a local training flight at Berlin-Staaken Airport. On final approach, while completing a last turn to the left, the pilot lost control of the aircraft that stalled and crashed. The pilot Paul Billik was killed.", "Crash cause": "Unknown"}, {"Date": "3/13/1926", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Lignes A\u00e9riennes Lat\u00e9co\u00e8re", "Registration": "F-FYMS", "Flight phase": "NA", "Flight type": "Postal (mail)", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "1926", "YOM": "1919", "Flight number": "NA", "Crash location": "France All France", "Country": "France", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "4/10/1926", "Time": "11H 0M 0S", "Aircraft": "Avro 504", "Operator": "Inland Area Aircraft Depot", "Registration": "H9535", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Henlow - Henlow", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Henlow AFB Bedfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed RAF Henlow for a local training flight. While flying in the vicinity of the airbase, the aircraft collided with a Vickers FB.27 Vimy Commercial registered F9184. Also operated by the Inland Area Aircraft Depot, the aircraft was carrying four crew members. Following the collision, both aircraft dove in the ground and were destroyed by a post crash fire. All five occupants were killed. Crew from the Vimy: F/O Charles Victor Lacey, LAC Reginald Richard Germain, LAC Basil Henry Greene Young, AC1 James William Simmons. Crew Avro: F/O William Scott.", "Crash cause": "Human factor"}, {"Date": "4/13/1926", "Time": "10H 10M 0S", "Aircraft": "Fokker F3", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "H-NABU", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Amsterdam - Rotterdam", "MSN": "1662", "YOM": "1922", "Flight number": "NA", "Crash location": "Amsterdam-Schiphol North Holland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll, the aircraft struck an irregularity in the ground and rotated prematurely. Unable to get sufficient height due to low speed, the aircraft stalled and crashed. All three occupants evacuated safely and the aircraft was considered as damaged beyond repair.", "Crash cause": "Other causes"}, {"Date": "5/18/1926", "Time": "16H 40M 0S", "Aircraft": "Ford 2", "Operator": "Ford Air Freight Lines", "Registration": "1", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Chicago - Detroit", "MSN": "1", "YOM": "1925", "Flight number": "NA", "Crash location": "Chicago-Midway Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing the first commercial cargo flight from Chicago to Detroit for the Ford Air Freight Lines Company. The Ford 2-AT Pullman was carrying mail and cargo on behalf of the Contract Air Mail. Shortly after takeoff from Chicago-Midway Airport, while climbing in poor weather conditions, the aircraft named 'Maiden Dearborn I' went out of control and crashed in Summit, some 2 miles west of the airport. The pilot was killed and the aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "6/1/1926", "Time": "NA", "Aircraft": "Dornier Do B Merkur", "Operator": "Deutsche Verkehrsfliegerschule - DVS", "Registration": "D-774", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Hamburg - Magdeburg", "MSN": "83", "YOM": "1925", "Flight number": "NA", "Crash location": "Bleckede Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Crashed in unknown circumstances in Bleckede while performing a training flight from Hamburg to Magdeburg. One pilot was killed and the second occupant was injured.", "Crash cause": "Unknown"}, {"Date": "6/5/1926", "Time": "NA", "Aircraft": "Khioni-Konek-Gorbunok Kh-5", "Operator": "Dobrolet", "Registration": "NA", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Nizhegorodets Nizhny Novgorod oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "6/21/1926", "Time": "NA", "Aircraft": "Fokker F7", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "H-NACL", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Amsterdam \u2013 Rotterdam \u2013 Croydon", "MSN": "4841", "YOM": "1925", "Flight number": "NA", "Crash location": "Hythe Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While overflying The Channel and approaching the British coast, the engine failed. The pilot was able to ditch the airplane few dozen metres offshore. All five occupants evacuated safely and were quickly rescued by local people who brang the aircraft back to the beach. The aircraft was later considered as damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "7/21/1926", "Time": "NA", "Aircraft": "Loening 23 Air Yacht", "Operator": "Provincial Air Service of Lands %26 Forests", "Registration": "G-CAOO", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "3", "YOM": "1924", "Flight number": "NA", "Crash location": "Ramsey Lake (Sudbury) Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After takeoff from Ramsey Lake in Sudbury, while climbing to a height of 200 feet, the seaplane stalled and crashed in water. All five occupants were rescued and the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "9/29/1926", "Time": "23H 55M 0S", "Aircraft": "Farman F.60 Goliath", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "A-5", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Chartres - Chartres", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bonneval Eure-et-Loir", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a night training flight on behalf of the 3rd Squadron of the 22nd regiment based in Chartres. While flying in the region of Bonneval, some 20 km south of Chartres, the aircraft caught fire. The pilot reduced his altitude and attempted an emergency landing. From a height of 50 meters, the aircraft stalled and crashed in a huge explosion. All five occupants were killed. Crew: Lt Jules Gindre, pilot, Sgt Pierre Pacaud, navigator, Sgt Roger Duchatelle, navigator, Sgt Raymond Rigault, mechanic, Pvt Jean Fr\u00e9mont, radio.", "Crash cause": "Technical failure"}, {"Date": "11/6/1926", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "Oriente", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Cochabamba \u2013 Santa Cruz", "MSN": "769", "YOM": "1925", "Flight number": "NA", "Crash location": "Santa Cruz Santa Cruz", "Country": "Bolivia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "5", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While descending to Santa Cruz, the single engine crashed in unknown circumstances near Santa Cruz. All six occupants were killed, among them Emilio Antelo, Consul of Bolivia in Arica, Chili.", "Crash cause": "Unknown"}, {"Date": "11/11/1926", "Time": "8H 0M 0S", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-AFAX", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Casablanca \u2013 Dakar", "MSN": "198", "YOM": "1923", "Flight number": "NA", "Crash location": "Cape Bojador La\u00e2youne-Boujdour-Sakia El Hamra", "Country": "Western Sahara", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route from CAsablanca to Dakar, while cruising along the shore, the engine failed. The crew made an emergency landing on a beach near Cape Bojador. After landing, the crew was attacked by Maures tribesmen and killed while the aircraft was set on fire and destroyed. Crew: L\u00e9opolds Gourp, pilot, Henri Erable, copilot, Mr. Pintado, mechanic.", "Crash cause": "Technical failure"}, {"Date": "12/15/1926", "Time": "NA", "Aircraft": "Grulich V.1", "Operator": "Deruluft - Deutsch-Russische Luftverkehrs Gesellschaft", "Registration": "D-902", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "1653", "YOM": "NA", "Flight number": "NA", "Crash location": "Russia All Russia", "Country": "Russia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in December 1926, exact date unknown.", "Crash cause": "Unknown"}, {"Date": "2/24/1927", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Newcastle upon Tyne Light Aeroplane Club", "Registration": "G-EBLY", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cramlington - Cramlington", "MSN": "191", "YOM": "1925", "Flight number": "NA", "Crash location": "Cramlington Northumberland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight. Shortly after takeoff from Cramlington Airport, while in initial climb, the engine stopped. The aircraft stalled and crashed. While both occupants were injured, the aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "3/24/1927", "Time": "9H 30M 0S", "Aircraft": "De Havilland DH.9", "Operator": "Qantas Airways - Queensland and Northern Territory Aerial Services", "Registration": "G-AUED", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Charleville \u2013 Tambo \u2013 Blackall", "MSN": "86", "YOM": "1923", "Flight number": "NA", "Crash location": "Tambo Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The airplane departed Charleville at 0530LT with a pilot, Ian Douglas Davidson, and two passengers, William Robertson Donaldson from Rockland, and A. W. Bell from Belmont. The plane must have had trouble on the road as it only reached Tambo at 0930LT (two hours late), flying very low over the river, with the engine running. On final approach, the engine stopped, and a second later, the plane hit tree top and crashed. Mr. Bell was dead and Mr. Davidson died within half-an-hour, while Mr. Donaldson expired at 2 o'clock. The plane was destroyed, the engine and fuselage being smashed to pieces.", "Crash cause": "Technical failure"}, {"Date": "5/15/1927", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A7-1", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Point Cook - Point Cook", "MSN": "199", "YOM": "1925", "Flight number": "NA", "Crash location": "Point Cook (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While performing a local training flight in the vicinity of RAAF Point Cook, the aircraft crashed in unknown circumstances. Both pilots were injured.", "Crash cause": "Unknown"}, {"Date": "5/28/1927", "Time": "NA", "Aircraft": "Martin NBS-1 (MB-2)", "Operator": "United States Army Air Corps - USAAC", "Registration": "AC-68525", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Augusta Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Shortly after takeoff from Augusta Airport, while climbing to a height of 500 feet, one of the engine caught fire. The crew lost control of the airplane that crashed, bursting into flames. All four crew members were killed.", "Crash cause": "Technical failure"}, {"Date": "7/11/1927", "Time": "NA", "Aircraft": "Vickers Viking (Serie I/II/III & IV)", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYET", "Flight phase": "Flight", "Flight type": "Topographic", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Winnipegosis - Winnipegosis", "MSN": "27", "YOM": "1923", "Flight number": "NA", "Crash location": "Hilbre Manitoba", "Country": "Canada", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew departed Winnipegosis on a topographic mission over the area of Hilbre, north of Winnipeg. While flying in stormy weather at an altitude of 3,500 feet, the aircraft went out of control and crashed in a prairie. All three occupants were killed.", "Crash cause": "Weather"}, {"Date": "7/14/1927", "Time": "NA", "Aircraft": "Travel Air 5000", "Operator": "Ernest L. Smith", "Registration": "Spirit of Oakland", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Oakland - Honolulu", "MSN": "160", "YOM": "1927", "Flight number": "NA", "Crash location": "Molokai Hawaii", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Both pilots Ernest L. Smith and Emory R. Bronte were engaged in one of the first transpacific nonstop flight from Oakland to Honolulu, taking part to the 'Dole Race' with a price of 25,000 US$. After a flight of 26 hours and 36 minutes, the crew was approaching the coast of Molokai when the engine failed due to fuel exhaustion. The crew made an emergency landing and was uninjured while the aircraft named 'Spirit of Oakland' was damaged beyond repair. As he did not reach Honolulu, the crew was disqualified and did not win the prize.", "Crash cause": "Technical failure"}, {"Date": "7/30/1927", "Time": "NA", "Aircraft": "Sablatnig P.III", "Operator": "Deutsche Lufthansa", "Registration": "D-984", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Konstanz Baden-W\u00fcrttemberg", "Country": "Germany", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Konstanz Airfield, while climbing, the engine failed. The pilot attempted an emergency landing when the aircraft crashed in the Gnadensee. All four occupants were rescued and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "8/4/1927", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Dennis M. M. Rooke", "Registration": "G-EBQJ", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Aurangabad - Darwin", "MSN": "371", "YOM": "1927", "Flight number": "NA", "Crash location": "Aurangabad Maharashtra", "Country": "India", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Dennis M. M. Rooke, pilot and owner of this aircraft named 'Marjorie', was performing a flight from England to Australia. Shortly after takeoff from Aurangabad, en route to Darwin, the aircraft hit a palm tree and crashed. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "8/16/1927", "Time": "NA", "Aircraft": "Lockheed 1 Vega", "Operator": "Jack Frost", "Registration": "NX913", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Oakland - Honolulu", "MSN": "1", "YOM": "1927", "Flight number": "NA", "Crash location": "Pacific Ocean All World", "Country": "World", "Region": "World", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was taking part to the 'Dole Race' between Oakland and Honolulu. The aircraft departed Oakland Airport in the morning but never arrived at destination. It was lost without trace in the Pacific Ocean. The aircraft was named 'Golden Eagle'. Crew: Jack Frost, pilot, Gordon Scott, navigator.", "Crash cause": "Unknown"}, {"Date": "9/3/1927", "Time": "NA", "Aircraft": "Fokker Universal", "Operator": "Colonial Air Transport", "Registration": "NC52", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Boston \u2013 Hartford", "MSN": "405", "YOM": "1926", "Flight number": "NA", "Crash location": "Willington Connecticut", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed Boston on a night mail flight to Hartford. En route, he encountered poor weather conditions and was forced to make two emergency landing. While flying in poor visibility, the airplane struck a hill and crashed near Willington. The pilot was killed.", "Crash cause": "Weather"}, {"Date": "9/23/1927", "Time": "NA", "Aircraft": "Sablatnig P.III", "Operator": "Deutsche Lufthansa", "Registration": "D-962", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "271", "YOM": "1926", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "11/11/1927", "Time": "11H 0M 0S", "Aircraft": "Breguet 19", "Operator": "Georges Medaets", "Registration": "Reine Elisabeth II", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lafert\u00e9-sur-Aube Haute-Marne", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew departed Wevelghem, Belgium, on a flight to Belgian Congo. While flying over France, the crew encountered poor visibility due to foggy conditions. The pilot attempted an emergency landing when the aircraft impacted a hill and crashed. Both occupants were injured and the aircraft was damaged beyond repair.", "Crash cause": "Weather"}, {"Date": "12/26/1927", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "African Aerial Travels", "Registration": "G-UAAE", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "439", "YOM": "1927", "Flight number": "NA", "Crash location": "Pomeroy KwaZulu-Natal", "Country": "South Africa", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While on a flight from Durban, the aircraft crashed in unknown circumstances near Pomeroy. Both occupants were injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "1/2/1928", "Time": "NA", "Aircraft": "Lior\u00e9-et-Olivier LeO H-13", "Operator": "L'A\u00e9ropostale", "Registration": "F-AHBI", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "4", "YOM": "1925", "Flight number": "NA", "Crash location": "Almeria Andalusia", "Country": "Spain", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances some 50 km off Almer\u00eda, in the Mediterranean Sea. Both crew members were injured and the aircraft sank and was lost.", "Crash cause": "Unknown"}, {"Date": "1/22/1928", "Time": "NA", "Aircraft": "Travel Air 4000", "Operator": "Pacific Air Transport", "Registration": "NC12", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Portland \u2013 San Francisco", "MSN": "1260", "YOM": "1927", "Flight number": "NA", "Crash location": "Dunsmuir California", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Arthur D. Starbuck was completing a mail flight from Portland, Oregon, to San Francisco. While entering California, he encountered poor weather conditions with low visibility due to a snowstorm. He lost control of the aircraft that crashed in a canyon in Shasta Springs, near Dunsmuir. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Weather"}, {"Date": "2/5/1928", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Yorkshire Aero Club", "Registration": "G-EBLS", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Sherburn-in-Elmet - Sherburn-in-Elmet", "MSN": "185", "YOM": "1925", "Flight number": "NA", "Crash location": "Sherburn-in-Elmet North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a local training flight at Sherburn-in-Elmet Aerodrome. On final approach, while completing a last turn to join the glide, the aircraft stalled and crashed. Both occupants were injured.", "Crash cause": "Human factor"}, {"Date": "3/14/1928", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A3-11", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Laverton - Laverton", "MSN": "H3023", "YOM": "NA", "Flight number": "NA", "Crash location": "Laverton AFB (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from RAAF Laverton, while climbing, the aircraft stalled and crashed. Both pilots were injured and the aircraft was destroyed. Crew: J. M. C. Philpott, L. N. Rowe.", "Crash cause": "Unknown"}, {"Date": "3/30/1928", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Swedish Air Force - Flygvapnet", "Registration": "76", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Ljungbyhed - Ljungbyhed", "MSN": "16932", "YOM": "NA", "Flight number": "NA", "Crash location": "Ljungbyhed Sk\u00e5ne", "Country": "Sweden", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was completing a solo training flight in the vicinity of Ljungbyhed Airport. The accident occurred in unknown circumstances and while the pilot was injured, the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "4/9/1928", "Time": "NA", "Aircraft": "Avro 548", "Operator": "George Lockhart", "Registration": "G-EABJ", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "E3043", "YOM": "NA", "Flight number": "NA", "Crash location": "Brooklands (Weybridge) Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Brooklands Airport, the aircraft stalled and crashed near the airfield. The airplane was damaged beyond repair and all three occupants were injured.", "Crash cause": "Unknown"}, {"Date": "5/9/1928", "Time": "NA", "Aircraft": "Bellanca CH-200 Pacemaker", "Operator": "Private American", "Registration": "NC4484", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Teterboro - Teterboro", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Hasbrouck Heights New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The airplane departed Teterboro Airport on a local test flight. In unknown circumstances, it crashed in Hasbrouck Heights, killing both occupants.", "Crash cause": "Unknown"}, {"Date": "5/12/1928", "Time": "NA", "Aircraft": "Fairey III", "Operator": "Royal Air Force - RAF", "Registration": "S1260", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Gosport \u2013 Farnborough", "MSN": "F.967", "YOM": "1927", "Flight number": "NA", "Crash location": "Farnborough Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to Farnborough Airport, the single engine airplane stalled and crashed on Alexandra Road near the airfield. Two crew members were injured while the third one was killed. Few hours later, one of the survivor died from his injuries. Crew: Cpt Edward James Osborne Ellison, AC1 James George Bolton, \u2020 Percival Reginald Carter. \u2020", "Crash cause": "Unknown"}, {"Date": "5/12/1928", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Registration": "D-90", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tournai Hainaut", "Country": "Belgium", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Andr\u00e9 Tahon was performing a training mission out from Courtrai-Wevelgem when the aircraft crashed in unknown circumstances. The pilot was seriously injured and was taken to the hospital of Tournai where he died a day later.", "Crash cause": "Unknown"}, {"Date": "5/28/1928", "Time": "NA", "Aircraft": "Albatros L73", "Operator": "Deutsche Lufthansa", "Registration": "D-961", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Berlin - Hamburg", "MSN": "10077", "YOM": "1926", "Flight number": "NA", "Crash location": "Lanz Brandenburg", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Berlin to Hamburg, the pilot encountered an unexpected situation and was forced to attempt an emergency landing. The aircraft named 'Brandenburg' crash landed in an open field located in Babekuhl, near Lanz. There were no casualties.", "Crash cause": "Unknown"}, {"Date": "7/5/1928", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "Chaco", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Cochabamba \u2013 Santa Cruz", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Vacas Cochabamba", "Country": "Bolivia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "En route from Cochabamba to Santa Cruz, the airplane crashed in unknown circumstances in Vacas. Both occupants were killed. Crew: Hermann Berndt, pilot. Passenger: Mr. Schwarz.", "Crash cause": "Unknown"}, {"Date": "7/7/1928", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Cinque Ports Flying Club", "Registration": "G-EBZN", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lympne - Lympne", "MSN": "553", "YOM": "1928", "Flight number": "NA", "Crash location": "Lympne Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a local training mission at Lympne Airport. On final approach, the aircraft was too low and collided with a wall before crashing near a hangar. The pilot was injured and the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "7/13/1928", "Time": "NA", "Aircraft": "Boeing B-1", "Operator": "Western Canada Airways", "Registration": "G-CASX", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Butedale - Swanson Bay", "MSN": "1029", "YOM": "1928", "Flight number": "NA", "Crash location": "Graham Reach British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the pilot encountered low visibility due to heavy rain falls. To obtain more visibility, he decided to clean the windshield but he did not realize he was losing altitude. The seaplane hit the water surface and crashed. All three occupants were injured.", "Crash cause": "Human factor"}, {"Date": "8/17/1928", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A3-43", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Point Cook - Point Cook", "MSN": "H9842", "YOM": "1920", "Flight number": "NA", "Crash location": "Point Cook (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot G. S. Coleman lost control of the aircraft that stalled and spun into the ground. The aircraft was destroyed and the pilot was injured.", "Crash cause": "Unknown"}, {"Date": "8/30/1928", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Johannesburg Light Plane Club", "Registration": "G-UAAN", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Baragwanath \u2013 Baragwanath", "MSN": "588", "YOM": "1928", "Flight number": "NA", "Crash location": "Baragwanath Gauteng", "Country": "South Africa", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a local training flight at Baragwanath Airport. The single engine aircraft crashed upon landing for unknown reason. Both occupants were injured.", "Crash cause": "Unknown"}, {"Date": "9/2/1928", "Time": "9H 15M 0S", "Aircraft": "Bl\u00e9riot Spad 56", "Operator": "Compagnie Internationale de Navigation A\u00e9rienne - CIDNA", "Registration": "F-AIEP", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Toul \u2013 Clermont-Ferrand", "MSN": "May-07", "YOM": "1926", "Flight number": "NA", "Crash location": "Toul Meurthe-et-Moselle", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after takeoff from Croix-de-Metz Airport located in Toul, Meurthe-et-Moselle, while climbing to a height of 150 meters, the engine lost power and failed. The pilot tried to maintain speed and attitude but the aircraft stalled and crashed, bursting into flames. The aircraft was totally destroyed and all five occupants were killed. Crew: Gabriel Hanin, pilot, Maurice Villuis, radio, Henri Vidal, mechanic. Passengers: Jean-Abel Lefranc, General Secretary of CIDNA, Maurice Bokanowski, Minister of Commerce and Industry.", "Crash cause": "Technical failure"}, {"Date": "9/2/1928", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Air Force - RAF", "Registration": "J8107", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Castle Bromwich - Castle Bromwich", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Great Glen Leicestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed Castle Bromwich on a training mission. While making a sharp turn, he lost control of the airplane that stalled, entered a dive and crashed in a field. The pilot P/O George Herbert Aldridge was killed.", "Crash cause": "Human factor"}, {"Date": "9/22/1928", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "L'A\u00e9ropostale", "Registration": "F-AFAT", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "195 ter", "YOM": "1923", "Flight number": "NA", "Crash location": "Morocco All Morocco", "Country": "Morocco", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a mail flight from France. An emergency landing was made following unknown technical problems. While both occupants were injured, the airplane was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "10/18/1928", "Time": "NA", "Aircraft": "Junkers W.33", "Operator": "Crescent Air Service", "Registration": "NC5797", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2512", "YOM": "1928", "Flight number": "NA", "Crash location": "Atlantic City New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "6", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "After takeoff from Atlantic City Airport, while climbing to a height of 600 feet, the single engine airplane entered an uncontrolled descent and crashed. Two occupants were killed and six others were injured.", "Crash cause": "Unknown"}, {"Date": "12/20/1928", "Time": "NA", "Aircraft": "Douglas M-3", "Operator": "National Air Transport - USA", "Registration": "NC790", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "653", "YOM": "NA", "Flight number": "NA", "Crash location": "Huron Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route, the pilot lost his orientation due to a snowstorm. He decided to make an emergency landing when the aircraft hit the ground and crashed. The pilot was killed.", "Crash cause": "Weather"}, {"Date": "12/31/1928", "Time": "NA", "Aircraft": "Junkers G.31", "Operator": "Deutsche Lufthansa", "Registration": "D-1137", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "3001", "YOM": "1927", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. The mishap occurred somewhere in December 1928, exact date unknown.", "Crash cause": "Unknown"}, {"Date": "1/30/1929", "Time": "11H 30M 0S", "Aircraft": "Fairey III", "Operator": "Royal Air Force - RAF", "Registration": "N9759", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Eastchurch - Eastchurch", "MSN": "F.623", "YOM": "1925", "Flight number": "NA", "Crash location": "Eastchurch AFB Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was completing a local training flight at RAF Eastchurch. On approach, the aircraft entered an uncontrolled descent and crashed in a field. All three crew members were killed. Crew: F/O Geoffrey Hugh Conningsby Ingle, LAC Frank Nelson Howick, AC2 George Henry Johnson.", "Crash cause": "Unknown"}, {"Date": "2/5/1929", "Time": "NA", "Aircraft": "Avim\u00e9ta 92", "Operator": "Eug\u00e8ne de Ligne", "Registration": "OO-AJY", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Antwerp - Antwerp", "MSN": "2", "YOM": "1928", "Flight number": "NA", "Crash location": "Antwerp-Deurne Antwerp", "Country": "Belgium", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft was attempting a test flight with a crew of two on board. It crashed in unknown circumstances while taking off from Antwerp-Deurne Airport. While both occupants were unhurt, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "2/25/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A7-12", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Richmond - Richmond", "MSN": "551", "YOM": "1928", "Flight number": "NA", "Crash location": "Richmond AFB New South Wales", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from RAAF Richmond, the aircraft hit trees and crashed. Both occupants were seriously injured and the aircraft was destroyed. Second pilot L. L. Colless died a day later.", "Crash cause": "Unknown"}, {"Date": "3/11/1929", "Time": "NA", "Aircraft": "Boeing 40", "Operator": "Boeing Air Transport", "Registration": "NC275", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "886", "YOM": "1927", "Flight number": "NA", "Crash location": "Park City Utah", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, poor weather conditions forced the pilot to attempt an emergency landing. Both occupants were uninjured and the aircraft was damaged beyond repair.", "Crash cause": "Weather"}, {"Date": "3/22/1929", "Time": "NA", "Aircraft": "Sikorsky S-29", "Operator": "Caddo Company", "Registration": "NC2756", "Flight phase": "Flight", "Flight type": "Cinematography", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Oakland - Oakland", "MSN": "1", "YOM": "1929", "Flight number": "NA", "Crash location": "Pacoima California", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was taking part to the movie called 'Hell's Angels'. In flight, the pilot encountered problems and attempted to bail out with his parachute. He asked the engineer to do so. Worried about the malfunction of a generator, the engineer did not hear the order coming from the pilot who abandoned the aircraft shortly later. The aircraft entered an uncontrolled descent and crashed. The engineer was killed while the pilot was uninjured. Crew: Al Wilson, pilot, Phil Jones, engineer.", "Crash cause": "Technical failure"}, {"Date": "4/9/1929", "Time": "NA", "Aircraft": "Ford 4", "Operator": "Mexicana de Aviaci\u00f3n", "Registration": "M-SCAL", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mexico City \u2013 Tuxpan \u2013 Tampico \u2013 Brownsville", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tampico-General Francisco Javier Mina Tamaulipas", "Country": "Mexico", "Region": "Central America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "4", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after takeoff, while climbing to a height of 100 feet, one of the engine failed. The aircraft stalled and crashed, killing all five occupants, among them pilot Dennis W. Taylor.", "Crash cause": "Technical failure"}, {"Date": "5/16/1929", "Time": "NA", "Aircraft": "Fokker Super Universal", "Operator": "TAT Flying Service", "Registration": "NC8032", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "819", "YOM": "1928", "Flight number": "NA", "Crash location": "Delaware Mountains Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While cruising in poor weather conditions, the pilot lost control of the aircraft that crashed in a wooded area located in the Delaware Mountains, east of Dell City. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Weather"}, {"Date": "6/16/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYYO", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Shirley\u2019s Bay - Shirley\u2019s Bay", "MSN": "491", "YOM": "1928", "Flight number": "NA", "Crash location": "Shirley\u2019s Bay (Ottawa) Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff, injuring both crew members.", "Crash cause": "Unknown"}, {"Date": "6/20/1929", "Time": "NA", "Aircraft": "Fokker Super Universal", "Operator": "Canadian Vickers", "Registration": "CF-AEX", "Flight phase": "Takeoff (climb)", "Flight type": "Ambulance", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "CV-134", "YOM": "1929", "Flight number": "NA", "Crash location": "Montreal-Saint-Hubert Quebec", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The single engine aircraft was engaged in an ambulance flight, carrying one doctor and two crew members. Shortly after takeoff from Montreal-Saint-Hubert Airport, the aircraft encountered difficulties to gain height. It collided with power cables and crashed on the Nun's Island. All three occupants were killed.", "Crash cause": "Unknown"}, {"Date": "6/24/1929", "Time": "NA", "Aircraft": "Ford 5", "Operator": "Northwest Airways", "Registration": "NC7416", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "5-AT-002", "YOM": "1928", "Flight number": "NA", "Crash location": "Minneapolis-Saint Paul Minnesota", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "6", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from Minneapolis-Saint Paul Airport, while climbing, the airplane suffered an multiple engine failure. It stalled and crashed in a garden located in Mounds View Boulevard, bursting into flames. A passenger was killed while all other occupants were injured. The aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "6/29/1929", "Time": "NA", "Aircraft": "Fairchild 71", "Operator": "Mexicana de Aviaci\u00f3n", "Registration": "X-ABCF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "602", "YOM": "1929", "Flight number": "NA", "Crash location": "Panama All Panama", "Country": "Panama", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in Panama. Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "6/29/1929", "Time": "NA", "Aircraft": "Pitcairn PA-5 Mailwing", "Operator": "National Air Transport - USA", "Registration": "NC5863", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "25", "YOM": "1928", "Flight number": "NA", "Crash location": "Skiatook Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the engine failed, forcing the pilot to attempt an emergency landing. While contacting the ground, the aircraft overturned and came to rest upside down, bursting into flames. The pilot was slightly injured and the aircraft was destroyed by fire.", "Crash cause": "Technical failure"}, {"Date": "6/30/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Provincial Air Service of Lands %26 Forests", "Registration": "G-CAPH", "Flight phase": "Landing (descent or approach)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Sault Sainte Marie - Abitibi Lake", "MSN": "909", "YOM": "1929", "Flight number": "NA", "Crash location": "Abitibi Lake Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The airplane was completing a flight from Sault Ste Marie to Abitibi Lake. For unknown reasons, the aircraft crashed upon landing at Abitibi Lake, Ontario. The aircraft was damaged beyond repair and both occupants were uninjured.", "Crash cause": "Unknown"}, {"Date": "7/8/1929", "Time": "NA", "Aircraft": "Pitcairn PA-5 Mailwing", "Operator": "Pitcairn Aviation", "Registration": "NC5117", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "21", "YOM": "1928", "Flight number": "NA", "Crash location": "Berlin New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing a test flight when a fire erupted on board. The aircraft went out of control and crashed in Berlin, bursting into flames. The aircraft was destroyed and the pilot, sole on board, was killed. The source and the cause of the fire remains unknown.", "Crash cause": "Technical failure"}, {"Date": "7/11/1929", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Netheravon - Netheravon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Trowbridge Wiltshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed RAF Netheravon for a local training mission. En route, he lost control of the airplane that crashed in Upper Studley, southwest of Trowbridge. The pilot P/O Reginald Montague Swaine was killed.", "Crash cause": "Unknown"}, {"Date": "7/25/1929", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Schlee-Brock Aircraft Corporation - SBAC", "Registration": "NC7441", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Chicago - Chicago", "MSN": "21", "YOM": "1929", "Flight number": "NA", "Crash location": "Chicago Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a local test flight at Chicago Airport. The accident occurred in unknown circumstances. The aircraft was damaged beyond repair and all three occupants were injured.", "Crash cause": "Unknown"}, {"Date": "7/26/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYYQ", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Shirley\u2019s Bay - Shirley\u2019s Bay", "MSN": "487", "YOM": "1928", "Flight number": "NA", "Crash location": "Shirley\u2019s Bay (Ottawa) Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Both pilots were injured.", "Crash cause": "Unknown"}, {"Date": "8/13/1929", "Time": "9H 30M 0S", "Aircraft": "Breguet 14", "Operator": "L'A\u00e9ropostale", "Registration": "F-AFBA", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Casablanca \u2013 Alicante \u2013 Barcelona \u2013 Perpignan \u2013 Toulouse", "MSN": "201", "YOM": "1923", "Flight number": "NA", "Crash location": "Toulouse-Montaudran Haute-Garonne", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On final approach to Toulouse-Montaudron Airport, the single engine stalled and crashed near the runway threshold. All three occupants, the pilot Marcel Murier and two passenger, were killed.", "Crash cause": "Human factor"}, {"Date": "8/13/1929", "Time": "NA", "Aircraft": "Loening C-2 Air Yacht", "Operator": "Thompson Aeronautical Corporation", "Registration": "NC9783", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "222", "YOM": "1929", "Flight number": "NA", "Crash location": "Lake Erie Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On final approach to Lake Erie, the pilot encountered low visibility due to foggy conditions. The aircraft hit the ground short of runway and crashed. A passenger was killed while three other occupants were injured.", "Crash cause": "Weather"}, {"Date": "8/14/1929", "Time": "NA", "Aircraft": "Heinkel HD.24", "Operator": "Swedish Air Force - Flygvapnet", "Registration": "207", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "\u00d6sterj\u00f6n J\u00e4mtland", "Country": "Sweden", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances in the region of \u00d6sterj\u00f6n. Both pilots were rescued.", "Crash cause": "Unknown"}, {"Date": "8/25/1929", "Time": "NA", "Aircraft": "Loening C-2 Air Yacht", "Operator": "Northern Aerial Minerals Exploration", "Registration": "G-CATM", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "209", "YOM": "1928", "Flight number": "NA", "Crash location": "Thicket Portage Northwest Territories", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach, while completing a last turn, the pilot lost control of the aircraft that stalled and crashed. The pilot was injured.", "Crash cause": "Unknown"}, {"Date": "8/29/1929", "Time": "NA", "Aircraft": "Junkers G.24", "Operator": "Aktiebolaget Aerotransport - ABA", "Registration": "SE-AAF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Stockholm \u2013 Malm\u00f6 \u2013 Hamburg \u2013 Bremen \u2013 Amsterdam", "MSN": "837", "YOM": "1925", "Flight number": "NA", "Crash location": "Lingen Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The airplane named 'Sk\u00e5ne' departed Stockholm on a flight to Amsterdam with intermediate stops in Malm\u00f6, Hamburg and Bremen. During the last leg from Bremen to Amsterdam, the pilot encountered engine problems and attempted an emergency landing. The aircraft landed in a pasture, lost its undercarriage and slid for few dozen metres before coming to rest. All occupants evacuated safely and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "9/1/1929", "Time": "NA", "Aircraft": "Curtiss Robin", "Operator": "Transcontinental Air Transport - TAT", "Registration": "NC8372", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "254", "YOM": "1929", "Flight number": "NA", "Crash location": "Bogalusa Louisiana", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft suffered a structural failure on a wing, lost height and crashed in a pasture. All three occupants were injured.", "Crash cause": "Technical failure"}, {"Date": "9/2/1929", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Associated Aviators", "Registration": "NR859E", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Van Nuys \u2013 Cleveland", "MSN": "67", "YOM": "1929", "Flight number": "NA", "Crash location": "Needles California", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route from Van Nuys to Cleveland, the crew encountered stormy weather. In strong turbulences, the pilot lost control of the airplane that entered a dive. The mechanic was able to bail out before the aircraft crashed near Needles, east California. The wreckage was found three days later. The mechanic was found alive while the pilot was killed. Crew: John Wood, pilot, Ward Miller, mechanic.", "Crash cause": "Weather"}, {"Date": "9/4/1929", "Time": "NA", "Aircraft": "Fokker F7", "Operator": "Andrew Paton Holt", "Registration": "G-EBZJ", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "5087", "YOM": "1928", "Flight number": "NA", "Crash location": "United Kingdom All United Kingdom", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane was lost without trace in sea off United Kingdom. No trace of the aircraft nor the pilot was ever found.", "Crash cause": "Unknown"}, {"Date": "9/11/1929", "Time": "NA", "Aircraft": "Fokker-Grulich F3", "Operator": "British Air Lines - BAL", "Registration": "G-AALC", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "City", "Schedule": "Croydon \u2013 Le Touquet", "MSN": "1558", "YOM": "1929", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Croydon Airport, the airplane suffered technical problems, lost height and crashed onto a house located in Plough Lane, north of the airfield. The aircraft was damaged beyond repair and all six occupants were escaped with minor injuries. No one on the ground was injured.", "Crash cause": "Technical failure"}, {"Date": "9/19/1929", "Time": "NA", "Aircraft": "Sikorsky S-38", "Operator": "Pan American World Airways - PAA", "Registration": "NC197H", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "214-01", "YOM": "1929", "Flight number": "NA", "Crash location": "Miami Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from the Miami harbor, the seaplane crashed in unknown circumstances. There were no casualties.", "Crash cause": "Unknown"}, {"Date": "11/3/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Phillips %26 Powis Aircraft", "Registration": "G-AARM", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "City", "Schedule": "Woodley \u2013 Oxford", "MSN": "477", "YOM": "1927", "Flight number": "NA", "Crash location": "Oxford-Kidlington Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Oxford-Kidlington Airport, the aircraft went out of control and crashed in Port Meadow, bursting into flames. The aircraft was destroyed by a post crash fire and the pilot, Mr. Skuce, was seriously injured.", "Crash cause": "Unknown"}, {"Date": "12/20/1929", "Time": "NA", "Aircraft": "Levasseur PL.8", "Operator": "L'A\u00e9ropostale", "Registration": "F-AJKP", "Flight phase": "Landing (descent or approach)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Dakar - Istres", "MSN": "PL.8-02", "YOM": "1928", "Flight number": "NA", "Crash location": "Istres-Le Tub\u00e9 Bouches-du-Rh\u00f4ne", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Henri Delaunay was completing a mail flight from Dakar to Istres-Le Tub\u00e9 Airport. Upon landing, the aircraft hit a pothole, went out of control and came to rest with serious damages. The the pilot was uninjured and the aircraft was considered as damaged beyond repair.", "Crash cause": "Other causes"}, {"Date": "1/5/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A7-10", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Laverton - Laverton", "MSN": "543", "YOM": "1928", "Flight number": "NA", "Crash location": "Laverton AFB (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The aircraft crashed about 1,500 metres from RAAF Laverton after striking a haystack and shearing of the undercarriage while performing manoeuvres at low level without authorization. The aircraft crashed a short distance from the haystack and was destroyed. Flying Officer Leo J. Ryan survived the impact and was critically injured and later died of those injuries in Caulfield Repatriation Hospital two days later.", "Crash cause": "Human factor"}, {"Date": "1/11/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Henry Charles Hiley Bathurst", "Registration": "G-AAHF", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bristol \u2013 Croydon", "MSN": "1051", "YOM": "1929", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The single engine airplane crashed in unknown circumstances while on final approach to Croydon Airport. The pilot, sole on board, was injured.", "Crash cause": "Unknown"}, {"Date": "1/18/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Marjorie Hazeldene Stevens", "Registration": "G-EBWZ", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "509", "YOM": "1928", "Flight number": "NA", "Crash location": "Brooklands (Weybridge) Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from Brooklands, the aircraft crashed in Addlestone, north of the airfield. The aircraft was destroyed and both occupants were seriously injured. The passenger died from his injuries on 14 February 2022.", "Crash cause": "Unknown"}, {"Date": "1/19/1930", "Time": "NA", "Aircraft": "Ryan B-5 Brougham", "Operator": "Florida Airways", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "West End \u2013 Daytona Beach", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lake Worth Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route from West End, Bahamas, to Daytona Beach, the aircraft crashed in unknown circumstances in the harbor of Lake Worth. Two occupants were injured and three others were killed.", "Crash cause": "Unknown"}, {"Date": "1/19/1930", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 25", "Operator": "L'A\u00e9ropostale", "Registration": "F-AIEJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "609", "YOM": "1926", "Flight number": "NA", "Crash location": "Kenitra Gharb-Chrarda-B\u00e9ni Hssen", "Country": "Morocco", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Upon landing in Kenitra, the aircraft went out of control and crashed. Both crew members were injured.", "Crash cause": "Unknown"}, {"Date": "1/21/1930", "Time": "12H 0M 0S", "Aircraft": "Fairey III", "Operator": "Royal Air Force - RAF", "Registration": "J9637", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "F.1139", "YOM": "1928", "Flight number": "NA", "Crash location": "Sudbury Suffolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft departed RAF Bircham Newton with two pilots on board. While cruising in foggy conditions, the aircraft entered an uncontrolled descent and crashed in an orchard. Both crew members were killed. Crew: F/O Donald Mackenzie, Cpl Leonard Edward Barnard.", "Crash cause": "Unknown"}, {"Date": "1/28/1930", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "J9267", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Grantham - Grantham", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Grantham AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew departed RAF Grantham for a local training mission. Shortly after liftoff, the engine failed. The aircraft stalled and crashed. Both occupants were injured and the aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "3/25/1930", "Time": "NA", "Aircraft": "Pitcairn PA-6 Mailwing", "Operator": "Eastern Air Transport", "Registration": "NC804H", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "44", "YOM": "1929", "Flight number": "NA", "Crash location": "Hagerstown Maryland", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the pilot encountered foggy conditions and due to low visibility, was unable to locate his position. He eventually decided to abandon the aircraft and bailed out. The aircraft crashed and was destroyed and the pilot was unhurt.", "Crash cause": "Weather"}, {"Date": "5/4/1930", "Time": "12H 5M 0S", "Aircraft": "CAMS 53", "Operator": "L'A\u00e9ropostale", "Registration": "F-AJKB", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Marseille \u2013 Algiers", "MSN": "17", "YOM": "1929", "Flight number": "NA", "Crash location": "Algiers Algiers", "Country": "Algeria", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Marseille at 0813LT on a mail flight to Algiers. At 1040LT, the crew reported his position along the Balearic coast. Around noon, while approaching the Algerian coast, the pilot sent a brief message and announced he was forced to attempt an emergency landing off Cape of Pointe Pescade, some 30 km northwest of Algiers, due to an engine failure. All three crew members were uninjured and rescued around 1600LT by the crew of ship named 'Colonel Casse'. The aircraft sank and was lost. Crew: Mr. De Visa, pilot, Maurice Thomasset, radio navigator, Albin Pinot, mechanic.", "Crash cause": "Technical failure"}, {"Date": "5/9/1930", "Time": "NA", "Aircraft": "Boeing 40", "Operator": "Pacific Air Transport", "Registration": "NC740K", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1147", "YOM": "1929", "Flight number": "NA", "Crash location": "San Jose California", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While taking from San Jose Airport, the aircraft collided with a wagon and crashed near the runway. The pilot was slightly injured and there was no casualty on ground.", "Crash cause": "Other causes"}, {"Date": "5/14/1930", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Schlee-Brock Aircraft Corporation - SBAC", "Registration": "NC892E", "Flight phase": "Landing (descent or approach)", "Flight type": "Executive/Corporate/Business", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Detroit \u2013 Hamilton", "MSN": "74", "YOM": "1929", "Flight number": "NA", "Crash location": "Hamilton Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Hamilton following an uneventful flight from Detroit, the single engine airplane crashed in Ancaster, about 7 km northwest of the airfield. The aircraft was destroyed and all three occupants were injured, the pilot Don Walker seriously.", "Crash cause": "Unknown"}, {"Date": "5/15/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Hampshire Aeroplane Club", "Registration": "G-EBOH", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Hamble - Hamble", "MSN": "269", "YOM": "1926", "Flight number": "NA", "Crash location": "Ewshot Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew departed Hamble on a training mission. En route, the airplane crashed in unknown circumstances in a garden located in Ewshot, Hampshire. Both crew members were injured and the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "5/27/1930", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Corporaci\u00f3n Aeronautica de Transportes", "Registration": "XA-BHC", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "90", "YOM": "1929", "Flight number": "NA", "Crash location": "Monterrey Nuevo Le\u00f3n", "Country": "Mexico", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances near Monterrey and was destroyed by fire. Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "5/27/1930", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Brazilian Navy - Avia\u00e7\u00e3o Naval Brasileira", "Registration": "A-25", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Rio de Janeiro - Rio de Janeiro", "MSN": "446", "YOM": "NA", "Flight number": "NA", "Crash location": "Rio de Janeiro Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was completing a local training sortie in Rio de Janeiro when the airplane crashed in unknown circumstances in the Bay of Guanabara. A crew member was killed and the second was injured.", "Crash cause": "Unknown"}, {"Date": "6/29/1930", "Time": "NA", "Aircraft": "Hamilton H-47", "Operator": "Ontario Provincial Air Service", "Registration": "N878H", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Thunder Bay - Thunder Bay", "MSN": "68", "YOM": "1929", "Flight number": "NA", "Crash location": "Thunder Bay Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot departed Thunder Bay on a local solo demo flight. While performing aerobatic manoeuvres, he lost control of the airplane that entered a dive and crashed into the Lake Superior. The pilot was killed.", "Crash cause": "Human factor"}, {"Date": "7/2/1930", "Time": "NA", "Aircraft": "Douglas M-4", "Operator": "National Air Transport - USA", "Registration": "NC1648", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "314", "YOM": "NA", "Flight number": "NA", "Crash location": "Middlebury Indiana", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, while cruising at low height, the single engine airplane collided with power cables and crashed in a field. The aircraft was destroyed and the pilot was injured.", "Crash cause": "Human factor"}, {"Date": "9/27/1930", "Time": "NA", "Aircraft": "Fairchild FC-2", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYWU", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "19", "YOM": "1929", "Flight number": "NA", "Crash location": "Crystal Island Northwest Territories", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On a clearly day, while in the process of an overshoot following an aborted landing attempt, the aircraft hit tree tops and crashed in a wooded area. Both occupants were uninjured while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "10/12/1930", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 28", "Operator": "L'A\u00e9ropostale", "Registration": "F-AJUU", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Casablanca \u2013 Paris", "MSN": "928", "YOM": "1930", "Flight number": "NA", "Crash location": "Larache Tangier-T\u00e9touan", "Country": "Morocco", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While cruising over the region of Larache (El Ara\u00efch), the pilot encountered poor weather conditions with storms. He lost control of the airplane that crashed. All four occupants were killed. Crew: Germain Villetard de Lagu\u00e9rie, pilot. Passengers: Mr. Augusto Belesch, Mrs. Jeuille Dif, Mr. or Mrs. Monica.", "Crash cause": "Weather"}, {"Date": "10/13/1930", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Wings Ltd", "Registration": "VH-UPC", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Maylands - Maylands", "MSN": "2021", "YOM": "1930", "Flight number": "NA", "Crash location": "Perth Western Australia", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While flying over the Darling Range, the aircraft went out of control, enetered a dive and crashed in hilly terrain, killing all three occupants. Crew: Charles Nesbit, pilot and Managing Director of Wings Ltd, Passengers: William Bell, Mrs. Haidee Rae.", "Crash cause": "Technical failure"}, {"Date": "10/14/1930", "Time": "16H 0M 0S", "Aircraft": "Junkers W.34", "Operator": "Transadriatica", "Registration": "I-AAMA", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Venice - Venice", "MSN": "2605", "YOM": "1928", "Flight number": "NA", "Crash location": "Venice Veneto", "Country": "Italy", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The single engine airplane departed Venice on a local test flight. Shortly after takeoff, at low height, it stalled and crashed. A crew member was killed while two others were seriously injured. Crew: Riccardo Pasquali, pilot, Gaetano Ferrari, engineer, \u2020 Dr. Piccirilli, engineer.", "Crash cause": "Unknown"}, {"Date": "10/24/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Flygindustri", "Registration": "SE-ABR", "Flight phase": "Flight", "Flight type": "Executive/Corporate/Business", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "438", "YOM": "1927", "Flight number": "NA", "Crash location": "Malm\u00f6 Sk\u00e5ne", "Country": "Sweden", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances in the \u00d6resund off Limhamn, in the south suburb of Malm\u00f6. The pilot, sole on board, was injured, and the airplane sank.", "Crash cause": "Unknown"}, {"Date": "10/25/1930", "Time": "NA", "Aircraft": "Bl\u00e9riot Spad 56", "Operator": "Air Union France", "Registration": "F-AIYA", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Paris \u2013 Marseille", "MSN": "18/4411", "YOM": "1929", "Flight number": "NA", "Crash location": "Sens Yonne", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot departed Paris-Le Bourget Airport on a mail flight to Marseille. After takeoff, the pilote Ren\u00e9 Charpentier continued to the south and after passing over Fontainebleau, while approaching Sens, he encountered unknown technical problems and attempted to make an emergency landing. The aircraft crashed in a prairie and was damaged beyond repair. The pilot was unhurt.", "Crash cause": "Technical failure"}, {"Date": "11/1/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Douglas Henry Corsellis", "Registration": "G-AAEI", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Norwich \u2013 Stag Lane", "MSN": "993", "YOM": "1929", "Flight number": "NA", "Crash location": "Stag Lane (Edgware) London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On approach to Stag Lane Airport, the pilot encountered poor visibility due to foggy conditions. On short final, the airplane collided with the perimeter fence and crashed, bursting into flames. The pilot, sole on board, was killed.", "Crash cause": "Human factor"}, {"Date": "11/7/1930", "Time": "14H 0M 0S", "Aircraft": "Junkers G.24", "Operator": "Syndicato Condor", "Registration": "P-BAHA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Porto Alegre \u2013 Laguna \u2013 Rio de Janeiro", "MSN": "921", "YOM": "1928", "Flight number": "NA", "Crash location": "Iguape S\u00e3o Paulo", "Country": "Brazil", "Region": "South America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "7", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The aircraft departed Porto Alegre at 0600LT bound for Rio de Janeiro with six passengers and a crew of three on board. During the intermediate stop at Laguna, Santa Catarina, a seventh passenger boarded. The aircraft named 'Potyguar' continued to the northeast and while cruising some 500 metres off the beach of Icapara, the aircraft 'exploded', lost height and crashed into the sea. Nine occupants were quickly rescued by locals while a passenger, Colonel Attila Gaston Joseph Campos Salvaterra, was killed. Crew: Heinz Luels, pilot, Herbert Hermann, copilot, Guido Kleinat, mechanic. Passengers: Colonel Attila Gaston Joseph Campos Salvaterra, \u2020 Dr. Joseph Falcani, Dr. Hannibal Loureiro, Colonel de Basil Bicca Avila, Jean Cunha, George Frederic Pichel, Dr. Demetrius Mercio Xavier.", "Crash cause": "Unknown"}, {"Date": "12/19/1930", "Time": "NA", "Aircraft": "Waco 9", "Operator": "Frederic M. Greenwood", "Registration": "NC3757", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "270", "YOM": "1926", "Flight number": "NA", "Crash location": "Bellows Falls Vermont", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft crashed in unknown circumstances in Bellows Falls. Two occupants were killed and a third was injured.", "Crash cause": "Unknown"}, {"Date": "12/27/1930", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 26", "Operator": "L'A\u00e9ropostale", "Registration": "F-AJKH", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Dakar \u2013 Casablanca \u2013 Alicante \u2013 Barcelona \u2013 Perpignan \u2013 Toulouse", "MSN": "735", "YOM": "1929", "Flight number": "NA", "Crash location": "Tarfaya La\u00e2youne-Boujdour-Sakia El Hamra", "Country": "Western Sahara", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Dakar to Casablanca, the crew lost his orientation and attempted to make an emergency landing. No distress call was received at the company base in Casablanca. SAR operations were initiated and the crew of another aircraft spotted the wreckage three days later in an uninhabited area located south of Tarfaya, near Cape Juby. All three occupants were rescued . Crew: Albert Pinot, pilot, Mr. Neri, mechanic. Passenger: Mr. Ibrapa.", "Crash cause": "Unknown"}, {"Date": "1/7/1931", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Wedell-Williams Air Services", "Registration": "NC537M", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Dallas \u2013 New Orleans", "MSN": "106", "YOM": "1930", "Flight number": "NA", "Crash location": "Marshall Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route from Dallas to New Orleans, the crew encountered poor visibility due to foggy conditions when the aircraft crashed in Marshall, TX. The aircraft was destroyed and all three occupants were killed. Crew: Arthur C. Brown, pilot, Everett Williams, mechanic. Passenger: Robert Wilton.", "Crash cause": "Weather"}, {"Date": "1/17/1931", "Time": "NA", "Aircraft": "Junkers W.34", "Operator": "Guinea Airways", "Registration": "VH-UJD", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2604", "YOM": "1929", "Flight number": "NA", "Crash location": "Wampit Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Upon landing, a gear failed. The aircraft veered off runway and came to rest. Both occupants evacuated safely and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "1/28/1931", "Time": "NA", "Aircraft": "Heinkel HD.24", "Operator": "Deutsche Verkehrsfliegerschule - DVS", "Registration": "D-1313", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "271", "YOM": "1928", "Flight number": "NA", "Crash location": "El Calafate Santa Cruz", "Country": "Argentina", "Region": "South America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Named 'Tsingtau', the aircraft was carrying two crew members among them the famous German aviator G\u00fcnther Pl\u00fcschow. They were performing their second attempt to fly to the south Patagonia, between Chile and Argentina. While cruising over the region of the Perito Moreno Glacier, some 78 km from El Calafate, the aircraft crashed in unknown circumstances, killing both occupants. Crew: Gunther Pl\u00fcschow, pilot, Ernst Dreblow, mechanic.", "Crash cause": "Unknown"}, {"Date": "2/4/1931", "Time": "NA", "Aircraft": "Blackburn R.B.1 Iris", "Operator": "Royal Air Force - RAF", "Registration": "N238", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "RAF Mount Batten - RAF Mount Batten", "MSN": "1", "YOM": "1929", "Flight number": "NA", "Crash location": "Mount Batten AFB Devon", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "12", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "The aircraft was engaged in a training mission with 12 crew on board on behalf of the 209 Squadron. At the time of the accident, weather conditions were good with a calm sea. At a speed of 70 mph, the float plane hit violently the water surface and was wrecked. Three crew members were rescued while nine other occupants perished. Crew: W/Cdr Charles Gilbert Tucker, \u2020 F/O Frederick Kingsley Wood, \u2020 Sgt Edmund Walter Harris Wilson, \u2020 LAC William Henry Stark, \u2020 LAC Cecil Gwilym Davies, \u2020 LAC Louis Charles Oates, \u2020 LAC Harold Corrie Ongley, \u2020 LAC William Sidney Rutledge, \u2020 LAC William George Stevens, \u2020 F/Lt Maurice Hibbert Ely, F/Lt Charles Ryley, Cpl William Mansell Barry.", "Crash cause": "Human factor"}, {"Date": "2/7/1931", "Time": "17H 30M 0S", "Aircraft": "Sikorsky S-38", "Operator": "Panagra - Pan American-Grace Airways", "Registration": "NC306N", "Flight phase": "Landing (descent or approach)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Talara \u2013 Col\u00f3n", "MSN": "414-04", "YOM": "1929", "Flight number": "NA", "Crash location": "Col\u00f3n Col\u00f3n", "Country": "Panama", "Region": "Central America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a mail flight from Talara, Peru, to France Field (Col\u00f3n). Upon arrival, the seaplane crashed in unknown circumstances in the Lim\u00f3n Bay. All three occupants were injured.", "Crash cause": "Unknown"}, {"Date": "2/24/1931", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 32", "Operator": "L'A\u00e9ropostale", "Registration": "F-AITX", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Algiers \u2013 Marseille", "MSN": "84", "YOM": "1928", "Flight number": "NA", "Crash location": "Banyuls-sur-Mer Pyr\u00e9n\u00e9es-Orientales", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew encountered strong headwinds all along the flight from Algiers to Marseille. After overflying Cape of Creus in Catalonia, both engines failed due to fuel exhaustion. The crew ditched the aircraft off Banyuls-sur-Mer, Pyr\u00e9n\u00e9es Orientales. The crew of the Spanish cargo named 'Stella' was quickly on the scene but during the towing operations, the float plane sank and the radio navigator Bossard drowned. The pilot Edmond Larbonne and the mechanic were rescued.", "Crash cause": "Technical failure"}, {"Date": "4/2/1931", "Time": "NA", "Aircraft": "Avro 594 Avian", "Operator": "Charles Maurice Brown", "Registration": "G-EBZD", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Croydon - Croydon", "MSN": "161", "YOM": "1928", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from Croydon Airport, while in initial climb, the single engine airplane stalled and crashed in Carshalton. The pilot Charles Maurice Brown and the passenger F/O Ernest Frederick Smith were killed.", "Crash cause": "Unknown"}, {"Date": "4/22/1931", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.154 Argosy", "Operator": "Imperial Airways", "Registration": "G-AACH", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Croydon - Croydon", "MSN": "AW.362", "YOM": "1928", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was engaged in a local training flight out from Croydon Airport. Shortly after liftoff, while in initial climb, the aircraft stalled and crashed, bursting into flames. Both crew were injured and the aircraft was destroyed by a post crash fire.", "Crash cause": "Technical failure"}, {"Date": "5/12/1931", "Time": "NA", "Aircraft": "Breguet 19", "Operator": "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Courtrai - Goetsenhoven", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Courtrai-Wevelgem West Flanders", "Country": "Belgium", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Crashed in unknown circumstances shortly after takeoff from Courtrai-Wevelgem Airport. Both pilots Justin Denis Patron and Ren\u00e9 Eulalie van Boogaert were killed.", "Crash cause": "Unknown"}, {"Date": "5/16/1931", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "B.F. Goodrich Company", "Registration": "NX308H", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "79", "YOM": "1929", "Flight number": "NA", "Crash location": "Vineland Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a local test flight when the aircraft crashed in unknown circumstances in Vineland. While both occupants were unhurt, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "7/2/1931", "Time": "NA", "Aircraft": "Junkers W.33", "Operator": "Eurasia Aviation Corporation", "Registration": "II", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Nankin \u2013 Lanzhou", "MSN": "2560", "YOM": "1930", "Flight number": "NA", "Crash location": "Lanzhou Gansu", "Country": "China", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "It is believed that the crew was forced to make an emergency landing while approaching Lanzhou. The mechanic was injured and the pilot escaped unhurt. Other source reports that the aircraft was shot down over Mongolia - China border.", "Crash cause": "Unknown"}, {"Date": "7/15/1931", "Time": "11H 30M 0S", "Aircraft": "Nieuport-Delage NiD-641", "Operator": "Soci\u00e9t\u00e9 de Transports A\u00e9riens Rapides - STAR", "Registration": "F-AJRB", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Cannes \u2013 Grenoble \u2013 Dijon \u2013 Paris", "MSN": "10", "YOM": "1930", "Flight number": "NA", "Crash location": "Lus-la-Croix-Haute Dr\u00f4me", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "4", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While cruising over the Alps and approaching the Lus-la-Croix-Haute Pass from the south, the pilot encountered misty conditions and the visibility was low. The aircraft hit the ground and crashed near the pass. The pilot Albert Bouthier and two passengers were killed while two other passengers were injured. The aircraft was returning to Paris with few other airplanes from the same operator, carrying some 20 models accompanying the French fashion designer Aline Chiffon. It was descending to Grenoble-Moirans Airport, a scheduled intermediate stop before continuing to Dijon and Paris. Crew: Albert Bouthier, pilot. \u2020 Passengers: Mrs. Aluta (aka Aline Chiffon), \u2020 Mr. Arbeau, \u2020 Mrs. Soskins, Mr. Amon.", "Crash cause": "Human factor"}, {"Date": "9/12/1931", "Time": "23H 30M 0S", "Aircraft": "Dornier Do J Wal", "Operator": "Syndicato Condor", "Registration": "PP-CAL", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Fernando de Noronha - Natal - Rio de Janeiro", "MSN": "107", "YOM": "1930", "Flight number": "NA", "Crash location": "Natal Rio Grande do Norte", "Country": "Brazil", "Region": "South America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The seaplane named 'Olinda' was performing a flight from Europe to South America with intermediate stops in Fernando de Noronha, Natal and Rio de Janeiro. While taking off from the Rio Potenji in Natal, the aircraft hit a floating object and crashed. Three occupants were killed while a crew member was injured.", "Crash cause": "Other causes"}, {"Date": "9/16/1931", "Time": "NA", "Aircraft": "Sikorsky S-38", "Operator": "United States Navy - USN", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "David - Belize City", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "David Chiriqu\u00ed", "Country": "Panama", "Region": "Central America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Shortly after takeoff from David, the airplane went out of control and crashed, bursting into flames. The radio navigator was seriously injured while three others were killed. Few hours later, the only survivor died from his injuries. The aircraft was en route to Belize City with a load of 600 pounds of bandages and medical supplies for the stricken Honduras section. Crew: Lt C. K. Langford +3.", "Crash cause": "Unknown"}, {"Date": "9/18/1931", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Nigel B. Cohen", "Registration": "G-AAKR", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lympne - Lympne", "MSN": "1395", "YOM": "1930", "Flight number": "NA", "Crash location": "Lympne Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot departed Lympne on a local solo training flight. At a height of 4,000 feet, while completing aerobatics, he lost control of the airplane that entered a dive. A wing broke off and the airplane lost several pieces before crashing in Royal Oak Inn, near Lympne. The pilot was killed.", "Crash cause": "Human factor"}, {"Date": "9/30/1931", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Netherlands East Indies Air Force - ML-KNIL", "Registration": "H-115", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kalijati - Bandung", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lembang West Java", "Country": "Indonesia", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While descending to Bandung, the aircraft suffered an engine failure. The pilot attempted an emergency landing when the aircraft crashed in a dense wooded area located in Lembang, north of Bandung. The aircraft was destroyed and the pilot was injured.", "Crash cause": "Technical failure"}, {"Date": "10/25/1931", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 26", "Operator": "L'A\u00e9ropostale", "Registration": "F-AIXU", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Toulouse \u2013 Perpignan \u2013 Barcelona \u2013 Alicante \u2013 Casablanca", "MSN": "684", "YOM": "1928", "Flight number": "NA", "Crash location": "Skhirat Rabat-Sal\u00e9-Zemmour-Zaer", "Country": "Morocco", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Alicante to Casablanca, the aircraft crashed in unknown circumstances southwest of Rabat. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "11/20/1931", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "The Rhodesian Aviation Company", "Registration": "VP-YAB", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "452", "YOM": "1928", "Flight number": "NA", "Crash location": "Bulawayo Bulawayo", "Country": "Zimbabwe", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from Bulawayo Airport, the single engine airplane went out of control and crashed, killing both occupants. Crew: Lt Daniel S. Judson, pilot. Passenger: Jock Speight.", "Crash cause": "Unknown"}, {"Date": "12/6/1931", "Time": "5H 46M 0S", "Aircraft": "Fokker F7", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "PH-AFO", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Melbourne \u2013 Alor Setar \u2013 Bangkok \u2013 Yangon \u2013 Amsterdam", "MSN": "5236", "YOM": "1930", "Flight number": "NA", "Crash location": "Bangkok-Don Mueang Bangkok City District", "Country": "Thailand", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "4", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The aircraft was carrying three passengers, a crew of four and 209 kilos of mail. Two takeoff attempts were rejected because the aircraft was too heavy. In such conditions, the captain decided to start the takeoff roll from a further point at the airport. On the third attempt, after a course of 1,500 metres, the aircraft impacted a dirt bank. The undercarriage were torn off and the airplane crashed. The radio operator was seriously injured and all six other occupants were killed. Crew: Thaeke Wiersma, pilot, Jan van Onlangs, copilot, G. van Zadelhoff, radio operator, J. F. W. O. Kotte, mechanic.", "Crash cause": "Other causes"}, {"Date": "12/24/1931", "Time": "NA", "Aircraft": "Avia BH-25", "Operator": "Bata Shoes", "Registration": "OK-ABC", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Vienna - Venice", "MSN": "3", "YOM": "1928", "Flight number": "NA", "Crash location": "Stolzalpe Styria", "Country": "Austria", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Vienna-Aspern Airport on a cargo flight to Venice with two crew members on board. En route, the pilot got lost due to snow falls. He attempted an emergency landing when the airplane crashed in a hilly terrain near Stolzalpe. The aircraft was destroyed and both crew members walked away for two days before finding help.", "Crash cause": "Weather"}, {"Date": "2/19/1932", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Leslie S. Hamilton", "Registration": "G-AAXW", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "2027", "YOM": "1930", "Flight number": "NA", "Crash location": "Ruvo di Puglia Apulia", "Country": "Italy", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Brothers Leslie and Kenneth Hamilton were engaged in a flight from England to Australia. The crew departed Lympne Airport on February 18 bound for the south. While overflying Apulia, weather conditions worsened and the visibility was poor due to fog. The aircraft impacted a hill and was damaged beyond repair. Both occupants were injured.", "Crash cause": "Weather"}, {"Date": "2/27/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Aerocentro Ligure da Turismo", "Registration": "I-ABEB", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Genoa - Genoa", "MSN": "692", "YOM": "1928", "Flight number": "NA", "Crash location": "Genoa Liguria", "Country": "Italy", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing in unknown circumstances. Both occupants were injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "3/18/1932", "Time": "NA", "Aircraft": "Farman F.303", "Operator": "Air Orient", "Registration": "F-AJIG", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "Baghdad \u2013 Damascus", "MSN": "7155.1", "YOM": "1930", "Flight number": "NA", "Crash location": "Syria All Syria", "Country": "Syria", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Baghdad to Damascus, the pilot encountered an unexpected situation and was forced to attempt an emergency landing in the Syrian Desert. While all occupants were unhurt and quickly rescued, the aircraft was probably damaged beyond repair and abandoned on site.", "Crash cause": "Unknown"}, {"Date": "3/20/1932", "Time": "NA", "Aircraft": "Focke-Wulf A.16", "Operator": "Flugdienst Breslau - Wilhelm Przibilla", "Registration": "D-548", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Lewin Brzeski - Lewin Brzeski", "MSN": "5", "YOM": "1924", "Flight number": "NA", "Crash location": "Lewin Brzeski Opole Voivodeship (Opolskie)", "Country": "Poland", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The single engine airplane was engaged in a local joyride in L\u00f6wen (now Lewin Brzeski), carrying three passengers and one pilot, Johannes Hentschel. For unknown reasons, he decided to takeoff from another area in the field, with a light and non significant wind component. In a relative muddy ground, the takeoff distance was too short when the pilot realized the presence of a ditch. He attempted to takeoff but the aircraft' speed was too low. It nosed down, crashed and came to rest upside down. All three passengers escaped with minor injuries while the pilot was seriously injured. He died from his injuries the following evening.", "Crash cause": "Human factor"}, {"Date": "3/20/1932", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Bhaba Deb Mukerjee", "Registration": "VT-ABJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2032", "YOM": "1930", "Flight number": "NA", "Crash location": "Lucknow Uttar Pradesh", "Country": "India", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was taking part to the Viceroy\u2019s Cup Race. While approaching Lucknow, the airplane struck a pylon and crashed. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Human factor"}, {"Date": "3/29/1932", "Time": "NA", "Aircraft": "Farman F.190", "Operator": "Air Orient", "Registration": "F-AJDP", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Desert", "Schedule": "Damascus \u2013 Baghdad \u2013 Karachi", "MSN": "7135", "YOM": "1929", "Flight number": "NA", "Crash location": "Rutbah Wells (Ar Rutbah) Al-Anbar (<U+0627><U+0644><U+0623><U+0646><U+0628><U+0627><U+0631>)", "Country": "Iraq", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route from Damascus to Baghdad, the crew encountered poor weather conditions with a sandstorm. The pilot lost his orientation when the airplane impacted ground and crashed near Tell-Farida, in the region of Rutbah Wells, some 300 km west of Baghdad. The aircraft came to rest upside down and was destroyed. All three occupants were killed. The crew and passenger were performing a special flight on behalf of The League of Nations (Soci\u00e9t\u00e9 des Nations). The passenger was the Swiss Colonel de Reynier who was in charge to fix the border between Syria and Iraq. Crew: Julien Risser, pilot, Mr. Huber, mechanic. Passenger: Colonel de Reynier.", "Crash cause": "Weather"}, {"Date": "5/6/1932", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "K1050", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Wittering AFB - Wittering AFB", "MSN": "K1050", "YOM": "NA", "Flight number": "NA", "Crash location": "Wittering AFB Cambridgeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing a local solo training flight on formation with a second RAF Avro 504N registered K1042. While changing direction, K1050 collided with K1042. Both aircraft dove into the ground and crashed in a field near the airbase. Both pilots were killed.", "Crash cause": "Human factor"}, {"Date": "5/12/1932", "Time": "NA", "Aircraft": "Lior\u00e9-et-Olivier LeO H-253", "Operator": "Brazilian Air Force - Avia\u00e7\u00e3o Militar", "Registration": "K-613", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Campo dos Afonsos - Campo dos Afonsos", "MSN": "3", "YOM": "1931", "Flight number": "NA", "Crash location": "Campo dos Afonsos AFB Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "6", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The airplane named 'Tuiuty' crashed in unknown circumstances at Campo dos Afonsos AFB and was destroyed. Four crew members were killed and two others survived.", "Crash cause": "Unknown"}, {"Date": "5/21/1932", "Time": "NA", "Aircraft": "Spartan Three Seater I/II", "Operator": "Spartan Aircraft", "Registration": "G-ABTT", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Heston \u2013 Norwich", "MSN": "64", "YOM": "1932", "Flight number": "NA", "Crash location": "Stanton Suffolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route from Heston to Norwich, while taking part to the 'Morning Post' Air Race, the pilot lost control of the airplane that dove into the ground and crashed into trees near Stanton, Suffolk. The pilot Frank George Gibbons was killed.", "Crash cause": "Human factor"}, {"Date": "5/28/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Surrey Flying Services", "Registration": "G-EBSO", "Flight phase": "Takeoff (climb)", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brooklands \u2013 Croydon", "MSN": "419", "YOM": "1927", "Flight number": "NA", "Crash location": "Brooklands (Weybridge) Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Brooklands Aerodrome, the single engine airplane went out of control and crashed. The pilot, sole on board, was injured.", "Crash cause": "Unknown"}, {"Date": "6/23/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Finnish Air Force - Suomen Ilmavoimat", "Registration": "MO-99", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Kauhava - Kauhava", "MSN": "VL-4", "YOM": "1929", "Flight number": "NA", "Crash location": "Kauhava Ostrobothnia", "Country": "Finland", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was performing a local training mission out from Kauhava Airport. In flight, control was lost and the airplane crashed in a field. While the pilot was seriously injured, the mechanic was killed.", "Crash cause": "Unknown"}, {"Date": "6/29/1932", "Time": "NA", "Aircraft": "Fokker Super Universal", "Operator": "Canadian Airways", "Registration": "G-CASL", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "806", "YOM": "1928", "Flight number": "NA", "Crash location": "Mazenod Lake Northwest Territories", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route, the pilot lost control of the aircraft that crashed 450 km northeast of Yellowknife. All three occupants, a pilot and two engineers, were killed. A memorial was erected on site in summer 2009.", "Crash cause": "Unknown"}, {"Date": "7/10/1932", "Time": "NA", "Aircraft": "Boeing 80", "Operator": "Boeing Air Transport", "Registration": "NC229M", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Chicago \u2013 Oakland", "MSN": "1087", "YOM": "1929", "Flight number": "NA", "Crash location": "Sterling Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "5", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Chicago to Oakland, while cruising over the area of Sterling, west of Chicago, the crew encountered poor weather conditions with heavy rain falls, turbulences and thunderstorm activity. The captain decided to attempt an emergency landing in an open field when, upon touchdown, the airplane went out of control and crashed. All eight occupants evacuated safely.", "Crash cause": "Weather"}, {"Date": "8/27/1932", "Time": "NA", "Aircraft": "Morane-Saulnier M.S.60 Moth", "Operator": "Etienne Michelin", "Registration": "F-ALKX", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Clermont-Ferrand - Clermont-Ferrand", "MSN": "37", "YOM": "1930", "Flight number": "NA", "Crash location": "Saint-Gen\u00e8s-Champanelle Puy-de-D\u00f4me", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Etienne Michelin departed Clermont-Ferrand-Aulnat Airport at the end of the afternoon for a private flight, heading to the Puys Mountain Range. En route, he encountered poor weather conditions with thunderstorm activity. The airplane went out of control and crashed in a prairie. The pilot, sole on board, was killed.", "Crash cause": "Weather"}, {"Date": "10/2/1932", "Time": "NA", "Aircraft": "Stinson SM-2/SM-7/SM-8", "Operator": "Petro Sol Corporation", "Registration": "NC8481", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1075", "YOM": "1929", "Flight number": "NA", "Crash location": "North Haven Connecticut", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The single engine airplane departed New Haven-Tweed Airport with four people on board, three passengers and one pilot. Climbing to the north, the airplane went out of control and crashed on the edge of a pasture located in North Haven, just north of Clintonville Road. A passenger was seriously injured and three other occupants were killed. Crew: George A. Smith, pilot. \u2020 Passengers: Lester Smith, \u2020 Beatie Russner, \u2020 John A. Hood.", "Crash cause": "Unknown"}, {"Date": "10/9/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Northern Air Transport", "Registration": "G-EBZU", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "686", "YOM": "1928", "Flight number": "NA", "Crash location": "Barton Lancashire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from Barton, while climbing, the aircraft went out of control and crashed in Irlam, near the airport. The pilot C. S. G. Homewood was seriously injured and his wife Olga Homewood was killed.", "Crash cause": "Unknown"}, {"Date": "12/6/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A7-41", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Richmond - Richmond", "MSN": "LASCO.18", "YOM": "NA", "Flight number": "NA", "Crash location": "Richmond South Australia", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On final approach to Richmond, the pilot failed to realize that he was flying too low. A gear impacted a fence and the aircraft overturned and crashed upside down, bursting into flames. While the P/O Charles M. Blamey was killed, the passenger Able Seaman John Plumb was injured.", "Crash cause": "Human factor"}, {"Date": "12/13/1932", "Time": "6H 0M 0S", "Aircraft": "Boeing 40", "Operator": "Boeing Air Transport", "Registration": "NC842M", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Chicago \u2013 Omaha", "MSN": "1168", "YOM": "1929", "Flight number": "NA", "Crash location": "McClelland Iowa", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While on a night mail flight from Chicago to Omaha, the pilot encountered an unexpected situation. He reduced his altitude and attempted an emergency landing when the aircraft crashed and came to rest upside down, bursting into flames. The pilot was uninjured and the aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "1/24/1933", "Time": "NA", "Aircraft": "Ford 5", "Operator": "Pacific Air Transport", "Registration": "NC431H", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Portland \u2013 Eugene \u2013 Medford", "MSN": "5-AT-098", "YOM": "1931", "Flight number": "NA", "Crash location": "Eugene Oregon", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The three engine airplane was ready for a schedule service from Portland to Medford. As the weather was iffy, all passengers tickets were canceled but the crew has to deliver the mail. The airplane departed Portland-Swan Island Airport at 1015LT bound for Eugene. Approaching Eugene, the crew encountered marginal weather conditions with low clouds but was able to land without further problems. After the mail was deplaned, the crew was cleared for takeoff. Following a normal takeoff run, the pilot-in-command initiated the rotation when the right engine failed. The airplane stalled, collided with a runway light and eventually crashed onto a vacant house. All three crew members were injured, both pilots seriously. The following day, they both died from their injuries. The aircraft named 'Dawson' was destroyed. Crew: Harold Adams, pilot, \u2020 Kenneth Householder, copilot, \u2020 Cornelia Pederman, stewardess.", "Crash cause": "Technical failure"}, {"Date": "1/25/1933", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Abu Sueir - Abu Sueir", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abu Sueir Ismailia", "Country": "Egypt", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Sgt Henry Thomas Inglis was completing a post maintenance test flight out from Abu Sueir Airport. The accident occurred in unknown circumstances, killing the pilot, sole on board.", "Crash cause": "Unknown"}, {"Date": "2/19/1933", "Time": "NA", "Aircraft": "Fairchild FC-2", "Operator": "Canadian Airways", "Registration": "G-CATU", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "CV-104", "YOM": "1928", "Flight number": "NA", "Crash location": "Kenogamissi Lake Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after takeoff from Kenogamissi Lake, the airplane impacted a tree, causing the left wing to be torn off. The aircraft descended to the ground and crashed. All five occupants were killed.", "Crash cause": "Unknown"}, {"Date": "3/31/1933", "Time": "NA", "Aircraft": "Ford 4", "Operator": "J. H. O\u2019Brien", "Registration": "NC7686", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Tulsa \u2013 Winnipeg", "MSN": "4-AT-044", "YOM": "1928", "Flight number": "NA", "Crash location": "Neodesha Kansas", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "11", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "En route from Tulsa to Winnipeg, while cruising south of Topeka, the crew encountered technical problems and was forced to attempt an emergency landing. The pilot reduced his altitude and elected to land in an open field when the aircraft stalled and crashed 11 km south of Neodesha. Both pilots and five passengers were killed. All occupants were members of the Winnipeg Toilers basketball team. Crew: Avlie H. Hakes, pilot, H. E. Eggens, copilot.", "Crash cause": "Technical failure"}, {"Date": "4/3/1933", "Time": "16H 0M 0S", "Aircraft": "Junkers F.13", "Operator": "Deutsche Lufthansa", "Registration": "D-534", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Dortmund \u2013 Hanover", "MSN": "694", "YOM": "1926", "Flight number": "NA", "Crash location": "Hemkenrode Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route from Dortmund to Hanover, the airplane caught fire in flight. The crew attempted an emergency landing when the aircraft crashed in a pasture located in Hemkenrode, bursting into flames. A pilot was killed while the second occupant was seriously injured.", "Crash cause": "Unknown"}, {"Date": "4/29/1933", "Time": "NA", "Aircraft": "Junkers W.34", "Operator": "Deutsche Lufthansa", "Registration": "D-4", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin - Berlin", "MSN": "2737", "YOM": "1933", "Flight number": "NA", "Crash location": "Traunstein Bavaria", "Country": "Germany", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The airplane departed Berlin on a long term test flight, carrying one passenger and three crew members. En route, the airplane went out of control and crashed in a field, bursting into flames. All four occupants were killed. The crew was completing a test mission before the aircraft would be delivered to Eurasia, China. Crew: Hans Wende, Mr. Eichenfoss, Mr. Schmidt.", "Crash cause": "Unknown"}, {"Date": "5/31/1933", "Time": "18H 0M 0S", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Armand Dufaux", "Registration": "CH-274", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Geneva - Geneva", "MSN": "2182", "YOM": "1931", "Flight number": "NA", "Crash location": "Versoix Geneva", "Country": "Switzerland", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Armand Dufaux departed Geneva-Cointrin on a solo local flight. After takeoff, the airplane encountered difficulties to gain sufficient altitude. It collided with power cables and crashed in an open field located in Versoix, few km from the airfield. The pilot escaped with minor injuries and the airplane was destroyed.", "Crash cause": "Unknown"}, {"Date": "6/1/1933", "Time": "NA", "Aircraft": "Fokker F14", "Operator": "United States Army Air Corps - USAAC", "Registration": "31-395", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1429", "YOM": "1931", "Flight number": "NA", "Crash location": "Rockingham North Carolina", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances shortly after takeoff from Rockingham. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "7/1/1933", "Time": "13H 0M 0S", "Aircraft": "Savoia-Marchetti S.55", "Operator": "Regia Aeronautica", "Registration": "I-DINI", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Orbetello \u2013 Schellingwoude", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Amsterdam North Holland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The seaplane departed Orbetello on a flight to the US, taking part to a world tour with 25 other similar airplane under the command of General Italo Balbo. While attempting to land in the harbor of Amsterdam (Schellingwoude), the airplane impacted a dam and crashed. Four crew members were injured and the Sgt Quintavalle was killed.", "Crash cause": "Human factor"}, {"Date": "7/23/1933", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "V. Spencer", "Registration": "CF-ALX", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2050", "YOM": "1930", "Flight number": "NA", "Crash location": "Takla Landing British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff, the aircraft named 'City of Prince George' hit a tree and crashed some 170 km north of Takla Landing, British Columbia. All four occupants escaped unhurt while the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "9/24/1933", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Winnipeg Flying Club", "Registration": "G-CAKB", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Winnipeg - Winnipeg", "MSN": "449", "YOM": "1928", "Flight number": "NA", "Crash location": "Sanford Manitoba", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The single engine airplane departed Winnipeg on a training flight. While cruising at low altitude, it stalled and crashed in an open field. The passenger was killed while the pilot was injured.", "Crash cause": "Unknown"}, {"Date": "9/28/1933", "Time": "NA", "Aircraft": "Spartan Three Seater I/II", "Operator": "Rollason Aviation", "Registration": "G-ABWV", "Flight phase": "Flight", "Flight type": "Positioning", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Yapton \u2013 Grantham", "MSN": "68", "YOM": "1932", "Flight number": "NA", "Crash location": "Grantham AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While approaching Grantham, the pilot encountered low visibility due to foggy conditions. Too low, the airplane impacted a hill and crashed. The George B. Watson was killed.", "Crash cause": "Human factor"}, {"Date": "10/15/1933", "Time": "NA", "Aircraft": "General Aircraft Genairco", "Operator": "Rabaul Airways", "Registration": "VH-UNY", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kabakaul - Kabakaul", "MSN": "12", "YOM": "1930", "Flight number": "NA", "Crash location": "Kabakaul East New Britain", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane was completing local joyrides in the area of Rabaul and Kanakaul. While flying over the Rainau Plantation, the pilot Duncan failed to realized his altitude was insufficient. The airplane struck a tall coconut tree and crashed. A passenger was killed while the second passenger was seriously injured. The pilot Duncan escaped with minor injuries.", "Crash cause": "Human factor"}, {"Date": "10/21/1933", "Time": "NA", "Aircraft": "Boulton & Paul P.64 Mailplane", "Operator": "Boulton %26 Paul Industry", "Registration": "G-ABYK", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Martlesham Heath AFB - Martlesham Heath AFB", "MSN": "P.64", "YOM": "1933", "Flight number": "NA", "Crash location": "Martlesham Heath AFB Suffolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, was engaged in a local test flight on this machine that was built by Boulton & Paul's factory seven months ago. During initial climb, the twin engine aircraft went out of control and crashed. The pilot was killed.", "Crash cause": "Unknown"}, {"Date": "10/25/1933", "Time": "NA", "Aircraft": "Polikarpov AP", "Operator": "Selkhozaviatsiya", "Registration": "CCCP-A11", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "2481", "YOM": "1931", "Flight number": "NA", "Crash location": "Russia All Russia", "Country": "Russia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "10/25/1933", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Dr. R. Schien", "Registration": "D-1869", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "D\u00fcbendorf - D\u00fcbendorf", "MSN": "1544", "YOM": "1930", "Flight number": "NA", "Crash location": "D\u00fcbendorf Zurich", "Country": "Switzerland", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "1", "Total fatalities": 2, "Circumstances": "While flying at an altitude of 80-100 metres in the vicinity of D\u00fcbendorf Airport, the pilot lost control of the airplane that dove into the ground and crashed. The pilot was killed as well as one people on the ground.", "Crash cause": "Unknown"}, {"Date": "10/30/1933", "Time": "10H 15M 0S", "Aircraft": "Couzinet 33 Biarritz", "Operator": "Charles de Verneilh Puyraseau", "Registration": "F-ALMV", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Tunis \u2013 Dijon \u2013 Paris", "MSN": "2", "YOM": "1931", "Flight number": "NA", "Crash location": "Blaisy-Bas C\u00f4te-d'Or", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The airplane was returning to Paris following a tour of the Mediterranean countries. It departed Tunis in the early morning bound to Paris with an intermediate stop in Dijon. Few minutes after takeoff from Dijon, the crew encountered poor visibility due to foggy conditions. Too low, the airplane impacted the slope of a hill in Blaisy-Bas, some 24 km northwest of Dijon. The aircraft was destroyed and all three crew members were killed. Crew: Charles de Verneilh Puyraseau, pilot, Mr. Le Bas, mechanic, Mr. Goulmy, radio navigator.", "Crash cause": "Weather"}, {"Date": "11/16/1933", "Time": "9H 0M 0S", "Aircraft": "Lior\u00e9-et-Olivier LeO H-213", "Operator": "Air France", "Registration": "F-AIFD", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "City", "Schedule": "Paris \u2013 Croydon", "MSN": "1", "YOM": "1926", "Flight number": "NA", "Crash location": "Beauvais Oise", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew departed Paris-Le Bourget Airport at 0840LT on a mail flight to Croydon. Twenty minutes later, while cruising at an altitude of 1,000 metres, the left engine caught fire. The crew decided to bail out and abandoned the aircraft that impacted an electricity pole and the roof of a factory before crashing in an affluent of the Avelon River, bursting into flames. Both pilots were uninjured while the aircraft was destroyed. All mail, more than one ton, was also destroyed.", "Crash cause": "Technical failure"}, {"Date": "12/11/1933", "Time": "16H 0M 0S", "Aircraft": "Focke-Wulf A.17", "Operator": "Deutsche Lufthansa", "Registration": "D-1403", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin - Hamburg", "MSN": "47", "YOM": "1928", "Flight number": "NA", "Crash location": "Hamburg-Helmut-Schmidt (Fuhlsb\u00fcttel) Hamburg", "Country": "Germany", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "4", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "On final approach to Hamburg-Fuhlsb\u00fcttel Airport in foggy conditions and snow falls, the pilot failed to realize his altitude was too low. The aircraft collided with an obstacle and crashed, bursting into flames. A passenger survived while all seven other occupants were killed. The aircraft was named 'L\u00fcneburg'.", "Crash cause": "Human factor"}, {"Date": "2/23/1934", "Time": "14H 15M 0S", "Aircraft": "Boeing 247", "Operator": "Boeing Air Transport", "Registration": "NC13357", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Los Angeles \u2013 Salt Lake City \u2013 Cheyenne \u2013 Chicago", "MSN": "1739", "YOM": "1933", "Flight number": "NA", "Crash location": "Salt Lake City Utah", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "5", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The airplane was completing a schedule service from Los Angeles to Chicago with intermediate stops in Salt Lake City and Cheyenne. It departed Salt Lake City Airport at 1400LT bound for Cheyenne with five passengers and three crew members on board. Weather conditions were poor with limited visibility due to snow falls and fog. While flying at an altitude of 8,000 feet at full speed, the airplane impacted the slope of the Parley's Canyon located about 17 km southeast of Salt Lake City Airport. The aircraft disintegrated on impact and all eight occupants were killed. Crew: Lloyd Anderson, pilot, Eric G. Danielson, copilot.", "Crash cause": "Human factor"}, {"Date": "2/26/1934", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 28", "Operator": "Air France", "Registration": "F-AJPA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Paris \u2013 Casablanca \u2013 Dakar \u2013 Buenos Aires", "MSN": "925", "YOM": "1930", "Flight number": "NA", "Crash location": "Cape Bojador La\u00e2youne-Boujdour-Sakia El Hamra", "Country": "Western Sahara", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "5", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The single engine airplane departed Paris on an international schedule service to Buenos Aires with five passengers and two crew members on board. On the leg from Casablanca to Dakar, while cruising at night at an altitude of 3,000 metres, the engine caught fire. The pilot reduced his altitude and attempted an emergency landing when the airplane crash landed in rough terrain located about 50 km from the Cape Bojador, bursting into flames. Six occupants were injured while the flight engineer Jean Reig was killed. Crew: Marcel Goret, pilot, Fr\u00e9d\u00e9ric Marret, radio operator, Jean Reig, flight engineer. \u2020", "Crash cause": "Technical failure"}, {"Date": "3/9/1934", "Time": "NA", "Aircraft": "Keystone LB-6", "Operator": "United States Army Air Corps - USAAC", "Registration": "32-148", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Daytona Beach \u2013 Miami", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Daytona Beach Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane departed Daytona Beach Airport on a flight to Miami, carrying three crew members on behalf of the AACMO, the Army Air Corps Mail Operation. After liftoff, while climbing to a height of about 500 feet, the airplane stalled and crashed in a cypress area. Lt Sell was killed and both other occupants were injured.", "Crash cause": "Unknown"}, {"Date": "3/31/1934", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "NKKK - Nippon Kaiji Kentei Kyokai", "Registration": "J-BALG", "Flight phase": "NA", "Flight type": "Executive/Corporate/Business", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "2014", "YOM": "1928", "Flight number": "NA", "Crash location": "Japan All Japan", "Country": "Japan", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in Japan. Crew fate unknown. Crashed somewhere in March, exact date unknown.", "Crash cause": "Unknown"}, {"Date": "5/29/1934", "Time": "NA", "Aircraft": "Udet U12 Flamingo", "Operator": "Austrian Air Force - \u00d6sterreichische Luftstreitkr\u00e4fte", "Registration": "A-110", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Graz - Graz", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Pernegg an der Mur Styria", "Country": "Austria", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Adolf Sikorovsky departed Graz-Thalerhof Airport on a local solo training mission. En route, the airplane went out of control and crashed in unknown circumstances in Pernegg an der Mur, some 30 km north of Graz. The pilot was killed.", "Crash cause": "Unknown"}, {"Date": "6/1/1934", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Central Airlines", "Registration": "NC934Y", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "138", "YOM": "1930", "Flight number": "NA", "Crash location": "Pittsburgh Pennsylvania", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "6/30/1934", "Time": "NA", "Aircraft": "Avro 504", "Operator": "National Aviation Day", "Registration": "G-ACRS", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Farnborough - Farnborough", "MSN": "K1802", "YOM": "NA", "Flight number": "NA", "Crash location": "Farnborough Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed Farnborough on a local demo flight. At the time of the accident, about 3,000 spectators were at the airport. While cruising north of the airfield, the pilot lost control of the airplane that crashed in Cove. The aircraft was destroyed and the pilot was seriously injured. He died the next of injuries sustained.", "Crash cause": "Technical failure"}, {"Date": "7/17/1934", "Time": "NA", "Aircraft": "Macchi M.9", "Operator": "Spanish Air Force - Aeron\u00e1utica Militar", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Barcelona Catalonia", "Country": "Spain", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Lt Jos\u00e9 de Sandoval, sole on board, was killed when the aircraft crashed in unknown circumstances into the sea off Barcelona.", "Crash cause": "Unknown"}, {"Date": "7/27/1934", "Time": "13H 0M 0S", "Aircraft": "Tupolev ANT-9", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L130", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Alma-Ata \u2013 Karaganda \u2013 Taldykorgan \u2013 Balkhash", "MSN": "131", "YOM": "1932", "Flight number": "NA", "Crash location": "Balkhash Karagandy", "Country": "Kazakhstan", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "8", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 10, "Circumstances": "The airplane departed Alma-Ata on a flight to Balkhash with intermediate stops in Karaganda and Taldykorgan. Following a wrong approach configuration to Balkhash Airport, the pilot led the airplane descending with a crosswind component which caused the airplane to land on one landing gear only. The pilot increased engine power and initiated a go-around procedure. During the circuit, the airplane encountered wind up to 47 km/h and due to inappropriate techniques on part of the pilot-in-command, the aircraft descended to a height of 20 metres. While completing a turn, it stalled and crashed 2 km from the runway, bursting into flames. The aircraft was destroyed and all 10 occupants were killed.", "Crash cause": "Human factor"}, {"Date": "8/24/1934", "Time": "13H 15M 0S", "Aircraft": "Waco UIC", "Operator": "K. de Geus van den Heuvel", "Registration": "PH-KGH", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Soesterberg \u2013 Twenthe", "MSN": "3833", "YOM": "1933", "Flight number": "NA", "Crash location": "Soesterberg Utrecht", "Country": "Netherlands", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after take off, while climbing, the pilot encountered engine problems and elected to return. On final, the airplane stalled and crashed 500 metres from the terrain, coming to rest upside down. All four occupants were injured and the aircraft was damaged beyond repair. It departed Soesterberg on a flight to Twenthe (Enschede).", "Crash cause": "Technical failure"}, {"Date": "10/3/1934", "Time": "NA", "Aircraft": "GVF PS-4", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L417", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Russia All Russia", "Country": "Russia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "10/15/1934", "Time": "NA", "Aircraft": "Junkers A.20", "Operator": "Hansa Luftbild", "Registration": "D-404", "Flight phase": "Flight", "Flight type": "Aerial photography", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "459", "YOM": "1924", "Flight number": "NA", "Crash location": "K\u00f6nigswinter North Rhine-Westphalia", "Country": "Germany", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane was engaged in an aerial photography mission, carrying one photographer and one pilot. It crashed in unknown circumstances in K\u00f6nigswinter, some 10 km southeast of Bonn. The pilot Grobe was killed and the photographer Schmidt was seriously injured.", "Crash cause": "Unknown"}, {"Date": "10/17/1934", "Time": "NA", "Aircraft": "Airspeed AS.5 Courier", "Operator": "Air Taxis", "Registration": "G-ACLS", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Brindisi \u2013 Croydon", "MSN": "13", "YOM": "1934", "Flight number": "NA", "Crash location": "Grenoble Is\u00e8re", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances near Grenoble. The pilot Mr. Crundall was uninjured and the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "10/22/1934", "Time": "NA", "Aircraft": "Tupolev ANT-9", "Operator": "Deruluft - Deutsch-Russische Luftverkehrs Gesellschaft", "Registration": "D-2831", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin - Moscow", "MSN": "145", "YOM": "1933", "Flight number": "NA", "Crash location": "Moscow Moscow oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Moscow Airport, the crew encountered poor weather conditions. Apparently to establish a visual contact with the ground, the crew reduced his altitude when the aircraft impacted trees and crashed in a wooded area located 5 km from Shakhovskaya, in the suburb of Moscow. All three occupants were injured and the aircraft was destroyed.", "Crash cause": "Human factor"}, {"Date": "10/26/1934", "Time": "NA", "Aircraft": "Ford 4", "Operator": "Ptarmigan Airlines", "Registration": "NC8403", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "4-AT-065", "YOM": "1929", "Flight number": "NA", "Crash location": "Flat Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following an uneventful cargo flight, the crew encountered marginal weather conditions upon arrival with strong winds. Upon touchdown, the airplane landed hard, causing the undercarriage to be torn off. The airplane went out of control, came to rest and was damaged beyond repair. Both pilots evacuated safely. The airplane was carrying spare parts for tractors and it is believed that its total weight was within limit upon landing.", "Crash cause": "Weather"}, {"Date": "11/3/1934", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Nottingham Aero Club", "Registration": "G-EBXG", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Nottingham - Nottingham", "MSN": "615", "YOM": "1928", "Flight number": "NA", "Crash location": "Nottingham Nottinghamshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a local pleasance flight and departed Tollerton Airfield that day. While making aerobatics manoeuvres, the crew lost control of the aircraft that dove into the ground and crashed in an open field located in Chilwell, southwest of Nottingham. Both pilots Philip S. Rook and Alan C. Grant-Dalton were killed.", "Crash cause": "Technical failure"}, {"Date": "11/23/1934", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Geoffrey H. Turner", "Registration": "G-AAZN", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Heston \u2013 Barton", "MSN": "2043", "YOM": "1930", "Flight number": "NA", "Crash location": "Leek Staffordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While flying at low altitude in foggy conditions, the aircraft hit the ground and crashed in a wheat field located in Rough Stone Farm, between the villages of Bradnop and Ipstones, Staffordshire. The pilot, sole on board, was killed.", "Crash cause": "Human factor"}, {"Date": "12/25/1934", "Time": "NA", "Aircraft": "Kalinin K-5", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L544", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Yanaul \u2013 Sverdlovsk", "MSN": "34", "YOM": "1930", "Flight number": "NA", "Crash location": "Ananino Sverdlovsk oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew departed Yanaul at 1000LT on a schedule service to Sverdlovsk. En route, weather conditions worsened and the visibility was very low due to thick fog. Approaching the village of Ananino, the airplane passed over houses at a height of about 4 metres. Then the pilot initiated a turn when the airplane stalled and crashed in a field outside the village. The airplane was destroyed and the mechanic was killed. Seriously injured, the pilot was transferred to a local hospital but he died few hours later.", "Crash cause": "Human factor"}, {"Date": "1/19/1935", "Time": "14H 0M 0S", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Canterbury Aero Club", "Registration": "ZK-ABQ", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Sockburn \u2013 Wellington", "MSN": "1806", "YOM": "1930", "Flight number": "NA", "Crash location": "Waipara Canterbury Regional Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane departed Sockburn Aerodrome on a Saturday morning in an intended flight to Wellington. The foggy flying conditions encountered caused the pilot to land at Blenheim to await an improvement in the weather but when, after waiting for the rest of the morning, no improvement looked likely the decision was made to return to Christchurch. The pilot was hugging the coastline in bad visibility and at a low height about seven miles (12 kilometres) north of the Waipara River mouth when he took evasive action as a cliff appeared ahead. In doing so he lost control of the aircraft and it dived into the sea about 250 yards from the rocky coastline. On impact the Moth nosed over and began to sink upside down. The passenger, Cecil Haigh, was able to vacate his cockpit and help the pilot, Richard Roake, out of his. Using the aircraft's tires that been had torn off in the crash as life-buoys, they were able after a struggle to reach the shore. Unfortunately Mr Roake had hit his head on a rock before getting ashore and could proceed no further. Mr Haigh then set off alone in a harrowing trek along the steep and wild coastline to get help. At about 7 p.m., around 5 hours after the crash, Cecil Haigh came to the the homestead of Glenaffric Station, where despite his exhaustion he insisted on accompanying the rescue party that was quickly assembled. The searchers were unable to locate Mr. Roake that night, but in the morning he was found dead. The medical opinion was that he had died as the result of his head injuries. Crew: Richard Roake, pilot. \u2020 Passenger: Cecil Haigh.", "Crash cause": "Human factor"}, {"Date": "1/20/1935", "Time": "13H 50M 0S", "Aircraft": "CAMS 53", "Operator": "Air France", "Registration": "F-ALCF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Saigon \u2013 Yangon \u2013 Akyab \u2013 Calcutta \u2013 Allahabad \u2013 Agra \u2013 Basra \u2013 Cairo \u2013 Benghazi \u2013 Kerky - Naples \u2013 Marseille", "MSN": "30", "YOM": "1931", "Flight number": "NA", "Crash location": "Santa Maria di Leuca Apulia", "Country": "Italy", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Kerkyra to Naples, the crew encountered poor weather conditions with snow falls. The captain decided to ditch the airplane in the Ionian Sea some 50 km southeast of Santa Maria di Leuca, Apulia. All six occupants were rescued by the crew of the Italian ship named 'Paganini' while the aircraft sank and was lost.", "Crash cause": "Weather"}, {"Date": "1/25/1935", "Time": "NA", "Aircraft": "Caudron C.280 Phal\u00e8ne", "Operator": "Compagnie G\u00e9n\u00e9rale TransSaharienne - CGT France", "Registration": "F-AMVD", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "Algiers \u2013 Colomb-B\u00e9char \u2013 Bidon V \u2013 Gao \u2013 Cotonou", "MSN": "6889.6", "YOM": "1934", "Flight number": "NA", "Crash location": "Parakou Borgou", "Country": "Benin", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crew was performing a mail flight from Algiers to Cotonou with intermediate stops in Colomb-B\u00e9char, Bidon 5 and Gao. On the last leg from Gao to Cotonou, crew encountered poor weather conditions due to a sandstorm. In low visibility, he decided to reduce his altitude when the aircraft hit the ground and crashed. While both occupants were slightly injured, the aircraft was destroyed by impact forces.", "Crash cause": "Weather"}, {"Date": "3/7/1935", "Time": "NA", "Aircraft": "Rohrbach Ro.VIII Roland II", "Operator": "Deruluft - Deutsch-Russische Luftverkehrs Gesellschaft", "Registration": "D-AJYP", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "45", "YOM": "NA", "Flight number": "NA", "Crash location": "Swidwin Pomeranian Voivodeship (Pomorskie)", "Country": "Poland", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Strctural failure in flight forced the crew to make an emergency landing. The aircraft landed in a wheat field but was damaged beyond repair. All three crew escaped unhurt.", "Crash cause": "Unknown"}, {"Date": "3/29/1935", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Deutsche Lufthansa", "Registration": "D-OHIL", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "723", "YOM": "1924", "Flight number": "NA", "Crash location": "Svetlogorsk Kaliningrad oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew (three student pilots and two instructors) was performing a training flight over Baltic Sea, working on new telecommunications techniques. In flight, the single engine aircraft crashed into the sea for unknown reasons. No trace of the aircraft nor the crew was ever found. The aircraft crashed few km off the Samland coast, K\u00f6nigsberg (now Kaliningrad oblast, Russia).", "Crash cause": "Unknown"}, {"Date": "4/24/1935", "Time": "16H 45M 0S", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Newcastle upon Tyne Light Aeroplane Club", "Registration": "G-ABRD", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Newcastle - Newcastle", "MSN": "1877", "YOM": "1931", "Flight number": "NA", "Crash location": "Consett Durham", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing a local private flight. After making a low pass over his house, he lost control of the aircraft that crashed in an wheat field located in Woodlands Hall, near Consett. The pilot Alexander Edward Sprot was seriously injured while the passenger Samuel Edward Sprot was killed.", "Crash cause": "Human factor"}, {"Date": "5/17/1935", "Time": "NA", "Aircraft": "Breguet 19", "Operator": "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Li\u00e8ge Li\u00e8ge", "Country": "Belgium", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The accident occurred in unknown circumstances in the vicinity of the Li\u00e8ge-Bierset Airport. Both pilots Joseph Partoens and Louis Slachmeulen were killed.", "Crash cause": "Unknown"}, {"Date": "5/31/1935", "Time": "NA", "Aircraft": "Avro 594 Avian", "Operator": "Private Indian", "Registration": "VT-AAN", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Benares - Calcutta", "MSN": "110", "YOM": "1928", "Flight number": "NA", "Crash location": "Calcutta West Bengal", "Country": "India", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft crashed on landing for unknown reason at Calcutta-Dum Dum Airport. While the pilot was injured, the aircraft was damaged beyond repair. It was owned by Yatis Chandra Ray.", "Crash cause": "Human factor"}, {"Date": "7/1/1935", "Time": "NA", "Aircraft": "De Havilland DH.84 Dragon", "Operator": "Railway Air Services", "Registration": "G-ADED", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Douglas \u2013 Blackpool \u2013 Liverpool \u2013 Manchester", "MSN": "6098", "YOM": "1935", "Flight number": "NA", "Crash location": "Douglas-Ronaldsway Isle of Man", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "6", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While taking off from Douglas-Ronaldsway Airport, the twin engine aircraft crashed and burst into flames. While all seven occupants were injured, the aircraft was destroyed by post crash fire. The airplane was on its way to Manchester-Ringway Airport with intermediate stops in Blackpool-Squires Gate Airport and Liverpool-Speke Airport.", "Crash cause": "Unknown"}, {"Date": "7/23/1935", "Time": "NA", "Aircraft": "Vickers Virginia", "Operator": "Royal Air Force - RAF", "Registration": "K2675", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Chobham Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crew was forced to make an emergency landing in Chobham. While the crew fate is unknown, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "8/15/1935", "Time": "18H 0M 0S", "Aircraft": "Lockheed 9 Orion", "Operator": "Private American", "Registration": "NR12283", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Seattle \u2013 Fairbanks \u2013 Lake Harding \u2013 Barrow", "MSN": "195", "YOM": "1933", "Flight number": "NA", "Crash location": "Barrow Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after take off from lake Walakpi located south of Barrow, while in initial climb to a height of some fifty feet, the aircraft stalled and crashed into the lake. Both occupants were killed. Crew: Wiley Post, 37, test pilot by Lockheed. Passenger: Will Rogers, 56, actor.", "Crash cause": "Other causes"}, {"Date": "9/7/1935", "Time": "NA", "Aircraft": "Avro 504", "Operator": "National Aviation Displays", "Registration": "G-ACOD", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "City", "Schedule": "NA", "MSN": "F8713", "YOM": "1934", "Flight number": "NA", "Crash location": "Blackpool Lancashire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The single engine aircraft departed Stanley Park in Blackpool for a local flight with two passengers and a pilot on board. While flying over the city of Blackpool, it collided with a Westland Wessex registered G-ADFZ. Flying on behalf of Trafalgar Advertising Company, the second aircraft was carrying two passengers and a pilot as well. After the collision, both aircraft dove into the ground and crashed in flames in Swainson Street, in Cedar Square. Both aircraft were destroyed by impact forces and post crash fire and all six occupants were killed.", "Crash cause": "Unknown"}, {"Date": "10/26/1935", "Time": "12H 8M 0S", "Aircraft": "De Havilland DH.84 Dragon", "Operator": "Railway Air Services", "Registration": "G-ADEE", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Manchester \u2013 Ronaldsway", "MSN": "6099", "YOM": "1935", "Flight number": "NA", "Crash location": "Blackpool Lancashire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The twin engine aircraft left Manchester-Barton Airport at 1100LT bound for Ronaldsway, Isle of Man, with one pilot and one passenger on board. At 1155LT, the pilot reported he was flying at a height of some 500 feet in poor visibility. Less than fifteen minutes later, while cruising at an altitude of 1,500 feet, he saw the mountain at the last moment and tried to gain altitude. Unfortunately, the aircraft hit the slope of Mount Fair Snape Fell located some 30 km northeast of Blackpool and was destroyed by impact forces and post crash fire. Both occupants were killed. It appears the aircraft hit the mountain 200 feet from the summit and the correction made by the pilot was too late to avoid the obstacle. At the time of the accident, the visibility was reduced due to mist. Crew: Cedric Rex Crow, pilot. Passenger: Ronald Swales.", "Crash cause": "Human factor"}, {"Date": "11/2/1935", "Time": "12H 0M 0S", "Aircraft": "Dornier DO.18", "Operator": "Deutsche Lufthansa", "Registration": "D-AHIS", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "253", "YOM": "1935", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "NA", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Crew was performing a test flight over the Baltic Sea. In unknown circumstances, seaplane crashed into the sea off Dahme, Germany. Three occupants were killed while two other were seriously injured.", "Crash cause": "Unknown"}, {"Date": "11/8/1935", "Time": "NA", "Aircraft": "Lockheed 8 Sirius/Altair", "Operator": "Private Australian", "Registration": "VH-USB", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Lympne - Allahabad - Singapore - Sydney", "MSN": "152", "YOM": "1935", "Flight number": "NA", "Crash location": "Myanmar All Myanmar", "Country": "Myanmar", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Sir Charles Kingsford Smith and his copilot John Thompson 'Tommy' Pethybridge were flying the aircraft christened 'Lady Southern Cross' overnight from Allahabad, India, to Singapore, as part of their attempt to break the England-Australia speed record held by C. W. A. Scott and Tom Campbell Black, when they disappeared over the Andaman Sea in the early hours of 8 November 1935. Despite brave search for 74 hours over the Bay of Bengal by test pilot Eric Stanley Greenwood OBE, their bodies were never recovered. Eighteen months later, Burmese fishermen found an undercarriage leg and wheel (with its tyre still inflated) which had been washed ashore at Aye Island in the Gulf of Martaban, some three km off the southeast coastline of Burma, some 137 km south of Mottama (formerly known as Martaban). Lockheed confirmed the undercarriage leg to be from the 'Lady Southern Cross'. Botanists who examined the weeds clinging to the undercarriage leg estimated that the aircraft itself lies not far from the island at a depth of approximately 27 meters. The undercarriage leg is now on public display at the Powerhouse Museum in Sydney, Australia.", "Crash cause": "Unknown"}, {"Date": "11/9/1935", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Braniff Airways", "Registration": "NC980Y", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "191", "YOM": "1932", "Flight number": "NA", "Crash location": "Fort Worth Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Crashed shortly after takeoff from Fort Worth Airport. The pilot was killed.", "Crash cause": "Unknown"}, {"Date": "11/10/1935", "Time": "13H 45M 0S", "Aircraft": "Waco UIC", "Operator": "Private American", "Registration": "NC13413", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Pontotoc - Pontotoc", "MSN": "3770", "YOM": "1933", "Flight number": "NA", "Crash location": "Thaxton Mississippi", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The aircraft was owned by Dean Faulkner. An Armistice Day Air Pageant was held at Pontotoc Airfield, Pontotoc County, Mississippi, on November 10 & 11, 1935. Air pageant organizer and pilot Dean Faulkner offered 1$ rides in his bright-red four-seat Waco UIC cabin biplane. On November 10, at 1330LT, he took up three of his cousins (Henry Graham, Lamon \u2018Red\u2019 Graham and Bud Warren) to fly over the Graham family farm. The Graham farm was located at 940 Benjamin Road, Thaxton, Pontotoc County, about 10 miles northwest of Pontotoc Airfield, about 4 miles north of Thaxton. The aircraft crashed within the boundaries of the Graham farm, killing the four occupants instantly. Reportedly the flip-over controls were found on the side of Lamon \u2018Red\u2019 Graham, who was a student pilot.", "Crash cause": "Human factor"}, {"Date": "11/23/1935", "Time": "NA", "Aircraft": "Fokker F7", "Operator": "Compagnie Internationale de Navigation A\u00e9rienne - CIDNA", "Registration": "F-ALGT", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "24", "YOM": "1932", "Flight number": "NA", "Crash location": "Vienna Vienna", "Country": "Austria", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. No casualties.", "Crash cause": "Unknown"}, {"Date": "12/15/1935", "Time": "NA", "Aircraft": "CAMS 53", "Operator": "Air France", "Registration": "F-AJZX", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Algiers \u2013 Ajaccio \u2013 Marseille", "MSN": "26", "YOM": "1930", "Flight number": "NA", "Crash location": "Ajaccio Corse-du-Sud", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Ajaccio, the seaplane crashed in unknown circumstances in the harbor of Ajaccio. All six occupants were rescued while the aircraft christened 'Saintonge' was lost.", "Crash cause": "Unknown"}, {"Date": "12/31/1935", "Time": "NA", "Aircraft": "Boeing 221 Monomail", "Operator": "Inland Airlines", "Registration": "NC10225", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "1154", "YOM": "1930", "Flight number": "NA", "Crash location": "Pueblo Colorado", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "1/17/1936", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Cochabamba \u2013 La Paz", "MSN": "4018", "YOM": "1932", "Flight number": "NA", "Crash location": "Tapacar\u00ed Cochabamba", "Country": "Bolivia", "Region": "South America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "10", "PAX fatalities": "10", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "Few minutes after takeoff from Cochabamba, while flying to the west, the three engine aircraft hit a mountain slope near the village of Tapacar\u00ed. All 13 occupants were killed. The aircraft did not have any registration but was christened 'Chorolque'.", "Crash cause": "Unknown"}, {"Date": "1/21/1936", "Time": "10H 0M 0S", "Aircraft": "CAMS 53", "Operator": "Air France", "Registration": "F-AJIR", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Marseille \u2013 Ajaccio \u2013 Tunis", "MSN": "19", "YOM": "1929", "Flight number": "NA", "Crash location": "Ajaccio Corse-du-Sud", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While descending to Ajaccio, the crew sent a short mayday message following a power plant failure. The seaplane aircraft went out of control and crashed into the sea, few km off shore. All six occupants were killed. Crew: Edmond Larbonne, pilot, Laurent Caillebotte, radio navigator, Robert Juge, engineer.", "Crash cause": "Technical failure"}, {"Date": "2/15/1936", "Time": "3H 52M 0S", "Aircraft": "Dornier Do J Wal", "Operator": "Deutsche Lufthansa", "Registration": "D-ADYS", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Rio de Janeiro \u2013 Vit\u00f3ria \u2013 Belmonte \u2013 Salvador \u2013 Recife \u2013 Bathurst \u2013 Sevilla \u2013 Stuttgart \u2013 Berlin", "MSN": "299", "YOM": "NA", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was performing a mail flight from Rio de Janeiro to Berlin with several intermediate stops. The float plane christened 'Tornado' was catapulted from the deck of the German ship christened 'Westphalen' in the region of Fernando de Noronha around 18:18 (GMT time) on February 14, 1936. Some 9 hours and 34 minutes later, all communications ceased with the crew. SAR operations were conducted by seven countries but no trace of the aircraft nor the crew was ever found. According to the authorities, the crew was flying at a speed of some 200 km/h and some 3 to 5 meters above the surface of the water.", "Crash cause": "Unknown"}, {"Date": "4/11/1936", "Time": "5H 0M 0S", "Aircraft": "Sikorsky S-42", "Operator": "Pan American World Airways - PAA", "Registration": "NC15374", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Miami \u2013 Port of Spain \u2013 Natal \u2013 Rio de Janeiro \u2013 Buenos Aires", "MSN": "4204", "YOM": "1934", "Flight number": "NA", "Crash location": "Port of Spain All Trinidad and Tobago", "Country": "Trinidad and Tobago", "Region": "Central America", "Crew on board": "7", "Crew fatalities": "1", "Pax on board": "18", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "After takeoff from the harbor of Port of Spain, while climbing by night, captain saw a boat and made a sharp turn to avoid the collision. Nevertheless, the right pontoon hit the boat and the aircraft stalled before crashing into the bay. A crew and two passengers were drowned while all 22 other occupants were rescued. The aircraft christened 'Antilles Clipper' was lost. It was night at the time of the accident so the visibility was poor. Crew distinguished the boat to late and the avoiding manoeuvre was to late as well.", "Crash cause": "Human factor"}, {"Date": "5/10/1936", "Time": "NA", "Aircraft": "Simmonds Spartan", "Operator": "Air Trips", "Registration": "G-ABKK", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "58", "YOM": "1931", "Flight number": "NA", "Crash location": "Coventry West Midlands", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from the Westwood Airfield, the single engine aircraft collided with an Avro 504N registered G-AECR. Avro 504 landed safely but the Simmonds crashed in a wheat field, injuring his pilot who was taking part to a rally.", "Crash cause": "Unknown"}, {"Date": "6/10/1936", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Marlborough Aero Club", "Registration": "ZK-AAA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "888", "YOM": "1929", "Flight number": "NA", "Crash location": "Blenheim Marlborough District Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "6/20/1936", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Private British", "Registration": "G-EBRT", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "City", "Schedule": "NA", "MSN": "410", "YOM": "1927", "Flight number": "NA", "Crash location": "Southend Essex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Canute Airfield located in Ashingdon, north of Southend, the single engine aircraft encountered problem to gain altitude and hit a tree in the city of Ashingdon were it came to rest in a height of some 10 meters. Unhurt, both occupants went down the tree while the aircraft was later considered as damaged beyond repair. The aircraft was owned by John Henry Arthur Wells and William R. L. Beaumont. At the time of the accident, it was piloted by F. Fairhead.", "Crash cause": "Unknown"}, {"Date": "6/23/1936", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 28", "Operator": "Aeroposta Argentina", "Registration": "R-293", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "929", "YOM": "NA", "Flight number": "NA", "Crash location": "Comodoro Rivadavia Chubut", "Country": "Argentina", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances some 80 km from Comodoro Rivadavia. Crew fate unknown as well.", "Crash cause": "Unknown"}, {"Date": "8/27/1936", "Time": "NA", "Aircraft": "Stinson Model A", "Operator": "Delta Airlines", "Registration": "NC15134", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "9111", "YOM": "1935", "Flight number": "NA", "Crash location": "Atlanta Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "9/28/1936", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Varney Air Transport - VAT", "Registration": "NC176W", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "El paso \u2013 Pueblo", "MSN": "129", "YOM": "1930", "Flight number": "NA", "Crash location": "Walsenburg Colorado", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route, while flying some 30 miles south of Pueblo, the engine failed. The aircraft lost height and eventually crashed against a hill. All three occupants were killed.", "Crash cause": "Technical failure"}, {"Date": "10/9/1936", "Time": "NA", "Aircraft": "Blackburn B-2", "Operator": "North Sea Aerial %26 General Transport", "Registration": "G-ABWI", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "4700/1", "YOM": "1932", "Flight number": "NA", "Crash location": "Selby North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole aboard, was performing a mail flight. En route, the single engine aircraft went out of control for unknown reasons and crashed in Ellerton, near Selby. The pilot was killed.", "Crash cause": "Unknown"}, {"Date": "11/23/1936", "Time": "NA", "Aircraft": "Boeing 247", "Operator": "United Airlines", "Registration": "NC13319", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1700", "YOM": "1933", "Flight number": "NA", "Crash location": "Newark New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. No casualties.", "Crash cause": "Unknown"}, {"Date": "12/5/1936", "Time": "NA", "Aircraft": "Douglas Dolphin", "Operator": "United States Coast Guard - USCG", "Registration": "V111", "Flight phase": "Takeoff (climb)", "Flight type": "Ambulance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Assateague - Norfolk", "MSN": "1122", "YOM": "NA", "Flight number": "NA", "Crash location": "Assateague Virginia", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Lieutenant Luke Christopher had been ordered from the Cape May Air Station to pick up a sick man in Assateague Harbor from an Assateague surfboat. He picked up the patient to transport him to the Norfolk Hospital, but crashed on takeoff and died shortly after. The sick man, who survived the crash, was later transported to the hospital at Salisbury, Maryland.", "Crash cause": "Unknown"}, {"Date": "12/18/1936", "Time": "3H 23M 0S", "Aircraft": "Lockheed 10 Electra", "Operator": "Northwest Airlines", "Registration": "NC14935", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Chicago \u2013 Minneapolis \u2013 Missoula \u2013 Seattle", "MSN": "1024", "YOM": "1935", "Flight number": "NA", "Crash location": "Kellogg Idaho", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While overflying west Idaho in poor weather conditions, the twin engine aircraft hit a mountain and was destroyed. Both crew members were killed. Crew: Joe Livermore, pilot, Arthur A. Haid, copilot.", "Crash cause": "Human factor"}, {"Date": "2/8/1937", "Time": "NA", "Aircraft": "Sikorsky S-43", "Operator": "Panair do Brasil", "Registration": "PP-PAR", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "4307", "YOM": "1937", "Flight number": "NA", "Crash location": "NA", "Country": "Brazil", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Occupant fate unknown as well.", "Crash cause": "Unknown"}, {"Date": "2/9/1937", "Time": "20H 50M 0S", "Aircraft": "Douglas DC-3", "Operator": "United Airlines", "Registration": "NC16073", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Los Angeles \u2013 San Francisco \u2013 Oakland", "MSN": "1913", "YOM": "1936", "Flight number": "NA", "Crash location": "San Francisco California", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "8", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 11, "Circumstances": "On final approach, the aircraft lost 400 feet in few seconds and eventually crashed into the bay of San Francisco, some two miles off the airport. All eleven occupants were killed. Crew: A. R. Thompson, pilot, Joe Decesaro, copilot, Ruth Kimmel, stewardess.", "Crash cause": "Human factor"}, {"Date": "3/24/1937", "Time": "14H 11M 0S", "Aircraft": "Short S.23 Empire Flying Boat", "Operator": "Imperial Airways", "Registration": "G-ADVA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Southampton \u2013 Brindisi \u2013 Mirabella \u2013 Alexandria \u2013 Durban", "MSN": "S.818", "YOM": "1936", "Flight number": "NA", "Crash location": "Ouroux Rh\u00f4ne", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "4", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft left Southampton at 1150LT. While overflying Morvan, the radio navigator contacted ground control in Lyon-Bron to obtain a position briefing. While flying in snow falls, the four engine aircraft christened 'Capricornus' hit two pine trees and crashed near Ouroux, some 15 km southwest of M\u00e2con. The radio navigator survived and walk few km to find help. When he returned to the aircraft, he realize all five other occupants were killed. Crew: A. Paterson, pilot, G. E. Klein, copilot, Denis R. O'Brien, flight clerk, James L. Cooper, radio navigator, F. A. E. Jeffcoate, steward. Passenger: Beatrix 'Betty' Mercy Coats.", "Crash cause": "Human factor"}, {"Date": "3/26/1937", "Time": "NA", "Aircraft": "Junkers JU.160", "Operator": "Deutsche Lufthansa", "Registration": "D-UPOZ", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "4207", "YOM": "1935", "Flight number": "NA", "Crash location": "Hanover Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The engine failed in flight and the pilot attempted to make an emergency landing in an open field located in W\u00e4tzum, some 10 km southeast of Hanover. While the aircraft was damaged beyond repair, all six occupants were unhurt.", "Crash cause": "Technical failure"}, {"Date": "4/12/1937", "Time": "NA", "Aircraft": "Lockheed 8 Sirius/Altair", "Operator": "Mainichi Shinbun", "Registration": "J-BAMC", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "188", "YOM": "1932", "Flight number": "NA", "Crash location": "Osaka Kansai", "Country": "Japan", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was sole on board this single engine aircraft that was carrying newspaper on behalf of the Japanese daily newspaper 'Mainichi Shinbun'. On final approach to Osaka Airport, the aircraft crashed in unknown circumstances. While the pilot was injured, the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "4/15/1937", "Time": "NA", "Aircraft": "Junkers A.20", "Operator": "Deutsche Lufthansa", "Registration": "D-IBUX", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "353", "YOM": "1923", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft christened 'Erde' crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "4/27/1937", "Time": "NA", "Aircraft": "Lockheed 1 Vega", "Operator": "Varney Air Transport - VAT", "Registration": "NC483M", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "136", "YOM": "1930", "Flight number": "NA", "Crash location": "El Paso Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The single engine airplane crashed in unknown circumstances and was destroyed. The pilot, sole on board, was injured.", "Crash cause": "Unknown"}, {"Date": "4/29/1937", "Time": "NA", "Aircraft": "Handley Page H.P.54 Harrow", "Operator": "Royal Air Force - RAF", "Registration": "K6950", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "RAF Methwold - RAF Methwold", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Methwold AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Crew from 214th Squadron was performing a demonstration flight in formation with another H.P.54 registered K6945. In flight, while making a turn, both aircraft collided and crashed in flames near the airfield. All five crew members on both aircraft were killed.", "Crash cause": "Human factor"}, {"Date": "4/29/1937", "Time": "NA", "Aircraft": "Handley Page H.P.54 Harrow", "Operator": "Royal Air Force - RAF", "Registration": "K6945", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "RAF Methwold - RAF Methwold", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Methwold AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Crew from 214th Squadron was performing a demonstration flight in formation with another H.P.54 registered K6950. In flight, while making a turn, both aircraft collided and crashed in flames near the airfield. All five crew members on both aircraft were killed.", "Crash cause": "Human factor"}, {"Date": "5/7/1937", "Time": "NA", "Aircraft": "Fokker F14", "Operator": "United States Army Air Corps - USAAC", "Registration": "31-385", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Edwards AFB - March AFB", "MSN": "1417", "YOM": "NA", "Flight number": "NA", "Crash location": "Victorville California", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the pilot encountered engine problems. He decided to abandon the aircraft and bailed out. The aircraft crashed near Cajon Pass, southwest of Victorville and was destroyed. The pilot was unhurt.", "Crash cause": "Technical failure"}, {"Date": "5/19/1937", "Time": "NA", "Aircraft": "Lior\u00e9-et-Olivier LeO H-47", "Operator": "Lior\u00e9-et-Olivier Industries", "Registration": "F-APPR", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Antibes - Antibes", "MSN": "1", "YOM": "1936", "Flight number": "NA", "Crash location": "Antibes Alpes-Maritimes", "Country": "France", "Region": "Europe", "Crew on board": "10", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a test flight on this first prototype. Few minutes after lift off, while climbing, the seaplane stalled and crashed into the sea off Antibes. Five crew were rescued while five other were killed. Crew: Lucien Bourdin, pilot, \u2020 Robert Blouin, radio navigator, \u2020 Marcel Juin, \u2020 Luce Brochet, \u2020 Charles Rayer. \u2020", "Crash cause": "Technical failure"}, {"Date": "6/19/1937", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Queensland Aero Club", "Registration": "VH-UAN", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brisbane - Brisbane", "MSN": "542", "YOM": "1928", "Flight number": "NA", "Crash location": "Brisbane-Archerfield Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While taking part to an air race, the single engine aircraft collided in flight with another DH.60 of the Royal Queensland Aero Club registered VH-UAV. Both aircraft dove into the ground and crashed southeast of the airfield. Both pilots on both aircraft were killed.", "Crash cause": "Human factor"}, {"Date": "7/21/1937", "Time": "NA", "Aircraft": "Stinson SM-1 Detroiter", "Operator": "Norsk Lufttrafik", "Registration": "LN-ABN", "Flight phase": "Flight", "Flight type": "Delivery", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "514", "YOM": "NA", "Flight number": "NA", "Crash location": "Sweden All Sweden", "Country": "Sweden", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in Sweden while on a delivery flight. The fate of the pilot is uncertain.", "Crash cause": "Unknown"}, {"Date": "8/1/1937", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "Eurasia Aviation Corporation", "Registration": "XVIII", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "5294", "YOM": "1935", "Flight number": "NA", "Crash location": "Kunming Yunnan", "Country": "China", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the pilot was forced to attempt an emergency landing following an engine failure. No casualties but the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "8/6/1937", "Time": "NA", "Aircraft": "Douglas DC-2", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-M25", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Bucharest \u2013 Moscow", "MSN": "1413", "YOM": "1935", "Flight number": "NA", "Crash location": "Bistrita Bistri<U+021B>a-Nasaud", "Country": "Romania", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "En route, the aircraft caught fire and crashed in flames near Bistrita, Transylvania. All five occupants were killed.", "Crash cause": "Technical failure"}, {"Date": "8/8/1937", "Time": "NA", "Aircraft": "Farman F.190", "Operator": "Air Commerciale", "Registration": "CS-AAV", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Lisbon - Lisbon", "MSN": "7366", "YOM": "1932", "Flight number": "NA", "Crash location": "Figueira da Foz Centro", "Country": "Portugal", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "4", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The single engine aircraft departed Lisbon in the morning to follow the regatta in Figueira da Foz. On approach, the pilot lost control of the aircraft that crashed into the sea few kilometers off shore. All five occupants were killed. The aircraft was named 'Aguia Branca 2'.", "Crash cause": "Technical failure"}, {"Date": "8/15/1937", "Time": "NA", "Aircraft": "Avro 616 Avian IVM", "Operator": "Cape Breton Flying Club", "Registration": "CF-CDG", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Sydney - Sydney", "MSN": "307", "YOM": "1930", "Flight number": "NA", "Crash location": "Sydney Nova Scotia", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The student pilot was performing a circular training flight at Sydney Airport. For unknown reason, the pilot made a hard landing. The aircraft was damaged beyond repair and the pilot was unhurt.", "Crash cause": "Human factor"}, {"Date": "9/7/1937", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6227", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Penrhos \u2013 Sealand \u2013 Bircham Newton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Penmaenmawr Clwyd", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Following a bombing exercise off the RAF Penrhos, Wales, a formation of 14 Avro Anson was returning to its base at RAF Bircham Newton with an intermediate stop at RAF Sealand. En route, while flying southwest of Llandudno, the leader went through a foggy area and instructed all other crews to gain altitude. While on the left of the formation, the Anson was flying at a height of some 100 feet when its pilot decided to gain altitude. The twin engine aircraft went out of control and crashed into the sea of Penmaenmawr. All three crew of the 220th Squadron were killed. Crew: W. H. V. Rimer 2.", "Crash cause": "Human factor"}, {"Date": "9/10/1937", "Time": "12H 0M 0S", "Aircraft": "Miles M.3B Falcon Major", "Operator": "Phillips %26 Powis Aircraft", "Registration": "G-AENG", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "234", "YOM": "1936", "Flight number": "NA", "Crash location": "Scarborough North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Crew was taking part of Kings Cup Race when the aircraft was thrown to a cliff by strong winds. Both crew killed.", "Crash cause": "Weather"}, {"Date": "12/1/1937", "Time": "NA", "Aircraft": "De Havilland DH.50", "Operator": "North Queensland Airways", "Registration": "VH-UFA", "Flight phase": "Landing (descent or approach)", "Flight type": "Ambulance", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1", "YOM": "1929", "Flight number": "NA", "Crash location": "Cairns Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing at Cairns Airport. The aircraft was damaged beyond repair while all occupants survived.", "Crash cause": "Unknown"}, {"Date": "12/6/1937", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "SAAF Aero Club", "Registration": "ZS-AAL", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "502", "YOM": "1928", "Flight number": "NA", "Crash location": "Muldersdrift Gauteng", "Country": "South Africa", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight from Roberts Heights Airport in Pretoria when the single engine aircraft crashed in unknown circumstances in Muldersdrift, Gauteng Province. The aircraft owned by SAAF Aero Club was destroyed and both occupants were injured.", "Crash cause": "Unknown"}, {"Date": "12/24/1937", "Time": "17H 29M 0S", "Aircraft": "Wibault 282/283", "Operator": "Air France", "Registration": "F-AMYD", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Bucharest \u2013 Vienna \u2013 Prague \u2013 Paris", "MSN": "11", "YOM": "1934", "Flight number": "NA", "Crash location": "Ka\u0161persk\u00e9 Hory Plzen Region (Plzensk\u00fd kraj)", "Country": "Czech Republic", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The three engine aircraft left Vienna at 1555LT bound for Prague. Approaching the Czech capital city, crew encountered poor weather conditions and was instructed by ATC to return to Vienna. Few minutes later, crew decided to start the descent but did not realize he was off course by 120 km. While descending in low visibility, at an altitude of some 700 meters, the aircraft hit tree tops and crashed in a snowy forest located on the north slope of Mt Hut'ska. A day later, SAR found the three dead bodies in 60 cm of snow. The aircraft christened 'Le Glorieux' was totally destroyed. Crew: Frantisck Lehky, pilot, Pierre Astruc, radio navigator. Passenger: Karel Flanderka.", "Crash cause": "Human factor"}, {"Date": "12/29/1937", "Time": "NA", "Aircraft": "Stinson SR-9 Reliant", "Operator": "Cuban Air Force - Cuerpo de Aviaci\u00f3n del Ej\u00e9rcito de Cuba", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Bogot\u00e1 \u2013 Panama City", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Felidia Valle del Cauca", "Country": "Colombia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While flying in foggy conditions, the aircraft struck a mountain and crashed near Felidia, west of Cali. All three occupants were killed, among them a journalist. Two other similar aircraft crashed at the same time in similar conditions.", "Crash cause": "Weather"}, {"Date": "1/8/1938", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Private Mexican", "Registration": "XA-BHJ", "Flight phase": "NA", "Flight type": "Private", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "61", "YOM": "1929", "Flight number": "NA", "Crash location": "Chicago Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "2/2/1938", "Time": "20H 40M 0S", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "United States Navy - USN", "Registration": "463", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "San Diego - San Diego", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "San Clemente Island NAS California", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "4", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Crew was performing a night flight in formation with another Catalina registered 0462. While cruising side by side in heavy rain falls, both aircraft collided and crashed into the sea, off the San Clemente Island, some 110 km west of San Diego. All occupants on board 0462 were killed while three crew survived in the 0463.", "Crash cause": "Human factor"}, {"Date": "3/5/1938", "Time": "NA", "Aircraft": "De Havilland DH.83 Fox Moth", "Operator": "Guinea Airways", "Registration": "VH-UQS", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Surprise Creek \u2013 Port Moresby", "MSN": "4019", "YOM": "1932", "Flight number": "NA", "Crash location": "Surprise Creek (Wai Ungu) Western (Fly)", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff, while climbing, the single engine aircraft stalled and crashed in flames in a prairie. The pilot E. W. Ditton was injured and the aircraft was destroyed by fire.", "Crash cause": "Unknown"}, {"Date": "3/17/1938", "Time": "NA", "Aircraft": "Tupolev ANT-6 (TB-3 & G-2)", "Operator": "Polyarnaya Aviatsiya", "Registration": "CCCP-N210", "Flight phase": "Landing (descent or approach)", "Flight type": "Geographical / Geophysical / Scientific", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Bukhta Tikhaya - Bukhta Teplits", "MSN": "22 752", "YOM": "1937", "Flight number": "NA", "Crash location": "Bukhta Teplits Arkhangelsk oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On a flight from Bukhta Tikhaya to Buhkta Teplits (N81\u00b047.5') on Rudolph island (Franz-Joseph-Land Archipelago) when had to go around due to a layer of ground fog. Insufficient crew resource management resulted in the aircraft entering the fog layer. The ski of the left main landing gear hit the snow and the undercarriage was ripped off. Aircraft crashed and came to rest on ice. Two crew and one passenger were seriously injured while two other crew and two other passengers were slightly injured. The wreckage still in site in 2006.", "Crash cause": "Human factor"}, {"Date": "5/5/1938", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Lineas A\u00e9reas Mineras - LAMSA", "Registration": "XA-BFR", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mexico City - Mexico City", "MSN": "124", "YOM": "1930", "Flight number": "NA", "Crash location": "Mexico City Federal District of Mexico City", "Country": "Mexico", "Region": "Central America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "5", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "For unknown reason, the pilot took off from a taxiway. Shortly after rotation, the single engine aircraft stalled and crashed. All five passengers, LAMSA employees, were injured while the pilot Miguel Angel Padilla was killed. It appears that the flight was not granted.", "Crash cause": "Human factor"}, {"Date": "5/12/1938", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "SCADTA - Sociedad Colombo-Alemana de Transportes A\u00e9reos", "Registration": "C-35", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Tumaco \u2013 Buenaventura", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Buenaventura Valle del Cauca", "Country": "Colombia", "Region": "South America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Probable cause: While approaching Buenaventura, the single engine aircraft christened 'Dari\u00e9n' crashed in unknown circumstances in the mouth of Rio Cajambre, some 40 km south of Buenaventura. All three occupants were injured while the aircraft was lost. Crew: Mr. Loest, pilot, Guillermo Calvo, copilot.", "Crash cause": "Unknown"}, {"Date": "5/18/1938", "Time": "NA", "Aircraft": "Junkers JU.86", "Operator": "Swedish Air Force - Flygvapnet", "Registration": "154", "Flight phase": "Flight", "Flight type": "Delivery", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "154", "YOM": "1937", "Flight number": "NA", "Crash location": "Trelleborg Sk\u00e5ne", "Country": "Sweden", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The aircraft was on its delivery to the Swedish Air Force from Dessau to Sweden. While flying off Trelleborg, the twin engine aircraft went out of control and crashed in unknown circumstances in the Baltic Sea. All three crew were killed.", "Crash cause": "Unknown"}, {"Date": "7/11/1938", "Time": "NA", "Aircraft": "Emsco B.3", "Operator": "Transportes A\u00e9reos de Chiapas", "Registration": "XA-BFX", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "M\u00e9rida \u2013 Chetumal", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Chetumal Quintana Roo", "Country": "Mexico", "Region": "Central America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "7", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The aircraft was on its way from M\u00e9rida to Chetumal but failed to arrive. SAR mission was conducted but all operations were eventually suspended after few days as no trace of the aircraft nor the eight occupant was ever found.", "Crash cause": "Unknown"}, {"Date": "7/27/1938", "Time": "20H 30M 0S", "Aircraft": "Bloch MB.200", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "48", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Istres - Istres", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Albon Dr\u00f4me", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a training flight on behalf of the group based in Istres AFB. While performing a combined exercise with other aircraft based in Lyon-Bron Airport, the aircraft hit a hill near Albon, south of Vienne. All five occupants were killed and the aircraft was destroyed. Crew: Under-Lieutenant Richaud, Adjutant Courrant, Sergeant Perrial, Adjutant Cazenave, Sergeant Brunet.", "Crash cause": "Unknown"}, {"Date": "8/7/1938", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K8816", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Leuchars - Leuchars", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Groombridge Sussex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a night training exercise when he encountered problems and attempted a wheels up landing in an open field. The aircraft was damaged beyond repair and all three crew from the 224th Squadron escaped uninjured.", "Crash cause": "Unknown"}, {"Date": "8/18/1938", "Time": "NA", "Aircraft": "Lockheed 14 Super Electra", "Operator": "LOT Polish Airlines - Polskie Linie Lotnicze", "Registration": "SP-BNJ", "Flight phase": "Taxiing", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lydda \u2013 Athens \u2013 Thessaloniki \u2013 Sofia \u2013 Bucharest \u2013 Warsaw", "MSN": "1424", "YOM": "1938", "Flight number": "NA", "Crash location": "Bucharest-Baneasa Bucure<U+0219>ti", "Country": "Romania", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following an uneventful landing, pilot was vacating the runway to reach his parking place when a sudden fire erupted. The airplane was quickly stopped and all seven occupants were able to disembark before the aircraft was totally destroyed by fire. No one was injured.", "Crash cause": "Technical failure"}, {"Date": "8/24/1938", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Romford Flying Club", "Registration": "G-EBTG", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mayland - Mayland", "MSN": "469", "YOM": "1928", "Flight number": "NA", "Crash location": "Mayland Essex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. The pilot was uninjured while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "9/3/1938", "Time": "NA", "Aircraft": "Ford 5", "Operator": "Johnson Flying Service", "Registration": "NC435H", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "5-AT-102", "YOM": "1932", "Flight number": "NA", "Crash location": "Big Prairie Montana", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. No casualties.", "Crash cause": "Unknown"}, {"Date": "9/22/1938", "Time": "NA", "Aircraft": "Saro A.29 Cloud", "Operator": "Royal Air Force - RAF", "Registration": "K3723", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coventry West Midlands", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew conducting a training mission when an engine failed. The pilot attempted to make an emergency in a field located in Walsgrave, in the suburb of Coventry. All three crew escaped unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "9/29/1938", "Time": "NA", "Aircraft": "Supermarine Walrus", "Operator": "Royal Air Force - RAF", "Registration": "L2237", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wick Caithness", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew of four was performing a maritime patrol flight on behalf of the 712th Squadron. En route, pilot lost control of the aircraft following an engine failure. The seaplane crashed into the sea few yards off Wick and was lost. The fate of the crew is uncertain.", "Crash cause": "Technical failure"}, {"Date": "9/30/1938", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Sarajevo Aeronautical Club", "Registration": "YU-PAS", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1267", "YOM": "1930", "Flight number": "NA", "Crash location": "Sarajevo East Herzegovina", "Country": "Bosnia and Herzegovina", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The single engine aircraft crashed in unknown circumstances near the airport of Sarajevo-Rajlovac. Both occupants killed, among them the pilot Vojske D. Isajic.", "Crash cause": "Unknown"}, {"Date": "11/3/1938", "Time": "NA", "Aircraft": "De Havilland DH.84 Dragon", "Operator": "Private French", "Registration": "F-AMTM", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Buc - Agen", "MSN": "6040", "YOM": "1933", "Flight number": "NA", "Crash location": "Agen Lot-et-Garonne", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "5", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The twin engine aircraft left Buc Airfield in Seine-et-Oise in the day bound for Agen. While descending to Agen Airport, the aircraft went out of control and crashed in a field located in La R\u00e9ole. All six occupants were killed. Crew: Albert Garric, pilot and owner. Passengers: Mrs Garric, Max Garric, Mary Garric, Brigitte Fortune, Jean Castaing.", "Crash cause": "Unknown"}, {"Date": "11/7/1938", "Time": "NA", "Aircraft": "Fokker Super Universal", "Operator": "Northern Airways", "Registration": "CF-ATJ", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "853", "YOM": "1932", "Flight number": "NA", "Crash location": "Carcross Yukon", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff, while climbing, the aircraft hit a tree and crashed. No casualties.", "Crash cause": "Unknown"}, {"Date": "11/18/1938", "Time": "NA", "Aircraft": "Lockheed 14 Super Electra", "Operator": "Trans-Canada Air Lines - TCAL", "Registration": "CF-TCL", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Winnipeg \u2013 Regina \u2013 Vancouver", "MSN": "1475", "YOM": "1938", "Flight number": "NA", "Crash location": "Regina Saskatchewan", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after take off from Regina Airport, while climbing, the twin engine aircraft went out of control and crashed. Both pilots were killed. They were performing a mail flight from Winnipeg to Vancouver with an intermediate stop in Regina.", "Crash cause": "Unknown"}, {"Date": "11/18/1938", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4562", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Hooton Park AFB Cheshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to RAF Hooton Park, the twine engine aircraft stalled and hit the runway surface. The undercarriage were sheared off and the aircraft slid for several yards before coming to rest. While both pilots were uninjured, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "12/23/1938", "Time": "NA", "Aircraft": "Supermarine Walrus", "Operator": "Royal Air Force - RAF", "Registration": "L2255", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cochin Kerala", "Country": "India", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a maritime patrol flight off Cochin, with a crew of three on board, all from the 'HMS Manchester' ship cruising off shore. While flying at low height along the shore in Cochin, the seaplane hit telephone cables, stalled and crashed in the harbor. Two crew members were killed while the third occupants was injured. Crew: Sub-Lieutenant John Frederick Repington Collins, pilot, \u2020 Sub-Lieutenant Peter Noble Boxer, \u2020 Lieutenant Francis Myrddin Griffiths.", "Crash cause": "Human factor"}, {"Date": "12/31/1938", "Time": "NA", "Aircraft": "Sikorsky S-38", "Operator": "Panair do Brasil", "Registration": "PP-PAM", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "214-06", "YOM": "1929", "Flight number": "NA", "Crash location": "Rio Branco Acre", "Country": "Brazil", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Occupant fate unknown as well. The exact date of the accident remains unknown.", "Crash cause": "Unknown"}, {"Date": "1/7/1939", "Time": "NA", "Aircraft": "Simmonds Spartan", "Operator": "Private Australian", "Registration": "VH-UIT", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "3", "YOM": "1929", "Flight number": "NA", "Crash location": "Balranald New South Wales", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Engine failed shortly after take off from Balranald. The aircraft crashed and was destroyed, the pilot was injured.", "Crash cause": "Technical failure"}, {"Date": "1/13/1939", "Time": "NA", "Aircraft": "Fokker F18", "Operator": "Commercial Aviation Company - Palestine", "Registration": "VQ-PAF", "Flight phase": "Landing (descent or approach)", "Flight type": "Demonstration", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lydda - Lydda", "MSN": "5310", "YOM": "1935", "Flight number": "NA", "Crash location": "Lydda All Palestine", "Country": "Palestine", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was celebrating the inauguration of the company and was performing a demonstrating flight around Lydda Airport. While landing, the three engine aircraft went out of control, veered off runway and came to rest. While both occupants were unhurt, the aircraft was damaged beyond repair. Crew: Haim Leibovitz, pilot, Mr. Dushinsky, pilot.", "Crash cause": "Unknown"}, {"Date": "1/18/1939", "Time": "7H 50M 0S", "Aircraft": "Lockheed 14 Super Electra", "Operator": "Guinea Airways", "Registration": "VH-ABI", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Darwin \u2013 Katherine \u2013 Adelaide", "MSN": "1418", "YOM": "1938", "Flight number": "NA", "Crash location": "Katherine Northern Territory", "Country": "Australia", "Region": "Oceania", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The aircraft was carrying a load of 700 pounds of mail from Darwin to Adelaide with an intermediate stop in Katherine. Shortly after takeoff, while in initial climb, the twin engine aircraft encountered problem to gain height. It eventually stalled and crashed in the Katherine River located near the airport and came to rest in 6 feet of water. The aircraft was destroyed and all four occupants were killed. Crew: J. A. Jukes, pilot, C. R. Clarke, pilot, P. I. Donegan, copilot and flight engineer. Passenger: A. McDonald, Chief Inspector of Aerodromes in the Northern Territory.", "Crash cause": "Human factor"}, {"Date": "1/21/1939", "Time": "13H 9M 0S", "Aircraft": "Short S.23 Empire Flying Boat", "Operator": "Imperial Airways", "Registration": "G-ADUU", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Port Washington \u2013 Hamilton \u2013 Southampton", "MSN": "S.812", "YOM": "1936", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "8", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The seaplane christened 'Cavalier' left Port Washington seaplane base in Long Island at 1038LT on a transatlantic flight to Southampton with an intermediate stop in Hamilton, Bermuda. Some two hours later, crew encountered poor weather conditions and decided to modify his route to avoid a cumulonimbus area. During this maneuver, the aircraft lost height and while cruising in poor weather with low temperature, the pilot decided to return to his initial route when both inner engines stopped while both outboard engine lost power. In such situation, the captain decide to make an emergency landing into the Atlantic Ocean, some 285 miles southeast of Port Washington. The radio operator was able to give his position and the aircraft sunk four minutes after landing. Crew: M. R. Alderson, pilot, Neil Richardson, copilot.", "Crash cause": "Weather"}, {"Date": "1/24/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6314", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Tangmere - Tangmere", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tangmere AFB West Sussex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to RAF Tangmere, the twin engine aircraft was hit by a flare and crashed in flames on runway. While all three crew were injured, the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "1/27/1939", "Time": "12H 20M 0S", "Aircraft": "Potez 62", "Operator": "Air France", "Registration": "F-ANPJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "City", "Schedule": "Paris \u2013 Cologne \u2013 Berlin", "MSN": "3926/4", "YOM": "1935", "Flight number": "NA", "Crash location": "Cologne North Rhine-Westphalia", "Country": "Germany", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew was performing a flight from Paris to Berlin with an intermediate stop in Cologne. While on approach to Cologne-Butzweilerhof Airport, pilot encountered poor visibility. Some 7 km short of runway, the aircraft christened 'Courlis' hit a chimney and crashed in flames in Knapsack, in the suburb of Cologne. All six occupants were killed. Crew: Andr\u00e9 Tellet-Larente, pilot, Jean-Pierre Pain, copilot, Ren\u00e9 Harrault, radio navigator, Guy Baranton, engineer. Passengers: Raoul Civet, journalist, Mr. Buchalowski.", "Crash cause": "Human factor"}, {"Date": "2/27/1939", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Kingston Flying Club", "Registration": "CF-CEI", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Kingston - Kingston", "MSN": "749", "YOM": "1928", "Flight number": "NA", "Crash location": "Kingston Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Kingston Airfield, the single engine aircraft was too low, hit tree tops and crashed upside down. Both occupants were injured while the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "3/26/1939", "Time": "2H 48M 0S", "Aircraft": "Douglas DC-2", "Operator": "Braniff Airways", "Registration": "NC13727", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Chicago \u2013 Kansas City \u2013 Wichita \u2013 Oklahoma City \u2013 Dallas", "MSN": "1253", "YOM": "1934", "Flight number": "NA", "Crash location": "Oklahoma City Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "9", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "Shortly after take off, in initial climb, the left engine exploded. Crew attempted to return but during last turn, while flying at 80 knots, the left wing stalled and hit the ground. Aircraft crashed in flames 600 metres from runway threshold. Eight occupants were killed. Crew: Claude H. Seaton, pilot, Malcolm Wallace, copilot, Louise Zarr, stewardess.", "Crash cause": "Technical failure"}, {"Date": "4/4/1939", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4628", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "South Cerney AFB - South Cerney AFB", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "South Cerney AFB Gloucestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a solo training flight. Landing was hard and the aircraft bounced several times, so the pilot decided to abandon the landing and attempted to take off. After departure, during initial climb, the twin engine aircraft stalled, hit a hedge and trees before coming to rest in bushes located one mile from the air base. While the aircraft was damaged beyond repair, the pilot was slightly injured. Crew: Sergeant T. H. Nicholls, pilot.", "Crash cause": "Unknown"}, {"Date": "4/12/1939", "Time": "NA", "Aircraft": "Junkers W.34", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "NA", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2607", "YOM": "1929", "Flight number": "NA", "Crash location": "Villavicencio Meta", "Country": "Colombia", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The single engine aircraft christened 'Vanguardia' crashed on landing for unknown reason at Villavicencio-La Vanguardia Airport. Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "4/15/1939", "Time": "NA", "Aircraft": "Fokker F8", "Operator": "Venezuelan Government", "Registration": "YV-AFO", "Flight phase": "Landing (descent or approach)", "Flight type": "Government", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "5041", "YOM": "1928", "Flight number": "NA", "Crash location": "Uruy\u00e9n Bol\u00edvar", "Country": "Venezuela", "Region": "South America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a search flight following the abduction of Captain Cardona Puig by local Indians. Pilot landed with a tail wind and was unable to stop the aircraft on the remaining distance. The aircraft overrun and came to rest in flames in a ditch. The fire was quickly extinguished, all four occupants were uninjured while the aircraft was damaged beyond repair. It was recovered in 2001 and ferried to The Netherlands by the Aviadome Musuem.", "Crash cause": "Weather"}, {"Date": "4/22/1939", "Time": "11H 0M 0S", "Aircraft": "Bloch MB.210", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "152", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Angers - Tours", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tours-Par\u00e7ay-Meslay Indre-et-Loire", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a special flight from Angers on behalf of the Territory Aerial Defence (DAT - D\u00e9fense A\u00e9rienne du Territoire). A total of four Bloch MB.210 was flying together, making a 'Diamond' formation. While approaching the Tours-Par\u00e7ay-Meslay Airport, the aircraft positioned on the left side of the 'Diamond' left the formation to the left while the aircraft positioned on the right side of the 'Diamond' left the formation to the right. Suddenly, both aircraft flying one behind the other collided. Both aircraft went out of control, crashed in an open field and were destroyed. All nine crew members on both aircraft were killed. Crew aboard 152: Sergeant Paul Bredela, Warrant Officer Gaston Fran\u00e7ois, Sergeant Girard, Corporal-Chief G\u00e9n\u00e9bault, Warrant Officer Lagarce. Second aircraft's crew (registration unconfirmed): Lieutenant-Colonel Louis Mailloux, Lieutenant Henry de Rilly d'Oysonville, Warrant Officer Gonin, Sergeant Robert Call\u00e8de.", "Crash cause": "Human factor"}, {"Date": "4/22/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6185", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bircham Newton - Bircham Newton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bircham Newton AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a night training flight. On final approach, while flying too low, the aircraft hit tree tops and crashed in a field short of runway threshold. Both pilots were injured and the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "5/9/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6210", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bircham Newton AFB - Bircham Newton AFB", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bircham Newton AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was performing a training flight with four other Avro Anson. At the end of the exercise, crew was returning to his base when the propeller blades of an Avro flying in a upper position from the K6210 hit its tail. Out of control, K6210 went into a spin and crashed in a field located 1,5 km from the airport. All three crew were killed while all other aircraft landed safely.", "Crash cause": "Human factor"}, {"Date": "5/12/1939", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Private Australian", "Registration": "VH-UPY", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Roma - Roma", "MSN": "550", "YOM": "1928", "Flight number": "NA", "Crash location": "Roma Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was performing a training flight when he lost control of the aircraft that crashed near the airport. While the instructor was killed, the student pilot was injured. It is believed that the pilot who was not an instructor was giving flight instruction. Also, the flight was considered as unauthorized/illegal.", "Crash cause": "Human factor"}, {"Date": "8/1/1939", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "N6297", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Lossiemouth - Lossiemouth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lossiemouth AFB Moray (Elginshire)", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was engaged in a training exercise. While flying off the RAF Lossiemouth, the twin engine aircraft collided in unknown circumstances with another RAF Airspeed AS.10 Oxford registered N6329 and carrying one pilot. Both aircraft crashed into the sea and were lost. All three crewmen were killed. Crew (15 SFTS): F/O Eric Wilson Yates, P/O Douglas Henry Kitson Alwood.", "Crash cause": "Human factor"}, {"Date": "9/7/1939", "Time": "NA", "Aircraft": "Handley Page H.P.54 Harrow", "Operator": "Royal Air Force - RAF", "Registration": "K7003", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "West Freugh AFB Wigtownshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Aircraft was approaching West Freugh AFB when it hit the ground, lost its undercarriage and came to rest in a field. No casualties.", "Crash cause": "Human factor"}, {"Date": "9/8/1939", "Time": "NA", "Aircraft": "Handley Page H.P.54 Harrow", "Operator": "Royal Air Force - RAF", "Registration": "K6959", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Penrhos AFB Gwynedd", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after take off from RAF Penrhos AFB, Wales, due to an engine failure. Crew fate unknown.", "Crash cause": "Technical failure"}, {"Date": "10/31/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "N5177", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Weston-on-the-Green Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a training mission on behalf of the 108th Squadron. In flight, the twin engine aircraft collided with another RAF Avro 652 Anson I registered N5158 and carrying one pilot. Both aircraft crashed in a prairie located 6 km southwest of Bicester, Oxfordshire. All three crew on both aircraft were killed. Crew (108th Squadron): F/O J. D. Cody, pilot, F/O R. E. Cox, pilot.", "Crash cause": "Human factor"}, {"Date": "11/2/1939", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Norwegian Air Force - Kongelige Norske Luftforsvaret", "Registration": "123", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "145", "YOM": "1925", "Flight number": "NA", "Crash location": "Trondheim S\u00f8r-Tr\u00f8ndelag", "Country": "Norway", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a solo training flight when he lost control of the aircraft that crashed in the Trondheim harbor. The pilot was injured and the aircraft was lost.", "Crash cause": "Unknown"}, {"Date": "11/6/1939", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "K7185", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Abingdon - Abingdon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abingdon AFB Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a night training exercise on behalf of the 166th Squadron. The crew missed the runway and the aircraft lost its undercarriage while landing next to the runway. Both pilots escaped unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "11/11/1939", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "N1364", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Villeneuve-les-Vertus - Villeneuve-les-Vertus", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bouxurulles Vosges", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was returning to his base in Villeneuve-les-Vertus following a leaflets dropping mission over Frankfurt. En route, the aircraft went out of control and crashed in a field located in Bouxurulles, 6 km southwest of Charmes. All five crew were killed. Crew: S/L J. A. Bartlett, pilot, Sgt R. Walsh, pilot, AC1 H. Laybourne, wireless operator and air gunner, AC1 H. Taylor, wireless operator and air gunner, Sgt C. Thomas, observer.", "Crash cause": "Unknown"}, {"Date": "11/15/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "N5196", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cranfield - Cranfield", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cranfield Bedfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a solo night training exercise. Shortly after lift off, the twin engine aircraft stalled and crashed in an open field past the runway end. The pilot was slightly injured while the aircraft was damaged beyond repair. Crew (35th Squadron): F/L G. R. Boles.", "Crash cause": "Technical failure"}, {"Date": "11/17/1939", "Time": "13H 45M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Bad W\u00f6rishofen - Bad W\u00f6rishofen", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Untertilliach Tyrol", "Country": "Austria", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route, while cruising in poor weather conditions, crew decided to bail out. The twin engine aircraft hit the slope of Mt Mitterkar located near Untertilliach. A crew was rescued while all three others were killed.", "Crash cause": "Unknown"}, {"Date": "11/20/1939", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "British Airways", "Registration": "G-AFFM", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "75", "YOM": "1938", "Flight number": "NA", "Crash location": "Gosport Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a training flight from Heston when flying in the region of Gosport, the twin engine aircraft collided with the moorings of a balloon. The aircraft went out of control and crashed in a huge explosion. Both pilots were killed. Crew: Arthur George Nicholson, pilot, Arthur Edward Eady, radio operator.", "Crash cause": "Human factor"}, {"Date": "11/22/1939", "Time": "NA", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "5J+FA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Torhout West Flanders", "Country": "Belgium", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The Heinkel He.111 was performing a sortie from the Quakenbr\u00fcck airbase in Germany. While flying over Belgium, the crew was attacked by few Curtiss Hawk 75 from the French First Squadron of the Fighter Group 1/4 based in Norrent-Fontes. Crew attempted to make an emergency landing but the aircraft crashed near Torhout. While the captain was injured, all three other crew were killed.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "12/13/1939", "Time": "NA", "Aircraft": "Vickers 290 Wellington I", "Operator": "Royal Air Force - RAF", "Registration": "R2699", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Methwold - Methwold", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Methwold AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to RAF Methwold, the aircraft went out of control and crashed in flames short of runway. Both crew were killed. Crew (214th Squadron): P/O W. L. Comer, P/O R. A. Russell-Forbes.", "Crash cause": "Unknown"}, {"Date": "12/17/1939", "Time": "NA", "Aircraft": "Fokker Universal", "Operator": "United Air Transport", "Registration": "G-CAFU", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "404", "YOM": "1926", "Flight number": "NA", "Crash location": "Fort Saint John British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after take off from Fort Saint John-Charly Lake, while on initial climb, the pilot initiated a turn when the seaplane stalled and crashed. The aircraft was lost and the pilot was injured.", "Crash cause": "Unknown"}, {"Date": "12/18/1939", "Time": "NA", "Aircraft": "Vickers 408 Wellington IA", "Operator": "Royal Air Force - RAF", "Registration": "N2940", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Honington - Honington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wilhelmshaven Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "While performing a reconnaissance flight off the German coast, the aircraft was shot down by enemy fire, went out of control and crashed into the sea off Wilhelmshaven. All five crew members were killed. Crew (9th Squadron): P/O Eric Francis Lines, pilot, F/S Alfred Kitto Fearnside, copilot, AC1 Edward Malcolm George Polhill, wireless operator and air gunner, LAC Alex Morrison Dickie, air gunner, AC2 Clifford Walker, air gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "12/21/1939", "Time": "13H 0M 0S", "Aircraft": "Lockheed 14 Super Electra", "Operator": "British Airways", "Registration": "G-AFYU", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Alexandria \u2013 El Salloum \u2013 Valetta \u2013 Croydon", "MSN": "1444", "YOM": "1939", "Flight number": "NA", "Crash location": "Libya All Libya", "Country": "Libya", "Region": "Africa", "Crew on board": "5", "Crew fatalities": "2", "Pax on board": "6", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Less than one hour after his departure from El Salloum Airport, at the border between Egypt and Libya, the pilot sent a mayday message due to unknown technical problems. He was forced to ditch the aircraft off the Libyan coast. The crew of a ship was quickly on the scene and was able to rescue six occupants, among them the pilot, while five other occupants were killed.", "Crash cause": "Technical failure"}, {"Date": "1/25/1940", "Time": "NA", "Aircraft": "Junkers W.34", "Operator": "Canadian Airways", "Registration": "CF-ARI", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2732", "YOM": "24", "Flight number": "NA", "Crash location": "Fort McMurray Alberta", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from Fort McMurray, while in initial climb, the engine failed. The aircraft stalled and crashed in a wooded area located some 5 miles south of Waterways. The aircraft was destroyed and the pilot William Beaman Donoghue was killed.", "Crash cause": "Technical failure"}, {"Date": "2/3/1940", "Time": "9H 30M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "1H+HL", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Schleswig - Schleswig", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Amble Northumberland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While cruising off the British coast on a reconnaissance mission, the twin engine aircraft was shot down by the crew of a RAF Hawker Hurricane and crashed into the Druridge Bay located south of Amble, Northumberland. All four crew members were killed. Crew (26th Squadron): Uffz Walter Remishke, pilot, Lt Luther von Bruning, observer, Fw Herbert Panzlaff, wireless operator, Fw Herbert Peterson, engineer.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "2/11/1940", "Time": "4H 15M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "N7294", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Thornaby - Thornaby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Great Ayton North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "During a night training exercise, the pilot did not realize he was flying too low due to poor visibility. The twin engine aircraft hit a hill located in Easby Moor, east of Great Ayton. A crewmen was seriously injured while all three others occupants were killed. Crew (220th Squadron): F/O Tom MacKinlay Parker, pilot, \u2020 Sgt Harold Francis Bleksley, pilot, \u2020 Cpl Norman Rrichard Drury, wireless operator, \u2020 LAC Atholl Barker, air gunner.", "Crash cause": "Human factor"}, {"Date": "2/13/1940", "Time": "NA", "Aircraft": "Heston Phoenix I", "Operator": "British American Air Services - BAAS", "Registration": "G-AEHJ", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "3-Jan", "YOM": "1936", "Flight number": "NA", "Crash location": "Liverpool-John Lennon (ex Speke) Merseyside", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances into the Mersey River, off Liverpool. Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "2/17/1940", "Time": "NA", "Aircraft": "De Havilland DH.85 Leopard Moth", "Operator": "Private Australian", "Registration": "VH-UUG", "Flight phase": "NA", "Flight type": "Private", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "7110", "YOM": "1935", "Flight number": "NA", "Crash location": "Cunnamulla Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances at Cunnamulla Airport. Was owned by G. W. Young.", "Crash cause": "Unknown"}, {"Date": "2/20/1940", "Time": "NA", "Aircraft": "Ford 5", "Operator": "TACA International Airlines - Transportes A\u00e9reos Centro Americanos", "Registration": "AN-AAT", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "5-AT-007", "YOM": "1928", "Flight number": "NA", "Crash location": "Prinzapolka Regi\u00f3n Aut\u00f3noma del Atl\u00e1ntico Norte", "Country": "Nicaragua", "Region": "Central America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During a training exercise in the region of Prinzapolka, crew lost control of the aircraft that crashed in unknown circumstances. Both pilots were injured while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "2/27/1940", "Time": "NA", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Schleswig - Schleswig", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coquet Island Northumberland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a reconnaissance mission on behalf of the 26th Squadron based in Schleswig. While approaching the British coast, the twin engine aircraft was shot down and crashed some ten miles off the Coquet Island, killing all five occupants.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "3/28/1940", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "N1351", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Driffield - Driffield", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Gerolstein Rhineland-Palatinate", "Country": "Germany", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was performing a reconnaissance mission over Germany and left RAF Driffield at 2240LT on March 27. While flying over the region of Pr\u00fcm, the aircraft was hit by Flak and crashed in an open field located in Gerolstein, some 18 km northeast of Pr\u00fcm. A crew member was killed while all four other occupants were taken POW. Crew (77th Squadron): F/O J. B. J. Boardman, P/O G. L. Norman, \u2020 Sgt W. R. Taylor, LAC J. Masters, AC1 W. Cowle.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "4/5/1940", "Time": "23H 45M 0S", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "K9040", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Dishforth - Dishforth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Milford Haven Pembrokeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft left RAF Dishforth in the evening on a night training exercise and was lost without trace. It is believed it crashed into the Bristol Channel, some 10 miles off Milford Haven. No trace of the aircraft nor the crew was ever found. Crew (51st Squadron): F/O D. E. Gould, F/L F. G. Dickson, Sgt R. G. Bruce, LAC E. Benyon, AC1 J. Boyd.", "Crash cause": "Unknown"}, {"Date": "4/12/1940", "Time": "NA", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "P9269", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Marham - Marham", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Norway All Norway", "Country": "Norway", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The aircraft left RAF Marham at 1215LT on a reconnaissance mission to search enemy shipping off the Norwegian coast. The bomber was shot down by enemy fire and crashed into the North Sea. All six occupants were killed. Crew (38th Squadron): S/L M. Nolan, F/O D. C. Maybury, Sgt F. F. Berfick, LAC M. F. Bedford, AC2 G. Flynn, P/O G. W. Brundish.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "4/14/1940", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "1Z+AS", "Flight phase": "Flight", "Flight type": "Supply", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Oslo - Oslo", "MSN": "6546", "YOM": "NA", "Flight number": "NA", "Crash location": "V\u00e5lebu Oppland", "Country": "Norway", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left Oslo-Fornebu Airport at 1700LT on a para dropping mission. In the region of Domb\u00e5s, after dropping its paratroopers, the aircraft was shot down by anti-aircraft battery and caught fire. The captain completed an emergency landing in a prairie and the aircraft slid for several yards before coming to rest in flames. All four crew members were unhurt while the aircraft was destroyed. Crew (6. Staffel II/KGzbV 1): Uffz Claus B\u00f6sch, Uffz Otto Schilling, Uffz Paul Kafzik, Uffz Walter Weyer. Source: http://ktsorens.tihlde.org/flyvrak/valebu.html", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "4/16/1940", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "1Z+IY", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Aalborg \u2013 Stavanger", "MSN": "6306", "YOM": "NA", "Flight number": "NA", "Crash location": "Birkeland Aust-Agder", "Country": "Norway", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was performing a cargo flight from Aalborg to Stavanger-Sola Airport with a load of oil barrels on board. While cruising in poor weather conditions, the three engine aircraft hit a mountain slope located near Birkeland and was destroyed in impact. All four crew members were killed. Crew (14. Staffel. IV./KGr.zbV l): Fldw Bernhard Kalth\u00f6ner, pilot, GfrLudwig Landstorfer, Uffz Karl Opitz, Uffz Peter Richter.", "Crash cause": "Human factor"}, {"Date": "5/10/1940", "Time": "5H 0M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "KS+DS", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Landsberg - Landsberg", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Charvieu-Chavagneux Is\u00e8re", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a reconnaissance flight in the area of Lyon, France. While cruising by night, the twin engine aircraft was hit by Flak. Crew decided to abandon the aircraft and bailed out. Without pilot, the aircraft dove into the ground and crashed in an open field located in Charvieu-Chavagneux. All crew members survived but were taken POW.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/16/1940", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "678", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "20", "YOM": "1938", "Flight number": "NA", "Crash location": "Grafton Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Crashed in unknown circumstances, killing all three occupants.", "Crash cause": "Unknown"}, {"Date": "5/17/1940", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "South African Air Force", "Registration": "258", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "2055", "YOM": "1931", "Flight number": "NA", "Crash location": "South Africa All South Africa", "Country": "South Africa", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in South Africa. The single engine aircraft was christened 'Cutty Sark'.", "Crash cause": "Unknown"}, {"Date": "5/19/1940", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "N1388", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Driffield - Driffield", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Sea All World", "Country": "World", "Region": "World", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left RAF Driffield at 2005LT on a bombing mission to Hanover. At 2135LT, while flying at 9,000 feet and some 60 miles off the Dutch coast, the Whitley was attacked by a Me.110 and damaged. In turn, the enemy aircraft was claimed destroyed by AC1 Parkes. Despite a painful foot wound, F/L Raphael ditched the bomber and the crew clambered into the dinghy. Their plight was seen by F/L Crockett, who happened to be in the area at the time, and he was able to direct a Royal Navy destroyer to the scene. After four hours afloat, the crew were rescued and take into Yarmouth. Crew (77th Squadron): F/L G. L. Raphael, P/O R. P. Payne, Sgt Prescott, LAC Storey, AC1 Parkes. Source: W. R. Chorley.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/23/1940", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "SABENA - Soci\u00e9t\u00e9 Anonyme Belge d'Exploitation de la Navigation A\u00e9rienne", "Registration": "OO-AUI", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2094", "YOM": "1938", "Flight number": "NA", "Crash location": "Arques Pas-de-Calais", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "2", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft was performing a flight from Brussels to the British Isles. While overflying the region of Merville, the aircraft was hot by the German Flak. The crew attempted to make an emergency landing but the aircraft eventually crashed in a field located near Arques and was destroyed. The pilot and the navigator were killed while both other crew members and both passengers were taken POW. Crew: Sgt Raymond Chartier, pilot, \u2020 Capt John M.H. Hoare, navigator, \u2020 P/O Benson Freeman, Pier Vrebos, engineer. Source: http://luchtvaartgeschiedenis.be/", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/26/1940", "Time": "16H 18M 0S", "Aircraft": "Junkers JU.52", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Supply", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "5636", "YOM": "NA", "Flight number": "NA", "Crash location": "Storfjellet (Saltdal) Nordland", "Country": "Norway", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "12", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While cruising east of Nordnes, the three engine aircraft was shot down by the pilot of a RAF Gloster Gladiator and crashed in the Storfjellet mountain range. Eleven paratroopers were able to bail out before the aircraft crashed. All three crew members and one passenger were killed. Crew (Transportstaffel 3./KGr zbV 106 ): Lt Robert Eid, pilot, Uffz Horst Sauer, radio navigator, Fw Willy Hellmann, engineer.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/29/1940", "Time": "18H 0M 0S", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "N5227", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Detling - Detling", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Sea All World", "Country": "World", "Region": "World", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The twin engine aircraft left RAF Detling at 1535. While cruising along the Dutch coast near a German destroyer (T61), the aircraft went out of control and crashed into the North Sea. All four crewmen were killed and only one dead body was found. Crew (500th Squadron). P/O Irvine S. Wheelwright, Sgt Herbert W. Johnson, LAC Frank H. Giles, F/S Russell G. T. Soper.", "Crash cause": "Unknown"}, {"Date": "6/6/1940", "Time": "NA", "Aircraft": "Vickers 408 Wellington IA", "Operator": "Royal Air Force - RAF", "Registration": "P9232", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Honington - Honington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Simonshaven South Holland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew left RAF Honington at 2125LT on June 5 on a bombing mission to Duisburg. Shortly after entering the Dutch airspace, the aircraft was fired by the German Flak. The captain ordered the crew to bail out and later tried to make an emergency landing when the aircraft exploded in mid-air, disintegrated and crashed in a field located in Simonshaven, southwest of Rotterdam. Four crew were taken POW while both other crew were killed. Crew: S/L George Ernest Peacock, pilot, \u2020 P/O Bertram Arthur James, pilot, Sgt Ronald Charles Hargrave, navigator and observer, \u2020 Sgt A. K. Griffiths, wireless operator and air gunner, P/O Sedgwick Whiteley Webster, air gunner, LAC C. Murton, air gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "6/21/1940", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6272", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Prestwick Ayrshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "On approach to Prestwick Airport, the twin engine aircraft stalled and crashed few hundred yards short of runway. All four crew members were killed.", "Crash cause": "Human factor"}, {"Date": "6/27/1940", "Time": "NA", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "5J+EK", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Wittmundhafen - Wittmundhafen", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "NA", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While approaching the British coast north of Sunderland, the twin engine aircraft was shot down by enemy fire and crashed into the sea. All four crew were rescued and taken POW. Crew (2. Staffel I/KG 4): Fw Siegfried Gessert, pilot, Uffz Karl-Heinz Beck, Uffz Willhelm Dieter, Gfr Horst Filihowski.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "7/11/1940", "Time": "18H 0M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ligny-Thilloy Pas-de-Calais", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "On the return leg following a mission over Portsmouth, the twin engine aircraft was shot down by the pilots of RAF Hurricanes and crashed in flames in a field located in Ligny-Thilloy, south of Bapaume. All four crew members were killed. Crew: Lt Helmut Grunwald, Uffz Fridolin Hogg, Obergefr Herbert K\u00f6ster, Uffz G\u00fcnther Mende.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "7/16/1940", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4609", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Puddington Cheshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight when an engine failed en route. The pilot attempted to make an emergency landing in a field located in Puddington. Both crew were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "7/31/1940", "Time": "NA", "Aircraft": "Douglas B-18 Bolo", "Operator": "United States Army Air Corps - USAAC", "Registration": "36-319", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1707", "YOM": "NA", "Flight number": "NA", "Crash location": "San Carlos Panam\u00e1", "Country": "Panama", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the crew encountered an unexpected situation, was forced to abandon the aircraft and bailed out. The aircraft crashed in a pasture and was destroyed. No casualties.", "Crash cause": "Unknown"}, {"Date": "8/2/1940", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "N7314", "Flight phase": "Flight", "Flight type": "Supply", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Maltby South Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While on a supply mission from RAF Thornaby, the crew did not realize he was flying too low due to poor visibility. The twin engine aircraft hit power cables and crashed in flames in an open field. A crew member survived while all three others were killed. Crew (220th Squadron.): F/L Harold Wentworth Aylward Sheahan, pilot, \u2020 P/O Charles James Allsup, copilot, \u2020 Sgt Sydney Smith, wireless operator, \u2020 Sgt Eric Bale Butler.", "Crash cause": "Human factor"}, {"Date": "8/15/1940", "Time": "12H 0M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "1H+?S", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Stavanger - Stavanger", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Northumberland Northumberland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While approaching the British coast, the aircraft was shot down by the pilot of a RAF fighter and crashed into the sea off Northumberland. All four crew members were killed. Crew (8. Staffel III/KG 26): Oblt Hans von L\u00fcpke, pilot, Ofw Karl Hennicke, observer, Uffz Max Knauer, wireless operator, Uffz Karl Schlick, mechanic.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "8/21/1940", "Time": "NA", "Aircraft": "Vickers 290 Wellington I", "Operator": "Royal Air Force - RAF", "Registration": "L4335", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bassingbourn AFB Cambridgeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reasons. No casualties.", "Crash cause": "Unknown"}, {"Date": "9/9/1940", "Time": "NA", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "P9245", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Mildenhall - Mildenhall", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Clacton-on-Sea Essex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft left RAF Mildenhall at 0014LT on a bombing mission to Boulogne, France. While flying off Clacton-on-Sea, the bomber crashed into the sea in unknown circumstances. A crew member was able to swim ashore while all five other occupants were drowned. Crew (149th Squadron): S/L L. V. Andrews, \u2020 P/O C. W. Parish, Sgt J. L. Brown, \u2020 Sgt N. J. Bull, \u2020 Sgt D. M. Payne, \u2020 P/O W. G. Searles. \u2020", "Crash cause": "Unknown"}, {"Date": "9/14/1940", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "L7976", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Heliopolis Cairo", "Country": "Egypt", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on take off for unknown reason. No casualties.", "Crash cause": "Unknown"}, {"Date": "9/24/1940", "Time": "20H 59M 0S", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "N1470", "Flight phase": "Takeoff (climb)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Linton-on-Ouse - Linton-on-Ouse", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Linton-on-Ouse AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after lift off, while climbing, the aircraft stalled and crashed in flames 800 metres past the runway end. Three crew members were killed as two others were seriously injured. Crew (58th Squadron): Sgt Herbert Cornish, pilot, \u2020 F/O Arnold Irwin Watterson, pilot, \u2020 Sgt Leslie Hambleton Taylor, observer, \u2020 Sgt R. Fowlie, wireless operator, Sgt John William Chamberlain, air gunner.", "Crash cause": "Technical failure"}, {"Date": "9/25/1940", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "L7071", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Eaton Constantine Shropshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot, sole on board, was performing a training flight on behalf of the 10th OTU. En route, the twin engine aircraft hit a hill and crashed near Eaton Constantine. The pilot was uninjured while the aircraft was damaged beyond repair. Crew (10th OTU): Sgt Hilton Jones.", "Crash cause": "Human factor"}, {"Date": "10/3/1940", "Time": "NA", "Aircraft": "Fairchild 71", "Operator": "Canadian Airways", "Registration": "CF-AUJ", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "50", "YOM": "1935", "Flight number": "NA", "Crash location": "Sioux Lookout Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On take off from Lost Bay, near Sioux Lookout, the single engine seaplane hit a tree trunk floating on water, overturned and sunk. No casualties.", "Crash cause": "Other causes"}, {"Date": "10/6/1940", "Time": "NA", "Aircraft": "De Havilland DH.91 Albatross", "Operator": "British Overseas Airways Corporation - BOAC", "Registration": "G-AFDL", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Croydon \u2013 Whitchurch", "MSN": "6805", "YOM": "1939", "Flight number": "NA", "Crash location": "Pucklechurch Gloucestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "7", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft was performing a regular schedule flight to the RAF Whitchurch, south of Bristol. While on approach, the crew encountered engine problems and attempted to make an emergency landing in a field located in Pucklechurch, northeast of the airport. Just prior touch down, the four engine aircraft hit a house and crashed in a field. All twelve occupants were uninjured while the aircraft christened 'Fingal' was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "10/10/1940", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4659", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Habbaniyah - Habbaniyah", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Habbaniyah AFB Al-Anbar (<U+0627><U+0644><U+0623><U+0646><U+0628><U+0627><U+0631>)", "Country": "Iraq", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a training flight on behalf of 4th Pilot Army School. Shortly after touchdown, a tyre burst. The aircraft swerved, veered off runway and came to rest. Both occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "10/11/1940", "Time": "NA", "Aircraft": "Dewoitine D.338", "Operator": "Air France", "Registration": "F-AQBJ", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Niamey - Cotonou", "MSN": "10", "YOM": "1938", "Flight number": "NA", "Crash location": "Dadjo Collines", "Country": "Benin", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On a cargo flight from Niamey to Cotonou, the crew encountered poor weather conditions. The three engine aircraft hit a mountain located near Dadjo, south of Carnotville. All three crew members were killed. Crew: Paul Perrichon, pilot, Emile Bossard, radio navigator, Marcel Locqueneux, flight engineer.", "Crash cause": "Weather"}, {"Date": "10/15/1940", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "T4206", "Flight phase": "Landing (descent or approach)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Topcliffe - Topcliffe", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Topcliffe AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The aircraft left RAF Topcliffe at 1740LT on October 14 on a bombing mission over a synthetic oil plant located in Szczecin, Poland. After completing this mission, the crew was returning to his base in the next early morning when, on final approach, the pilot made a sharp turn to line up with runway. Too low, the aircraft hit tree tops, stalled and crashed few yards short of runway threshold. The aircraft was wrecked and a crew member was killed. Crew (77th Squadron): S/L George Roderick Hartwell Black, pilot, \u2020 Sgt Thomas Edward Coogan, pilot, Sgt Boddington, observer, Sgt Garwood, wireless operator, Sgt Woodroffe, air gunner.", "Crash cause": "Human factor"}, {"Date": "10/16/1940", "Time": "21H 45M 0S", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7844", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "East Wretham - East Wretham", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Oosterwolde Friesland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The aircraft left RAF East Wretham at 1850LT on a bombing mission to Kiel. While flying over The Netherlands by night, the aircraft was shot down by a German fighter and crashed in a field located in Oosterwolde, southwest of Groningen. Four crew members were killed while both others were taken POW. Crew (311th Squadron): P/O Bohumil Landa, pilot, \u2020 Sgt Emanuel Novotn\u00fd, copilot, P/O Hubert Jaro\u0161ek, navigator, \u2020 Sgt Karel Klimt, wireless operator and air gunner, \u2020 Sgt Otto Jirs\u00e1k, front gunner, \u2020 Sgt August\u00fdn Karel \u0160est\u00e1k, rear gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "10/17/1940", "Time": "21H 45M 0S", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "N2771", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "East Wretham - East Wretham", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Stanmore Middlesex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was engaged in a bombing mission over Bremen from the RAF East Wretham. On the return trip, heavy damaged by enemy fire, the aircraft collided with the cable of a barrage balloon, went out of control and crashed on a tennis court located in Bentley Priory, near Stanmore. Five crew members were killed while the sixth occupant was seriously injured. Crew (311th Squadron): S/L Jan Vesely, \u2020 P/O Jaroslav Matousek, \u2020 P/O Jaroslav Slaby, \u2020 Sgt Frantisek Zapletal, \u2020 Sgt Josef Albrecht, \u2020 P/O Frantisek Trular.", "Crash cause": "Other causes"}, {"Date": "10/20/1940", "Time": "NA", "Aircraft": "Vickers 290 Wellington I", "Operator": "Royal Air Force - RAF", "Registration": "L4220", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Hampstead Norris - Hampstead Norris", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Hampstead Norris AFB Berkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crash landed for unknown reasons. No casualties. Crew from the 15th OTU.", "Crash cause": "Unknown"}, {"Date": "10/22/1940", "Time": "NA", "Aircraft": "Lockheed 10 Electra", "Operator": "Aeroput", "Registration": "YU-SBE", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Belgrade \u2013 Osijek \u2013 Zagreb", "MSN": "1137", "YOM": "1937", "Flight number": "NA", "Crash location": "Osijek Baranja", "Country": "Croatia", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "9", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "On final approach to Osijek Airport, the twin engine aircraft crashed in unknown circumstances in Borovo, some 10 km east of the airport. All three crew members and four passengers were killed.", "Crash cause": "Unknown"}, {"Date": "10/29/1940", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Deutsche Lufthansa", "Registration": "D-AAIH", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1973", "YOM": "1937", "Flight number": "NA", "Crash location": "Berlin-Tempelhof Berlin", "Country": "Germany", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "12", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to Berlin-Tempelhof Airport, the pilots were bothered by the low visibility caused by poor weather conditions. The twin engine aircraft hit the ground short of runway and came to rest. Both pilots were killed while all other occupants were injured.", "Crash cause": "Weather"}, {"Date": "11/4/1940", "Time": "6H 50M 0S", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "T4205", "Flight phase": "Landing (descent or approach)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Topcliffe - Topcliffe", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Topcliffe AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left RAF Topcliffe at 1632LT on November 3 on a bombing mission to Mannheim, Germany. On the return leg, while on final approach to RAF Topcliffe, the aircraft ran out of fuel, crash landed, veered off runway and came to rest in flames. All five crew members were injured and the aircraft was destroyed by a post crash fire. Crew (77th Squadron): Sgt N. C. Bizley, pilot, P/O Leonard Edward Pearson, pilot, Sgt Sewell, observer, Sgt James William Middleton, wireless operator and air gunner, Sgt Engel, wireless operator and air gunner.", "Crash cause": "Technical failure"}, {"Date": "11/8/1940", "Time": "NA", "Aircraft": "De Havilland DH.90 Dragonfly", "Operator": "Shell-Mex Argentina", "Registration": "LV-KAB", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "7563", "YOM": "1937", "Flight number": "NA", "Crash location": "Rio de Janeiro Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The twin engine aircraft was approaching Rio de Janeiro-Santos Dumont Airport when it collided at a height of 1,500 feet with a Junkers JU.52 of VASP. Registered PP-SPF, the three engine aircraft was en route to Sao Paulo with 18 people on board. After the collision, both aircraft crashed into the Botafogo Bay, killing all 19 occupants.", "Crash cause": "Human factor"}, {"Date": "12/4/1940", "Time": "17H 48M 0S", "Aircraft": "Douglas DC-3", "Operator": "United Airlines", "Registration": "NC25678", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "New York-La Guardia \u2013 Philadelphia \u2013 Allentown \u2013 Akron \u2013 Cleveland \u2013 Chicago", "MSN": "2175", "YOM": "1940", "Flight number": "NA", "Crash location": "Chicago-Midway Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "13", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 10, "Circumstances": "On final approach to Chicago-Midway Airport, at an altitude of 160 feet, the aircraft stalled and crashed short of runway. All three crew members and seven passengers were killed. Crew: Philip Cramer Scott, pilot, George Sumner Young, copilot, Florence Little, stewardess.", "Crash cause": "Human factor"}, {"Date": "12/9/1940", "Time": "NA", "Aircraft": "Grumman G-21A Goose", "Operator": "United States Army Air Corps - USAAC", "Registration": "38-577", "Flight phase": "NA", "Flight type": "Military", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "1043", "YOM": "1939", "Flight number": "NA", "Crash location": "Lakeport California", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances into the Clear Lake, off Lakeport, and sunk. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "12/21/1940", "Time": "NA", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7865", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Sidi Barrani Matruh", "Country": "Egypt", "Region": "Africa", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a flight to Berka when an engine failed en route, forcing the pilot to reduce his altitude and to attempt an emergency landing. The aircraft crash landed and came to rest in flames in a desert area located 30 miles southeast of Sidi Barrani. The aircraft was wrecked while all crew members were rescued.", "Crash cause": "Technical failure"}, {"Date": "12/30/1940", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "R6226", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Ohakea - Ohakea", "MSN": "2690", "YOM": "NA", "Flight number": "NA", "Crash location": "Ashhurst Manawatu-Wanganui (Horizons Regional Council)", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a training mission from Ohakea AFB. En route, while completing a sharp turn at low height, the crew lost control of the aircraft that dove into the ground and crashed on two farmhouses. Both pilots were killed. Crew (3rd SFTS): Sgt Rex Brooke-Taylor, LAC Thomas Alexander.", "Crash cause": "Human factor"}, {"Date": "1/16/1941", "Time": "12H 0M 0S", "Aircraft": "Douglas B-18 Bolo", "Operator": "United States Army Air Corps - USAAC", "Registration": "37-523", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "McChord - Edwards", "MSN": "2523", "YOM": "1937", "Flight number": "NA", "Crash location": "Morton Washington", "Country": "United States of America", "Region": "North America", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The twin engine aircraft was on its way from McChord AFB, Washington, to Edwards AFB, California, to take part to a training exercise at the Muroc Dry Lake. While cruising some 30 miles south of his departure point, the crew encountered poor weather conditions with low visibility due to clouds. The aircraft hit the slope of Mt Deschutes (4,322 feet high) located in the Snoqualmie National Forrest. The wreckage and seven dead bodies were found by two woodsmen on February 3, less than 30 feet from the summit. Crew: 1st Lt Robert M. Krummes, pilot, 2nd Lt Charles Thomas Nielsen, copilot, T/S Hearn A. Davis, flight engineer, 2nd Lt John F. Geis, navigator, Sgt Paul L. Maas, bombardier, Sgt Leo H. Nietling, radio operator. Passenger: 1st Lt Lewis E. MacKay. Source and photos: http://www.historylink.org/index.cfm?DisplayPage=output.cfm&file_id=9923", "Crash cause": "Human factor"}, {"Date": "1/17/1941", "Time": "3H 30M 0S", "Aircraft": "Savoia-Marchetti SM.75", "Operator": "Linee Aeree Transcontinentali Italiane - LATI", "Registration": "I-LUME", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Catania \u2013 Rome", "MSN": "32032", "YOM": "1939", "Flight number": "NA", "Crash location": "Catania Sicily", "Country": "Italy", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "13", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Some thirty minutes after take off from Catania-Fontanarossa Airport, the right engine fired, forcing the crew to return to his departure point. On landing, the three engine aircraft went out of control and collided with two Junkers JU.88. Several explosions occurred and the SM.75C was destroyed by fire. All 17 occupants were able to leave the cabin safely.", "Crash cause": "Technical failure"}, {"Date": "1/23/1941", "Time": "4H 13M 0S", "Aircraft": "Douglas DC-3", "Operator": "Transcontinental %26 Western Air - TWA", "Registration": "NC17315", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Los Angeles \u2013 Phoenix \u2013 El Paso \u2013 Amarillo \u2013 Kansas City \u2013 Saint Louis \u2013 Indianapolis \u2013 Pittsburgh \u2013 New York", "MSN": "1930", "YOM": "1937", "Flight number": "NA", "Crash location": "Saint Louis Missouri", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "11", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach in poor visibility due to fog and snow falls, while flying at 200 feet, pilots missed the runway 01 and applied full power on both engines to go around. After overflying the runway 01 for several yards, the captain made a turn at low height for a landing on runway 04 when the aircraft hit tree tops and crashed. As twelve occupants were injured, one crew member and one passenger were killed. Crew: P. T. W. Scott, pilot, O. J. DioGuardi, copilot, Mary T. Eshbach, stewardess.", "Crash cause": "Human factor"}, {"Date": "2/1/1941", "Time": "12H 0M 0S", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4568", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cranfield Bedfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on take off in unknown circumstances. Both pilots were injured.", "Crash cause": "Unknown"}, {"Date": "3/15/1941", "Time": "12H 0M 0S", "Aircraft": "Lockheed 5 Vega", "Operator": "Compa\u00f1ia Aeronautica Francisco Sarabia SA - CAFSSA", "Registration": "XA-BFP", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "108", "YOM": "1930", "Flight number": "NA", "Crash location": "M\u00e9rida Yucat\u00e1n", "Country": "Mexico", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. No casualties.", "Crash cause": "Unknown"}, {"Date": "3/24/1941", "Time": "14H 5M 0S", "Aircraft": "Saro A.36 Lerwick", "Operator": "Royal Air Force - RAF", "Registration": "L7252", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Pembroke Dock - Pembroke Dock", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Pembroke Dock Pembrokeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight consisting of tests with the Flying Boat Blind Approach System. En route, weather conditions worsened and the crew was forced to ditch the aircraft into the Bristol Channel. Both crew took place in a dinghy and the aircraft sunk 25 minutes later. The crew was later recovered. Crew: S/L Banks, pilot, Eddie E. Briggs, copilot.", "Crash cause": "Unknown"}, {"Date": "3/25/1941", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Royal Air Force - RAF", "Registration": "X9448", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "6263", "YOM": "1934", "Flight number": "NA", "Crash location": "Standish Lancashire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a ferry flight from RAF Sherburn-in-Elmet. En route, he encountered poor weather conditions and was forced to attempt an emergency landing. The aircraft hit a hedge and came to rest in a field. While both occupants were unhurt, the aircraft was later declared as written off.", "Crash cause": "Unknown"}, {"Date": "3/25/1941", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Royal Air Force - RAF", "Registration": "R9551", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "6479", "YOM": "1940", "Flight number": "NA", "Crash location": "Yoxall Staffordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a ferry flight from RAF Hendon. En route, he encountered bad weather conditions and attempted to make an emergency landing. Both pilots were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "3/26/1941", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Royal Air Force - RAF", "Registration": "DP850", "Flight phase": "Flight", "Flight type": "Delivery", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2185", "YOM": "1931", "Flight number": "NA", "Crash location": "Beaconsfield Buckinghamshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was completing a delivery flight to RAF White Waltham. En route, the engine failed, forcing the pilot to attempt an emergency landing. The aircraft was written off.", "Crash cause": "Technical failure"}, {"Date": "3/28/1941", "Time": "NA", "Aircraft": "Lockheed 18 LodeStar", "Operator": "South African Airways -SAA - Suid Afrikaanse Lugdiens - SAL", "Registration": "ZS-AST", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Luanda \u2013 Windhoek \u2013 Cape Town", "MSN": "2034", "YOM": "1940", "Flight number": "NA", "Crash location": "Elands Bay Western Cape", "Country": "South Africa", "Region": "Africa", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "6", "PAX fatalities": "6", "Other fatalities": "0", "Total fatalities": 10, "Circumstances": "While flying in poor weather conditions and low visibility, the crew did not realize his altitude was insufficient. The twin engine aircraft hit a hill near Elands Bay and was destroyed. All 10 occupants were killed, among them three civilians. Crew: Adm Guy W. Hallifax, Col Harold E. Cilliers, Lt Col Gordon P. Shearer, Cpt Fred W. Le Roux. Passengers: Lt J. P. Meyer, Sgt John W. Shelly, Sgt Andries P. Van Wyk, C. P. McMichael, Morris Kaplan, Alexandre Kendierski.", "Crash cause": "Unknown"}, {"Date": "5/18/1941", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7393", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Waddington - Waddington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Perranporth Cornwall", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left RAF Waddington with a scratch crew to carry out an engine test, following recent grounding of the Manchesters. An engine fire developed while over the Bristol Channel, but by skilful airmanship, S/L McIntosh succeeded in a crash-landing at Perranporth airfield, Cornwall. The airframe was later converted for instructional use. Crew (207th Squadron): S/L J. C. McIntosh 7. Source: W. R. Chorley.", "Crash cause": "Technical failure"}, {"Date": "6/19/1941", "Time": "12H 0M 0S", "Aircraft": "Douglas DC-3", "Operator": "Liniile Aeriene Rom\u00e2ne Exploatate cu Statul - LARES", "Registration": "YR-PAF", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bucharest \u2013 Sofia", "MSN": "1986", "YOM": "1937", "Flight number": "NA", "Crash location": "Bucharest Bucure<U+0219>ti", "Country": "Romania", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "15", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On take off, the aircraft went out of control, stalled and crashed. All 18 occupants were rescued while the aircraft was wrecked. The exact circumstances of the occurrence remains unknown.", "Crash cause": "Unknown"}, {"Date": "6/21/1941", "Time": "12H 0M 0S", "Aircraft": "Mitsubishi MC-20", "Operator": "Manchurian Air Lines", "Registration": "M-604", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Japan Sea All World", "Country": "World", "Region": "World", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "15", "PAX fatalities": "15", "Other fatalities": "0", "Total fatalities": 18, "Circumstances": "While performing a scheduled flight between Japan and China, the twin engine aircraft crashed in unknown circumstances into the sea of Japan. All 18 occupants were killed.", "Crash cause": "Unknown"}, {"Date": "6/22/1941", "Time": "1H 55M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7314", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Waddington - Waddington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wollaston Northamptonshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The aircraft left RAF Waddington in the evening of June 21 on a bombing mission over Boulogne. On the return trip, the bomber was mistakenly shot down by the pilot of a RAF Beaufighter and crashed in a field located in Wollaston, east of Northampton. All seven crew members were killed. Crew (207th Squadron): F/O J. D. G. Withers, Sgt A. M. James, Sgt W. Brown, Sgt A. Malone, Sgt S. Veitch, Sgt J. A. Maville, Sgt M. V. Browne.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "6/27/1941", "Time": "NA", "Aircraft": "Junkers W.33", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "69", "YOM": "NA", "Flight number": "NA", "Crash location": "Otrokovice Zl\u00edn Region (Zl\u00ednsk\u00fd kraj)", "Country": "Czech Republic", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While completing a local training flight on behalf of the Aviation School n\u00b0 A/B 113, the single engine aircraft collided with a German Air Force Focke-Wulf Fw.56. Out of control, it dove into the ground and crashed in flames in an open field. Both pilots were killed. Crew: Ludwig Henn, Alfred Neumerkl.", "Crash cause": "Unknown"}, {"Date": "7/28/1941", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "Royal Air Force - RAF", "Registration": "AN534", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2073", "YOM": "1940", "Flight number": "NA", "Crash location": "Wilbarston Northamptonshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "Went out of control and into a dive. Broke in two prior to hit the ground and was totally wrecked. All seven crew members were killed. Ice was suspected. Crew (90th Squadron): F/S Reginald G. Bradley, F/S Hubert C. G. Brook, Sgt Robert Henderson, 1/Lt Laird W. Hendricks, F/S Ronald C. A. Muir, Sgt Philip S. Pugh, Sgt Roy Smith.", "Crash cause": "Technical failure"}, {"Date": "8/3/1941", "Time": "12H 0M 0S", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "N4568", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Sychnant Pass Powys", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While performing a flight within UK, the twin engine aircraft hit a mountain near the Sychnant Pass, Wales. Both pilots were killed.", "Crash cause": "Human factor"}, {"Date": "8/4/1941", "Time": "12H 0M 0S", "Aircraft": "Caudron C.440 Go\u00e9land", "Operator": "Air France", "Registration": "F-AOMR", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "7267/3", "YOM": "1936", "Flight number": "NA", "Crash location": "Salvezines Aude", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While on a cargo flight, the crew did not realize he was flying too low due to bad weather conditions. The aircraft hit a mountain and was destroyed near Salvezines. Both crewmen were killed. Crew: Max Rives, pilot, Jean Joly, radio navigator.", "Crash cause": "Weather"}, {"Date": "8/7/1941", "Time": "12H 0M 0S", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Provincial Air Service of Lands %26 Forests", "Registration": "G-CAOY", "Flight phase": "Takeoff (climb)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Gogama - Sault Sainte Marie", "MSN": "504", "YOM": "1928", "Flight number": "NA", "Crash location": "Gogama Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after take off from a lake located some 24 km of Gogama. The crew was en route to Sault Sainte Marie on a fire fighting mission. The aircraft was destroyed and both occupants were injured.", "Crash cause": "Unknown"}, {"Date": "8/16/1941", "Time": "12H 0M 0S", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "Royal Air Force - RAF", "Registration": "AN523", "Flight phase": "Landing (descent or approach)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2055", "YOM": "1940", "Flight number": "NA", "Crash location": "Plymouth Devon", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While cruising in the region of Brest at an altitude of 32,000 feet, the aircraft was attacked by the pilots of two German fighters. The crew was able to leave the area and attempted a descent to Plymouth Airport. On approach, the aircraft crashed in flames in Roborough and was destroyed. Three crew members were killed while four others were injured. Crew (90th Squadron): Sturmey, Franks, Mulligan, Goldsmith, H. Needle, \u2020 S. Abrose, \u2020 M. Leahy. \u2020", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "9/7/1941", "Time": "12H 0M 0S", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Guinea Airways", "Registration": "VH-ULJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bulolo \u2013 Wau", "MSN": "1074", "YOM": "1929", "Flight number": "NA", "Crash location": "Wau Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Landed hard for unknown reason. No casualties. The aircraft was written off after cracks were found in the rear fuselage spars.", "Crash cause": "Unknown"}, {"Date": "9/13/1941", "Time": "20H 20M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7306", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Coningsby - Coningsby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coningsby AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On take off, the aircraft went unstable, stalled and crashed in flames. While all seven occupants were quickly rescued, the aircraft was destroyed. The crew was engaged in a training exercise. Crew (97th Squadron): Sgt G. H. Hartley, Sgt Appleyard, Sgt J. Canham, Sgt Dean, Sgt Baker, Sgt Mayland, Sgt Gross.", "Crash cause": "Technical failure"}, {"Date": "9/27/1941", "Time": "NA", "Aircraft": "Fokker F8", "Operator": "Finnish Air Force - Suomen Ilmavoimat", "Registration": "FE-1", "Flight phase": "Takeoff (climb)", "Flight type": "Ambulance", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Orip\u00e4\u00e4 - Turku", "MSN": "5046", "YOM": "1928", "Flight number": "NA", "Crash location": "Orip\u00e4\u00e4 Finland Proper", "Country": "Finland", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Orip\u00e4\u00e4 Airport bound for Turku with a crew of three and one wounded soldier on board. Shortly after take off, at least one engine failed. The aircraft stalled and crashed in a wooded area located in Latva, some 5 km of the airport. While the aircraft was destroyed, all three crew members were unhurt and the soldier was later transferred to the hospital.", "Crash cause": "Technical failure"}, {"Date": "9/29/1941", "Time": "NA", "Aircraft": "Tupolev ANT-4 (TB-1 & G-1)", "Operator": "Polyarnaya Aviatsiya", "Registration": "CCCP-N289", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Anadyr \u2013 Snezhnoye", "MSN": "795", "YOM": "1939", "Flight number": "NA", "Crash location": "Snezhnoye Chukotka okrug", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The pilot failed to cope with landing on the river Anadyr near Snezhnoye in 'mirror' conditions. The aircraft crashed into the water and came to rest in a depth of 8-9 meters. All four crew members were killed.", "Crash cause": "Human factor"}, {"Date": "10/10/1941", "Time": "12H 0M 0S", "Aircraft": "Sikorsky S-38", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "Nicol\u00e1s Su\u00e1rez", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "114-15", "YOM": "1930", "Flight number": "NA", "Crash location": "Guayaramer\u00edn Beni", "Country": "Bolivia", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. No casualties. The aircraft did not have any registration but was christened 'Nicol\u00e1s Su\u00e1rez'. Source & photos: http://www.aviacionboliviana.net/civil/aeronaves/sikorsky.htm", "Crash cause": "Unknown"}, {"Date": "10/16/1941", "Time": "12H 0M 0S", "Aircraft": "Saro A.36 Lerwick", "Operator": "Royal Air Force - RAF", "Registration": "L7254", "Flight phase": "Taxiing", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Helensburgh Argyll", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While taxiing in the Bay of Helensburgh, the seaplane hit a rock and was damaged beyond repair. No casualties.", "Crash cause": "Unknown"}, {"Date": "11/2/1941", "Time": "12H 0M 0S", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-2047", "Flight phase": "Flight", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Salt Lake City - McClellan AFB", "MSN": "2047", "YOM": "1940", "Flight number": "NA", "Crash location": "Georgetown California", "Country": "United States of America", "Region": "North America", "Crew on board": "9", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was on his way to McClellan AFB as one of the four engine has to be changed. The departure from Salt Lake City was delayed, awaiting a weather improvement on the east of California. En route, while cruising at an altitude of 18,000 feet, the crew encountered several technical problems with engine, controls, navigation radio and flight instrument. The Captain ordered the crew to bail out and later attempted to make an emergency landing when the aircraft went out of control and dove into the ground before crashing in a wooded area located in the region of Georgetown. The Captain Leo Walker was killed while all eight other crew members were rescued. Source and photos: http://www.ghosttownexplorers.org/aircraft/b17c/01.htm", "Crash cause": "Technical failure"}, {"Date": "11/8/1941", "Time": "16H 0M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7466", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Coningsby - Coningsby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Sea All World", "Country": "World", "Region": "World", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The crew left RAF Coningsby at 1320LT on an air sea rescue operation to search for crews reported missing from the previous nights operations. The aircraft was last seen around 1600LT and disappeared without trace. Crew (97th Squadron): F/L C. F. D. Price, P/O G. H. J. Pickering, Sgt N. J. Weston, F/Sgt C. Stanley, Sgt A. R. A. Dexter, Sgt C. R. Bronson, Sgt F. W. Manners.", "Crash cause": "Unknown"}, {"Date": "11/8/1941", "Time": "12H 0M 0S", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "Royal Air Force - RAF", "Registration": "AN529", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "Shallufa - Shallufa", "MSN": "2065", "YOM": "1940", "Flight number": "NA", "Crash location": "Libya All Libya", "Country": "Libya", "Region": "Africa", "Crew on board": "8", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew left RAF Shallufa that day to bomb all ships parked in the Benghazi harbor. Following a successful mission, the crew was returning to his base when the aircraft run out of fuel. As the engines number one, two and three failed, the captain decided to reduce his altitude and attempted an emergency landing in a desert area located 128 km west of Fort Maddalena. While the aircraft was damaged beyond repair, all eight crew members were unhurt and later rescued by a ground unit. Crew (220th Squadron): Jimmy Stevenson, pilot, Ken Brailsford, pilot, Dick Parnell, Tony Barwood, Tom Gwynn, Ken Waddle, Bill Struthers, Colin Barber.", "Crash cause": "Technical failure"}, {"Date": "11/12/1941", "Time": "13H 3M 0S", "Aircraft": "Potez 662", "Operator": "French Government", "Registration": "F-ARAY", "Flight phase": "Flight", "Flight type": "Government", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Algiers \u2013 Vichy", "MSN": "1", "YOM": "1937", "Flight number": "NA", "Crash location": "Valleraugue Gard", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The four engine aircraft was en route from Algiers to Vichy with a crew of four and three passengers on board. At 1247LT, while cruising in poor weather conditions, the crew informed ATC he wanted to divert to Marseille due to icing conditions. Sixteen minutes later, the aircraft lost altitude, hit tree tops and crashed in a wooded area located on the south slope of Mt Aigoual, near the Minier Pass, north of Villeraugue. The aircraft was destroyed by impact forces and post impact fire. All seven occupants were killed, among them the French General Charles Huntziger, Chief of Ground Forces. Unique example built in 1937, the aircraft was christened 'Plus est en nous'. Crew: Jean Lef\u00e8vre, pilot. Passengers: General Charles Huntziger, Jean Labusqui\u00e8re, Chief of Staff, Captain de Roy\u00e8re.", "Crash cause": "Weather"}, {"Date": "11/14/1941", "Time": "12H 0M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "AM534", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Silloth - Silloth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Silloth AFB Cumbria", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "En route, while performing a training exercise, the twin engine aircraft went out of control and crashed into the Solway Firth, off RAF Silloth. All four crew members were killed. Crew (1st OTU): Sgt George Richard Stookes, Sgt John Wycliffe Watson, Sgt John Alexander Stark, Sgt Frank Prime.", "Crash cause": "Unknown"}, {"Date": "11/16/1941", "Time": "21H 47M 0S", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7873", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Waterbeach - Waterbeach", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Terschelling Friesland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew departed RAF Waterbeach at 1720LT on a bombing mission over Emden. While approaching the Dutch coast, the aircraft was probably shot down by the German Flak and crashed into the North Sea off terschelling. The last message got by the crew was at 2120LT, some 27 minutes before the accident. It was confirmed on December 21 that the aircraft was shot down. Crew (99th Squadron): F/Sgt Thomas Crawford Bentley Patterson, pilot, Sgt Dennis Edward Hall, Sgt Leonard Ronald Townsend, Sgt Ronald Llewellyn Cooke, Sgt Bernard John Dermody, Sgt William Albert McAllen.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "12/11/1941", "Time": "11H 30M 0S", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "T1052", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cranwell AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route, the twin engine aircraft collided in unknown circumstances with a RAF Spitfire registered AD291. The pilot of the Oxford attempted to divert to RAF Cranwell for an emergency landing but the aircraft crashed on final approach at Roxholm. The pilot was killed. Crew: LAC Ernest Aubrey Griffin, pilot.", "Crash cause": "Unknown"}, {"Date": "12/15/1941", "Time": "19H 15M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "NZ2007", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Nelson - Nelson", "MSN": "414-0502", "YOM": "1940", "Flight number": "NA", "Crash location": "Nelson Nelson City Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was engaged in a three hours survey flight within New Zealand. While cruising at low altitude in poor weather conditions and by night, the aircraft hit a mountain slope located in Westhaven Inlet, near Nelson. The wreckage was found seven days later and all four crew members were killed. Crew: P/O Alexander John MacFarlane, pilot, P/O Louis George William Volzke, navigator, Sgt Keith Robertson Jack, wireless operator and air gunner, Sgt Phillip David Harris, wireless operator and air gunner. Photos and more details on: http://www.pacificwrecks.com/aircraft/hudson/NZ2007.html", "Crash cause": "Human factor"}, {"Date": "1/1/1942", "Time": "16H 40M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A16-29", "Flight phase": "Takeoff (climb)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "414-1880", "YOM": "1940", "Flight number": "NA", "Crash location": "Ambon-Pattimura Maluku", "Country": "Indonesia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after take off, while climbing, the aircraft stalled and crashed into the sea few hundred yards off shore. Three crew members were killed while the fourth occupant was injured. Crew (13th Squadron): F/O John Turnbull, pilot, \u2020 F/O Robert Kelvin Allen, \u2020 Sgt Walter John Lay, \u2020 Sgt B. E. Hack.", "Crash cause": "Technical failure"}, {"Date": "1/5/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-2423", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2234", "YOM": "1941", "Flight number": "NA", "Crash location": "McDill AFB (Tampa) Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing at McDill AFB, 13 km south from Tampa. After touchdown, the aircraft veered off runway and came to rest in flames. No casualties.", "Crash cause": "Unknown"}, {"Date": "1/13/1942", "Time": "7H 10M 0S", "Aircraft": "GVF PS-84", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L3438", "Flight phase": "Flight", "Flight type": "Supply", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Morozovski - Morozovski", "MSN": "7 5 15", "YOM": "1941", "Flight number": "NA", "Crash location": "Smelovka Tambov oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew left Morozovski at 0315LT on a supply mission to a site behind the German lines. On the return leg, a fire emerged in the cabin and spread rapidly. All 5 crew members bailed out at a height of some 350 meters (1 of them was killed and 1 seriously injured) while the sole passenger (an Air Force officer) did not manage to bail out and was killed. The aircraft crashed near Smelovka, about 5 km east of Verkhnyaya Tarasovka.", "Crash cause": "Technical failure"}, {"Date": "1/17/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-3064", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2092", "YOM": "1940", "Flight number": "NA", "Crash location": "Malang West Java", "Country": "Indonesia", "Region": "Asia", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft overshoot and crashed in a field past the runway end. All seven crew were slightly injured while the aircraft was written off.", "Crash cause": "Human factor"}, {"Date": "1/19/1942", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A16-145", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Lae \u2013 Rabaul", "MSN": "414-6074", "YOM": "1941", "Flight number": "NA", "Crash location": "Kabu River East New Britain", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While flying at night on a trip from Lae to Rabaul, the twin engine aircraft hit the slope of a mountain located in the region of the Kabu River. No trace of the aircraft nor the crew was found. Crew (24th Squadron): F/Lt Paul Pryde Paterson, F/O James Sinclair McIntyre, Sgt Oliver Frederick George Claxton, LAC James Arthur Wilson.", "Crash cause": "Unknown"}, {"Date": "1/24/1942", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "KNILM - Koninklijke Nederlandse Indies Luchtvaart Maatschappij", "Registration": "PK-AFW", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1982", "YOM": "1937", "Flight number": "NA", "Crash location": "Samarinda East Kalimantan", "Country": "Indonesia", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, while performing a cargo flight, the aircraft was shot down over Borneo by the pilot of a Japanese fighter. The crew was able to reduce his altitude in an attempt to make an emergency landing. The aircraft was damaged beyond repair while all three occupants were rescued.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "1/31/1942", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "T9308", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Great Corby Cumbria", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "En route, the twin engine aircraft went out of control and crashed in flames in an open field. Both crew members were killed.", "Crash cause": "Unknown"}, {"Date": "2/10/1942", "Time": "14H 30M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7478", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Finningley - Finningley", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Finningley AFB South Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight. On approach to RAF Finningley, an engine lost power. The aircraft swung, stalled and hit the ground near Bawtry, south of the airfield. The air gunner was killed, the pilot was injured and the four other crew members were unhurt. Crew (25th ATU): P/O Elwood Raymond Seibold, pilot, Sgt Frederick King, air gunner. \u2020", "Crash cause": "Technical failure"}, {"Date": "2/13/1942", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A4-6", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mallala - Mallala", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mallala South Australia", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew as engaged in a circular training flight in Mallala. On approach, the twin engine aircraft collided with a second RAAF Avro 652 Anson registered A4-31 with two pilots on board that just taken off. Both aircraft went out of control and crashed near the airport. All four crew members were killed. The exact circumstances of the mishap remains unknown. Crew (6th SFTS): LAC Stanley Livingstone McFarlane, LAC Charles Tilley Collett Shopee.", "Crash cause": "Human factor"}, {"Date": "2/15/1942", "Time": "NA", "Aircraft": "Tupolev ANT-9", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L189", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "190", "YOM": "NA", "Flight number": "NA", "Crash location": "Frunze Bishkek City", "Country": "Kyrgyzstan", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Frunze, both engines failed. The crew attempted to make an emergency landing in a field. After touch down, the aircraft hit a drainage ditch and came to rest in a ravine. All occupants survived but the airplane was damaged beyond repair. It appears the Tupolev ANT-9 is a three engine aircraft but this model was a twin engine PS-9 version.", "Crash cause": "Technical failure"}, {"Date": "2/25/1942", "Time": "NA", "Aircraft": "Dornier DO.24", "Operator": "Royal Netherlands Navy - Marineluchtvaartdienst", "Registration": "X-18", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "778", "YOM": "NA", "Flight number": "NA", "Crash location": "Pangalasiang Central Sulawesi", "Country": "Indonesia", "Region": "Asia", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shot down by the pilot of a Japanese fighter and crashed into the sea off Pangalasiang. The aircraft sunk and was lost while all six crew members were rescued.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "2/26/1942", "Time": "NA", "Aircraft": "Junkers W.33", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "BV+CL", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2839", "YOM": "1933", "Flight number": "NA", "Crash location": "Tolga Hedmark", "Country": "Norway", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the crew was forced to attempt an emergency landing for unknown reason. While the aircraft was damaged beyond repair, all three crew members were injured and later rescued by locals. Crew: Mr. Gerber, pilot, Ober. Seget, Ober. Wernter. Source & photos: http://ktsorens.tihlde.org/flyvrak/vingelen.html", "Crash cause": "Unknown"}, {"Date": "3/2/1942", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-5049", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "81", "YOM": "1941", "Flight number": "NA", "Crash location": "Sheenjek River Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was forced to attempt an emergency landing for unknown reason near Sheenjek River. While the single engine aircraft was damaged beyond repair, the crew fate remains unknown.", "Crash cause": "Unknown"}, {"Date": "3/14/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-3079", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2107", "YOM": "1940", "Flight number": "NA", "Crash location": "Daly Waters Northern Territory", "Country": "Australia", "Region": "Oceania", "Crew on board": "8", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route, the crew encountered technical problems and attempted to make an emergency landing. The aircraft came to rest in a field and a crew member was killed while all seven other occupants were uninjured.", "Crash cause": "Technical failure"}, {"Date": "3/14/1942", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7395", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Woolfox Lodge - Woolfox Lodge", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wittering AFB Cambridgeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left RAF Woolfox Lodge at 1930LT on March 13 on a bombing mission to Germany. Following an uneventful mission and while returning to England, an engine failed. The crew decided to abandon the aircraft and bailed out. Out of control, the bomber dove into the ground and crashed in a field located two miles north of RAF Wittering. The aircraft was destroyed while all seven crew members were unhurt. Crew (61st Squadron): P/O John Ralph Hubbard, pilot, Sgt P. C. V. Joslin, P/O Robert Heggie, observer, F/Sgt John George Clelland, wireless operator and air gunner, Sgt Albert Wallace Baker, wireless operator and air gunner, Sgt T. C. Stanley, Sgt P. Jones.", "Crash cause": "Technical failure"}, {"Date": "3/18/1942", "Time": "13H 25M 0S", "Aircraft": "Vickers 290 Wellington I", "Operator": "Royal Air Force - RAF", "Registration": "L4265", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mount Farm - Mount Farm", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mount Farm AFB Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Two pilots and one instructor were performing a training flight on behalf of the fifteenth Army Training School. After rotation, the aircraft encountered problems to gain height. It hit the tail of a parked Lockheed Hudson, stalled and crashed in flames near the runway end. Quickly on scene, SAR teams were able to evacuate a pilot seriously injured while both other occupants were killed.", "Crash cause": "Human factor"}, {"Date": "3/19/1942", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K8743", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Port Albert - Port Albert", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Port Albert Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a circular training mission at Port Albert. The approach was completed by night. After touchdown, the twin engine aircraft was unable to stop within the remaining runway, overrun, lost its undercarriage and came to rest. While the aircraft was damaged beyond repair, both pilots were unhurt.", "Crash cause": "Human factor"}, {"Date": "3/22/1942", "Time": "NA", "Aircraft": "Airspeed AS.6 Envoy", "Operator": "Indian National Airways - INA", "Registration": "VT-AHR", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "57", "YOM": "1936", "Flight number": "NA", "Crash location": "Jaipur Rajasthan", "Country": "India", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances near Jaipur. No casualties.", "Crash cause": "Unknown"}, {"Date": "3/28/1942", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-1128", "Flight phase": "Landing (descent or approach)", "Flight type": "Ferry", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "68", "YOM": "1941", "Flight number": "NA", "Crash location": "Macon Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Macon-Herbert-Smart Airport, the aircraft crashed in unknown circumstances and was destroyed. The crew fate remains unknown. The aircraft was ferried to Macon to get some modifications prior its delivery to the RAF.", "Crash cause": "Unknown"}, {"Date": "3/29/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1431", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "1431", "YOM": "1940", "Flight number": "NA", "Crash location": "Hickam AFB Hawaii", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed into the sea shortly after take off from Hickam Field, Hawaii. Crew fate remains unknown.", "Crash cause": "Unknown"}, {"Date": "4/1/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1398", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1398", "YOM": "1940", "Flight number": "NA", "Crash location": "Hickam AFB Hawaii", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknow circumstances at Hickam Field, Pearl Harbour. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "4/9/1942", "Time": "45M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7427", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Scampton - Scampton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cloppenburg Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew left RAF Scampton at 2215LT on April 8 on a bombing mission to Hamburg, Germany. While overflying Germany by night, the aircraft was apparently shot down by enemy fire and crashed in an open field located northeast of Cloppenburg. Six crew members were killed while the seventh occupant was injured. Claim by Fw Gerhard Goerke 1/NJG3 - West of Lastrup South East of Cloppenburg at 0049LT. Also claimed by Flak of 1/schw Res Flak Abt 603 (unknown type) near Lastrup, Cloppenburg at 0045LT. Crew (83rd Squadron): P/O Jack Heathcote Morphett, pilot, \u2020 P/O Peter Anthony Lovegrove, pilot, F/Sgt Geoffrey Douglas Hutchinson, observer, \u2020 F/Sgt Albert Henry Salter, wireless operator and air gunner, \u2020 Sgt Reginald Stanley Williams, wireless operator and air gunner, \u2020 Sgt George Charles Fisk, air gunner, \u2020 Sgt Charles Dewitt Gellatly, air gunner. \u2020", "Crash cause": "Unknown"}, {"Date": "4/15/1942", "Time": "NA", "Aircraft": "Simmonds Spartan", "Operator": "Private Papuan", "Registration": "VH-UKQ", "Flight phase": "Flight", "Flight type": "Humanitarian", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "5", "YOM": "1929", "Flight number": "NA", "Crash location": "Goroka Eastern Highlands", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The single engine aircraft was engaged in the region of Kaitantu to evacuate wounded people. En route, the pilot encountered technical problems and elected to make an emergency landing in Benabena, near Goroka. All occupants survived while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "4/17/1942", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "W2630", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Newton Stewart - Newton Stewart", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mt Cairnsmore of Fleet Dumfriesshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was engaged in a night training mission around RAF Newton Stewart. En route, the twin engine aircraft hit the east slope of Mt Cairnsmore of Fleet located some 10 km east of Newton Stewart. Two crew members were killed while the third occupant was injured. Crew (1st AOS): Sgt John Charles Hinton Allen, pilot, Sgt Edward Clifford Hirst, wireless operator. Passenger: Mr. W. Paterson (employee of Airwork).", "Crash cause": "Human factor"}, {"Date": "4/18/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1400", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1400", "YOM": "1940", "Flight number": "NA", "Crash location": "Rabaul East New Britain", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "7", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "While flying near Rabaul, the twin engine aircraft was shot down by enemy fire and crashed. Five crew members were killed while two others were rescued and taken POW.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/15/1942", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Netherlands Navy - Marineluchtvaartdienst", "Registration": "AE525", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "414-3880", "YOM": "1941", "Flight number": "NA", "Crash location": "Terschelling Friesland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While performing a maritime patrol flight, the twin engine aircraft went out of control and crashed into the sea off Terschelling. All four crew members were killed. Crew (320th Squadron): F/O J. Stork, 2nd Lt J. M. Mulder, Sgt A. L. Sens, AC1 E. de Weerd.", "Crash cause": "Unknown"}, {"Date": "5/22/1942", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "7U+IK", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Oslo \u2013 Bod\u00f8", "MSN": "2863", "YOM": "NA", "Flight number": "NA", "Crash location": "Bod\u00f8 Nordland", "Country": "Norway", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew departed Oslo-Fornebu Airport at 0655LT bound for Bod\u00f8. While approaching, the three engine aircraft hit the slope of Mt Fugl\u00f8y located some 25 km southwest of Bod\u00f8. All five crew members were killed. Crew (2./KG.zbV.108): Lt Gerhard Kleiner, Obgfr Gerhard Mathes, Uffz Erwin Burchardt, Obgfr Fritz Eilers. Passenger: Fw Friedrich Jurkat. Source & photos: https://ktsorens.tihlde.org/flyvrak/fugloy.html", "Crash cause": "Unknown"}, {"Date": "5/28/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1467", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "1467", "YOM": "1940", "Flight number": "NA", "Crash location": "Lae Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The twin engine aircraft was shot down by enemy fire and crashed into the sea off Lae, killing all seven crew members.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/30/1942", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Netherlands Navy - Marineluchtvaartdienst", "Registration": "AM929", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ameland Island Friesland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was engaged in a night maritime patrol flight when the captain decided to ditch the aircraft off Ameland Island for unknown reason. While the aircraft sunk, all four occupants were rescued.", "Crash cause": "Unknown"}, {"Date": "5/31/1942", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7290", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Scampton - Scampton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "M\u00fclheim an der Ruhr North Rhine-Westphalia", "Country": "Germany", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew left RAF Scampton at 2255LT on May 30 on a bombing mission to Cologne, Germany. While overflying Duisburg by night, the aircraft was shot down by the German Flak and right engine exploded. Five crew members were able to bail out when the aircraft went out of control and crashed in a huge explosion, killing both other occupants. Crew (49th Squadron): P/O Philip Nevil Floyd, pilot, \u2020 Sgt D. E. Randall, Sgt J. R. McK. Valentine, Sgt John Smith, wireless operator and air gunner, \u2020 Sgt F. E. Woodrow, Sgt J. F. Wight, Sgt E. Probert.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "6/1/1942", "Time": "11H 42M 0S", "Aircraft": "Avro 652 Anson", "Operator": "Royal Australian Air Force - RAAF", "Registration": "AW902", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Bundaberg - Bundaberg", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bargara Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While on a training mission from Bundaberg, the twin engine aircraft went out of control and crashed into the sea 1,5 mile off Bargara, Queensland. The aircraft sunk in 32 feet of water and all three crew members were killed. Crew (8th SFTS): F/Sgt Ronald Campbell Davies, pilot, LAC Walter James Regan, LAC Clifford James Lucas.", "Crash cause": "Unknown"}, {"Date": "6/20/1942", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-11851", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "347", "YOM": "1941", "Flight number": "NA", "Crash location": "Davis-Monthan AFB Arizona", "Country": "United States of America", "Region": "North America", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "Crashed in unknown circumstances near Davis Monthan AFB. All eight crew members were killed.", "Crash cause": "Unknown"}, {"Date": "6/24/1942", "Time": "NA", "Aircraft": "Douglas C-49 (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-56621", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Volk Field - Volk Field", "MSN": "1932", "YOM": "1937", "Flight number": "NA", "Crash location": "Volk Field ANGB (Camp Williams) Wisconsin", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While flying in the vicinity of the Volk Field ANGB (Camp Williams) located near Camp Douglas, the C-49 collided with a USAF C-48 registered 42-56611. While the second aircraft was able to land safely, the first went out of control and crashed, killing all three crew members.", "Crash cause": "Human factor"}, {"Date": "6/30/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-9014", "Flight phase": "Landing (descent or approach)", "Flight type": "Humanitarian", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kendari - Batchelor", "MSN": "2486", "YOM": "1941", "Flight number": "NA", "Crash location": "Noonamah Northern Territory", "Country": "Australia", "Region": "Oceania", "Crew on board": "5", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was returning to Batchelor following an evacuation flight from Kendari, Indonesia. After being hit by enemy fire, the crew elected to return to his base in Australia but while flying between Darwin and Batchelor by night, the crew encountered engine problems. The captain was forced to feather the engine number 3 while the engine number 4 failed shortly later. The captain attempted to make an emergency landing when the aircraft nosed down and crashed near Noonamah, north of Batchelor. Three crew members were killed while both others were injured. Crew (19th BG): Cpt Weldon Smith, pilot, Lt Everett Davis, bombardier, Sgt Glover J. Burke, Sgt Robert French, Sgt Bryson West.", "Crash cause": "Technical failure"}, {"Date": "7/4/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1468", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "1468", "YOM": "1940", "Flight number": "NA", "Crash location": "Lae Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While cruising off Lae, the twin engine aircraft collided with a Japanese Mitsubishi Zero fighter and crashed into the sea. All six crew members were killed.", "Crash cause": "Unknown"}, {"Date": "7/13/1942", "Time": "2H 32M 0S", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-2655", "Flight phase": "Takeoff (climb)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Horn Island - Horn Island", "MSN": "2466", "YOM": "1941", "Flight number": "NA", "Crash location": "Horn Island Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "9", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after a night take off, while in initial climb, the aircraft stalled and crashed into the sea some 300-400 meters off shore. Three crewmen were killed while six others were rescued. A first B-17 registered 41-2636 crashed at the same location and in similar circumstances two minutes earlier. Crew: Lt Paul D. Lindsay, pilot, Lt Edward R. Budz, navigator, \u2020 Sgt Ralph Dietz, air gunner, Sgt Vernon O. Elder, air gunner, S/Sgt Houston A. Rice, \u2020 S/Sgt James E. Houchins. \u2020", "Crash cause": "Unknown"}, {"Date": "7/13/1942", "Time": "NA", "Aircraft": "Short S.29 Stirling", "Operator": "Royal Air Force - RAF", "Registration": "N6075", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Oakington - Oakington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Leek Staffordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The aircraft left RAF Oakington on a cross country exercise. While cruising over the region of Biddulph, the captain reduced his altitude to show the house of Mr. Dolphin to the other members of the crew. Shortly later, the aircraft went through a cloudy area and hit the hill of Merrytown Low, near Leek. All eight crew members were killed. Crew: Sgt Roderick Urquhart Morrison, pilot, F/Sgt John Richard Griffin, observer, F/Sgt James Frederick Hirst, wireless operator and air gunner, F/Sgt Thorstein Enevold Helgesen, wireless operator and air gunner, F/Sgt Leo Joseph Regimbal, air gunner, F/Sgt John Ellis Williams, flight engineer, F/Sgt William Anthony George Atkins, flight engineer, F/Sgt Edgar Dolphin.", "Crash cause": "Human factor"}, {"Date": "7/14/1942", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "United States Navy - USN", "Registration": "4463", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Pacific Ocean All World", "Country": "World", "Region": "World", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "The crew left Sand Point NAS on a survey flight over the North Pacific Ocean. En route, the seaplane crashed in unknown circumstances. No trace of the aircraft nor the crew was ever found.", "Crash cause": "Unknown"}, {"Date": "7/29/1942", "Time": "NA", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7894", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Upper Heyford - Upper Heyford", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Sea All World", "Country": "World", "Region": "World", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft left RAF Upper Heyford at 2157LT on July 28 on a bombing mission to Hamburg, Germany. While overflying the North Sea by night, the aircraft disappeared and crashed into the sea. SAR did not find any trace of the aircraft nor the crew. Crew (16th OTU): F/Sgt Richard Elmer Stageman, pilot, W/O Cecil Charles David Hinks, observer, Sgt John George Watson, observer, F/Sgt Prentis Blair Andrew, wireless operator and air gunner, F/Sgt Robert Edward Fahey, wireless operator and air gunner.", "Crash cause": "Unknown"}, {"Date": "8/6/1942", "Time": "NA", "Aircraft": "Douglas A-20 Havoc", "Operator": "Royal Air Force - RAF", "Registration": "AH444", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Hunsdon - Hunsdon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Clacton-on-Sea Essex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was involved in a training mission when flying off Clacton-on-Sea, the twin engine aircraft went out of control and crashed into the sea some 200 yards off shore. Both crew members were killed. Crew (85th Squadron): P/O Hugh M. McKiernan, pilot, P/O Geoffrey M. Brearley, observer.", "Crash cause": "Unknown"}, {"Date": "8/9/1942", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "United States Navy - USN", "Registration": "4414", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cape Korrishka Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "Crashed in unknown circumstances in Cape Korrishka. All nine crew members were killed.", "Crash cause": "Unknown"}, {"Date": "8/10/1942", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7431", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coningsby AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "For unknown reasons, the crew missed the approach and the aircraft landed hard. On touchdown, all landing gears were torn off and the aircraft slid for several yards before coming to rest. While all seven crew members were unhurt, the aircraft was considered as damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "8/20/1942", "Time": "20H 10M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "AE646", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Silloth - Silloth", "MSN": "414-2999", "YOM": "1941", "Flight number": "NA", "Crash location": "Silloth AFB Cumbria", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was involved in a combined training exercise with another RAF Lockheed L-414 Hudson registered T9273 and carrying four crew members as well. In flight, both twin engine aircraft collided and crashed into the Solway Firth, off RAF Silloth. All eight crew members on both aircraft were killed. Crew (1st OTU): Sgt K. J. Chandler, Sgt L. Hargrave, Sgt J. Brown, Sgt Morse.", "Crash cause": "Human factor"}, {"Date": "8/20/1942", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-11739", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "235", "YOM": "1941", "Flight number": "NA", "Crash location": "San Diego California", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crash landed at San Diego Airport in unclear circumstances. No casualties.", "Crash cause": "Unknown"}, {"Date": "9/3/1942", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "NZ1221", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Wigram - Wigram", "MSN": "2599", "YOM": "NA", "Flight number": "NA", "Crash location": "Wigram AFB (Christchurch) Canterbury Regional Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was performing a training flight in the vicinity of the Wigram FB, Christchurch. While flying at low altitude, the twin engine aircraft collided with another RNZAF Airspeed AS.10 Oxford registered NZ1303. Following the collision, the first aircraft dove into the ground and crashed, killing all three occupants. The second aircraft was able to land safely at Wigram AFB.", "Crash cause": "Unknown"}, {"Date": "9/6/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-9071", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Pouembout - Pouembout", "MSN": "2543", "YOM": "1941", "Flight number": "NA", "Crash location": "Rendova Island All Solomon Islands", "Country": "Solomon Islands", "Region": "Oceania", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "The aircraft left Pouembout-Plaine des Gaiacs AFB (New Caledonia) on a maritime patrol flight over the Solomon Islands. While cruising off the Rendova Island, the crew intercepted a Japanese flying boat but was shot down and crashed into the sea. All nine crew members were killed. Crew (11th BG): Cpt Robert H. Richards, pilot, 1st Lt Robert H. McGhee, copilot, 2nd Lt William F. B. Morris, navigator, S/Sgt Charles E. Bayer, bombardier, Cpl Otis O. Black Jr., flight engineer, Cpl Yvon W. Bailey, assistant to the flight engineer, Sgt Hugh M. King, radio operator, Cpl Peter Charuk, air gunner, Pvt William Omanoff, air gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "9/28/1942", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "NZ401", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "New Plymouth - New Plymouth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "New Plymouth Taranaki Regional Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after take off from New Plymouth Airport, while climbing, the twin engine aircraft stalled and crashed into the sea. While all four occupants were rescued, the aircraft was lost.", "Crash cause": "Unknown"}, {"Date": "9/29/1942", "Time": "15H 30M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "NZ2029", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Nelson - Nelson", "MSN": "414-3852", "YOM": "1941", "Flight number": "NA", "Crash location": "Nelson Nelson City Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "7", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew was engaged in a training flight off Nelson. In flight, the captain decided to reduce his altitude and made a very low pass over the Tasman Bay. Propeller blades hit the water surface and the pilot increased engine power to gain altitude. At a height of 200 feet, the aircraft went out of control, the pilot was able to send a brief mayday message and ditched the aircraft. Ten minutes later, the pilot of a RNZAF's Harvard spotted the Hudson floating with all crew alive, seating on both wings. Unfortunately, more than two hours were needed for the crew of a RNZAF ship to rich the site. Only one crew was found alive as all six other occupants died from hypothermia because the water temperature was too low. Crew (2nd Squadron): F/O Dean Horrocks, \u2020 Sgt Vincent Hill, \u2020 Sgt Jack Bryson, \u2020 Sgt Victor Chapple, \u2020 Sgt Gordon Stevens, \u2020 AC1 John Davis, \u2020 W/O J. Colway.", "Crash cause": "Human factor"}, {"Date": "9/30/1942", "Time": "6H 20M 0S", "Aircraft": "Short S.25 Sunderland", "Operator": "Royal Air Force - RAF", "Registration": "T9050", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Abu Qir - Abu Qir", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abukir (Abu Qir) Alexandria", "Country": "Egypt", "Region": "Africa", "Crew on board": "12", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The seaplane left Abu Qir seaplane base at 0545LT on a maritime patrol flight. After 35 minutes into the flight, the engine number one failed. The captain decided to stall the aircraft that broke its back while hitting the water surface. Three crew members were killed while all nine others were rescued. The aircraft was lost. Crew (230th Squadron): F/O R. J. Murphy, pilot, P/O R. C. Scott, pilot, F/O T. W. Sanderson, pilot, P/O A. H. Matthews, navigator, F/Sgt J. Harkins, wireless operator and air gunner, Sgt K. J. Carlsson, wireless operator and air gunner, \u2020 Sgt J. Adam, wireless operator and air gunner, \u2020 Sgt J. Groleau, wireless operator and air gunner, Sgt G. Lindsay, wireless operator and air gunner, \u2020 Sgt D. Hall, flight engineer, LAC D. McLean, fitter, LAC N. Kelly, rigger. Source by Alan Storr: http://static.awm.gov.au/images/collection/pdf/RC09125_007--1-.pdf", "Crash cause": "Human factor"}, {"Date": "10/18/1942", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7376", "Flight phase": "Taxiing", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Swinderby - Swinderby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Swinderby AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While taxiing, the aircraft went out off control and collided with military equipment. All seven crew members were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "10/22/1942", "Time": "15H 30M 0S", "Aircraft": "Lockheed 18 LodeStar", "Operator": "Royal Air Force - RAF", "Registration": "EW984", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bilbeis \u2013 Lydda", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bilbeis Al Sharqia", "Country": "Egypt", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "10", "PAX fatalities": "10", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "After take off from Bilbeis, the captain decided to make a low pass over the Officer's Mess. While flying at a height of eight feet, the aircraft hit the tent with its left wing tip that broke away. The aircraft overturned and crashed in a huge explosion. All 13 occupants were killed while there was no casualties on ground.", "Crash cause": "Human factor"}, {"Date": "11/1/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-2635", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Port Moresby - Port Moresby", "MSN": "2446", "YOM": "1941", "Flight number": "NA", "Crash location": "Buin Autonomous Region of Bougainville", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The aircraft left Port Moresby-Seven Mile Airport in the early morning with a crew of eight and a load of 1,000 pounds of bombs to attack Japanese ships based in the Tonolei Harbor. Upon arrival in the target area, the crew encountered poor weather conditions and the aircraft disappeared in unknown circumstances. No trace was ever found. Crew (19th BG): 1st Lt John S. Hancock, pilot, Sgt Robert H. Burns, copilot, 1st Lt James W. Carver, navigator, Cpl Hiram D. Wilkinson, flight engineer, Sgt Edward R. Cipriani, radio operator, Sgt Mac S. Groesbeck, air gunner, Sgt Raymond A. Maxwell, air gunner, Cpl Curtis F. Longenberger, air gunner.", "Crash cause": "Unknown"}, {"Date": "11/4/1942", "Time": "11H 49M 0S", "Aircraft": "Douglas DC-3", "Operator": "Transcontinental %26 Western Air - TWA", "Registration": "NC18951", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kansas City - Kansas City", "MSN": "2015", "YOM": "1937", "Flight number": "NA", "Crash location": "Kansas City Kansas", "Country": "United States of America", "Region": "North America", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "A mid-air collision involving aircraft of United States registry, a Douglas DC3, NC18951, and a US Army aircraft, type C-53, registered 41-20116, occurred at an altitude of between 3,500 and 3,900 feet about 4 1/4 miles northeast of the Kansas City Range Station and 1 3/4 miles north of the on course of the northeast leg of the Kansas City Radio Range. At the time of the accident, NC18951 was operating on a check flight in the vicinity of the Kansas City Municipal Airport as a part of the routine instrument flight instruction of Transcontinental & Western Air. The C-53 was on a non-stop cross-country flight from Indianapolis to Wichita via Kansas City, in the service of the US Army Air Forces. The DC-3 received major damage from the collision in the air and was demolished by the resultant crash landing in a group of small trees in the vicinity of Linden, Kansas. The C-53 received major damage as a result of the collision but succeeded in landing at the Kansas City Municipal Airport without further damage. The DC-3 captain sustained minor injuries. None of the 5 other persons involved was injured.", "Crash cause": "Human factor"}, {"Date": "11/6/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-7404", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "7404", "YOM": "1941", "Flight number": "NA", "Crash location": "Saint Louis Missouri", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on take off from Saint Louis-Lambert Airport and destroyed by fire. Crew fate remains unknown.", "Crash cause": "Unknown"}, {"Date": "11/7/1942", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "Royal Air Force - RAF", "Registration": "FK245", "Flight phase": "Landing (descent or approach)", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Beaulieu - Beaulieu", "MSN": "222", "YOM": "1941", "Flight number": "NA", "Crash location": "Beaulieu AFB Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "On final approach to RAF Beaulieu, the bomber crashed in a huge explosion one mile short of runway. All seven crew members were killed. Crew (224th Squadron): F/Sgt K. Crabtree, Sgt K. E. Hunt, F/Sgt A. W. Colston, Sgt R. W. J. Harrison, Sgt H. R. Jennings, Sgt R. S. Horsley 1.", "Crash cause": "Unknown"}, {"Date": "11/14/1942", "Time": "2H 0M 0S", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "DJ628", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Llandwrog \u2013 Penrhos", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Penrhos AFB Gwynedd", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The twin engine aircraft left RAF Llandwrog located near Caernarfon at 0124LT on a night training exercise to RAF Penrhos. The crew contacted ground at 0132LT and this was the last radio contact ever. It seems the aircraft crashed into the sea while approaching RAF Penrhos as no trace of the aircraft nor the crew was ever found. Crew (9th AFU): Sgt Trevor Morgan Blakemore, pilot, P/O Keith Charman, navigator, Sgt John George Cairns, Sgt John Mallett, LAC Ronald Adam Simpson.", "Crash cause": "Unknown"}, {"Date": "11/16/1942", "Time": "NA", "Aircraft": "Fiat G.18", "Operator": "Avio Linee Italiane - ALI", "Registration": "I-ETNA", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Milan - Milan", "MSN": "3", "YOM": "1936", "Flight number": "NA", "Crash location": "Milan Lombardy", "Country": "Italy", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While performing a test flight in the Milan area, the crew encountered fuel problems and was forced to attempt an emergency landing in a field. The aircraft was wrecked while all occupants escaped unhurt.", "Crash cause": "Technical failure"}, {"Date": "11/18/1942", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "United Airlines", "Registration": "NC16064", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1904", "YOM": "1937", "Flight number": "NA", "Crash location": "Wright-Patterson AFB (Dayton) Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On final approach to the Wright-Patterson AFB, on of the wing hit a tree. The aircraft stalled and crashed in flames. All three crew members were killed. They were completing a cargo flight on behalf of the USAAF. For undetermined reasons, the aircraft was approaching too low.", "Crash cause": "Human factor"}, {"Date": "11/25/1942", "Time": "11H 1M 0S", "Aircraft": "Douglas DC-2", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A30-10", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1372", "YOM": "1935", "Flight number": "NA", "Crash location": "Mallacoota Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after take off, while climbing, the right engine failed. The aircraft stalled and crashed, injuring all six occupants. Crew (36th Squadron): F/O J. L. Whiteman, pilot, P/O F. J. Ball, pilot. Passengers: Sgt A. J. Scott, LAC J. Varderway, LAC R. L. Vance, Cpl Greenhill.", "Crash cause": "Technical failure"}, {"Date": "12/10/1942", "Time": "15H 0M 0S", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7867", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Lossiemouth - Lossiemouth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Corrour Inverness-shire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "While on a training exercise from RAF Lossiemouth, the crew encountered poor weather conditions en route. The bomber was off course by 40 miles when it hit the slope of Leacann na Brathan located near Corrour. Five crew members were killed while the air gunner was badly injured. Crew (20th OTU): F/O James William Heck, pilot, \u2020 Sgt Maurice Hutt, bomb aimer, \u2020 Sgt William Ernest Riley, navigator, \u2020 Sgt Joseph Towers, navigator, \u2020 Sgt James Hemmings, wireless operator and air gunner, \u2020 Sgt Philip Edward Underwood, air gunner.", "Crash cause": "Human factor"}, {"Date": "12/27/1942", "Time": "NA", "Aircraft": "Focke-Wulf Fw.200 Condor", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "F8+AK", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "140", "YOM": "NA", "Flight number": "NA", "Crash location": "Mt Kvitanosi Hordaland", "Country": "Norway", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "En route, the four-engine aircraft hit the slope of Mt Kvitanosi located northwest of Vossevangen. Four crew members were killed on impact while two others, injured, walked away to find help. The aircraft was totally destroyed by impact forces. Crew (2./I./KG 40): Oblt Waldemar Hackel, pilot, \u2020 Uffz Adolf Liebscher, pilot, \u2020 Fldw Erwin Kopp, radio operator, \u2020 Uffz Walter Schwartz, radio operator, Gefr Karl Pech, \u2020 Gefr Fritz Albrechts, flight engineer.", "Crash cause": "Unknown"}, {"Date": "1/6/1943", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-11587", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "83", "YOM": "1941", "Flight number": "NA", "Crash location": "Donnellsville Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "En route, the four-engine aircraft exploded in mid-air, disintegrated and crashed in a field located 2 miles west of Donnellsville. All four crew members were killed.", "Crash cause": "Technical failure"}, {"Date": "1/7/1943", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1421", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Port Moresby - Port Moresby", "MSN": "1421", "YOM": "1940", "Flight number": "NA", "Crash location": "Salamaua Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "7", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The aircraft christened 'Yeah' left Port Moresby-Seven Mile Airfield to attack Japanese ships off Lae. Over the target, the aircraft was attacked by Japanese Mitsubishi Zero. With the left engine on fire, the pilot was able to leave the combat area but was eventually forced to ditch the aircraft 40 miles south of Salamaua. Three crew members were rescued while four others were killed. Crew (22nd BG): 1st Lt Leonard T. Nicholson, pilot, 1st Lt Jack L. Childers, copilot, 1st Lt Norman E. Oefreese, navigator, \u2020 Sgt Jack C. Moseley, bombardier, \u2020 S/Sgt William M. Brown, flight engineer, \u2020 S/Sgt Joseph P. Papp, radio operator, \u2020 Cpl Thomas A. Moffitt, air gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "1/11/1943", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Netherlands Navy - Marineluchtvaartdienst", "Registration": "AM863", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Silloth - Silloth", "MSN": "414-2945", "YOM": "1941", "Flight number": "NA", "Crash location": "Silloth AFB Cumbria", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While on a training sortie from RAF Silloth, the twin engine aircraft crashed in unknown circumstances into the Solway Firth, few miles off shore. All four crew members were killed. Crew: F/O E. A. van den Bogaert, F/O F. Schut, Cpl B. Corporaal, LAC A. F. Post.", "Crash cause": "Unknown"}, {"Date": "1/17/1943", "Time": "23H 0M 0S", "Aircraft": "Consolidated C-87 Liberator Express", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-11708", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Accra \u2013 Georgetown \u2013 Natal", "MSN": "204", "YOM": "1941", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "20", "PAX fatalities": "20", "Other fatalities": "0", "Total fatalities": 26, "Circumstances": "While overflying the Atlantic Ocean by night, on the leg from Georgetown (Ascension Island) to Natal, while on a flight from Accra to Natal, the aircraft disappeared into the Ocean around 2300LT. SAR operations were conducted for several days but eventually suspended as no trace of the aircraft nor the crew was found. Two life vests were discovered on a Brazilian beach few days later.", "Crash cause": "Unknown"}, {"Date": "1/21/1943", "Time": "NA", "Aircraft": "Douglas C-49 (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-56614", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Austin-del Valle - Austin-del Valle", "MSN": "1948", "YOM": "1937", "Flight number": "NA", "Crash location": "Austin-Bergstrom Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the crew encountered technical problems with one or more engine and attempted to make an emergency landing 31 miles northwest of Austin-del Valle AFB. The aircraft was damaged beyond repair but there were no casualties. Austin-del Valle AFB was renamed Bergstr\u00f6m AFB two months later.", "Crash cause": "Technical failure"}], "stage_runningstate": "executed", "datacache": 0, "originalcount": 28536, "samplecount": 2825, "samplefile": "/FileStore/platform/sampleData/665e04f9a0338a49680b1521/part-00000-c58812fc-c031-48a7-af86-b5a660ca85b6-c000.csv", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "665e04f9a0338a49680b1522", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/Plane Crashes.csv", "in": ["665e04f9a0338a49680b1521"], "out": ["665e04f9a0338a49680b1523"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Auto FE", "dataPercentage": "10", "comment": "", "pipeline_id": "665e04f9a0338a49680b151e", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10", "sampledata": [{"Date": "4/9/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "43-49258", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Kelly - Davis Monthan", "MSN": "15074/26519", "YOM": "1944", "Flight number": "NA", "Crash location": "Kelly AFB (ex Brooks Field, San Antonio) Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "19", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from Kelly AFB, an engine failed. The aircraft passed over few houses, stalled and crashed in a cotton field. A passenger was killed while all other occupants were rescued, some of them injured. The aircraft was written off. The crew was enroute to Davis Monthan carrying the members of a baseball team taking part to a tournament.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 221.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 447.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 50.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 150.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 22.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 65.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "4/10/1947", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Indian Overseas Airlines - IOA", "Registration": "VT-AZF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "787", "YOM": "1945", "Flight number": "NA", "Crash location": "Tiruppur Tamil Nadu", "Country": "India", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 88.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 133.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 4.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 236.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/10/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Registration": "K-14", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "14712/26157", "YOM": "1944", "Flight number": "NA", "Crash location": "Dalry Ayrshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While cruising in poor weather conditions, the aircraft hit the slope of a mountain located in the region of Dalry. All six occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 88.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 18.0, "Registration_stringindexer_transform": 102.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 439.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 438.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/13/1947", "Time": "NA", "Aircraft": "Lockheed C-60 LodeStar", "Operator": "Compa\u00f1ia Transandina de Aviaci\u00f3n", "Registration": "C-803", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Medell\u00edn \u2013 Bogot\u00e1", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Medell\u00edn Antioquia", "Country": "Colombia", "Region": "South America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Few minutes after takeoff from Medell\u00edn-Las Playas Airport, the crew decided to return for an emergency landing. On final, the twin engine aircraft crashed in flames in a field and was destroyed. Both occupants were uninjured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 42.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 218.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 38.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 392.0, "Country_stringindexer_transform": 21.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 194.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/13/1947", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "British South American Airways - BSAA", "Registration": "G-AHEZ", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "London \u2013 Lisbon \u2013 Dakar \u2013 Natal \u2013 Rio de Janeiro", "MSN": "1303", "YOM": "1946", "Flight number": "NA", "Crash location": "Dakar Dakar Region", "Country": "Senegal", "Region": "Africa", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "9", "PAX fatalities": "6", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "On final approach to Dakar-Yoff Airport, the captain decided to go around due to low visibility causes by poor weather conditions. A second and a third attempt to land were aborted few minutes later. During the fourth attempt, while short of fuel, the aircraft landed hard and the undercarriage were sheared off. The aircraft slid on its belly for several yards and came to rest, broken in two. Six passengers were killed while nine other occupants were injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 42.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 460.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 141.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 329.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 10.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 110.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/13/1947", "Time": "NA", "Aircraft": "Vickers 440 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "NA735", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Bovingdon - Bovingdon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bovingdon AFB Hertfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was performing a training sortie from RAF Bovingdon. Enroute, the pilot encountered poor visibility due to foggy conditions and was unable to locate the destination airfield. Eventually, he ordered his crew to bail out and attempted to make a solo approach to RAF Bovingdon. Due to fog, he decided to reduce his altitude in an attempt to establish a visual contact with the ground when the airplane hit tree tops and crashed in Garston, east of the airfield. The pilot was killed while all five other crew members were later rescued.", "Crash cause": "Human factor", "Date_stringindexer_transform": 42.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 179.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 306.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 2.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 91.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/15/1947", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "British European Airways - BEA", "Registration": "G-AHKR", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Liverpool \u2013 Douglas", "MSN": "6824", "YOM": "1946", "Flight number": "NA", "Crash location": "Greeba Isle of Man", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "5", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Douglas, the crew encountered poor visibility with mist. The captain decided to divert to RAF Jurby when the aircraft hit a hill, overturned and came to rest upside down. The aircraft was damaged beyond repair and all seven occupants were injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 163.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 130.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 165.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 389.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 9.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 266.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/17/1947", "Time": "19H 30M 0S", "Aircraft": "Lockheed PV-1 Ventura", "Operator": "South African Air Force", "Registration": "6501", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Desert", "Schedule": "Pretoria \u2013 Malakal \u2013 Khartoum \u2013 Cairo \u2013 London", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Aljammalab White Nile (<U+0627><U+0644><U+0646><U+064A><U+0644> <U+0627><U+0644><U+0623><U+0628><U+064A><U+0636>)", "Country": "Sudan", "Region": "Africa", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "11", "PAX fatalities": "11", "Other fatalities": "0", "Total fatalities": 15, "Circumstances": "Enroute to Khartoum, the twin engine aircraft crashed in unknown circumstances near Aljammalab, about 100 km southwest of Khartoum. The aircraft was destroyed and all 15 occupants were killed. All of them were pilots flying to UK to take deliver of Spitfire for the SAAF. Crew: Maj Frederick Welgemoed, pilot, Lt Hermanus Gerhardus van Rooyen, copilot, Petrus Andries Burger, flight engineer, Cpl Leslie Donovan Case, wireless operator. Passengers: Maj Andrew Christian Bosman, pilot, Cpt Hendrik Christoffel Weideman Liebenberg, pilot, Lt Ronald Leslie Crisp, pilot, Lt Jacobus Stephanus Gericke, pilot, Lt Robert Cecil Hirst, pilot, Lt Hermanus Johannes Kritzinger, pilot, Lt John Jurie Landman, pilot, Lt Peter David Nelson, pilot, Lt Peter Nicolay, pilot, Lt Norman Peter Prinsloo, pilot.", "Crash cause": "Unknown", "Date_stringindexer_transform": 220.0, "Time_stringindexer_transform": 21.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 33.0, "Registration_stringindexer_transform": 272.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 99.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 421.0, "Country_stringindexer_transform": 20.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 8.0, "PAX fatalities_stringindexer_transform": 4.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 50.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/18/1947", "Time": "9H 19M 0S", "Aircraft": "Handley Page H.P.63 Halifax VI", "Operator": "Royal Air Force - RAF", "Registration": "ST807", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Belfast - Belfast", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "\"Some 80 minutes after its departure from Belfast-Aldergrove Airport, the aircraft crashed in unknown circumstances into the Atlantic Ocean, about 150 km northwest of the Irish coast, at approximately 55\u00b000'00.0\"\"N 12\u00b000'00.0\"\"W. All nine crewmen were lost in the crash. It is believed that the crew encountered technical problems with some instruments. Crew (202nd Squadron): S/L D. L. Bisgood", "Crash cause": " pilot", "Date_stringindexer_transform": 235.0, "Time_stringindexer_transform": 36.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 70.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 15.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 272.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 0.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 10.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 394.0, "Crash cause_stringindexer_transform": 18.0}, {"Date": "4/19/1947", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "44-87638", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "12441", "YOM": "NA", "Flight number": "NA", "Crash location": "Kwajalein All Marshall Islands", "Country": "Marshall Islands", "Region": "Oceania", "Crew on board": "16", "Crew fatalities": "16", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 16, "Circumstances": "Crashed into the sea shortly after takeoff from the Kwajalein Atoll Airport. All 16 occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 103.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 233.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 393.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 12.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 380.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/19/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Mercury Aviation", "Registration": "ZS-BNB", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "NA", "MSN": "4098", "YOM": "1941", "Flight number": "NA", "Crash location": "Malakal Upper Nile (<U+0623><U+0639><U+0627><U+0644><U+064A> <U+0627><U+0644><U+0646><U+064A><U+0644>)", "Country": "South Sudan", "Region": "Africa", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "17", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute, the crew was forced to attempt an emergency landing following an engine failure. The aircraft crash landed 10 km south of Malakal and came to rest. Two passengers were slightly injured while all other occupants were unhurt. The aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 103.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 439.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 244.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 15.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 137.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "4/22/1947", "Time": "21H 30M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L1204", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Mys Kosistyy \u2013 Khatanga", "MSN": "9118", "YOM": "1943", "Flight number": "NA", "Crash location": "Volochanka Krasnoyarsk Krai", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "28", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "Enroute from Mys Kosistyy to Khatanga, the pilot was forced to attempt an emergency landing in the Taymyr Peninsula after the left engine failed. The aircraft crash landed in the tundra about 180 km northwest of Volochanka. The aircraft was damaged beyond repair but all 33 occupants survived the accident. Four days later, as the rescue teams were unable to locate the wreckage, the captain and eight passengers decided to leave the crash site to search for help. On May 11, 1947, the wreckage was eventually spotted and the rescuers arrived on site to evacuate the remaining 24 occupants. Unfortunately, no trace of the pilot and the eight other passengers was ever found. Officially registered CCCP-L1204 in the Soviet Register, the aircraft still have the 42-32892 registration on tail. The wreckage was recovered in 2016 and transferred to as delivered to the Museum of Northern development in Krasnoyarsk.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 36.0, "Time_stringindexer_transform": 44.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 351.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 204.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 79.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 39.0, "PAX fatalities_stringindexer_transform": 7.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 437.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "4/22/1947", "Time": "10H 40M 0S", "Aircraft": "Douglas DC-3", "Operator": "Delta Airlines", "Registration": "NC49657", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Macon \u2013 Columbus", "MSN": "9066", "YOM": "1943", "Flight number": "NA", "Crash location": "Columbus Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "5", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "On final approach to runway 05, while at a height of 10 feet, the DC-3 was hit by a private Vultee BT-13 registered NC55312 and carrying one pilot. Following the collision, both aircraft climbed to a height of 150 feet and then stalled and crashed in a huge explosion. Both aircraft were destroyed and all nine occupants were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 36.0, "Time_stringindexer_transform": 32.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 142.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 191.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 164.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 9.0, "PAX fatalities_stringindexer_transform": 16.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 182.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/22/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-23368", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "9230", "YOM": "1943", "Flight number": "NA", "Crash location": "Karlovy Vary Karlovy Vary Region (Karlovarsk\u00fd kraj)", "Country": "Czech Republic", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "In flight, all crew members decided to bail out and abandoned the aircraft that dove into the ground and crashed in a pasture. The aircraft was destroyed but all occupants were safe.", "Crash cause": "Unknown", "Date_stringindexer_transform": 36.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 228.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 98.0, "Country_stringindexer_transform": 25.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 123.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/24/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Guinea Air Traders", "Registration": "VH-AVQ", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Lae \u2013 Port Moresby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Port Moresby National Capital District", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While descending to Port Moresby Airport, the twin engine aircraft crashed in unknown circumstances 20 miles east of the city. Both crewmen were rescued while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 144.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 280.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 102.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 50.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 267.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/25/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "China National Aviation Corporation - CNAC", "Registration": "B-141", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "City", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Shanghai-Longhua Shanghai", "Country": "China", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "3", "Total fatalities": 3, "Circumstances": "Shortly after takeoff from Shanghai-Longhua Airport, while in initial climb, an engine failed. The aircraft stalled and crashed in an industrial area located near the airport. While both pilots were seriously injured, three people on the ground were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 143.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 356.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 5.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 136.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 2, "Circumstances_stringindexer_transform": 294.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "4/27/1947", "Time": "NA", "Aircraft": "De Havilland DH.83 Fox Moth", "Operator": "McAvoy Diamond Drilling %26 Development Company Ltd", "Registration": "CF-DJL", "Flight phase": "Flight", "Flight type": "Executive/Corporate/Business", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "FM.37", "YOM": "NA", "Flight number": "NA", "Crash location": "Coffey Lake Alberta", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While on a flight from Yellowknife, the pilot was forced to attempt an emergency landing following an engine failure. The aircraft crash landed near Coffey Lake and was written off. All three occupants were rescued.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 192.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 445.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 10.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 199.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 273.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "4/28/1947", "Time": "23H 13M 0S", "Aircraft": "Lockheed 18 LodeStar", "Operator": "Trans-Canada Air Lines - TCAL", "Registration": "CF-TDF", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Lethbridge \u2013 Vancouver", "MSN": "18-2248", "YOM": "1942", "Flight number": "NA", "Crash location": "Vancouver British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "12", "PAX fatalities": "12", "Other fatalities": "0", "Total fatalities": 15, "Circumstances": "While approaching Vancouver from the North, the crew did not realized that his altitude was insufficient due to the low visibility caused by night. The twin engine aircraft hit the east slope of a mountain located near Mt Elsay, some 16 km north of Vancouver. SAR operations were conducted in a large area but eventually suspended few days later as no trace of the aircraft nor the crew was found. Walkers found the wreckage of the aircraft in a remote area on September 27, 1994.", "Crash cause": "Human factor", "Date_stringindexer_transform": 277.0, "Time_stringindexer_transform": 29.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 308.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 112.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 402.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 13.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 386.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/29/1947", "Time": "19H 55M 0S", "Aircraft": "Airspeed AS.65 Consul", "Operator": "Milburn Air", "Registration": "G-AIOZ", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Paris - Croydon", "MSN": "4335", "YOM": "1946", "Flight number": "NA", "Crash location": "Tatsfield Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While approaching Croydon Airport on a flight from Paris-Le Bourget, the twin engine aircraft crashed in unknown circumstances in a field located in Tatsfield, about 7 miles southeast of Croydon. The aircraft was destroyed and both occupants were killed, among them R. A. Milburn, pilot, co-owner and founder of this company.", "Crash cause": "Unknown", "Date_stringindexer_transform": 114.0, "Time_stringindexer_transform": 47.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 160.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 52.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 202.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 414.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/29/1947", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Anglo-Iranian Oil Company", "Registration": "G-AHTS", "Flight phase": "Landing (descent or approach)", "Flight type": "Executive/Corporate/Business", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "6962", "YOM": "1946", "Flight number": "NA", "Crash location": "Abadan Khuzestan", "Country": "Iran", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reasons. All three occupants were rescued and the aircraft was destroyed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 114.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 250.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 10.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 370.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 265.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/30/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aerovias Latino Americanas", "Registration": "YS-30", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "4461", "YOM": "1942", "Flight number": "NA", "Crash location": "San Salvador-Ilopango San Salvador", "Country": "Salvador", "Region": "Central America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach, the aircraft was too low and hit a train. On impact, the aircraft stalled and crashed in flames short of runway threshold. All four occupants were injured while the aircraft was destroyed by impact forces and a post crash fire. No one was hurt in the train.", "Crash cause": "Human factor", "Date_stringindexer_transform": 124.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 172.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 417.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 479.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/30/1947", "Time": "NA", "Aircraft": "AAC.1 Toucan", "Operator": "Air France", "Registration": "F-BBYG", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "227", "YOM": "NA", "Flight number": "NA", "Crash location": "Niamey Niamey City District", "Country": "Niger", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 124.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 54.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 96.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/2/1947", "Time": "18H 26M 0S", "Aircraft": "Fiat G.12", "Operator": "Italian Air Force - Aeronautica Militare Italiana", "Registration": "MM60896", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Florence \u2013 Torino", "MSN": "76", "YOM": "NA", "Flight number": "NA", "Crash location": "Torino-Mirafiori Piedmont", "Country": "Italy", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to Torino-Mirafiori Airport, the three engine crashed in flames on the Aeritalia hangar located near the airport. Both pilots were killed while three other occupants plus three people in the hangar were injured. Crew: Cpt Giulio Barattolo, pilot, \u2020 Cpt Bruno Gazzi, copilot, \u2020 Mar Pasquale Girometti, Mot Marco Ferrando, mechanic, Sgt Maj Genesio Saccucci, radio operator.", "Crash cause": "Unknown", "Date_stringindexer_transform": 179.0, "Time_stringindexer_transform": 115.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 36.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 281.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 360.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 367.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/4/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Union Southern Airlines", "Registration": "NC53196", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Louisville \u2013 Newark", "MSN": "19435", "YOM": "1944", "Flight number": "NA", "Crash location": "Newark New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "9", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft was approaching Newark Airport for landing. The airplane was too far to the right for an approach to runway 06 and the tower controller radioed that he was in line for an approach to runway 28. The approach was then made to runway 28 which is 7,100 feet long with an additional usable 500 feet at the end. The approach was fast, however and contact was not made with the runway until within the last 2,000 feet. The aircraft continued off the runway and ran into a drainage ditch where a fire broke out, which was quickly extinguished. Source: https://aviation-safety.net/database/record.php?id=19470504-0", "Crash cause": "Human factor", "Date_stringindexer_transform": 60.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 114.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 216.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 54.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 382.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/4/1947", "Time": "NA", "Aircraft": "Lockheed 18 LodeStar", "Operator": "TACA International Airlines - Transportes A\u00e9reos Centro Americanos", "Registration": "TI-84", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Nicoya \u2013 San Jos\u00e9", "MSN": "18-2374", "YOM": "1943", "Flight number": "NA", "Crash location": "Nicoya Guanacaste (North Pacific)", "Country": "Costa Rica", "Region": "Central America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "9", "PAX fatalities": "9", "Other fatalities": "0", "Total fatalities": 11, "Circumstances": "Shortly after takeoff, while in initial climb, an engine failed. The aircraft stalled and crashed in flames 5 km from the airport. The aircraft was destroyed and all 11 occupants were killed.", "Crash cause": "Terrorism act, Hijacking, Sabotage", "Date_stringindexer_transform": 60.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 214.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 229.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 238.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 8.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 156.0, "Crash cause_stringindexer_transform": 5.0}, {"Date": "5/6/1947", "Time": "NA", "Aircraft": "Siebel Si-204", "Operator": "Polyarnaya Aviatsiya", "Registration": "CCCP-N414", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Zakharkovo \u2013 Kramatorsk", "MSN": "322017", "YOM": "NA", "Flight number": "NA", "Crash location": "Beryozovo Tula oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While cruising at an altitude of 1,300 meters en route to Kramatorsk, Ukraine, the left engine failed. Shortly later, the right engine overheated and lost power. In such situation, the pilot attempted to make an emergency landing when the aircraft crash landed onto a hillside. All five occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 181.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 92.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 287.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 158.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 433.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/7/1947", "Time": "NA", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "RP520", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Driffield - Driffield", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Driffield AFB East Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to RAF Drieffield, the crew encountered control problems and informed ground that he was attempting an emergency landing. Few seconds later, the aircraft nosed down and crashed in a huge explosion few hundred yards short of runway threshold. The aircraft was destroyed by impact forces and a post crash fire and both pilots were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 292.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 7.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 106.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 373.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 318.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/9/1947", "Time": "NA", "Aircraft": "Beechcraft C-45 Expeditor", "Operator": "United States Army Air Forces - USAAF", "Registration": "44-47197", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Swartkop - Songea", "MSN": "7131", "YOM": "NA", "Flight number": "NA", "Crash location": "Songea Ruvuma Region", "Country": "Tanzania", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing in unknown circumstances. The aircraft was damaged beyond repair and all four occupants were rescued.", "Crash cause": "Unknown", "Date_stringindexer_transform": 251.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 244.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 132.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 247.0, "Country_stringindexer_transform": 39.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 112.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/10/1947", "Time": "15H 15M 0S", "Aircraft": "Lockheed C-60 LodeStar", "Operator": "Compa\u00f1ia Transandina de Aviaci\u00f3n", "Registration": "C-801", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Cartagena \u2013 Bogot\u00e1", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cartagena Bol\u00edvar", "Country": "Colombia", "Region": "South America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "During initial climb, while at a height of some 300 meters, the twin engine aircraft went out of control and crashed into the sea few hundred yards off shore. Both crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 171.0, "Time_stringindexer_transform": 111.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 230.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 35.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 317.0, "Country_stringindexer_transform": 21.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 429.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/11/1947", "Time": "9H 39M 0S", "Aircraft": "Lockheed L-049 Constellation", "Operator": "Trans World Airlines - TWA", "Registration": "NC86508", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "New Castle - New Castle", "MSN": "2029", "YOM": "1945", "Flight number": "NA", "Crash location": "Cape May Point New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was conducting a training mission (pilot transition program). While cruising at an altitude of 2,500 feet and completing a turn to the left, the four engine aircraft christened 'Star of Athens' went into a dive and crashed into the Delaware Bay, some 7 miles west off Cape May Pount. The aircraft was destroyed on impact and all four crew members were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 26.0, "Time_stringindexer_transform": 74.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 438.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 155.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 249.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 401.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/11/1947", "Time": "NA", "Aircraft": "Fairchild C-82 Packet", "Operator": "United States Army Air Forces - USAAF", "Registration": "44-23028", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "10072", "YOM": "1944", "Flight number": "NA", "Crash location": "Austin-Bergstrom Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was forced to make an emergency belly landing southeast of Bergstrom AFB, near Austin. There were no casualties but the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 26.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 234.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 191.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 121.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/11/1947", "Time": "NA", "Aircraft": "Avro 691 Lancastrian", "Operator": "Skyways of London", "Registration": "G-AGLF", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cairo \u2013 Basra", "MSN": "1172", "YOM": "1944", "Flight number": "NA", "Crash location": "H3 Oil Station Al-Anbar (<U+0627><U+0644><U+0623><U+0646><U+0628><U+0627><U+0631>)", "Country": "Iraq", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute from Cairo to Basra on a cargo flight, the crew encountered an unexpected situation and decided to divert to the H3 Oil Station Airfield for an emergency landing. The four engine aircraft crash landed and came to rest. All four occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 26.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 444.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 214.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 269.0, "Country_stringindexer_transform": 9.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 409.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/12/1947", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Indian Overseas Airlines - IOA", "Registration": "VT-AZK", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "803", "YOM": "1945", "Flight number": "NA", "Crash location": "Nal (Bikaner) Rajasthan", "Country": "India", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing. Occupant fate unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 55.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 378.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 412.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 149.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/12/1947", "Time": "NA", "Aircraft": "Ford 4", "Operator": "Negociaci\u00f3n A\u00e9rea Mexicana", "Registration": "XA-DOL", "Flight phase": "Takeoff (climb)", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "4-AT-005", "YOM": "28", "Flight number": "NA", "Crash location": "Ometepec Guerrero", "Country": "Mexico", "Region": "Central America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll, the three engine aircraft was caught by strong crosswinds, went out of control and veered off runway before coming to rest, broken in two. Both pilots were injured and the aircraft was written off.", "Crash cause": "Weather", "Date_stringindexer_transform": 55.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 78.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 14.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 170.0, "Country_stringindexer_transform": 23.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 457.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "5/14/1947", "Time": "13H 35M 0S", "Aircraft": "Savoia-Marchetti SM.79 Sparviero", "Operator": "Corrieri Aerei Militari - CAM", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Rome-Centocelle Lazio", "Country": "Italy", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in flames during takeoff for unknown reason. The aircraft that was carrying mail and few passengers and crew was destroyed by a post crash fire but there were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 162.0, "Time_stringindexer_transform": 92.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 171.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 191.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/15/1947", "Time": "NA", "Aircraft": "Caudron C.440 Go\u00e9land", "Operator": "Secr\u00e9tariat G\u00e9n\u00e9ral de l'Aviation Civile - SGAC", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Topographic", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Paris - Paris", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ch\u00e2tillon-sur-Colmont Mayenne", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The twin engine aircraft was returning to Paris-Le Bourget following a cartographic mission. After sunset, while flying at low height, the aircraft hit a tree and crashed in a field in Ch\u00e2tillon-sur-Colmont. All four occupants, two photographs and two pilots, among them Robert Leriche, were killed. The accident occurred in May (the exact date remains unclear).", "Crash cause": "Human factor", "Date_stringindexer_transform": 165.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 18.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 286.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 218.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 466.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/16/1947", "Time": "16H 25M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L1048", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Nikolayevsk-on-Amur \u2013 Khabarovsk", "MSN": "11936", "YOM": "26", "Flight number": "NA", "Crash location": "Khabarovsk Khabarovsk Krai", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "17", "PAX fatalities": "17", "Other fatalities": "0", "Total fatalities": 22, "Circumstances": "On final approach, the visibility was poor due to severe weather and as the aircraft was too low, it hit with its right wing a radio antenna located 2,600 meters short of the runway threshold. The aircraft stalled and crashed in a huge explosion, killing all 22 occupants.", "Crash cause": "Human factor", "Date_stringindexer_transform": 87.0, "Time_stringindexer_transform": 15.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 168.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 122.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 35.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 15.0, "PAX fatalities_stringindexer_transform": 11.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 324.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/16/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Strato Freight", "Registration": "NC53011", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "4276", "YOM": "1942", "Flight number": "NA", "Crash location": "Gainesville-Lee Gilmer Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The DC-3 cargo plane landed on a runway which was 4,200 feet long but the pilot made his approach too fast. Brakes were not used until within 300 feet of the end of the runway. The aircraft continued off the runway, down a rough incline and across a dirt road. It was considered as damaged beyond repair. Source: https://aviation-safety.net/database/record.php?id=19470516-1", "Crash cause": "Human factor", "Date_stringindexer_transform": 87.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 203.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 339.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 316.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/17/1947", "Time": "NA", "Aircraft": "Handley Page H.P.63 Halifax VII", "Operator": "Royal Air Force - RAF", "Registration": "PP373", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "North Luffenham - North Luffenham", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Luffenham AFB Rutland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll, clear for rotation, the pilot lost directional control of the aircraft that overran and came to rest. There were no casualties but the aircraft was written off.", "Crash cause": "Human factor", "Date_stringindexer_transform": 138.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 181.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 150.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 49.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 120.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/18/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Philippine Air Force - Hukbong Himpapawid NG Pilipinas", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Cotabato \u2013 Bacolod", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Malaybalay Bukidnon", "Country": "Philippines", "Region": "Asia", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "11", "PAX fatalities": "11", "Other fatalities": "0", "Total fatalities": 18, "Circumstances": "While cruising in marginal weather conditions, the aircraft hit the slope of Mt Katanglad located about 24 km northwest of Malaybalay. All 18 occupants were killed. At the time of the accident, the visibility was poor due to weather and it appears that Mt Katanglad was showed with an elevation of 7,900 feet on maps while its real altitude was 9,300 feet.", "Crash cause": "Human factor", "Date_stringindexer_transform": 226.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 292.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 69.0, "Country_stringindexer_transform": 18.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 8.0, "PAX fatalities_stringindexer_transform": 4.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 103.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/19/1947", "Time": "NA", "Aircraft": "Beechcraft C-45 Expeditor", "Operator": "United States Army Air Forces - USAAF", "Registration": "44-87142", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "8401", "YOM": "1945", "Flight number": "NA", "Crash location": "Windsor Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While approaching the Selfridge Air National Guard Base from the south, the twin engine aircraft crashed in unknown circumstances two miles south of Windsor, Ontario. All six occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 100.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 247.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 395.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 259.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/19/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "43-49248", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "15064/26509", "YOM": "1944", "Flight number": "NA", "Crash location": "Livingston Montana", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute, the crew encountered an unexpected situation and decided to abandon the aircraft and to bail out. The aircraft dove into the ground and crashed in a mountainous are located 5 miles southeast of Livingston. Both pilots were found unharmed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 100.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 310.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 92.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 280.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/22/1947", "Time": "NA", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "PG124", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Finningley AFB South Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft lost power during takeoff roll. The captain decided to abandon the takeoff procedure and raised the undercarriage. The aircraft sank on its belly and skidded for several yards before coming to rest. There were no casualties.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 40.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 397.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 13.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 215.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/22/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aerovias Brasil", "Registration": "PP-AVM", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "15998/32746", "YOM": "1945", "Flight number": "NA", "Crash location": "Rio de Janeiro-Santos Dumont Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances in Santos Dumont Airport.", "Crash cause": "Unknown", "Date_stringindexer_transform": 40.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 467.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 109.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 346.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/22/1947", "Time": "NA", "Aircraft": "Boeing C-97 Stratofreighter", "Operator": "United States Army Air Forces - USAAF", "Registration": "43-27472", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "8483", "YOM": "NA", "Flight number": "NA", "Crash location": "Wright-Patterson AFB (Dayton) Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "7", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "On final approach to Wright-Patterson AFB, the aircraft went out of control and crashed in flames in a field located 5 miles short of runway. Five crew members were killed while two others were seriously injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 40.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 464.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 38.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 313.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/24/1947", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW190", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Northolt \u2013 Luqa", "MSN": "MW190", "YOM": "1945", "Flight number": "NA", "Crash location": "Luqa All Malta", "Country": "Malta", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Luqa Airport, the four engine aircraft was too low and hit a stone pile located in a stone-pit. The undercarriage were partially sheared off and the aircraft belly landed and came to rest. There were no casualties but the aircraft was damaged beyond repair. For unknown reason, the crew continued the final approach at an insufficient altitude.", "Crash cause": "Human factor", "Date_stringindexer_transform": 78.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 249.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 6.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 230.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 332.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/24/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Guinea Air Traders", "Registration": "VH-AYD", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bulolo Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While on a cargo flight from Lae, the crew encountered an unexpected situation and was forced to make an emergency landing. The twin engine aircraft came to rest in a field located near Bulolo and was damaged beyond repair. Both crewmen were unhurt.", "Crash cause": "Unknown", "Date_stringindexer_transform": 78.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 89.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 366.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 239.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/28/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Netherlands Air Force - Koninklijke Luchtmacht", "Registration": "D-22", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Gilze-Rijen - Gilze-Rijen", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Gilze-Rijen AFB North Brabant", "Country": "Netherlands", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew was engaged in a combined exercise with another RNAF Anson registered D-21 and carrying a crew of six as well. After takeoff from the Gilze-Rijen AFB, while in initial climb, both aircraft collided and crashed in a field. They were totally destroyed and all 12 crew members were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 17.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 148.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 11.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 16.0, "Country_stringindexer_transform": 17.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 253.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/28/1947", "Time": "NA", "Aircraft": "Avro 683 Lancaster", "Operator": "Royal Air Force - RAF", "Registration": "SW304", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Nairobi - Nairobi", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Nairobi-Eastleigh (Moi Air Base) Nairobi City District", "Country": "Kenya", "Region": "Africa", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll, the aircraft skidded and went out of control. The undercarriage collapsed and the airplane came to rest. There were no casualties among the crew of five from the 82nd Squadron.", "Crash cause": "Unknown", "Date_stringindexer_transform": 17.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 150.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 276.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 84.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 132.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/28/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Netherlands Air Force - Koninklijke Luchtmacht", "Registration": "D-21", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Gilze-Rijen - Gilze-Rijen", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Gilze-Rijen AFB North Brabant", "Country": "Netherlands", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew was engaged in a combined exercise with another RNAF Anson registered D-22 and carrying a crew of six as well. After takeoff from the Gilze-Rijen AFB, while in initial climb, both aircraft collided and crashed in a field. They were totally destroyed and all 12 crew members were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 17.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 449.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 11.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 16.0, "Country_stringindexer_transform": 17.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 455.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/29/1947", "Time": "22H 45M 0S", "Aircraft": "Douglas C-54 Skymaster", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-72553", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Seoul \u2013 Tachikawa", "MSN": "10658", "YOM": "1945", "Flight number": "NA", "Crash location": "Atsugi NAS Kanto", "Country": "Japan", "Region": "Asia", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "33", "PAX fatalities": "33", "Other fatalities": "0", "Total fatalities": 41, "Circumstances": "The aircraft was performing a flight from Seoul-Kimpo to Tachikawa AFB with several US officers and five civilians on board. While approaching the Tokyo area by night and from the southwest, the crew completed a turn at an altitude of 1,500 meters in marginal weather conditions when the aircraft hit the slope of a mountain located west of the city of Atsugi, about 30 km southwest of Tachikawa AFB. The aircraft was destroyed by impact forces and burned completely. All 41 occupants were killed. At the time of the accident, the visibility was 10 km with cumulus and altostratus between 1,000 and 2,500 meters.", "Crash cause": "Human factor", "Date_stringindexer_transform": 1.0, "Time_stringindexer_transform": 79.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 13.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 48.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 235.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 18.0, "PAX fatalities_stringindexer_transform": 18.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 328.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/29/1947", "Time": "19H 5M 0S", "Aircraft": "Douglas DC-4", "Operator": "United Airlines", "Registration": "NC30046", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "New York \u2013 Cleveland", "MSN": "18324", "YOM": "1944", "Flight number": "NA", "Crash location": "New York-LaGuardia New York", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "2", "Pax on board": "44", "PAX fatalities": "41", "Other fatalities": "0", "Total fatalities": 43, "Circumstances": "\"Flight 521 taxied from its parked position, rolled onto Runway 18, and without pause or hesitation accelerated for take-off. The throttles were advanced. Air speed increased to above 90 miles per hour. Captain Baldwin applied back pressure to the control column, but the \"\"feel\"\" of the controls was \"\"heavy", "Crash cause": "\"\" and the aircraft did not respond. As the aircraft raced toward the boundary of the field", "Date_stringindexer_transform": 1.0, "Time_stringindexer_transform": 114.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 456.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 228.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 12.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 33.0, "PAX fatalities_stringindexer_transform": 24.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 162.0, "Crash cause_stringindexer_transform": 16.0}, {"Date": "5/29/1947", "Time": "12H 48M 0S", "Aircraft": "Douglas DC-3", "Operator": "Flugf\u00e9lag \u00cdslands", "Registration": "TF-ISI", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Reykjavik \u2013 Akureyri", "MSN": "13389", "YOM": "1944", "Flight number": "NA", "Crash location": "Mt Hestfjall Northeastern Region (Nor\u00f0urland eystra)", "Country": "Iceland", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "21", "PAX fatalities": "21", "Other fatalities": "0", "Total fatalities": 25, "Circumstances": "Enroute from Reykjavik to Akureyri, while flying in marginal weather conditions east of the city of Siglufj\u00f6r\u00f0ur, the aircraft hit the slope of Mt Hestfjall located on the west coast of the H\u00e9\u00f0insfj\u00f6r\u00f0ur Bay. The aircraft was totally destroyed and all 25 occupants were killed. Up to date, worst airplane crash in Iceland History.", "Crash cause": "Unknown", "Date_stringindexer_transform": 1.0, "Time_stringindexer_transform": 89.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 61.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 160.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 227.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 20.0, "PAX fatalities_stringindexer_transform": 19.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 158.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/29/1947", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "45-21848", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "13742", "YOM": "NA", "Flight number": "NA", "Crash location": "Fort Wainwright AFB (Ladd Field) Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "12", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after takeoff from Fort Wainwright AFB (Ladd Field), while in initial climb, the aircraft stalled and crashed in flames 3 miles east of the airfield. Nine crew members were rescued while three others were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 1.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 55.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 129.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 9.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 255.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/29/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "CB-32", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "19445", "YOM": "1944", "Flight number": "NA", "Crash location": "Trinidad Beni", "Country": "Bolivia", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances in a swampy area. Occupant fate remains unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 1.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 282.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 342.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 88.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/30/1947", "Time": "17H 41M 0S", "Aircraft": "Douglas C-54 Skymaster", "Operator": "Eastern Airlines", "Registration": "NC88814", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Newark \u2013 Miami", "MSN": "18380", "YOM": "1944", "Flight number": "NA", "Crash location": "Bainbridge Maryland", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "49", "PAX fatalities": "49", "Other fatalities": "0", "Total fatalities": 53, "Circumstances": "The four engine aircraft left Newark Airport at 1704LT on a flight to Miami. While climbing to an altitude of 4,000 feet, the aircraft went out of control, dove into the ground and crashed in a huge explosion in a field located 2 miles east of Bainbridge. The aircraft was totally destroyed and all 53 occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 15.0, "Time_stringindexer_transform": 118.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 132.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 149.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 234.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 35.0, "PAX fatalities_stringindexer_transform": 27.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 185.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/30/1947", "Time": "12H 0M 0S", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Bond Air Services", "Registration": "G-AIOH", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "London \u2013 Barcelona", "MSN": "1324", "YOM": "1946", "Flight number": "NA", "Crash location": "Barcelona Catalonia", "Country": "Spain", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a cargo flight from London-Gatwick to Barcelona. After touchdown, the four engine aircraft was unable to stop within the remaining distance. It overran, lost its undercarriage, went through a fence, slid for several yards and lost its both left engines before coming to rest. All four crew members were unhurt while the aircraft was damaged beyond repair. It is believed that the landing was completed with an excessive speed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 15.0, "Time_stringindexer_transform": 2.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 139.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 260.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 215.0, "Country_stringindexer_transform": 4.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 118.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/30/1947", "Time": "4H 0M 0S", "Aircraft": "AAC.1 Toucan", "Operator": "Services Fran\u00e7ais de T\u00e9l\u00e9communications et de Signalisation", "Registration": "F-BBYH", "Flight phase": "Takeoff (climb)", "Flight type": "Government", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Algiers \u2013 Marseille", "MSN": "228", "YOM": "NA", "Flight number": "NA", "Crash location": "Algiers Algiers", "Country": "Algeria", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Just after lift off, while in initial climb, the three engine aircraft stalled and crashed in flames. All three crew members were killed. Crew: Georges Pascaud, pilot, Jean-Louis Coquerel, radio navigator, Pierre Besson, mechanic.", "Crash cause": "Unknown", "Date_stringindexer_transform": 15.0, "Time_stringindexer_transform": 8.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 372.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 16.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 54.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 231.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 275.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/31/1947", "Time": "NA", "Aircraft": "Grumman G-21A Goose", "Operator": "Ellis Airlines", "Registration": "NC86590", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "1028", "YOM": "0", "Flight number": "NA", "Crash location": "Ketchikan Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed while landing on a lake near Ketchikan. Occupant fate remains unknown. It is reported that the crew forgot to raise the landing gear.", "Crash cause": "Human factor", "Date_stringindexer_transform": 269.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 239.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 83.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 15.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/3/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Butler Air Transport", "Registration": "VH-AOH", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Schofields - Schofields", "MSN": "13603", "YOM": "1944", "Flight number": "NA", "Crash location": "Schofields New South Wales", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing touch and goes at Schofields Airport. On final approach, the airplane failed to land, overshot and eventually crashed in a wooded area past the runway end. The aircraft was destroyed while both pilots were injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 264.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 166.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 180.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 427.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 204.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/4/1947", "Time": "22H 0M 0S", "Aircraft": "AAC.1 Toucan", "Operator": "Air France", "Registration": "F-BANB", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Nice \u2013 Marseille \u2013 Lyon \u2013 Paris", "MSN": "136", "YOM": "1945", "Flight number": "NA", "Crash location": "G\u00e9menos Bouches-du-Rh\u00f4ne", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On the leg from Nice to Marseille, the crew started the descent to Marignane Airport when the three engine aircraft hit the slope of a mountain located in the Sainte-Beaume Mountain Range, near G\u00e9menos. A crew member was seriously injured while both other occupants were killed. Two days later, the only survivor died from his injuries. Delivered in September 5, 1945, the aircraft entered in service in June 8, 1946 only. Crew: Gabriel Cahouet, pilot, Henri Decoudray, radio navigator, Robert Salles, mechanic.", "Crash cause": "Human factor", "Date_stringindexer_transform": 178.0, "Time_stringindexer_transform": 57.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 229.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 1.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 284.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 111.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 82.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/5/1947", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Lancashire Aircraft Corporation - LAC", "Registration": "G-AIHW", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Valencia - London", "MSN": "1357", "YOM": "1946", "Flight number": "NA", "Crash location": "London-Heathrow London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following a wrong approach configuration, the aircraft landed very hard. After being parked on apron, the technician proceeded to a complete inspection which revealed that the fuselage was buckled. The aircraft was declared as damaged beyond economical repair.", "Crash cause": "Human factor", "Date_stringindexer_transform": 101.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 370.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 218.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 3.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 330.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/5/1947", "Time": "NA", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "NC474", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cottesmore AFB Rutland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was performing a training sortie when the aircraft went out of control, nosed down, lost several pieces and partially disintegrated in the air before crashing in a field located 6 miles east of RAF Cottesmore. All three crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 101.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 264.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 201.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 389.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/6/1947", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Air Gagnon", "Registration": "CF-FDP", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "91", "YOM": "1942", "Flight number": "NA", "Crash location": "Mistassini Lake Quebec", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While landing on Mistassini Lake, the single engine aircraft went out of control, came to rest upside down and sank. There were no casualties but the aircraft was lost.", "Crash cause": "Unknown", "Date_stringindexer_transform": 187.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 11.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 122.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 441.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/7/1947", "Time": "NA", "Aircraft": "Petlyakov Pe-8", "Operator": "Polyarnaya Aviatsiya", "Registration": "CCCP-N395", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "42 1 12", "YOM": "13", "Flight number": "NA", "Crash location": "Mys Kosistyy Krasnoyarsk Krai", "Country": "Russia", "Region": "Asia", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On landing at Mys Kosistyy, near the Khatanga Bay, when had to go around due to strong cross winds. Engines # 3 and 4 flamed out shortly afterwards so the aircraft stalled and crashed in the tundra some 1,500 meters from the runway. While the aircraft was damaged beyond repair, all six occupants escaped unhurt.", "Crash cause": "Human factor", "Date_stringindexer_transform": 289.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 93.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 149.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 430.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/10/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "LOT Polish Airlines - Polskie Linie Lotnicze", "Registration": "SP-LCB", "Flight phase": "Landing (descent or approach)", "Flight type": "NA", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "10044", "YOM": "1943", "Flight number": "NA", "Crash location": "Stockholm-Bromma Uppland", "Country": "Sweden", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. There were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 157.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 145.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 12.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 301.0, "Country_stringindexer_transform": 6.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 5.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/11/1947", "Time": "23H 7M 0S", "Aircraft": "Avro 691 Lancastrian", "Operator": "Flota Aerea Mercante Argentina - FAMA", "Registration": "LV-ACS", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Buenos Aires \u2013 Rio de Janeiro \u2013 Natal \u2013 Dakar \u2013 Lisbon \u2013 Paris \u2013 London", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Natal Rio Grande do Norte", "Country": "Brazil", "Region": "South America", "Crew on board": "5", "Crew fatalities": "3", "Pax on board": "13", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "On touchdown by night at Natal Airport, the aircraft went out of control, veered off runway, collided with airport facilities and came to rest in flames. Three crew members and two passengers were killed while 13 other occupants were injured. The aircraft was destroyed by fire.", "Crash cause": "Unknown", "Date_stringindexer_transform": 62.0, "Time_stringindexer_transform": 123.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 289.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 245.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 72.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 19.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 361.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/11/1947", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW247", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Oakington - Oakington", "MSN": "MW247", "YOM": "1946", "Flight number": "NA", "Crash location": "Oakington Cambridgeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While on a training sortie in RAF Oakington, the aircraft belly landed and slid for several yards before coming to rest. All four crew members were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Human factor", "Date_stringindexer_transform": 62.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 355.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 97.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 334.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 163.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/12/1947", "Time": "NA", "Aircraft": "De Havilland DH.83 Fox Moth", "Operator": "Pays Plat Outfitters", "Registration": "CF-BNX", "Flight phase": "Takeoff (climb)", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "FM.15", "YOM": "NA", "Flight number": "NA", "Crash location": "Cirrus Lake Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Cirrus Lake, while climbing, the single engine aircraft hit trees and crashed in flames in a wooded area. The pilot was injured and the aircraft was destroyed by fire.", "Crash cause": "Human factor", "Date_stringindexer_transform": 135.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 88.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 14.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 148.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 222.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/13/1947", "Time": "18H 16M 0S", "Aircraft": "Douglas C-54 Skymaster", "Operator": "Pennsylvania Central Air Lines", "Registration": "NC88842", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Chicago-Cleveland-Pittsburgh-Washington DC-Norfolk", "MSN": "3112", "YOM": "1942", "Flight number": "NA", "Crash location": "Lookout Rock West Virginia", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "47", "PAX fatalities": "47", "Other fatalities": "0", "Total fatalities": 50, "Circumstances": "\"The flight departed Pittsburgh at 1724 and at 1753, 29 minutes later, reported over the Flintstone Intersection, 88 miles southeast of Pittsburgh at 7,000 feet. At 1754 the flight received a message from Washington Airway Traffic Control clearing it to the Herndon Fan Marker to maintain 7,000 feet until further advised The flight was also instructed that there would be an indefinite delay at Herndon but that approach clearance could be expected no later than 1920, which was approximately one hour and 10 minutes later than its estimated time of arrival Immediately after receiving this message the flight was given the 1730 hourly weather sequence report for Washington After acknowledging receipt of the Washington weather report, Flight 410 instructed the company station at Washington to request from Airway Traffic Control a clearance to approach Washington in accordance with contact flight rules on the right side of the west leg of the Arcola radio range This request was approved by Airway Traffic Control and at 1803 the flight received a message clearing it to the Washington tower to cross the Arcola radio range station at or below 2,500 feet and in accordance with contact flight rules. The flight was advised that if this were not possible it was to hold at 2,500 feet and to inform Airway Traffic Control. Prior to establishing its descent the flight was instructed to report when leaving each 1,000-foot level In accordance with these instructions Flight 410 reported leaving the 7,000-foot level at 1805 and two minutes later another report was received from the flight indicating it was leaving 6,000 feet. The flight reported its position as \"\"south of Martinsburg\"\" at 1808 and immediately thereafter reported that it was leaving 5", "Crash cause": "000 feet at that time At 1810 another report was received from the flight", "Date_stringindexer_transform": 49.0, "Time_stringindexer_transform": 124.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 31.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 18.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 127.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 28.0, "PAX fatalities_stringindexer_transform": 22.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 314.0, "Crash cause_stringindexer_transform": 12.0}, {"Date": "6/13/1947", "Time": "NA", "Aircraft": "AAC.1 Toucan", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Saigon - \u00d0\u00e0 L<U+1EA1>t", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Vietnam All Vietnam", "Country": "Vietnam", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "9", "PAX fatalities": "9", "Other fatalities": "0", "Total fatalities": 12, "Circumstances": "Crashed in unknown circumstances in a mountainous area located some 70 km north of \u00d0\u00e0 L<U+1EA1>t. All 12 occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 49.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 14.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 4.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 283.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 8.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 45.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/14/1947", "Time": "NA", "Aircraft": "Miles M.57 Aerovan", "Operator": "North Sea Air Transport", "Registration": "G-AISG", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "6405", "YOM": "1946", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff, while in initial climb, the aircraft stalled and crashed. The passenger and the pilot were injured while the captain was killed. The crew was performing a cargo flight with a load of 604 racing pigeons.", "Crash cause": "Other causes", "Date_stringindexer_transform": 241.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 79.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 37.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 176.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "6/15/1947", "Time": "14M 0S", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "44-62228", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Davis Monthan - Andrews - Hanscom Field - Davis Monthan", "MSN": "11705", "YOM": "NA", "Flight number": "NA", "Crash location": "Perkinsville Vermont", "Country": "United States of America", "Region": "North America", "Crew on board": "12", "Crew fatalities": "12", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 12, "Circumstances": "The flight had originated the previous morning when the plane took off from Davis-Monthan Air Force Base in Tucson, Arizona, for a navigational training mission to the east coast. The plane was scheduled to land at Andrews Field (Later known as Andrews Air Force Base) in Washington, D.C., but due to bad weather was diverted to Pittsburgh Airport where it arrived at 1507LT. After refueling, the aircraft proceeded towards Hanscom Air Force Base in Bedford, Massachusetts, where it was to remain overnight before flying back to Arizona the following day. However, the weather grew worse, and with poor visibility and darkness falling the crew became lost, ending up over Vermont instead of Massachusetts. Shortly after midnight on June 15, the bomber crashed into the southeast side of Hawks Mountain and exploded. All twelve men aboard were killed, and to this day the incident remains the worst aviation accident to ever occur in Vermont. Crew: 1st Lt Robert G. Fessler, pilot, 2nd Lt Wilfred E. Gassett, copilot, 2nd Lt Ceasare P. Fontana, observer, M/Sgt D. D. Jack, crew chief, T/Sgt Paul H. Fetterhoff, T/Sgt Clayton K. Knight, S/Sgt Oliver W. Hartwell, S/Sgt Sylvester S. Machalac, S/Sgt John J. O\u2019Toole, Cpl Harry C. Humphrey, Cpl Robert Clark, Pfc Robert M. Stewart. Source: http://www.newenglandaviationhistory.com/tag/b-29-44-62228/", "Crash cause": "Human factor", "Date_stringindexer_transform": 125.0, "Time_stringindexer_transform": 75.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 362.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 234.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 71.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 9.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 373.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/15/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "44-76244", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "15828/32576", "YOM": "1945", "Flight number": "NA", "Crash location": "Fort Knox Kentucky", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing. Crew fate unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 125.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 268.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 221.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 198.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/16/1947", "Time": "NA", "Aircraft": "Lisunov LI-2", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L4088", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Leninabad \u2013 Alma Ata", "MSN": "184 137 04", "YOM": "19", "Flight number": "NA", "Crash location": "Leninabad Sughd Province", "Country": "Tajikistan", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "2", "Pax on board": "3", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The aircraft lifted off from Leninabad after a takeoff roll of 1,200 meters only. After rotation, while in initial climb at a height of 2-3 meters, the aircraft hit a telephone pole and power cables, stalled and crashed in flames. Three occupants were killed while four others were injured, among them the copilot. The aircraft was partially destroyed by fire. The crew was performing a cargo flight to Alma Ata, carrying a load consisting of apricots and silk.", "Crash cause": "Other causes", "Date_stringindexer_transform": 126.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 30.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 194.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 399.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 223.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "6/16/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Philippine Airlines - PAL", "Registration": "PI-C11", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "19181", "YOM": "1943", "Flight number": "NA", "Crash location": "Cebu City Cebu", "Country": "Philippines", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "For unknown reason, the crew was forced to make an emergency landing on a beach in Cebu City. The aircraft was written off but there were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 126.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 198.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 20.0, "Country_stringindexer_transform": 18.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 216.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/19/1947", "Time": "18H 20M 0S", "Aircraft": "Beechcraft AT-7 Navigator", "Operator": "Lineas A\u00e9reas de Transporte Nacional - LATN", "Registration": "ZP-CBF", "Flight phase": "Flight", "Flight type": "Government", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "4114", "YOM": "1942", "Flight number": "NA", "Crash location": "Quyquyh\u00f3 Paraguar\u00ed", "Country": "Paraguay", "Region": "South America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The twin engine aircraft left Asunci\u00f3n Airport at 1750LT with two officers and two pilots on board. About thirty minutes into the flight, the crew encountered poor weather conditions with thunderstorm activity. The aircraft went out of control and crashed in an uninhabited area located near Quyquyh\u00f3. The pilot was killed and his body was found in the wreckage. However, no trace of the three other occupants was found. It is believed that they may have abandon the aircraft and bail out, but as their bodies were never found, they were considered as deceased.", "Crash cause": "Weather", "Date_stringindexer_transform": 47.0, "Time_stringindexer_transform": 122.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 420.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 16.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 216.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 226.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "6/19/1947", "Time": "1H 40M 0S", "Aircraft": "Lockheed L-049 Constellation", "Operator": "Pan American World Airways - PAA", "Registration": "N88845", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "New York \u2013 Los Angeles \u2013 Honolulu \u2013 Tokyo \u2013 Calcutta \u2013 Karachi \u2013 Istanbul \u2013 London \u2013 Gander \u2013 Shannon \u2013 New York", "MSN": "2045", "YOM": "1946", "Flight number": "NA", "Crash location": "Al Mayadin Deir ez-Zor Governorate (<U+0645><U+064F><U+062D><U+0627><U+0641><U+0638><U+0629> <U+062F><U+064A><U+0631> <U+0627><U+0644><U+0632><U+0648><U+0631><U+200E>)", "Country": "Syria", "Region": "Asia", "Crew on board": "10", "Crew fatalities": "7", "Pax on board": "26", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 14, "Circumstances": "\"Flight 121 departed from Karachi at 1537 June 18, 1947, for a return trip to the United States. The climb to the cruising altitude of' 18,500 feet was routine, and the flight was proceeding \u201cdirect\u201d to Istanbul, the first intended point of landing, estimating its arrival there to be 0208 the next day. Five hours after take-off trouble developed in the No. 1 engine, and the No. 1 propeller was feathered. The captain, J H. Hart, decided to continue to Istanbul with the use of three engines, however, it soon became evident that at an altitude of 18,500 feet the airspeed obtainable was not sufficient to provide adequate cooling for the engines. even though climb power was applied. Power was accordingly reduced and altitude was gradually lost. At 17,500 feet the engines still overheated and the descent was continued to 10,000 feet. At 2140, approximately one hour after the failure of engine No 1, the flight advised its company radio in Karachi of the engine trouble, following which it reported its 2200 position. This report placed the aircraft at 14,000 feet, 50 miles east of Baghdad, Iraq, and 90 miles east of the Royal Air Force Field at Habbaniya, Iraq Shortly after this report Habbaniya Tower was advised by the flight that its approximate position was over Baghdad. at an altitude of 10,000 feet, and the flight requested Habbaniya Tower to inform the civilian airfields in their area that the aircraft was proceeding with the use of only three engines to Istanbul Habbaniya Tower replied, stating that no airfields would be open until dawn, and suggested that an emergency landing be made at Habbaniya Flight 121, however, affirmed Its intention to continue, and added that if it were impossible to reach Istanbul, a landing would be made at Damascus, Syria Habbaniya Tower answered, at 2225, that all airfields in the Damascus area were closed until 0400 and again suggested that the flight land at Habbaniya. The flight again stated that It would continue to Istanbul, but that it would turn back to Habbaniya if it experienced any more trouble. Contemporaneous with this communication to Habbaniya Tower the flight sent a message, received in Karachi, and relayed to Damascus, requesting that Damascus Radio be alerted to stand by, and that the airport be opened. At 2308, June 18, Damascus Radio was on the air, and the field was opened as had been re quested. At approximately 2300 the flight reported its position to be 75 miles north west of Habbaniya at 10,000 feet Fifteen to thirty minutes later the purser seated in the passenger cabin noticed that the \"\"fasten seat belt-no smoking\u201d sign had come on", "Crash cause": " and he Immediately started to awaken the passengers so that they might fasten themselves in their seats. Suddenly. the entire cabin became illuminated from a fire which had started in Zone 1 of the No 2 engine nacelle. A report of this fire was received at 2330. by the Habbaniya direction finding station. at which time the flight was reporting a position of 34 38 degrees north and 41 05 degrees east", "Date_stringindexer_transform": 47.0, "Time_stringindexer_transform": 71.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 95.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 237.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 132.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 11.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 25.0, "PAX fatalities_stringindexer_transform": 6.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 28.0, "Crash cause_stringindexer_transform": 11.0}, {"Date": "6/20/1947", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Buchan's Mining Company", "Registration": "VO-ABL", "Flight phase": "Flight", "Flight type": "Executive/Corporate/Business", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "571", "YOM": "1944", "Flight number": "NA", "Crash location": "Hall's Bay Newfoundland & Labrador", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 236.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 118.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 10.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 426.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/21/1947", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Ontario Provincial Air Service", "Registration": "CF-OBP", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "N29-33", "YOM": "1947", "Flight number": "NA", "Crash location": "Poshkakagan Lake Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Poshkakagan Lake, the engine failed. The aircraft stalled and crashed on the shore. All four occupants were uninjured while the aircraft was written off.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 93.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 10.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 48.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 485.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "6/21/1947", "Time": "NA", "Aircraft": "Lisunov LI-2", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L4138", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Karkinyts\u2019ka Gulf Autonomous Republic of Crimea", "Country": "Ukraine", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "2", "Pax on board": "25", "PAX fatalities": "6", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "An engine failed in flight, forcing the crew to ditch the aircraft into the Karkinyts\u2019ka Gulf, some two km off shore. The aircraft sank fifteen minutes later and the crew of a trawler was able to evacuate 21 wounded people while 8 others, among them two crew members, were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 93.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 77.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 309.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 10.0, "PAX fatalities_stringindexer_transform": 10.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 412.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "6/22/1947", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Private Canadian", "Registration": "CF-DRR", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "840", "YOM": "1945", "Flight number": "NA", "Crash location": "Grey Trout Lake Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances shortly after takeoff from Grey Trout Lake, Ontario. All occupants survived while the aircraft owned by J. A. Mathieu was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 184.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 425.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 371.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 385.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/23/1947", "Time": "9H 12M 0S", "Aircraft": "Beechcraft AT-7 Navigator", "Operator": "Colombian Air Force - Fuerza A\u00e9rea Colombiana", "Registration": "507", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Cali \u2013 Bogot\u00e1", "MSN": "6708", "YOM": "1944", "Flight number": "NA", "Crash location": "Roncesvalles Tolima", "Country": "Colombia", "Region": "South America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "6", "PAX fatalities": "6", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The twin engine aircraft left Cali at 0827LT on a routine flight to Bogot\u00e1-Techo Airport. Some 45 minutes into the flight, the crew encountered icing conditions and the aircraft went out of control and crashed in a mountainous area located near the village of Roncesvalles, about 50 km southwest of Ibagu\u00e9. All eight occupants were killed.", "Crash cause": "Weather", "Date_stringindexer_transform": 45.0, "Time_stringindexer_transform": 83.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 9.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 233.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 266.0, "Country_stringindexer_transform": 21.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 12.0, "PAX fatalities_stringindexer_transform": 10.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 64.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "6/23/1947", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Ontario Provincial Air Service", "Registration": "G-CAOZ", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "505", "YOM": "1928", "Flight number": "NA", "Crash location": "Kwagama Lake Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Kwagama Lake, while in initial climb, the single engine aircraft encountered downdraft, stalled and crashed into the lake. Both occupants were rescued while the aircraft sank and was lost.", "Crash cause": "Weather", "Date_stringindexer_transform": 45.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 62.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 330.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 352.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "6/23/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-24291", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "10153", "YOM": "1943", "Flight number": "NA", "Crash location": "Hamlin Saskatchewan", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing. There were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 45.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 281.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 263.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 362.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/25/1947", "Time": "NA", "Aircraft": "Beechcraft C-45 Expeditor", "Operator": "United States Army Air Forces - USAAF", "Registration": "44-87231", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "8490", "YOM": "NA", "Flight number": "NA", "Crash location": "Mt Makiling Laguna", "Country": "Philippines", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "4", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While flying in marginal weather conditions, the twin engine aircraft hit the slope of Mt Makiling (1,090 meters high) located southeast of Calamba. The wreckage was founded three days later about 50 meters below the summit. All six occupants were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 158.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 326.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 274.0, "Country_stringindexer_transform": 18.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 17.0, "PAX fatalities_stringindexer_transform": 5.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 378.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/26/1947", "Time": "NA", "Aircraft": "SNCAC NC.701/702 Martinet", "Operator": "Soci\u00e9t\u00e9 A\u00e9rienne de Transports Internationaux - SATI", "Registration": "F-BBFO", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "140", "YOM": "NA", "Flight number": "NA", "Crash location": "Calcutta West Bengal", "Country": "India", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances in Calcutta. The operator SATI may be Soci\u00e9t\u00e9 d'Avions Taxis d'Indochine.", "Crash cause": "Unknown", "Date_stringindexer_transform": 155.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 400.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 29.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 189.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/27/1947", "Time": "18H 7M 0S", "Aircraft": "Miles M.57 Aerovan", "Operator": "Ulster Aviation", "Registration": "G-AJOB", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Woodley \u2013 Newtownards", "MSN": "6409", "YOM": "1947", "Flight number": "NA", "Crash location": "Cloughey Down", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While approaching the Irish coast, the left engine failed. The crew was unable to maintain the assigned altitude so the captain decided to ditch the aircraft near the South Rock Lighthouse, about 3 km from Coughley (Coghly). The aircraft hit the water surface with the base of its tail, overturned and came to rest upside down. Both crewmen escaped uninjured and found refuge on one wing. They were eventually rescued by the crew of a vessel two hours later. The aircraft was lost.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 117.0, "Time_stringindexer_transform": 106.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 209.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 195.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 445.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 102.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "6/27/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KN264", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Fayid \u2013 Nairobi", "MSN": "15749/27194", "YOM": "1945", "Flight number": "NA", "Crash location": "Isiolo Rift Valley", "Country": "Kenya", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "12", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute, the right engine failed and caught fire. The captain reduced his altitude and attempted an emergency landing in a swampy area located near Isiolo. The aircraft crash landed and was damaged beyond repair while all 15 occupants were able to evacuate safely. Crew from the 216th Squadron.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 117.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 312.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 60.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 245.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 268.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "6/28/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KJ979", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "14971/26416", "YOM": "1945", "Flight number": "NA", "Crash location": "Antananarivo Antananarivo Province", "Country": "Madagascar", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach, the aircraft was too low and hit the ground short of runway, lost its undercarriage and came to rest. There were no casualties but the aircraft was written off.", "Crash cause": "Human factor", "Date_stringindexer_transform": 216.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 170.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 357.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 309.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/1/1947", "Time": "9H 28M 0S", "Aircraft": "Ilyushin II-12", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L1317", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Moscow \u2013 Kharkiv \u2013 Sochi \u2013 Tbilisi", "MSN": "30 023", "YOM": "3", "Flight number": "NA", "Crash location": "Moscow-Vnukovo Moscow oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "4", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "One minute after takeoff, while in initial climb at a height of some 50 meters, the aircraft banked left to an angle of 30\u00b0, lost speed and altitude, then hit tree tops and crashed in a wooded area located 3 km from the airport. Four crew members were killed while a fifth crew and the passenger were seriously injured.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 9.0, "Time_stringindexer_transform": 110.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 417.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 108.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 23.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 196.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/1/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Transportes A\u00e9reos Nacionales - TAN Costa Rica", "Registration": "TI-107", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Guayaquil \u2013 San Jos\u00e9", "MSN": "4444", "YOM": "1942", "Flight number": "NA", "Crash location": "Pacific Ocean All World", "Country": "World", "Region": "World", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While performing a cargo flight from Guayaquil to San Jos\u00e9, the aircraft failed to arrive in Costa Rica. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor the crew was found. It is possible the aircraft crashed into the Pacific Ocean off the Costa Rican coast.", "Crash cause": "Unknown", "Date_stringindexer_transform": 9.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 427.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 202.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 7.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 465.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/1/1947", "Time": "NA", "Aircraft": "AAC.1 Toucan", "Operator": "Air France", "Registration": "F-BALF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Bangui \u2013 Yaound\u00e9 \u2013 Douala", "MSN": "91", "YOM": "NA", "Flight number": "NA", "Crash location": "Es\u00e9ka Centre", "Country": "Cameroon", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "10", "PAX fatalities": "10", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "While cruising in marginal weather conditions, the three engine aircraft hit the slope of a mountain near Es\u00e9ka. All thirteen occupants were killed. Crew: Louis Coupvent, pilot, Robert Ferrisse, radio navigator, Frank Malaret, mechanic.", "Crash cause": "Human factor", "Date_stringindexer_transform": 9.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 2.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 12.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 25.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 11.0, "PAX fatalities_stringindexer_transform": 17.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 3.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/1/1947", "Time": "NA", "Aircraft": "AAC.1 Toucan", "Operator": "Air France", "Registration": "F-BALF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Bangui \u2013 Yaound\u00e9 \u2013 Douala", "MSN": "91", "YOM": "NA", "Flight number": "NA", "Crash location": "Es\u00e9ka Centre", "Country": "Cameroon", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "10", "PAX fatalities": "10", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "While cruising in marginal weather conditions, the three engine aircraft hit the slope of a mountain near Es\u00e9ka. All thirteen occupants were killed. Crew: Louis Coupvent, pilot, Robert Ferrisse, radio navigator, Frank Malaret, mechanic.", "Crash cause": "Human factor", "Date_stringindexer_transform": 9.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 2.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 12.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 25.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 11.0, "PAX fatalities_stringindexer_transform": 17.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 3.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/2/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "French Navy", "Registration": "LT831", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Oran - Oran", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Oran-Tafraoui Oran", "Country": "Algeria", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While performing a solo training mission at Oran-Tafraoui Airfield (called BAN Lartigue in the 40's), the pilot lost control of the aircraft that crashed in Ouardia, about 2 km from the airport. The pilot Robert Georges Gosselin was killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 108.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 116.0, "Registration_stringindexer_transform": 305.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 175.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 225.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 40.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/2/1947", "Time": "NA", "Aircraft": "Miles M.57 Aerovan", "Operator": "Ulster Aviation", "Registration": "G-AGWO", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "6432", "YOM": "1946", "Flight number": "NA", "Crash location": "Newtownards Down", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on final approach to Newtownards Airfield. The aircraft was damaged beyond repair and both crewmen were injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 108.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 220.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 386.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 248.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/3/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Air Transport Association", "Registration": "G-AHFV", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Southampton - Saint Peter", "MSN": "NA", "YOM": "1946", "Flight number": "NA", "Crash location": "Niton Isle of Wight", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Enroute, the twin engine aircraft went out of control and crashed into The Channel, about 24 km southwest of Isle of Wight. Both crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 81.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 465.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 196.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 217.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 72.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/3/1947", "Time": "NA", "Aircraft": "Douglas C-54 Skymaster", "Operator": "United States Army Air Forces - USAAF", "Registration": "45-0519", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Hamilton - Morrison", "MSN": "35972", "YOM": "1945", "Flight number": "NA", "Crash location": "Sargasso Sea All World", "Country": "World", "Region": "World", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The four engine aircraft left Hamilton, Bermuda, bound for Morrison AFB located in Palm Beach, Florida. While cruising about 294 miles northeast of the Florida coast, the crew encountered severe weather conditions with thunderstorm activity and turbulence. The aircraft went out of control and crashed into the sea. Some debris were found but no trace of the six occupants that were considered as deceased.", "Crash cause": "Weather", "Date_stringindexer_transform": 81.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 454.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 206.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 163.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 351.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "7/5/1947", "Time": "NA", "Aircraft": "Short S.25 Sunderland", "Operator": "Royal Air Force - RAF", "Registration": "PP113", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Inishtrahull Island Ulster", "Country": "Ireland", "Region": "Europe", "Crew on board": "12", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The crew was engaged in an anti-submarine attack simulation of the HMS Sentinal. While cruising at low height, the seaplane hit the water surface, exploded and crashed about 32 km north of the Inishtrahull Island, off Donegal County. Five crew members were rescued while seven others were killed. For unknown reason, the pilot was flying at a too low altitude to complete the exercise. Crew from the 201st Squadron.", "Crash cause": "Human factor", "Date_stringindexer_transform": 127.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 125.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 118.0, "Country_stringindexer_transform": 34.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 9.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 193.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/5/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "349875", "Flight phase": "NA", "Flight type": "Military", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "15691/27136", "YOM": "1945", "Flight number": "NA", "Crash location": "Saigon Th\u00e0nh ph<U+1ED1> H<U+1ED3> Ch\u00ed Minh City District", "Country": "Vietnam", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 127.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 14.0, "Registration_stringindexer_transform": 468.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 4.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 14.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/7/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "NK877", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mt Meenard Londonderry", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While flying in a valley in marginal weather conditions, the twin engine aircraft hit tree tops and crashed in a wooded area located on Mt Meenard. Four crew members were injured while a pilot was killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 194.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 105.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 303.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 425.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/8/1947", "Time": "NA", "Aircraft": "Caudron C.440 Go\u00e9land", "Operator": "Air Azur", "Registration": "F-BAQT", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Tunis \u2013 Bizerta", "MSN": "10057/1171", "YOM": "NA", "Flight number": "NA", "Crash location": "Bizerte Bizerte Governorate (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+0628><U+0646><U+0632><U+0631><U+062A><U+200E>)", "Country": "Tunisia", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While approaching Bizerta Airport from the east, the twin engine aircraft crashed in unknown circumstances into the Mediterranean Sea, few km off shore. Both occupants were quickly rescued while the aircraft sank and was lost.", "Crash cause": "Unknown", "Date_stringindexer_transform": 203.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 199.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 119.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 94.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 241.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/11/1947", "Time": "NA", "Aircraft": "Lockheed C-60 LodeStar", "Operator": "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Registration": "2004", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Campo de Marte \u2013 Rio de Janeiro", "MSN": "18-2366", "YOM": "1943", "Flight number": "NA", "Crash location": "Campo de Marte AFB (S\u00e3o Paulo) S\u00e3o Paulo", "Country": "Brazil", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "2", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from Campo de Marte Airbase, while in initial climb, the twin engine aircraft went out of control and crashed. All occupants escaped injured while two people on the ground were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 160.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 109.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 239.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 120.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 2, "Circumstances_stringindexer_transform": 87.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/12/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-93802", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "13754", "YOM": "1944", "Flight number": "NA", "Crash location": "Oberr\u00f6blingen Saxony-Anhalt", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "An engine failed enroute, forcing the crew to attempt an emergency landing. The aircraft crash landed in a field in Oberr\u00f6blingen. There were no casualties but the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 189.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 421.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 115.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 142.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/13/1947", "Time": "4H 30M 0S", "Aircraft": "Douglas DC-3", "Operator": "Burke Air Transport", "Registration": "NC79024", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Newark \u2013 Baltimore \u2013 Augusta \u2013 Miami \u2013 San Juan", "MSN": "9887", "YOM": "1943", "Flight number": "NA", "Crash location": "Melbourne Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "33", "PAX fatalities": "12", "Other fatalities": "0", "Total fatalities": 14, "Circumstances": "At 0134LT, the flight departed Augusta bound for Miami. The last communication from the crew was at 0303LT, the morning of July 13, at which time they reported to the Jacksonville Airway radio that they were at 2,000 feet. One and one-half hours later, the aircraft was observed approximately 2 1/2 miles west of Melbourne, Florida, flying southeast at an altitude of from 300 to 500 feet. The engines were heard to sputter and misfire as the aircraft proceeded ahead on a straight course. Altitude was gradually lost, the landing lights were turned on, and seconds later the aircraft struck the ground and crashed 4 miles southwest of Melbourne. Both pilots and twelve passengers were killed while all other occupants were injured, some of them seriously.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 137.0, "Time_stringindexer_transform": 26.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 111.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 283.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 208.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 18.0, "PAX fatalities_stringindexer_transform": 13.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 444.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/14/1947", "Time": "NA", "Aircraft": "De Havilland DH.84 Dragon", "Operator": "Qantas Airways - Queensland and Northern Territory Aerial Services", "Registration": "VH-BAF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Lae \u2013 Wau", "MSN": "2027", "YOM": "1943", "Flight number": "NA", "Crash location": "Zenag Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Forced landing in trees in rugged terrain near the head of the Wampit River. Captain Ross K. Crabbe was en route from Lae to Wau with cases of supplies and two Australian passengers. Became trapped in a narrowing valley with low cloud base, deliberately put the aircraft into the spreading top branches of a tree. Crabb was hurled out of the cockpit through the nose and down to a ravine 36 meters below, injuring his back. The Dragon remained wedged in the top of the tree and his calls to the passengers were unanswered. A group of native hunters heard the crash and reported it to a nearby Government station. Two medical assistants were led to the scene, climbed the tree in the dark and administered morphine to the injured passengers and stayed with them for the night. The aircraft fabric was tearing as it moved and settled in the tree. Next day a team with a doctor arrived and the passengers were lowered in baskets. One seriously injured passenger was flown to Sydney by QEA DC-3 for plastic surgery for facial injuries. Source and photo: http://www.goodall.com.au/australian-aviation/dh84-pt2/dh84-dragon-pt2.htm", "Crash cause": "Human factor", "Date_stringindexer_transform": 175.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 74.0, "Registration_stringindexer_transform": 86.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 74.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 367.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 450.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/15/1947", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Aros-Flyg", "Registration": "SE-ABY", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "V\u00e4ster\u00e5s - G\u00f6teborg", "MSN": "1333", "YOM": "1930", "Flight number": "NA", "Crash location": "Tumlehed V\u00e4sterg\u00f6tland", "Country": "Sweden", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight from V\u00e4ster\u00e5s to G\u00f6teborg. On approach to Torslanda Airport from the northwest, the single engine aircraft went out of control, crashed into the sea off Tumlehed and came to rest upside down. Both occupants were rescued while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 2.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 16.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 264.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 224.0, "Country_stringindexer_transform": 6.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 415.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/15/1947", "Time": "NA", "Aircraft": "Miles M.57 Aerovan", "Operator": "Miles Aircraft", "Registration": "G-AISJ", "Flight phase": "Taxiing", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "6404", "YOM": "1947", "Flight number": "NA", "Crash location": "Woodley Berkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew (pilots and engineers) was involved in a ground test of the brakes systems. During taxiing, while practicing fast stop, the nose gear collapsed and punctured the cockpit floor. There were no injuries but the aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 2.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 68.0, "Flight phase_stringindexer_transform": 4, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 177.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 32.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/15/1947", "Time": "NA", "Aircraft": "AAC.1 Toucan", "Operator": "A\u00e9ro Cargo", "Registration": "F-BCHH", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Paris \u2013 Vichy", "MSN": "323", "YOM": "NA", "Flight number": "NA", "Crash location": "Vichy Allier", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "16", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On touchdown, the three engine aircraft skidded and then went out of control. It veered off runway and came to rest in flames in a field. A passenger was killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 2.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 340.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 30.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 101.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 23.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 472.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/15/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "476353", "Flight phase": "NA", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "15937/32685", "YOM": "1945", "Flight number": "NA", "Crash location": "Saigon Th\u00e0nh ph<U+1ED1> H<U+1ED3> Ch\u00ed Minh City District", "Country": "Vietnam", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Crew fate remains unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 2.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 14.0, "Registration_stringindexer_transform": 418.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 14.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 403.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/16/1947", "Time": "22H 40M 0S", "Aircraft": "Avro 685 York", "Operator": "British Overseas Airways Corporation - BOAC", "Registration": "G-AGNR", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "London \u2013 Luqa \u2013 Cairo \u2013 Basra \u2013 Karachi \u2013 New Delhi \u2013 Calcutta", "MSN": "1219", "YOM": "1945", "Flight number": "NA", "Crash location": "Shaibah AFB (Basrah) Al-Basrah (<U+0627><U+0644><U+0628><U+0635><U+0631><U+0629>)", "Country": "Iraq", "Region": "Asia", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "12", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "Enroute from Cairo to Basra, the crew was informed by ATC about poor weather in Basra and was instructed to divert to the Shaibah AFB located east of Basra. On approach by night, the pilot was unable to locate the runway and was forced to abandon the landing procedure for a go around. A second attempt to land and a third approach few minutes later were abandoned as well. During the fourth trial, the captain reduced his altitude in an attempt to establish a visual contact with the ground when the four engine aircraft hit the ground and bounced. It gain few meters, flew over a wooded area and eventually stalled and crashed 740 yards further, in a desert area. All six crew members were killed while 12 passengers were injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 90.0, "Time_stringindexer_transform": 64.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 461.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 129.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 30.0, "Country_stringindexer_transform": 9.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 384.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/16/1947", "Time": "NA", "Aircraft": "Ford 5", "Operator": "Shell Company of Ecuador", "Registration": "HC-SBK", "Flight phase": "NA", "Flight type": "Executive/Corporate/Business", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "5-AT-067", "YOM": "27", "Flight number": "NA", "Crash location": "Ecuador All Ecuador", "Country": "Ecuador", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed somewhere in Ecuador. Occupant fate remains unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 90.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 84.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 10.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 4.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 91.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 256.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/17/1947", "Time": "NA", "Aircraft": "Martin 187 Baltimore", "Operator": "Turkish Air Force - T\u00fcrk Hava Kuvvetleri", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Diyarbakir - Diyarbakir", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Diyarbakir Southeastern Anatolia Region (G\u00fcneydogu Anadolu B\u00f6lgesi)", "Country": "Turkey", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Sadettin Toker was killed when his Baltimore crashed in unknown circumstances near the Diyarbakir Airport while performing a training sortie.", "Crash cause": "Unknown", "Date_stringindexer_transform": 272.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 122.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 13.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 31.0, "Country_stringindexer_transform": 38.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 387.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/18/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Southern Aerowork", "Registration": "G-AIXT", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "20520", "YOM": "1946", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff from Croydon Airport for unknown reason. Both crew members were injured and the aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 167.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 259.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 37.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 284.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/21/1947", "Time": "10H 15M 0S", "Aircraft": "Douglas C-54 Skymaster", "Operator": "Argentinian Air Force - Fuerza A\u00e9rea Argentina", "Registration": "T-44", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "El Palomar - Mor\u00f3n", "MSN": "7463", "YOM": "1944", "Flight number": "NA", "Crash location": "El Palomar AFB Buenos Aires province", "Country": "Argentina", "Region": "South America", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "15", "PAX fatalities": "11", "Other fatalities": "3", "Total fatalities": 17, "Circumstances": "During the takeoff roll, the captain elected to rotate but the aircraft failed to respond. The crew attempted to make an emergency braking procedure but the aircraft failed to stop within the remaining runway, overran, hit several people who came to the airport to assist to the departure of the aircraft, crossed a road and came to rest in flames. Fourteen occupants plus three people on the ground were killed. Five other occupants plus eight people on the ground were seriously injured. The aircraft was destroyed by fire. The crew was on a flight to the nearby airbase of Mor\u00f3n to take part to the commemoration of the death of the Argentinian General Jos\u00e9 de San Martin in 1850. About 200 aircraft from the Argentinian Air Force were taking part to this event.", "Crash cause": "Unknown", "Date_stringindexer_transform": 128.0, "Time_stringindexer_transform": 31.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 237.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 177.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 261.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 6.0, "PAX fatalities_stringindexer_transform": 4.0, "Other fatalities_stringindexer_transform": 2, "Circumstances_stringindexer_transform": 157.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/21/1947", "Time": "NA", "Aircraft": "Martin 187 Baltimore", "Operator": "Turkish Air Force - T\u00fcrk Hava Kuvvetleri", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Eskisehir - Eskisehir", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Eskisehir Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "Country": "Turkey", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Crashed while performing a training sortie in Eskisehir AFB. Both crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 128.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 122.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 104.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 345.0, "Country_stringindexer_transform": 38.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 36.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/22/1947", "Time": "NA", "Aircraft": "Consolidated PB4Y-2 Privateer", "Operator": "United States Navy - USN", "Registration": "59821", "Flight phase": "Landing (descent or approach)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Whidbey Island - Whidbey Island", "MSN": "59821", "YOM": "1943", "Flight number": "NA", "Crash location": "Whidbey Island NAS (Ault Field) Washington", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "On final approach to Whidbey Island-Ault Field NAS, the aircraft was too low, hit tree tops and crashed in flames. All five crew members were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 232.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 411.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 15.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 7.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 39.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 404.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/25/1947", "Time": "13H 30M 0S", "Aircraft": "Avro 685 York", "Operator": "Flota Aerea Mercante Argentina - FAMA", "Registration": "LV-XIH", "Flight phase": "Landing (descent or approach)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mor\u00f3n - Mor\u00f3n", "MSN": "1366", "YOM": "1946", "Flight number": "NA", "Crash location": "Mor\u00f3n AFB Buenos Aires province", "Country": "Argentina", "Region": "South America", "Crew on board": "6", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "1", "Total fatalities": 3, "Circumstances": "The crew consisting of pilots and engineers was completing a test flight in Mor\u00f3n AFB following engine maintenance. After touchdown, the aircraft collided with a tank-truck that was mistakenly on the runway. The truck and the airplane exploded. Two crew members and the truck driver were killed while four other occupants were injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 59.0, "Time_stringindexer_transform": 35.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 15.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 139.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 387.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 2, "Circumstances_stringindexer_transform": 484.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/25/1947", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Skyways of London", "Registration": "G-AIUP", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin \u2013 London", "MSN": "1374", "YOM": "1946", "Flight number": "NA", "Crash location": "London-Heathrow London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "17", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After landing, the four engine aircraft encountered brakes problem and was unable to stop within the remaining distance. It overran and came across a river 250 yards further on. All 24 occupants were evacuated safely, four of them were slightly injured. The aircraft was written off.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 59.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 162.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 9.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 3.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 15.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 175.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/26/1947", "Time": "NA", "Aircraft": "Lockheed PV-1 Ventura", "Operator": "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Registration": "5039", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Recife - Recife", "MSN": "6239", "YOM": "1944", "Flight number": "NA", "Crash location": "Recife Pernambuco", "Country": "Brazil", "Region": "South America", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "Crashed in unknown circumstances into the Rio Capibaribe in Recife. All six crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 146.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 24.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 103.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 219.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 211.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/29/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Indonesian Government", "Registration": "VT-CLA", "Flight phase": "Landing (descent or approach)", "Flight type": "Humanitarian", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Singapore - Yogyakarta", "MSN": "15471/26916", "YOM": "1944", "Flight number": "NA", "Crash location": "Yogyakarta Special Region of Yogyakarta", "Country": "Indonesia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The crew was performing a humanitarian flight from Singapore on behalf of the Indonesian Red Cross with drugs on board. On final approach to Yogyakarta-Maguwo Airport, the Dakota was shot down by the pilots of two NEIAF (Netherlands East Indies Air Force) fighters and crashed in an open field located few km from the airport. All five occupants were killed. Indonesian authorities confirmed that the aircraft was flying under civilian color scheme but did not have any Red Cross painted on its fuselage. So it is most probable that the fighters' pilots mistook the aircraft and thought it was a military plane carrying soldiers. Both pilots were Australian citizens as all three passengers were high ranking Indonesian Army Officers. Still registered in India, the aircraft was offered few days ago to the Indonesian government by Jawaharlal Nehru, future Indian Prime Minister. Following this tragedy, Indonesian Authorities will rename the airport of Yogyakarta that became Adisutjipto instead of Maguwo. Crew: A. N. Constantine, pilot, R. Hazlehurst, copilot, B. Ram, flight engineer, A. Q. Wirjokoesoemo, radio navigator. Passengers: Agustinus Adisutjipto, Abdulrahman Saleh, Adisumarmo Wirjokusumo.", "Crash cause": "Terrorism act, Hijacking, Sabotage", "Date_stringindexer_transform": 180.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 422.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 18.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 75.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 58.0, "Country_stringindexer_transform": 7.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 220.0, "Crash cause_stringindexer_transform": 5.0}, {"Date": "7/31/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Chinese Air Force - AFPLA - Chung-Kuo Shan Min Taie Fang Tsun Pu-Tai", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Urumqi \u2013 Lanzhou", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wuwei Gansu", "Country": "China", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "22", "PAX fatalities": "22", "Other fatalities": "0", "Total fatalities": 26, "Circumstances": "While on a flight from Urumqi to Lanzhou, the aircraft crashed in a mountainous area located in the region of Wuwei. The wreckage was found few days later and all 26 occupants were killed, among them one US and one British citizen.", "Crash cause": "Unknown", "Date_stringindexer_transform": 53.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 279.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 248.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 24.0, "PAX fatalities_stringindexer_transform": 12.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 21.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/31/1947", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "London Aero %26 Motor Services - LAMS", "Registration": "G-AHZJ", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bergamo \u2013 Stansted", "MSN": "1331", "YOM": "1946", "Flight number": "NA", "Crash location": "Bergamo Lombardy", "Country": "Italy", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll, the aircraft went out of control, veered off runway and came to rest. All five crew members were unhurt while the aircraft christened 'Port of Marseilles' was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 53.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 164.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 130.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 273.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 41.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/1/1947", "Time": "2H 30M 0S", "Aircraft": "North American B-25 Mitchell", "Operator": "United States Army Air Forces - USAAF", "Registration": "44-31316", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "McChord - Hamilton", "MSN": "108-37391", "YOM": "NA", "Flight number": "NA", "Crash location": "Kelso Washington", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The twin engine aircraft left McChord AFB at 0212LT bound for Hamilton AFB located in Novato, California. About fifteen minutes into the flight, the left engine caught fire and smoke spread into the cabin. Two crew members bailed out when the left wing broke off. Out of control, the aircraft dove into the ground and crashed in a pasture located 15 miles east of Kelso. Both crew who bailed out were able to walk away and to find help while both pilots were killed in the crash.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 201.0, "Time_stringindexer_transform": 94.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 21.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 308.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 144.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 447.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/2/1947", "Time": "14H 41M 0S", "Aircraft": "Avro 691 Lancastrian", "Operator": "British South American Airways - BSAA", "Registration": "G-AGWH", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "London \u2013 Lisbon \u2013 Banjul \u2013 Natal \u2013 Buenos Aires \u2013 Santiago de Chile", "MSN": "1280", "YOM": "1945", "Flight number": "NA", "Crash location": "Mt Tupungato Mendoza", "Country": "Argentina", "Region": "South America", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "6", "PAX fatalities": "6", "Other fatalities": "0", "Total fatalities": 11, "Circumstances": "After passing over Mendoza, enroute to Santiago de Chile, the crew encountered poor weather conditions with strong winds (up to 180 km/h) and heavy snow falls. While cruising at an altitude of 15,000 feet, the four engine aircraft christened 'Star Dust' hit the slope of Mt Tupungaro located in the Argentinian Andes. As the airplane failed to arrive, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor the crew was found. About 53 years later, in 2000, an official mission conducted by Argentinian Army Officers and Scientists was organized to find the aircraft. Few debris and three bodies were found and repatriated down to the valley.", "Crash cause": "Weather", "Date_stringindexer_transform": 207.0, "Time_stringindexer_transform": 88.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 87.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 90.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 289.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 12.0, "PAX fatalities_stringindexer_transform": 10.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 390.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "8/4/1947", "Time": "15H 0M 0S", "Aircraft": "Lockheed 10 Electra", "Operator": "LAN Chile - Linea A\u00e9rea Nacional de Chile", "Registration": "CC-CLE", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "1141", "YOM": "NA", "Flight number": "NA", "Crash location": "Antofagasta Regi\u00f3n de Antofagasta", "Country": "Chile", "Region": "South America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While cruising in marginal weather conditions, the twin engine aircraft christened 'Pedro de Valdivia' hit the slope of Mt Coloso located in the region of Antofagasta. All three occupants were killed. Crew: Roberto Reed Merino, pilot, Enrique \u00c1lmos Ojeda, copilot.", "Crash cause": "Human factor", "Date_stringindexer_transform": 211.0, "Time_stringindexer_transform": 1.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 71.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 70.0, "Country_stringindexer_transform": 27.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 188.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/5/1947", "Time": "10H 20M 0S", "Aircraft": "Beechcraft C-45 Expeditor", "Operator": "SATA Air A\u00e7ores", "Registration": "CS-TAA", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Ponta Delgada - Santa Maria", "MSN": "6076", "YOM": "NA", "Flight number": "NA", "Crash location": "Ponta Delgada Azores Islands", "Country": "Portugal", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "5", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "Shortly after takeoff from Ponta Delgada Airport, while in initial climb, the twin engine aircraft went out of control and crashed into the sea few km off shore. Few debris were found on water surface but all six occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 27.0, "Time_stringindexer_transform": 69.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 12.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 293.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 404.0, "Country_stringindexer_transform": 28.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 9.0, "PAX fatalities_stringindexer_transform": 16.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 416.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/5/1947", "Time": "NA", "Aircraft": "Douglas A-20 Havoc", "Operator": "Gidrometeosluzhba", "Registration": "CCCP-M187", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Moscow - Moscow", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Naberezhnaya Moscow oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was engaged in a local training flight in Moscow. While flying at an altitude of 400-450 meters, the crew initiated an engine failure when the aircraft lost speed while performing a steep turn to the left. The aircraft went upside down and crashed in Naberezhnaya, in the suburb of Moscow. All five occupants were killed. It was reported that both passengers were illegal.", "Crash cause": "Human factor", "Date_stringindexer_transform": 27.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 210.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 303.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 183.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 192.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/5/1947", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "Vingtor Luftveier", "Registration": "LN-OAR", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Oslo \u2013 Svolv\u00e6r", "MSN": "28179", "YOM": "NA", "Flight number": "NA", "Crash location": "Svolvaer (Lofoten Islands) Nordland", "Country": "Norway", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "7", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While landing in the Svolv\u00e6r Bay, the seaplane went out of control and plunged into the water before coming to rest. There were no casualties among the 12 occupants while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 27.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 27.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 262.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 142.0, "Country_stringindexer_transform": 16.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 7.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 228.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/6/1947", "Time": "20H 40M 0S", "Aircraft": "Lisunov LI-2", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L4017", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Banke - Banke", "MSN": "184 53 06", "YOM": "13", "Flight number": "NA", "Crash location": "Banke Aran", "Country": "Azerbaijan", "Region": "Asia", "Crew on board": "6", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The aircraft and its crew were dispatched from Baku-Zabrat Airport to the south (125 km south of Baku) to complete a night training program. While approaching Banke Airstrip, at a height of 100 meters, the pilot in command made a turn to the left when the aircraft stalled and crashed. Four crew members were killed while two others were seriously injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 32.0, "Time_stringindexer_transform": 78.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 324.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 117.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 198.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 343.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/6/1947", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "British European Airways - BEA", "Registration": "G-AGJF", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "6499", "YOM": "1943", "Flight number": "NA", "Crash location": "Barra Hebrides Islands", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "6", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after takeoff from Barra Airport, Barra Island. The aircraft was written off and all seven occupants were rescued.", "Crash cause": "Unknown", "Date_stringindexer_transform": 32.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 275.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 337.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 12.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 388.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/6/1947", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "United States Navy - USN", "Registration": "34032", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Kodiak \u2013 Unalaska", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Pacific Ocean All World", "Country": "World", "Region": "World", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "15", "PAX fatalities": "15", "Other fatalities": "0", "Total fatalities": 20, "Circumstances": "The aircraft was on its way from Kodiak to Unalaska, carrying a crew of five and fifteen members of a Navy football team. While cruising some 250 km from the destination, the crew informed ground he encountered strong head winds. Shortly later, the seaplane crashed in unknown circumstances into the sea. All 20 occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 32.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 175.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 33.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 7.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 6.0, "PAX fatalities_stringindexer_transform": 9.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 295.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/8/1947", "Time": "18H 49M 0S", "Aircraft": "Douglas DC-3", "Operator": "American Airlines", "Registration": "NX88787", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "New York \u2013 Rochester", "MSN": "19639", "YOM": "1944", "Flight number": "NA", "Crash location": "New York-LaGuardia New York", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The aircraft took off on runway 13 of La Guardia Airport at 1843LT, having been cleared on an instrument flight plan to Rochester, New York, with Toronto, Ontario, as an alternate. Approximately 2 minutes after take-off the flight called La Guardia Tower and reported that it was in the vicinity of the south end of Whitestone Bridge, approximately 2 1/2 miles northeast of La Guardia Airport. The flight advised that the oil pressure was low on one engine, and requested clearance to land on runway 22. The request was approved, and the tower informed the crew that the wind was calm. When asked if emergency equipment was desired to stand by, the flight replied in the negative. Shortly thereafter, NX88787 reported that it was on the final approach, and that it was over the sand barges, located approximately one-half mile off the approach end of runway 22. In reply the flight was again given clearance to land. The aircraft was first seen at an altitude of approximately 800 feet, and about 1,300 feet off the approach end of runway 22 with the landing gear extended. The flaps were lowered, and the aircraft started a steep descent to runway 22,but it passed over the approach end of the runway at an altitude of approximately 300 feet. The flight then requested and was granted permission by the tower to make a right turn, however, the aircraft continued straight ahead over the runway, gradually losing altitude. When one-third of the way down the runway, the right propeller was feathered. When over the intersection of runways 22 and 18 and at an altitude of 200 feet the flaps were raised, which resulted in an additional loss of altitude. During or directly after raising the flaps, a right turn was initiated, and the landing gear was observed to retract slowly. Competent witnesses stated that the right turn was made at a very slow speed, at a high angle of attack, and at an altitude appearing never to have exceeded 200 feet. Over Bowery Bay the aircraft on two occasions almost settled into the water. When in a flat right turn toward runway 13 it lost altitude to about 50 feet. Approximately 2,000 feet from the end of the runway, the landing gear started to extend, and became fully extended when the aircraft was aligned with runway 13. At this time the airplane attitude appeared to be that of a steep climb. The wings were seen to wobble slightly, then the left wing and nose dropped, and the airplane struck the water at an angle of approximately 20 degrees. The forward movement of the aircraft continued on the surface of the water for 40 to 50 feet, throwing up a great spray as the tail rose to a vertical position, after which the aircraft continued over on its back and sank in about 5 minutes.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 119.0, "Time_stringindexer_transform": 60.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 240.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 131.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 12.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 214.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/8/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "New England Airways", "Registration": "VH-BCH", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Sydney \u2013 Kempsey", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Kempsey New South Wales", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a cargo flight from Sydney-Mascot. On touchdown in Kempsey, the undercarriage collapsed. The aircraft skidded on runway, came to rest and was damaged beyond repair. Both pilots were unarmed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 119.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 408.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 79.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 369.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 424.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/9/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Aktiebolaget Aerotransport - ABA", "Registration": "SE-BAY", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Amsterdam \u2013 Malm\u00f6", "MSN": "19559", "YOM": "1944", "Flight number": "NA", "Crash location": "Malm\u00f6 Sk\u00e5ne", "Country": "Sweden", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On approach to Malm\u00f6-Bulltofta Airport, the aircraft was too high on the glide. Instead of making a go around, the captain decided to nose down, increase engine power and landed at high speed. Unable to stop within the remaining distance, the aircraft overran and hit an embankment before coming to rest. The aircraft was destroyed, a crew member was killed while four others were seriously injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 149.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 201.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 41.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 242.0, "Country_stringindexer_transform": 6.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 408.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/11/1947", "Time": "NA", "Aircraft": "De Havilland DH.83 Fox Moth", "Operator": "Photographic Survey Company", "Registration": "CF-DJG", "Flight phase": "Taxiing", "Flight type": "Aerial photography", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "FM.32", "YOM": "NA", "Flight number": "NA", "Crash location": "Quebec Quebec", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Ready for departure, the single engine aircraft was taxiing on a lake located in eastern Quebec, about 160 km south of Goose Bay, when it collided with an unknown obstacle and sank. Both occupants were unhurt.", "Crash cause": "Other causes", "Date_stringindexer_transform": 290.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 120.0, "Flight phase_stringindexer_transform": 4, "Flight type_stringindexer_transform": 13.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 310.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 43.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "8/12/1947", "Time": "11H 30M 0S", "Aircraft": "North American B-25 Mitchell", "Operator": "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Registration": "5067", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Rio de Janeiro - Rio de Janeiro", "MSN": "108-32772", "YOM": "NA", "Flight number": "NA", "Crash location": "Pendotiba Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The crew was completing a training sortie from Rio de Janeiro-Gale\u00e3o Airport. While flying at low altitude in marginal weather conditions, the twin engine aircraft hit tree tops and crashed in a huge explosion in a wooded area located near Pendotiba, east of Rio de Janeiro. All seven crew members were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 109.0, "Time_stringindexer_transform": 13.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 286.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 242.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 204.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 126.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/12/1947", "Time": "NA", "Aircraft": "Douglas C-54 Skymaster", "Operator": "Flota Aerea Mercante Argentina - FAMA", "Registration": "LV-ABL", "Flight phase": "Landing (descent or approach)", "Flight type": "Government", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Buenos Aires \u2013 Rio de Janeiro", "MSN": "3080", "YOM": "1943", "Flight number": "NA", "Crash location": "Itapemirim Esp\u00edrito Santo", "Country": "Brazil", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The four engine aircraft was completing a flight from Buenos Aires to Rio de Janeiro, carrying an Argentinian delegation to the Inter-American Conference in Rio de Janeiro. Due to poor visibility caused by thick fog, the crew failed to establish a visual contact with the airport of Rio and continued to the northeast. Eventually, the captain elected to make an emergency landing, maybe due to fuel shortage. The aircraft crash landed on a beach located in Itapemirim, about 330 km northeast of Rio. The aircraft was written off while all occupants were unhurt.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 109.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 82.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 16.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 184.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 336.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 312.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/13/1947", "Time": "23H 27M 0S", "Aircraft": "Junkers JU.52", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Orl\u00e9ans \u2013 Chartres", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Orl\u00e9ans-Bricy Loiret", "Country": "France", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "Six minutes after takeoff from Orl\u00e9ans-Bricy Airbase, while in initial climb, the three engine aircraft went out of control and crashed in flames in a wooded area located 2 km north of Cercottes. All eight crew members were killed. Crew (Escadron de Transport 3/61 Poitou): Lt Andr\u00e9 Brisset, Lt Yves Fouques, Lt Bernard Couturier, Lt Charles Nguyen Than, Lt Pierre Bourdet, Lt Lucien Turina, Lt C\u00e9sar Serbassi, Sgt Charles Guinet.", "Crash cause": "Unknown", "Date_stringindexer_transform": 79.0, "Time_stringindexer_transform": 117.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 14.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 92.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 176.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 307.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/13/1947", "Time": "NA", "Aircraft": "Lisunov LI-2", "Operator": "TARS - Transporturile Aeriene Rom\u00e2no-Sovietice", "Registration": "YR-TAV", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Constanta \u2013 Bucharest", "MSN": "184 238 01", "YOM": "1951", "Flight number": "NA", "Crash location": "Bucharest-Baneasa Bucure<U+0219>ti", "Country": "Romania", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "5", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Crashed on final approach to Bucharest-Baneasa Airport. Three passengers were killed while five other occupants were injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 79.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 338.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 273.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 443.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 9.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 448.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/14/1947", "Time": "NA", "Aircraft": "Fairchild C-82 Packet", "Operator": "United States Army Air Forces - USAAF", "Registration": "44-22960", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Wright-Patterson - Wright-Patterson", "MSN": "10004", "YOM": "1944", "Flight number": "NA", "Crash location": "Wright-Patterson AFB (Dayton) Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in a garden in New Germany while on approach to Wright-Patterson AFB. All four crew members were injured and the aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 66.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 466.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 253.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 38.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 111.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/14/1947", "Time": "NA", "Aircraft": "Avro 683 Lancaster", "Operator": "Royal Air Force - RAF", "Registration": "SW371", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Ballykelly - Ballykelly", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ballykelly AFB Londonderry", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff when all four engines failed simultaneously. All five crew members were injured and the aircraft was written off.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 66.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 285.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 173.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 53.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 96.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/15/1947", "Time": "23H 45M 0S", "Aircraft": "Vought-Sikorsky VS-44", "Operator": "Transporte A\u00e9reo de Carga Internacional", "Registration": "CX-AIR", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "4403", "YOM": "1942", "Flight number": "NA", "Crash location": "Montevideo Montevideo City District", "Country": "Uruguay", "Region": "South America", "Crew on board": "5", "Crew fatalities": "4", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While landing by night off Montevideo, the seaplane crashed, overturned and sank. Four crew members were killed while both passengers and a fifth crewman were injured. The aircraft was lost. Source: http://1000aircraftphotos.com/Contributions/HornDavid/9343.htm", "Crash cause": "Unknown", "Date_stringindexer_transform": 299.0, "Time_stringindexer_transform": 59.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 294.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 413.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 369.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/16/1947", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "43-39465", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Tokyo \u2013 Honolulu \u2013 Los Angeles \u2013 Washington DC", "MSN": "10443", "YOM": "NA", "Flight number": "NA", "Crash location": "Pacific Ocean All World", "Country": "World", "Region": "World", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "9", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While approaching the Hawaiian coast of Oahu Island on a flight from Tokyo, the crew encountered a fuel exhaustion and was forced to ditch the aircraft about 60 miles west of Hickam Field where it should land. Ten people were rescued while three others were killed, among them George Acheson, personal advisor of General McArthur and President of the Allied Council in Japan.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 263.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 206.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 225.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 7.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 483.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/18/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "PH865", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Maridi Western Equatoria (<U+063A><U+0631><U+0628> <U+0627><U+0644><U+0627><U+0633><U+062A><U+0648><U+0627><U+0626><U+064A><U+0629>)", "Country": "South Sudan", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While cruising by night in good weather conditions, a short-circuit on the electrical system caused the failure of several instruments. As the crew decided to fly without a navigator (which was considered against RAF procedures), the captain decided to reduce his altitude in an attempt to make an emergency landing. The aircraft belly landed in a prairie, skidded for several yards and eventually came to rest with its left engine in flames. Both crewmen were able to leave the aircraft that was destroyed by fire.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 274.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 152.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 267.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 464.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/20/1947", "Time": "NA", "Aircraft": "De Havilland DH.84 Dragon", "Operator": "Mandated Airlines", "Registration": "VH-AYB", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Lae \u2013 Kokoda \u2013 Popondetta", "MSN": "2065", "YOM": "1943", "Flight number": "NA", "Crash location": "Lae Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "\"After takeoff from Lae-Nadzab Airport, while climbing vertical to the Huon Gulf, the right engine failed, followed shortly later by the left engine. The pilot reduced his altitude and ditched the aircraft off Lae. All three occupants were quickly rescued by a fisherman while the aircraft was lost. Testimony from the passenger: \"\"I had the day off and Johnny Rose was doing a trip to Kokoda and Popondetta. I'd never been there and when he offered me a seat I jumped at it. He had another passenger on board", "Crash cause": " engineer Fred Starr. We took off and headed across the Huon Gulf in the general direction of Salamaua. Then bang", "Date_stringindexer_transform": 154.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 127.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 277.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 15.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 420.0, "Crash cause_stringindexer_transform": 13.0}, {"Date": "8/21/1947", "Time": "6H 11M 0S", "Aircraft": "Curtiss C-46 Commando", "Operator": "Slick Airways", "Registration": "NC59488", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Denver \u2013 Los Angeles", "MSN": "2935", "YOM": "1945", "Flight number": "NA", "Crash location": "Mt Blue Bell Knoll Utah", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While flying at an altitude of 10,000 feet in marginal weather conditions, the aircraft hit the slope of Mt Blue Bell Knoll located north of Boulder, Utah. The aircraft was destroyed by impact forces and all three occupants were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 282.0, "Time_stringindexer_transform": 45.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 463.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 267.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 437.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 322.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/22/1947", "Time": "4H 0M 0S", "Aircraft": "Short S.25 Sandringham", "Operator": "British Overseas Airways Corporation - BOAC", "Registration": "G-AHZB", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Hong Kong \u2013 Karachi \u2013 Bahrain \u2013 London", "MSN": "SH-38C", "YOM": "1946", "Flight number": "NA", "Crash location": "Bahrain All Bahrain", "Country": "Bahrain", "Region": "Asia", "Crew on board": "8", "Crew fatalities": "3", "Pax on board": "18", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 10, "Circumstances": "The approach to Bahrain was completed by night and the crew landed in the Marine Base at an indicated speed of 85 to 90 knots. Upon landing, the seaplane had a tendency to nose down so the captain counteracted with the control column and increased power simultaneously. The aircraft bounced, left water for about one to two seconds and then veered sharply to the left. Out of control, it plunged into water and came to rest. Three crew members and seven passengers were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 250.0, "Time_stringindexer_transform": 8.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 8.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 266.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 87.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 21.0, "PAX fatalities_stringindexer_transform": 6.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 269.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/23/1947", "Time": "NA", "Aircraft": "Avro 689 Tudor", "Operator": "Minister of Supply %26 Aircraft Production", "Registration": "G-AGSU", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Woodford - Woodford", "MSN": "1235", "YOM": "1945", "Flight number": "NA", "Crash location": "Woodford Cheshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Shortly after takeoff from Woodford Airport, while climbing to a height of some 60-80 feet, the four engine aircraft banked right, stalled and crashed in a wooded area. Four occupants were killed while two others were rescued. Crew: Bill Thorn, pilot, \u2020 David Wilson, copilot, \u2020 John Webster, flight engineer and radio operator, \u2020 Roy Chadwick, technician and designer, \u2020 Eddie Talbot, flight engineer, Stuart Davies, chief designer.", "Crash cause": "Other causes", "Date_stringindexer_transform": 133.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 226.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 151.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 137.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 161.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "8/25/1947", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Charter Airways", "Registration": "CF-EIH", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "94", "YOM": "1942", "Flight number": "NA", "Crash location": "Allen Lake Northwest Territories", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While preparing for landing in Allen Lake, the single engine aircraft was caught by strong winds, landed hard, overturned and came to rest. The aircraft was lost and all five occupants were rescued.", "Crash cause": "Weather", "Date_stringindexer_transform": 132.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 407.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 250.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 17.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 304.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "8/28/1947", "Time": "9H 5M 0S", "Aircraft": "Short S.25 Sandringham", "Operator": "Det Norske Luftfartselskap - DNL", "Registration": "LN-IAV", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Troms\u00f8 \u2013 Harstad \u2013 Bod\u00f8 \u2013 Hommelvik \u2013 Oslo", "MSN": "SH.915", "YOM": "NA", "Flight number": "NA", "Crash location": "Harstad Troms", "Country": "Norway", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "27", "PAX fatalities": "27", "Other fatalities": "0", "Total fatalities": 35, "Circumstances": "While cruising at an altitude of 13,000 feet in poor weather conditions, the four engine seaplane hit the slope of a mountain located 31 km northeast of Harstad. The wreckage was found in a rocky are some 290 meters from the summit and all 35 occupants were killed. It is believed that the aircraft was slightly off course at the time of the accident. Crew: John Buer, pilot, Karl Bengtsen, copilot, Johannes Daae Risnes, navigator, Paul Idland, radio operator, Gunnar Michaelsen, mechanic, Atle Fedje, steward, Ester Mildrid L\u00f8snes, stewardess.", "Crash cause": "Human factor", "Date_stringindexer_transform": 18.0, "Time_stringindexer_transform": 19.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 112.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 107.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 60.0, "Country_stringindexer_transform": 16.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 29.0, "PAX fatalities_stringindexer_transform": 23.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 51.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/28/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "PH599", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Paraparaumu-Kapiti Coast Greater Wellington Regional Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing. No casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 18.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 192.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 338.0, "Country_stringindexer_transform": 24.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 4.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/28/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KJ984", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Manston - Manston", "MSN": "14977/26422", "YOM": "1944", "Flight number": "NA", "Crash location": "Westgate-on-Sea Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was completing a training sortie and while cruising at low height with an engine inoperative, the aircraft went out of control, dove into the ground and crashed in a huge explosion in a field located in Westgate-on-Sea. Both pilots were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 18.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 174.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 15.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 351.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 350.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/29/1947", "Time": "NA", "Aircraft": "Canadian Vickers PBV-1 Canso (OA-10 Canso)", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "11063", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Edmonton \u2013 Cambridge Bay", "MSN": "CV-375", "YOM": "1944", "Flight number": "NA", "Crash location": "Cambridge Bay Nunavut", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing and broke in two. There were no casualties.", "Crash cause": "Human factor", "Date_stringindexer_transform": 297.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 3.0, "Registration_stringindexer_transform": 446.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 288.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 192.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 243.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/30/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Transportes A\u00e9reos Peruanas - TAPSA", "Registration": "OB-QAH-202", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Saposoa San Mart\u00edn", "Country": "Peru", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Occupant fate unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 102.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 101.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 4.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 197.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 201.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/30/1947", "Time": "NA", "Aircraft": "AAC.1 Toucan", "Operator": "Air Atlas", "Registration": "F-BCHQ", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "322", "YOM": "NA", "Flight number": "NA", "Crash location": "El Hajeb Mekn\u00e8s-Tafilalet", "Country": "Morocco", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Hit a mountain near El Hajeb, killing at least one occupant.", "Crash cause": "Unknown", "Date_stringindexer_transform": 102.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 75.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 62.0, "Country_stringindexer_transform": 19.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 78.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/31/1947", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Nayler Air Services", "Registration": "G-ABYP", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "White Waltham \u2013 Eaton Bray", "MSN": "2233", "YOM": "1932", "Flight number": "NA", "Crash location": "Eaton Bray Bedfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Eaton Bray aerodrome, the single engine aircraft stalled and crashed in flames. Both occupants, among them the pilot and owner Joan Nayler, were quickly rescued and uninjured. The aircraft was destroyed by fire. Source & photos: http://www.onthewire.co.uk/bray4.htm", "Crash cause": "Unknown", "Date_stringindexer_transform": 285.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 126.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 166.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 82.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 244.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "9/2/1947", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW223", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Dishforth - Dishforth", "MSN": "MW223", "YOM": "1945", "Flight number": "NA", "Crash location": "Dishforth AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a training sortie in RAF Dishforth. Upon landing, while decelerating, the engine number two caught fire. The captain applied full brakes and stopped the aircraft. All five crew members were able to leave the cabin before the aircraft was destroyed by fire.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 51.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 26.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 3.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 33.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 68.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "9/2/1947", "Time": "NA", "Aircraft": "Vickers Viking", "Operator": "Royal Air Force - RAF", "Registration": "VL245", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "144", "YOM": "1946", "Flight number": "NA", "Crash location": "Aberdeen-Dyce Aberdeenshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "6", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff, while in initial climb, an engine failed. The captain decided to make an emergency landing and the aircraft crash landed in a field located 3 km from the airport. All 11 occupants escaped with minor injuries while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 51.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 154.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 169.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 12.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 225.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "9/3/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Hellenic Airlines", "Registration": "SX-BAB", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Athens - Athens", "MSN": "18981", "YOM": "1943", "Flight number": "NA", "Crash location": "Athens-Hassani Attica / <U+0391>tt<U+03B9><U+03BA><U+03AE>", "Country": "Greece", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew consisting of eight pilots was completing a training exercise in Athens-Hassani Airport. On final approach, the aircraft encountered downdraft, lost height and crashed on a beach located in Voula, south of the airport. The three pilots that were seating in the cockpit were killed as the cockpit crashed on rocks. Five others occupants were seriously injured.", "Crash cause": "Weather", "Date_stringindexer_transform": 197.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 402.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 133.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 278.0, "Country_stringindexer_transform": 11.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 453.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "9/5/1947", "Time": "NA", "Aircraft": "Avro 691 Lancastrian", "Operator": "British South American Airways - BSAA", "Registration": "G-AGWK", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "London \u2013 Horta \u2013 Hamilton \u2013 Havana", "MSN": "1283", "YOM": "1945", "Flight number": "NA", "Crash location": "Hamilton All Bermuda", "Country": "Bermuda", "Region": "North America", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "15", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While approaching Bermuda on a flight from London to Havana, the crew was instructed by ATC to stack due to poor weather conditions (thunderstorm). After 90 minutes, the crew was cleared to land at Hamilton-Kindley Field and started the approach that was completed in marginal weather conditions and poor visibility. Too low, the four engine aircraft christened 'Star Trail' hit a radio mast, stalled and crashed few hundred yards short of runway. All 20 occupants were rescued while the aircraft was written off.", "Crash cause": "Human factor", "Date_stringindexer_transform": 92.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 403.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 8.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 17.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 6.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 27.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "9/5/1947", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Payloads Charter Company", "Registration": "G-AIWT", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1338", "YOM": "1946", "Flight number": "NA", "Crash location": "Bovingdon AFB Hertfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. There were no casualties but the aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 92.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 433.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 2.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 140.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "9/6/1947", "Time": "15H 21M 0S", "Aircraft": "North American B-25 Mitchell", "Operator": "Gidrometeosluzhba", "Registration": "CCCP-M345", "Flight phase": "Takeoff (climb)", "Flight type": "Delivery", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Moscow - Koltushi", "MSN": "82-5183", "YOM": "NA", "Flight number": "NA", "Crash location": "Klyazma Moscow oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "1", "Other fatalities": "1", "Total fatalities": 5, "Circumstances": "The airplane was on a delivery flight from Moscow to Leningrad-Koltushi Airport and has to be transferred from the Soviet Air Force to the Russian Hydro and Meteo Services (Gidrometeosluzhba). Shortly after takeoff, while climbing, the left engine caught fire. The pilot in command elected to make an emergency landing but smoke spread in the cockpit and the crew lost control of the aircraft that crashed in Klyazma. Three crew members, one passenger and one person on the ground were killed while three others were injured (one crew, one passenger and one person on the ground). The aircraft was destroyed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 271.0, "Time_stringindexer_transform": 67.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 301.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 138.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 280.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 2, "Circumstances_stringindexer_transform": 8.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "9/9/1947", "Time": "NA", "Aircraft": "Boeing 247", "Operator": "Servicio A\u00e9reo Panini", "Registration": "XA-DUA", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1719", "YOM": "1933", "Flight number": "NA", "Crash location": "Ciudad Obreg\u00f3n Sonora", "Country": "Mexico", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 153.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 290.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 213.0, "Country_stringindexer_transform": 23.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "9/15/1947", "Time": "15H 10M 0S", "Aircraft": "Avro 652 Anson", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Saint-Girons Landes", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew departed Cazaux AFB bound to the south. Enroute, the right engine failed. The captain reduced his altitude and completed an emergency landing on a beach located in Saint-Girons. All three crew members were unhurt and with locals, were able to bring the aircraft out of water. Unfortunately, three hours later, the airplane was stuck by tide and written off. The accident occurred in September 1947 (exact date remains unknown).", "Crash cause": "Technical failure", "Date_stringindexer_transform": 243.0, "Time_stringindexer_transform": 82.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 14.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 344.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 115.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "9/17/1947", "Time": "11H 12M 0S", "Aircraft": "Curtiss C-46 Commando", "Operator": "Slick Airways", "Registration": "NC59495", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Denver \u2013 Hollywood", "MSN": "2937", "YOM": "1945", "Flight number": "NA", "Crash location": "Burbank California", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Just before reaching Las Vegas, however, a distance of 268 miles from Burbank, Captain Clark stated that his fuel quantity gauges indicated that he had 360 gallons of fuel remaining. Since he believed this to be sufficient to reach destination, he did not land at Las Vegas which was generally used as a fueling stop for Slick Airways. From Las Vegas to Palmdale, lighter winds were encountered resulting in a ground speed averaging 180 miles per hour. Palmdale was flown over at 1025, at which time the aircraft had been in the air a total of 5 hours and 18 minutes. Three minutes after passing over Palmdale, which was clear, the left engine fuel pressure dropped to 3 pounds, the red fuel warning light came on, and the left engine stopped. Fuel selector valves were changed, and as a result power was restored to the left engine. Captain Clark suspected a fuel leak. He inspected the aircraft for visible loss of fuel or fire, found none, and continued on to Burbank. As the flight approached Newhall California, Burbank reported a ceiling of 1,600 feet with visibility of two and one-half miles. The flight was instructed by the Los Angeles Airways Traffic Control Center to hold on the northwest course of the Burbank range, and advised that the approach clearance Into Burbank could be expected at approximately 1052. Captain Clerk informed the Burbank control tower that he was losing fuel and wanted to land as soon as possible, however, he declined to declare an emergency. Shortly after this, the left engine stopped for the second time, but power was again restored by changing the positions of the fuel selector valves. At 1056, approach clearance into Burbank was given, and at 1058, the flight reported inbound over the Chatsworth fan marker, approximately 14 miles from the Lockheed Air Terminal. The ceiling over Burbank had by this time lowered to 1,000 feet, and rain showers had reduced visibility to about one mile. As the flight descended below 1,600 feet only intermittent bursts of power could be secured from the left engine. The \u201cletdown\u201d was continued, the Burbank radio range station and the Lockheed Air Terminal were passed. Upon completion of a right turn to return to the range station the right engine stopped, and the propeller was immediately feathered. At an altitude of 200 to 400 feet, Captain Clark recognized almost immediately underneath him a hangar on the Lockheed Air Terminal. He executed a sharp right turn of approximately 270 degrees, and landed on the north-south taxi way about 400 feet before crossing Runway 7, a distance of approximately 1,900 feet from the south boundary of the airport. Brakes were applied, but the aircraft could not be brought to a stop within the airport boundaries. It came to rest only after skidding across a highway and railroad line adjacent to the south boundary of the airport.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 4.0, "Time_stringindexer_transform": 27.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 108.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 29.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 331.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 468.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "9/17/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Hellenic Air Force - Elleniki Polemiki Aeroporia", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Farsala Thessaly / Tessa<U+03BB><U+03AF>a", "Country": "Greece", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "Crashed in unknown circumstances in Farsala, killing all six occupants, two crew members, a captain and three soldiers.", "Crash cause": "Unknown", "Date_stringindexer_transform": 4.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 86.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 89.0, "Country_stringindexer_transform": 11.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 333.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "9/17/1947", "Time": "NA", "Aircraft": "Vickers Viking", "Operator": "Argentinian Air Force - Fuerza A\u00e9rea Argentina", "Registration": "T-4", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "161", "YOM": "1946", "Flight number": "NA", "Crash location": "Buenos Aires-Aeroparque-Jorge Newbery Buenos Aires City", "Country": "Argentina", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. There were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 4.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 424.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 411.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 5.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "9/17/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Compania Anonima Vuelos Express - CAVE", "Registration": "YV-C-CAJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "La Carlota-General Francisco de Miranda AFB (Caracas) Caracas Federal District", "Country": "Venezuela", "Region": "South America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. Both crew members were slightly injured while the aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 4.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 365.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 223.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 443.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "9/18/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Tata Airlines", "Registration": "VT-CFL", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "20248", "YOM": "1944", "Flight number": "NA", "Crash location": "Junagarh Odisha (Orissa)", "Country": "India", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 70.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 450.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 315.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "9/18/1947", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Franco-British Commercial %26 Industrial Company", "Registration": "G-AJSJ", "Flight phase": "Takeoff (climb)", "Flight type": "Delivery", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Croydon \u2013 Tunis \u2013 Antananarivo", "MSN": "6826", "YOM": "1947", "Flight number": "NA", "Crash location": "Tunis Tunis Governorate (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+062A><U+0648><U+0646><U+0633><U+200E>)", "Country": "Tunisia", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after takeoff from Tunis while on a delivery flight to Antananarivo. The aircraft was destroyed and both crew members were injured. The airplane christened 'Tamatave' was on its way from Croydon to Antananarivo to be delivered to Air Madagascar.", "Crash cause": "Unknown", "Date_stringindexer_transform": 70.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 39.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 289.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 425.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 331.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "9/19/1947", "Time": "8H 55M 0S", "Aircraft": "Douglas C-54 Skymaster", "Operator": "United States Air Force - USAF", "Registration": "42-72554", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "La Paz \u2013 Lima", "MSN": "10659", "YOM": "1945", "Flight number": "NA", "Crash location": "San Juan de Marcona Ica", "Country": "Peru", "Region": "South America", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "9", "PAX fatalities": "9", "Other fatalities": "0", "Total fatalities": 14, "Circumstances": "Enroute to Lima, it is believed that an engine caught fire. Most probably, the crew decided to divert to the Marcona Naval Station but the aircraft went out of control and crashed in a desert area located near San Juan de Marcona. The aircraft was destroyed by impact forces and a post crash fire and all 14 occupants were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 280.0, "Time_stringindexer_transform": 66.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 81.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 203.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 110.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 8.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 203.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "9/20/1947", "Time": "18H 23M 0S", "Aircraft": "Douglas DC-4", "Operator": "Pan American World Airways - PAA", "Registration": "NC88911", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Hamilton \u2013 New York", "MSN": "27229", "YOM": "1944", "Flight number": "NA", "Crash location": "Floyd Bennett Field New York", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "36", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "\"Pan American's Flight 131 departed from Bermuda at 1358, September 20, 1947, with 36 passengers and a crew of 5. The take-off and climb to the cruising altitude of 8,000 feet were normal, and the flight proceeded on course to La Guardia Field, New York, for a period of 3 hours without incident Between 1650 and 1655, about 225 statute miles from destination, Warren Robinson, the first officer, noticed a fluctuation in fuel pressure for engines 1 and 2 Seconds later, the left auxiliary fuel tank quantity gauge dropped to zero, the fuel pressure warning light flashed on, and the No 1 engine faltered To insure a positive fuel supply for all engines Mr Robinson immediately turned the fuel selector valves for all engines to their respective main tanks, 2 following which all engines operated normally. Mr Robinson then transferred fuel from the right auxiliary tank to the left auxiliary tank so that they would contain equal amounts, which was 40 gallons each according to the fuel quantity gauges after completion of the operation A few minutes later Mr Robinson noticed that the right auxiliary fuel gauge indicated not 40 gallons, but 100, and that it was visibly increasing even though no fuel was at that time being transferred The No. 3 main fuel tank gauge then dropped to zero, and the fuel pressure for the No 4 engine started to fluctuate. Alarmed by what now appeared to be a serious malfunction in the right side of the fuel system, Mr Robinson operated all engines from the left main tanks (1 and 2), turning on all the cross feed valves, and the booster pumps for main tanks 1 and 2. The flight had by this time reached position \"\"Baker", "Crash cause": "\"\" a point on course and a distance of 212 statue miles from La Guardia This check point was regularly used by Pan American on the route from Bermuda to La Guardia", "Date_stringindexer_transform": 242.0, "Time_stringindexer_transform": 62.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 184.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 207.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 258.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 26.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 383.0, "Crash cause_stringindexer_transform": 17.0}, {"Date": "9/21/1947", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "The Uganda Company", "Registration": "VP-UAW", "Flight phase": "Parking", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "6631", "YOM": "1942", "Flight number": "NA", "Crash location": "Zanzibar Unguja North Region", "Country": "Tanzania", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On start-up, the right engine caught fire. Both occupants were able to leave the aircraft that was partially destroyed by fire.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 219.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 452.0, "Flight phase_stringindexer_transform": 5, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 241.0, "Country_stringindexer_transform": 39.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 99.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "9/24/1947", "Time": "NA", "Aircraft": "Avro 694 Lincoln", "Operator": "Royal Air Force - RAF", "Registration": "RE373", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Hemswell - Hemswell", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mautby Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "The crew was completing a night training sortie from RAF Hemswell, Lincolnshire. While cruising northwest of Great Yarmouth, the crew encountered very poor weather conditions with thunderstorm activity and heavy turbulence. The aircraft went out of control, dove into the ground and crashed in a field located in Mautby. All nine crew members were killed. Crew (97th Squadron): F/Lt Stanley Frederick Whitlock, pilot, F/Lt Jack Anthony Guest, pilot, F/Lt John George Cook, navigator, F/Lt Ronald Vernon Havard, navigator and bomb aimer, Albert Wattleworth, signaler, Vincent Orville Woods, air gunner, William Allison, flight engineer, Roy Andrew Trundle, air gunner, LAC Denis Frederick Cummings.", "Crash cause": "Weather", "Date_stringindexer_transform": 225.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 334.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 236.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 328.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 10.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 368.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "9/28/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Indian Air Force - Bharatiya Vayu Sena", "Registration": "NA", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Agra \u2013 New Delhi", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "New Delhi-Palam National Capital Territory of Delhi", "Country": "India", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "15", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Crashed on landing in New Delhi-Palam Airport, killing all 5 crew members. The fifteen passengers were injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 151.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 114.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 297.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 6.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 186.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "10/1/1947", "Time": "12H 0M 0S", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "NC565", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Gulf of Aden All Yemen", "Country": "Yemen", "Region": "Asia", "Crew on board": "10", "Crew fatalities": "10", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 10, "Circumstances": "The crew was performing a cargo flight from Aden-Khormaksar Airport. Enroute, the airplane went out of control, went into a dive by an angle of 30\u00b0 and finally crashed into the Gulf of Aden, about 352 km east of Aden. Few debris were found but no trace of the ten occupants who were considered as deceased. The aircraft sank in relatively deep. It is believed that an engine failed in flight and that the crew mistakenly shot down the wrong engine. It is possible that the engine failure was caused by a lack of electric power due to the failure of a battery. Also, it appears that the cargo loading was completed against the published procedures and that the CofG was affected, which may contribute to the loss of control.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 288.0, "Time_stringindexer_transform": 2.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 91.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 113.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 11.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 342.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "10/3/1947", "Time": "NA", "Aircraft": "Avro 691 Lancastrian", "Operator": "Skyways of London", "Registration": "G-AHBU", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1289", "YOM": "1946", "Flight number": "NA", "Crash location": "Belfast-Nutts Corner Antrim", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The takeoff was attempted in poor weather conditions. During takeoff roll started in visual reference, the visibility was insufficient and the captain decided to swap to instrument references. Control was lost and the airplane skidded and then swerved before coming to rest in the Cromlin river. All three crew members were injured while the aircraft was damaged beyond repair.", "Crash cause": "Human factor", "Date_stringindexer_transform": 253.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 193.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 340.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 44.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "10/4/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "KN881", "Flight phase": "Takeoff (climb)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ambavalao Fianarantsoa Province", "Country": "Madagascar", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "5", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "After takeoff from Ambavalao Airport, while on a reconnaissance mission, the crew was forced to circle vertical to the city to gain sufficient height to clear the mountain. After passing the first mountainous terrain, the twin engine aircraft hit a rocky ridge and crashed. A crew member was seriously injured while six other occupants were killed. Crew: Sgt Anizet, Lt Col Pierre Lequesne, \u2020 Cpt Guillot, \u2020 S/Lt de Tournadre, \u2020 Adj Gourcerol, \u2020 Sgt Allard, \u2020 Sgt Katsia. \u2020", "Crash cause": "Human factor", "Date_stringindexer_transform": 185.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 14.0, "Registration_stringindexer_transform": 389.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 15.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 304.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 9.0, "PAX fatalities_stringindexer_transform": 5.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 355.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "10/7/1947", "Time": "8H 35M 0S", "Aircraft": "SNCASE SE.161 Languedoc", "Operator": "Air France", "Registration": "F-BATY", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "B\u00f4ne \u2013 Paris", "MSN": "25", "YOM": "NA", "Flight number": "NA", "Crash location": "Annaba Annaba", "Country": "Algeria", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll, it appears that an undercarriage failed. The aircraft skidded, overran, lost its landing gear and came to rest with the engine number one on fire. All occupants were evacuated safely while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 296.0, "Time_stringindexer_transform": 39.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 298.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 241.0, "MSN_stringindexer_transform": 94.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 240.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 202.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "10/9/1947", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cao B<U+1EB1>ng Cao B<U+1EB1>ng Province", "Country": "Vietnam", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "12", "PAX fatalities": "11", "Other fatalities": "0", "Total fatalities": 15, "Circumstances": "The aircraft was involved in a supply mission and was carrying paratroopers. While cruising at low height, the aircraft was hit by enemy fire and crashed in a wooded area located near Cao B<U+1EB1>ng. Adjutant Commercon was the only survivor while 15 other occupants were killed, among them Commander Lambert, Deputy Chief of Staff of the French troops in Indochina", "Crash cause": "Terrorism act, Hijacking, Sabotage", "Date_stringindexer_transform": 176.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 14.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 190.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 4.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 326.0, "Crash cause_stringindexer_transform": 5.0}, {"Date": "10/10/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "43-48296", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "25557", "YOM": "1944", "Flight number": "NA", "Crash location": "Borja Loreto", "Country": "Peru", "Region": "South America", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Crashed in unknown circumstances in a mountainous and uninhabited area located some 60 km southwest of Borja, Peru. The wreckage was found ten days later and all five occupants were killed, among them Colonel John R. Hawkins, Chief of the USAF in Peru.", "Crash cause": "Unknown", "Date_stringindexer_transform": 118.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 187.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 253.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 271.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "10/10/1947", "Time": "NA", "Aircraft": "Airspeed AS.65 Consul", "Operator": "Malayan Airways", "Registration": "VR-SCF", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "5096", "YOM": "1947", "Flight number": "NA", "Crash location": "Ipoh Perak", "Country": "Malaysia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 118.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 225.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 361.0, "Country_stringindexer_transform": 37.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "10/14/1947", "Time": "10H 4M 0S", "Aircraft": "Boeing 314 Clipper", "Operator": "American International Airlines", "Registration": "NC18612", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Poole \u2013 Foynes \u2013 Gander \u2013 New York", "MSN": "2086", "YOM": "1941", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "62", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Take-off from Foynes was accomplished at 1540, the afternoon of October 13th. The flight climbed to its cruising altitude of 8,000 feet, proceeded on course for five hours and 50 minutes over the tops of clouds, and then, at 2130, instrument weather conditions were encountered. Since celestial navigation was no longer possible, Mr. Thompson, the only qualified celestial navigator aboard, retired. Before he had retired, however, he informed Captain Martin that the estimated time of arrival over the United States Coast Guard weather ship, Bibb, located on course and approximately 961 miles west of Foynes, was 0200. This was 45 minutes later than was originally estimated. Icing conditions were encountered shortly after midnight. At 0134, October 14th, the flight requested and was granted permission from the Moncton Ocean Air Traffic Control to descend to 6,000 feet. About this time the flight received from tie Gander radio station a weather forecast which included wind information at the original cruising altitude of 8,000 feet. According to the data received, the average headwind component had d velocity of 12 knots greater than that which was used in the computation of the flight plan. No further icing conditions were encountered at 6,000 feet, but instrument weather continued. The flight proceeded without the benefit of any navigational fix until 0205 when a radar fix from the Bibb placed the aircraft 68 miles from the vessel on a bearing of 80 degrees. At this time the flight had flown approximately 892 miles from Foynes, was slightly over half way to Gander, and had used 10 hours and 25 minutes of the estimated 22 fuel hours carried at the time of take off. They informed the Bibb that their estimated arrival time at Gander was 0930, which was 32 minutes later than was originally estimated. The crew anticipated no possibility of fuel exhaustion, and one hour and 11 minutes remained before they were to reach the point-of-no-return as computed in their flight plan. The Bibb reported the wind at its location at 6,000 feet to be 40 to 45 knots from the west. a headwind component of about 17 knots greater than that used in the flight plan. The captain estimated at 0232 that they were on course and 13 to 20 miles south of the Bibb. This was one hour and 17 minutes later than the original estimate and 32 minutes later than the amended estimate. Altitude was reduced to 4,000 feet after approval had been given by Moncton Ocean Air Traffic Control, and shortly thereafter, at 0327, eleven minutes after the flight passed its point-of-no-return, another weather forecast was received from Gander which showed the average headwind for the remainder of the route to be from 250 to 260 degrees at 38 knots, a headwind component 12 knots greater than that received in Shannon. Still no difficulty was anticipated, nor was the navigator consulted at this time. By 0500 clear weather was encountered. The navigator was then awakened in order that he might fix the aircraft's position by celestial observation, and according to the fixes that were plotted, headwinds in excess of 60 knots had existed en route, the average ground speed being only 59 knots. The crew immediately be came concerned as to whether or not the fuel remaining was sufficient. Approximately 550 miles remained to destination Captain Martin and First Officer Thompson believed that it was impossible to accomplish the remaining portion of the flight with the fuel remaining, so decided to return to the Bibb where rescue facilities would be immediately available. However, the flight continued westward and a position report was made to Gander at 0600. The turn around was actually made at 0758, at which time the aircraft was still 60 miles east of the previously reported 0600 position and approximately 460 miles east of Gander and 300 miles west of the Bibb Gander was advised of the decision, and at 0840 was Informed that the flight had two hours and 45 minutes of fuel remaining. The aircraft's position was reported at 0914 to be 100 miles west of the Bibb. The flight arrived over the Bibb at 0940, made four low passes, and then landed. All passengers had been fitted with life jackets and had been provided with seats and safety belts. Though the aircraft encountered waves six to eight feet high, no injury to any person or damage to the aircraft occurred. However, in taxying toward the Bibb the aircraft and Bibb drifted together with substantial damage to the aircraft. Rescue operations were slow and hazardous because of high seas, out by the next day all of the passengers and crew had been successfully transferred to the Bibb.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 173.0, "Time_stringindexer_transform": 113.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 43.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 182.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 0.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 32.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 254.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "10/16/1947", "Time": "14H 50M 0S", "Aircraft": "Bristol 170 Freighter", "Operator": "Soci\u00e9t\u00e9 A\u00e9rienne du Littoral - SAL", "Registration": "F-BCJN", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Paris \u2013 Marseille \u2013 Oran \u2013 Casablanca", "MSN": "12788", "YOM": "1946", "Flight number": "NA", "Crash location": "Cabo de Palos Region of Murcia", "Country": "Spain", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "4", "Pax on board": "39", "PAX fatalities": "38", "Other fatalities": "0", "Total fatalities": 42, "Circumstances": "While flying along the Spanish coast, the radio operator informed ground by radio: 'one engine stopped, are forced to ditch the aircraft'. Shortly later, the aircraft crashed into the sea some 25 km southeast off Cabo de Palos. The first rescuers arrived on site 24 hours later and were able to evacuate two survivors, the mechanic and a passenger. All 42 other occupants were killed. Crew: Mr. Galindo, pilot, Mr. Remy, mechanic, Mr. Chase, mechanic, Mr. Chanel, radio navigator, Anne-Marie Rouannet, stewardess.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 110.0, "Time_stringindexer_transform": 38.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 65.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 65.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 440.0, "Country_stringindexer_transform": 4.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 27.0, "PAX fatalities_stringindexer_transform": 31.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 143.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "10/16/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Strato Freight", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Charlotte \u2013 Gainesville", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Sylva North Carolina", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The aircraft departed Charlotte in a hurry because the pilot was afraid the cargo of baby chicks might suffocate due to high temperatures on the ground. Weather condition were not carefully checked. The crew were not able to locate their destination because of weather conditions and other station interference with their ADF. The DC-3 was found to have crashed into a mountain. Source: https://aviation-safety.net/database/record.php?id=19471016-1", "Crash cause": "Human factor", "Date_stringindexer_transform": 110.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 156.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 353.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 283.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "10/17/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Central Air Transport - China", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Shijiazhuang \u2013 Beijing", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Shijiazhuang Hebei", "Country": "China", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Crashed in a field few minutes after takeoff from Shijiazhuang Airport while on a cargo flight to Beijing. All three crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 188.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 219.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 288.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 474.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "10/21/1947", "Time": "NA", "Aircraft": "Short S.25 Sunderland", "Operator": "Royal Air Force - RAF", "Registration": "DV976", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Southend Essex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "During a training sortie, the engine number three failed. The captain decided to reduce his altitude in an attempt to ditch the aircraft when the same engine caught fire. Shortly later, the engine detached and the seaplane hit the water surface at high speed, overturned and came to rest off Southend. Six crew members were injured while the captain and all three passengers were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 266.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 343.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 76.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 122.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "10/23/1947", "Time": "NA", "Aircraft": "Avro 691 Lancastrian", "Operator": "British South American Airways - BSAA", "Registration": "G-AGUL", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "London-Heathrow - London-Heathrow", "MSN": "NA", "YOM": "1945", "Flight number": "NA", "Crash location": "London-Heathrow London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a night training mission in London-Heathrow Airport. On touchdown, the aircraft went out of control, ground looped and came to rest. All four crew members were unhurt while the aircraft christened 'Star Watch' was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 273.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 138.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 144.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 3.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 89.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "10/24/1947", "Time": "12H 29M 0S", "Aircraft": "Douglas DC-6", "Operator": "United Airlines", "Registration": "NC37510", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Los Angeles \u2013 Denver \u2013 Chicago", "MSN": "42875", "YOM": "1947", "Flight number": "NA", "Crash location": "Bryce Canyon Utah", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "47", "PAX fatalities": "47", "Other fatalities": "0", "Total fatalities": 52, "Circumstances": "Flight 608 departed Los Angeles, California, at 1023 with its destination Chicago, Illinois, to cruise at 19,000 feet according to visual flight rules. Routine position reports were made over Fontana, Daggett and Silver Lake, California; Las Vegas, Nevada; and Saint George, Utah. During the latter report, the flight indicated that it estimated passing over Bryce Canyon, Utah, at 1222. At 1221 Flight 608 reported that a fire had been detected in the baggage compartment which the crew was unable to extinguish. The report added that the cabin was filled with smoke and that the flight was attempting to make an emergency-landing at Bryce Canyon Airport. Shortly thereafter the flight again reported that the \u201ctail is going out--we may get down and we may not.\u201d At 1226 another transmission was received from the flight indicating that it was going into the \u201cbest place\u201d available. One minute later the flight reported \u201cwe may make it--approaching a strip.\u201d No further contact was had from the flight. Witnesses who observed the aircraft as it was approaching Bryce Canyon from approximately 20 miles southwest first observed what appeared to be white smoke streaming from the aircraft, followed later by dense black smoke. The first witnesses who observed fire in the bottom of the aircraft at approximately the center-section were located approximately 15 miles south of Bryce Canyon. Until shortly before the moment of impact, the aircraft appeared to be under normal control; however, no witnesses were located who observed the crash.", "Crash cause": "Human factor", "Date_stringindexer_transform": 217.0, "Time_stringindexer_transform": 119.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 161.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 199.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 281.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 28.0, "PAX fatalities_stringindexer_transform": 22.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 291.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "10/25/1947", "Time": "15H 0M 0S", "Aircraft": "SNCAC NC.701/702 Martinet", "Operator": "Institut G\u00e9ographique National", "Registration": "F-BAOQ", "Flight phase": "Flight", "Flight type": "Geographical / Geophysical / Scientific", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Marseille \u2013 Creil", "MSN": "69", "YOM": "NA", "Flight number": "NA", "Crash location": "Saint-Etienne Loire", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While approaching Saint Etienne, an engine failed. The pilot attempted to make an emergency landing but the aircraft stalled and crashed in a prairie. All six occupants were killed. Crew: Robert Millet, pilot, Pierre-Claude Belmont, mechanic, Alain Le Bras, radio navigator, Roger Panenc, radio navigator. Passengers: Casimir Corniglion, photographer, Andr\u00e9 Lesure, chief of Photography by IGN.", "Crash cause": "Human factor", "Date_stringindexer_transform": 168.0, "Time_stringindexer_transform": 1.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 432.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 18.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 174.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 167.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 146.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "10/26/1947", "Time": "19H 30M 0S", "Aircraft": "Douglas DC-4", "Operator": "Aktiebolaget Aerotransport - ABA", "Registration": "SE-BBG", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Istanbul \u2013 Athens \u2013 Rome \u2013 Geneva \u2013 Amsterdam \u2013 Copenhagen \u2013 Stockholm", "MSN": "42930", "YOM": "1946", "Flight number": "NA", "Crash location": "Mt Hymettus Attica / <U+0391>tt<U+03B9><U+03BA><U+03AE>", "Country": "Greece", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "36", "PAX fatalities": "36", "Other fatalities": "0", "Total fatalities": 44, "Circumstances": "While descending to Athens-Hassani Airport, the crew was contacted by ATC and instructed to stack for a while due to poor weather conditions (thunderstorm activity) at destination. Few minutes later, the four engine aircraft christened 'Sunnan' hit the slope of Mt Hymettus located northeast of the airport. The airplane was destroyed by impact forces and all 44 occupants were killed. The crew was unable to distinguish the mountain due to poor visibility caused by low clouds. It is believed that the crew was not aware of his exact position at the time of the accident.", "Crash cause": "Human factor", "Date_stringindexer_transform": 69.0, "Time_stringindexer_transform": 21.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 332.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 222.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 42.0, "Country_stringindexer_transform": 11.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 26.0, "PAX fatalities_stringindexer_transform": 28.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 197.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "10/26/1947", "Time": "13H 45M 0S", "Aircraft": "Douglas DC-4", "Operator": "Pan American World Airways - PAA", "Registration": "NC88920", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Seattle \u2013 Annette Island \u2013 Juneau", "MSN": "10317", "YOM": "1944", "Flight number": "NA", "Crash location": "Annette Island Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "13", "PAX fatalities": "13", "Other fatalities": "0", "Total fatalities": 18, "Circumstances": "Flight 923 departed at 1030 October 26, 1947, from Seattle, Washington, for Juneau, Alaska, with an intermediate stop scheduled at Annette Island Captain Alf N. Monsen flew as pilot and First Officer Laurence A Foster as copilot. The airplane carried 13 passengers including an infant, a crew of five, 2,500 gallons of fuel, and 822 pounds of cargo. This load was within the allowable airplane weight and was properly distributed in respect to the center of gravity. Company weather information given to Captain Monsen before departure was to the effect that there would be unlimited ceiling from Seattle to Comox, British Columbia. Then at the cruising altitude of 9,000 feet, instrument conditions, light icing, and light to moderate turbulence was expected over the route. Winds were forecasted to be from 200 to 230 degrees at 30 to 40 knots. It was also forecasted that at the time of the flight's arrival over Annette there would be an 800-foot overcast, lower broken clouds, visibility of 2 miles, light rain, and a surface wind from the south-southeast at 18 knots. A cold type occlusion or front which was moving toward Annette Island from a point about 375 miles west of there was expected to pass Annette Island before the flight arrived. Proceeding en route in accordance with an instrument clearance to fly at 9,000 feet, the flight arrived over Annette Island at 1338 after a routine trip. Earlier, at 1326, the company radio at Annette Island had transmitted a weather observation which reported an indefinite 1,400-foot ceiling, overcast, lower broken clouds, visibility of 3 miles, rain, wind southeast at 28 miles per hour, with gusts to 40 miles per hour. The flight acknowledged receipt of this information. Airway Traffic Control cleared the flight to pass over the radio range station located 1 5 mile northwest of the airport at 7,000 feet and then to proceed with a normal instrument letdown and approach to the field. The flight acknowledged this clearance, and reported its position over the radio range station at 7,000 feet at 1338. The normal instrument procedure for Annette Island was established with regard to the mountainous terrain east and northeast of the airport, which rises to an elevation of 3,596 feet on Tamgas Mountain. This procedure required the flight, after approaching from the south at 7,000 feet and reporting over the radio station, to remain west of the south course of the range while on instruments. Five minutes after the flight reported over the range station, at 1343 it advised Annette Radio that it was proceeding to Juneau, approximately 250 miles north-northwest of Annette Island, because of extreme turbulence. This was the first indication that the flight was encountering any difficulty in accomplishing a normal letdown and approach to the airport. In response, Annette Radio asked the flight to report its altitude, but there was no reply. After repeated calls to the flight Annette Radio issued an alert at 1401. It was estimated that the flight at the time of its last radio contact had aboard 9 hours and 16 minutes of fuel. At approximately 1430 the Civil Aeronautics Board was notified, and a search by air, land, and sea was immediately begun. However, adverse weather conditions retarded the search to such a degree that the wreckage was not located until 5 days after the accident October 31, 1947. It was found that the airplane had crashed on the north slope of Tamgas Mountain, approximately 8 miles east of Annette Island Airport and 8 miles east of the south course of the Annette radio range.", "Crash cause": "Weather", "Date_stringindexer_transform": 69.0, "Time_stringindexer_transform": 30.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 415.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 270.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 394.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 19.0, "PAX fatalities_stringindexer_transform": 14.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 478.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "10/27/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "China National Aviation Corporation - CNAC", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Guilin Guangxi", "Country": "China", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shot down by anti-aircraft fire and crashed in a field. A pilot survived while both other occupants were killed.", "Crash cause": "Terrorism act, Hijacking, Sabotage", "Date_stringindexer_transform": 247.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 210.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 245.0, "Crash cause_stringindexer_transform": 5.0}, {"Date": "10/30/1947", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "John Fairfax %26 Sons", "Registration": "VH-SMJ", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "414-6046", "YOM": "1941", "Flight number": "NA", "Crash location": "Balmoral New South Wales", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Crashed and burned on Balmoral Station south of Muswellbrook, while on a trial newspaper dropping flight. The aircraft was preparing to drop newspapers in an open area when it appeared to dive almost vertically into the ground. Both crew members were killed. Crew: Geoff Hoskins, pilot, Edward Conner, copilot. Source: http://www.adastron.com/lockheed/hudson/vh-smj.htm", "Crash cause": "Other causes", "Date_stringindexer_transform": 244.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 307.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 77.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 481.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "10/31/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Indian Air Force - Bharatiya Vayu Sena", "Registration": "MA965", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Jammu \u2013 Srinagar", "MSN": "12819", "YOM": "1944", "Flight number": "NA", "Crash location": "Pir Panjal Mountain Range Jammu and Kashmir", "Country": "India", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "22", "PAX fatalities": "22", "Other fatalities": "0", "Total fatalities": 25, "Circumstances": "Enroute from Jammu to Srinagar, the aircraft crashed in a mountainous area located in the Pir Panjal Mountain Range. As the aircraft failed to arrive, SAR operations were conducted but eventually suspended after few days as no trace of the aircraft nor the 25 occupants was found. Walkers found the wreckage in June 1980 in an isolated area. The crew was from the 12th Squadron.", "Crash cause": "Unknown", "Date_stringindexer_transform": 230.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 320.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 309.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 368.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 24.0, "PAX fatalities_stringindexer_transform": 12.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 402.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/2/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Philippines Air Express", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Manila Metro Manila", "Country": "Philippines", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Crashed in unknown circumstances into the Laguna de Bay, off Barangay Rizal, a suburb located south of Manila. All five occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 164.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 257.0, "Country_stringindexer_transform": 18.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 419.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/3/1947", "Time": "NA", "Aircraft": "Vickers 458 Wellington XI", "Operator": "French Navy", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Marrakech Marrakech-Tensift-El Haouz", "Country": "Morocco", "Region": "Africa", "Crew on board": "5", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "For undetermined reason, the twin engine aircraft failed to rotate, overran and hit a concrete wall. Lieutenant Billaud, pilot, and Lieutenant Grandjean, radio navigator, were killed. The aircraft was destroyed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 246.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 116.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 282.0, "Country_stringindexer_transform": 19.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 320.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/5/1947", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW207", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "MW207", "YOM": "1945", "Flight number": "NA", "Crash location": "Lyneham AFB Wiltshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After landing, the brakes failed. The aircraft was unable to stop within the remaining distance, overran and collided with an embankment. All six occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 198.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 204.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 196.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 397.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "11/10/1947", "Time": "15H 0M 0S", "Aircraft": "Vickers 440 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "MF557", "Flight phase": "Landing (descent or approach)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Finningley - Finningley", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Finningley AFB South Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was engaged in a test flight at RAF Finningley. Enroute, both engines failed simultaneously. The captain elected to return to the airbase but on approach, the aircraft stalled and crashed in a field located five miles from the runway threshold. On ground, the aircraft hit an embankment located near a railway, sheared off some road signs and came to rest in flames. The pilot was killed while both other occupants were injured.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 255.0, "Time_stringindexer_transform": 1.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 80.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 34.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 13.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 109.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "11/11/1947", "Time": "NA", "Aircraft": "Douglas DC-6", "Operator": "American Airlines", "Registration": "NC90741", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "San Francisco \u2013 Chicago", "MSN": "43046", "YOM": "1947", "Flight number": "NA", "Crash location": "Gallup New Mexico", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "20", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute from San Francisco to Chicago, the crew informed ATC that a fire erupted in the rear compartment of the aircraft and decided to divert to Gallup Airport for an emergency landing. The aircraft was difficult to maneuver and landed in flames. After it came to a halt, all 25 occupants were quickly disembarked and helped by local rescuers before the aircraft being totally destroyed by fire.", "Crash cause": "Human factor", "Date_stringindexer_transform": 131.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 395.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 300.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 375.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 13.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 363.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/11/1947", "Time": "NA", "Aircraft": "Avro 683 Lancaster", "Operator": "Royal Air Force - RAF", "Registration": "TW647", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Witchford - Witchford", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Buckenham Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The crew was performing a training sortie with other similar aircraft and De Havilland DH.103 Hornet as well. Enroute, the aircraft collided with a Hornet and both aircraft dove into the ground. During the dive, the captain of the Lancaster was able to bail out before the aircraft crashed in a field, killing all seven other occupants from the 35th and 115th Squadron. The Hornet's pilot was killed as well.", "Crash cause": "Human factor", "Date_stringindexer_transform": 131.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 333.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 217.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 102.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 199.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/13/1947", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "44-62063", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "11540", "YOM": "NA", "Flight number": "NA", "Crash location": "Spokane Washington", "Country": "United States of America", "Region": "North America", "Crew on board": "10", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Crashed in a mountainous area located some 30 miles northeast of Spokane. Five crew members were killed and five others were injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 0.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 178.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 356.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 11.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 395.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/13/1947", "Time": "NA", "Aircraft": "Avro 691 Lancastrian", "Operator": "British South American Airways - BSAA", "Registration": "G-AGWG", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "London \u2013 Horta \u2013 Hamilton \u2013 Havana", "MSN": "1279", "YOM": "1945", "Flight number": "NA", "Crash location": "Hamilton All Bermuda", "Country": "Bermuda", "Region": "North America", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "12", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After takeoff from Hamilton bound for Havana, while climbing to a height of 9,000 feet, the engine number four caught fire. The crew elected to return to Hamilton-Kindley Field for an emergency landing. On final approach, the aircraft stalled and crashed few hundred yards short of runway threshold. All 16 occupants were uninjured while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 0.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 376.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 8.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 17.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 77.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "11/13/1947", "Time": "NA", "Aircraft": "Douglas C-53 Skytrooper (DC-3)", "Operator": "Air India", "Registration": "VT-ATI", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "4922", "YOM": "1942", "Flight number": "NA", "Crash location": "Jammu Jammu and Kashmir", "Country": "India", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After landing at Jammu Airport, the aircraft failed to stop within the remaining distance. It overran and came to rest. There were no casualties while the aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 0.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 405.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 107.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 55.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/13/1947", "Time": "NA", "Aircraft": "Airspeed AS.65 Consul", "Operator": "Private British", "Registration": "G-AJGC", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "5119", "YOM": "1947", "Flight number": "NA", "Crash location": "La Rochelle Charente-Maritime", "Country": "France", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was forced to make an emergency landing for unknown reason. There were no casualties but the aircraft owned by D. L. Steiner was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 0.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 56.0, "Registration_stringindexer_transform": 64.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 354.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 315.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "11/13/1947", "Time": "NA", "Aircraft": "AAC.1 Toucan", "Operator": "Soci\u00e9t\u00e9 Auxiliaire de Navigation A\u00e9rienne - SANA", "Registration": "F-BDYH", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Basel \u2013 Lyon \u2013 Perpignan \u2013 Oran", "MSN": "401", "YOM": "NA", "Flight number": "NA", "Crash location": "Les Bouchoux Jura", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While flying over the Jura Mountain Range at a too low altitude, the three engine aircraft hit tree tops and crashed in flames in a wooded area called La Joux. The radio navigator Henri Glaise was slightly injured, the mechanic Leroy was seriously injured and the pilot Alain Bamayeux was killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 0.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 197.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 247.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 260.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 134.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/13/1947", "Time": "NA", "Aircraft": "Beechcraft D18", "Operator": "Rijksluchtvaartschool - RLS", "Registration": "PH-UBS", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Soesterberg - Soesterberg", "MSN": "A.103", "YOM": "NA", "Flight number": "NA", "Crash location": "Soesterberg AFB Utrecht", "Country": "Netherlands", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While performing a training flight in the area of Soesterberg AFB, the aircraft suffered a double engine failure. The crew attempted to make an emergency landing when the aircraft crashed in a field and was destroyed. All three crew members were slightly injured.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 0.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 255.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 148.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 160.0, "Country_stringindexer_transform": 17.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 405.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "11/14/1947", "Time": "NA", "Aircraft": "Airspeed AS.65 Consul", "Operator": "Airspan Travel", "Registration": "G-AJGI", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "5125", "YOM": "1947", "Flight number": "NA", "Crash location": "Ch\u00e2lons-en-Champagne Marne", "Country": "France", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "In flight, the pilot was forced to reduce his altitude and to make an emergency landing in a field. There were no casualties but the aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 145.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 266.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 347.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 106.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/15/1947", "Time": "NA", "Aircraft": "Lockheed 9 Orion", "Operator": "Private American", "Registration": "NC799W", "Flight phase": "NA", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "208", "YOM": "NA", "Flight number": "NA", "Crash location": "Los Angeles California", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. No casualties. The accident occurred in November 1947 (exact date unknown). The aircraft was owned by F. H. Stewart and T. M. Gibson.", "Crash cause": "Unknown", "Date_stringindexer_transform": 209.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 241.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 326.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 251.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/16/1947", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW293", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mumbai - Mumbai", "MSN": "SET17", "YOM": "1946", "Flight number": "NA", "Crash location": "Mumbai Maharashtra", "Country": "India", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a training flight in Bombay-Santa Cruz Airport, consisting of touch and goes. On final approach, the instructor voluntarily shut down one engine. During the last segment, the aircraft banked left and right and the control became difficult. In such conditions, the instructor decided to raise the undercarriage, increased power on the three remaining engines and started a go around. The aircraft stalled and hit the runway surface, slid on its belly for several yards and came to rest. All three crew members were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Human factor", "Date_stringindexer_transform": 213.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 350.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 78.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 11.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 246.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/17/1947", "Time": "NA", "Aircraft": "North American B-25 Mitchell", "Operator": "United States Air Force - USAF", "Registration": "44-30007", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Chicago \u2013 Barksdale", "MSN": "108-33282", "YOM": "NA", "Flight number": "NA", "Crash location": "Mt Magazine Arkansas", "Country": "United States of America", "Region": "North America", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While cruising in a thunderstorm area, the aircraft went out of control and crashed in Mt Magazine, about five miles northwest of Havana, Arkansas. All six crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 123.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 196.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 198.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 372.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 16.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/17/1947", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW284", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Dishforth - Dishforth", "MSN": "SET24", "YOM": "1946", "Flight number": "NA", "Crash location": "Dishforth AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Three student pilots and one instructor were completing a training sortie consisting of touch and goes. For unknown reason, the pilot in command failed to complete the flare properly, causing the aircraft to hit the runway surface. The aircraft bounced and the instructor decided to make a go around. At that time, the aircraft stalled and hit again the runway, swerved and came to rest in flames. All four crew members were uninjured while the aircraft was written off.", "Crash cause": "Human factor", "Date_stringindexer_transform": 123.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 63.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 3.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 33.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 335.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/18/1947", "Time": "15H 0M 0S", "Aircraft": "Bristol 170 Freighter", "Operator": "Trafik-Turist-Transportflyg", "Registration": "SE-BNG", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Addis-Ababa \u2013 Cairo \u2013 Catanie \u2013 Rome \u2013 Stockholm", "MSN": "12792", "YOM": "1946", "Flight number": "NA", "Crash location": "Ravello Campania", "Country": "Italy", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "21", "PAX fatalities": "17", "Other fatalities": "0", "Total fatalities": 21, "Circumstances": "The aircraft was returning to Stockholm with a crew of four and 21 Swedish pilots who delivered Saab B-17 to the Ethiopian Army in Addis-Ababa. It left Catania Airport at 1428LT bound for Rome. After passing over the Island of Stromboli, the crew encountered poor weather conditions with thick clouds. To avoid this area, the crew modified his route but few minutes later, while flying at an insufficient altitude of 1,040 meters in poor visibility, the aircraft hit tree tops located on the Mt Cerro near Ravello. The captain tried to avoid a ground collision so he increased engine power and attempted a 180 turn when the left wing hit the Santa Maria del Monte Peak. The aircraft crashed in flames and was destroyed. Four occupants were rescued while 21 others were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 84.0, "Time_stringindexer_transform": 1.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 116.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 22.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 206.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 20.0, "PAX fatalities_stringindexer_transform": 11.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 116.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/18/1947", "Time": "13H 0M 0S", "Aircraft": "Lockheed L-049 Constellation", "Operator": "Trans World Airlines - TWA", "Registration": "NC86507", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Wilmington - Wilmington", "MSN": "2028", "YOM": "1945", "Flight number": "NA", "Crash location": "Wilmington-New Castle County Delaware", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "At 1210 the flight called the Wilmington-New Castle Tower and asked to be cleared for an instrument approach to runway one. The flight advised that they would fly law over the field on their first approach, and that they would then circle and land The approach was made, and the aircraft flew low over the field to the immediate right of runway one. After passing the north end of the runway. a climbing left turn was made to an altitude of 400 to 500 feet. The aircraft circled at that altitude until approximately one mile west of the south end of runway one, then it started a gliding left turn, toward the field. One-half mile south of the airport the turn was completed, and the aircraft flew a straight course on final approach toward runway one for landing. This last turn onto final approach was completed at an altitude of 200 to 300 feet. The landing gear was down, but the flaps were not extended. The descent on final approach continued normally until the aircraft had reached an altitude of approximately 50 feet above the ground, at which time it was 500 to 1,000 feet from the approach end of runway one. Then, the aircraft was observed to assume a nose-high attitude and to descend more rapidly. First contact with the ground was made 130 feet Prom the approach end of runway one, and 22 feet in front of a 5-foot embankment. The top of this embankment was level with the runway. Since the embankment was uniformly covered with sod, it was not discernible from the air. The extreme loads which were imposed upon the aircraft structure as it rolled into and over the rising embankment immediately after it had settled to the ground caused considerable damage to the landing gear, fuselage, and wings. Forced back into the air by the rise of the embankment, the airplane landed for the second time on the runway, skidding forward 1,270 feet. The right wing was torn from the fuselage as the aircraft turned over to an inverted position. Fuel spilled from ruptured gasoline tanks ignited, and the wreckage burst into flames.", "Crash cause": "Human factor", "Date_stringindexer_transform": 84.0, "Time_stringindexer_transform": 112.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 299.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 93.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 428.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 299.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/19/1947", "Time": "8H 5M 0S", "Aircraft": "Short S.25 Sunderland", "Operator": "British Overseas Airways Corporation - BOAC", "Registration": "G-AGHW", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Hythe \u2013 Poole", "MSN": "NA", "YOM": "1943", "Flight number": "NA", "Crash location": "Brightstone Down Isle of Wight", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While cruising at low height in poor weather conditions, the seaplane hit the slope of a hill and crashed in Brightstone Down, Isle of Wight. A crew member was killed, three others were injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 52.0, "Time_stringindexer_transform": 91.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 353.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 11.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 232.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 376.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 48.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/19/1947", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Registration": "6502", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Bel\u00e9m \u2013 Manaus", "MSN": "1079", "YOM": "NA", "Flight number": "NA", "Crash location": "Porto de Moz Par\u00e1", "Country": "Brazil", "Region": "South America", "Crew on board": "16", "Crew fatalities": "16", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 16, "Circumstances": "Enroute from Bel\u00e9m to Manaus, the seaplane crashed in unknown circumstances in the region of Porto de Moz. As the aircraft failed to arrive in Manaus, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. On December 22, 1947, the wreckage and the dead bodies of all 16 occupants were found near the village of Aquiqui, northwest of Porto de Moz.", "Crash cause": "Unknown", "Date_stringindexer_transform": 52.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 213.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 46.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 68.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 12.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 277.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/20/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "British Air Transport - BAT", "Registration": "G-AIWW", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Croydon \u2013 Jersey", "MSN": "NA", "YOM": "1946", "Flight number": "NA", "Crash location": "Saint Boniface Down Isle of Wight", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft departed Croydon on a cargo flight to Jersey, carrying a load of newspapers. While flying over the Isle of Wight, the crew encountered poor weather conditions with clouds down to 700 feet. Due to low visibility, the pilot did not realize he was off course and his altitude was too low when the twin engine aircraft hit the pylon of a radar and crashed in a prairie located near Saint Boniface Down. Both occupants, pilot E. G. Snowden and radio operator R. J. Corrie were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 63.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 316.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 86.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 220.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 33.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/20/1947", "Time": "NA", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "RP500", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Manston - Manston", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Birchington-on-Sea Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was completing a training sortie over the North Sea when the right engine failed in flight. The captain reduced his altitude and elected to return to Manston for an emergency landing. While descending to an altitude of 800 feet and while flying across the last cloud layer, the aircraft stalled and crashed into the sea, few miles off Birchington-on-Sea. A crew member was killed while three others were rescued.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 63.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 137.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 15.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 307.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 34.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "11/21/1947", "Time": "18H 0M 0S", "Aircraft": "Lisunov LI-2", "Operator": "TARS - Transporturile Aeriene Rom\u00e2no-Sovietice", "Registration": "YR-TAI", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Bucharest \u2013 Prague", "MSN": "184 235 09", "YOM": "1946", "Flight number": "NA", "Crash location": "Plouznice Liberec Region (Libereck\u00fd kraj)", "Country": "Czech Republic", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "21", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "Enroute from Bucharest to Prague, the crew encountered poor weather conditions with low clouds. The pilot lost his orientation due to fog and decided to reduce his altitude to establish a visual contact with the ground when the aircraft hit tree tops and crashed in a dense wooded area. Thirteen passengers were rescued, among them Arel Grigoresco, ambassador of Romania in Prague, while thirteen other occupants were killed, among them all five crew members.", "Crash cause": "Human factor", "Date_stringindexer_transform": 234.0, "Time_stringindexer_transform": 3.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 221.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 159.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 86.0, "Country_stringindexer_transform": 25.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 20.0, "PAX fatalities_stringindexer_transform": 7.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 17.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/23/1947", "Time": "NA", "Aircraft": "Bristol 170 Freighter", "Operator": "Bristol Aeroplane Company", "Registration": "G-AIMC", "Flight phase": "Landing (descent or approach)", "Flight type": "Demonstration", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Wau - Wau", "MSN": "12793", "YOM": "1946", "Flight number": "NA", "Crash location": "Wau Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a demo flight to potential clients. Upon landing in Wau Airport, on a relative steep runway, the aircraft failed to stop properly. The aircraft eventually overran and came to rest into a ditch. All five crew members were slightly injured while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 222.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 246.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 7.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 77.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 380.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 97.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "11/25/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Linea Aeropostal Venezolana - LAV", "Registration": "YV-C-AHO", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Ciudad Bolivar - Ciudad Bolivar", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ciudad Bol\u00edvar Bol\u00edvar", "Country": "Venezuela", "Region": "South America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Ciudad Bolivar Airport, while on a test flight, the aircraft stalled and crashed 150 meters past the runway end. The aircraft was written off while all three crew members were uninjured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 105.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 211.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 137.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 254.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 381.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/25/1947", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "London Aero %26 Motor Services - LAMS", "Registration": "ZS-BUL", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Johannesburg \u2013 Nairobi \u2013 Port Soudan \u2013 Jeddah", "MSN": "1329", "YOM": "1945", "Flight number": "NA", "Crash location": "Port Sudan Red Sea (<U+0627><U+0644><U+0628><U+062D><U+0631> <U+0627><U+0644><U+0623><U+062D><U+0645><U+0631>)", "Country": "Sudan", "Region": "Africa", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft crashed on landing in Port Sudan Airport for unknown reason. While the aircraft was damaged beyond repair, all seven crew members were unhurt.", "Crash cause": "Unknown", "Date_stringindexer_transform": 105.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 386.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 120.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 67.0, "Country_stringindexer_transform": 20.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 53.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/27/1947", "Time": "4H 20M 0S", "Aircraft": "Lisunov LI-2", "Operator": "Jugoslovenske Sovjet Transport Aviacija - JUSTA", "Registration": "YU-BAD", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Zagreb \u2013 Titograd", "MSN": "184 270 09", "YOM": "1947", "Flight number": "NA", "Crash location": "Mt Rumija Coastal Region", "Country": "Montenegro", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "18", "PAX fatalities": "18", "Other fatalities": "0", "Total fatalities": 23, "Circumstances": "The descent to Titograd was started from the south, by night and poor weather conditions. Through freezing fog, the aircraft hit the slope of Mt Rumija located 25 km south of the airport. The wreckage was found few hours later and all 23 occupants were killed. Crew: Cpt Vasa Vracarevic 4.", "Crash cause": "Human factor", "Date_stringindexer_transform": 12.0, "Time_stringindexer_transform": 105.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 248.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 238.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 323.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 21.0, "PAX fatalities_stringindexer_transform": 32.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 454.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/27/1947", "Time": "3H 17M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Columbia Air Cargo", "Registration": "NC95486", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Anchorage \u2013 Yakutat", "MSN": "6065", "YOM": "1942", "Flight number": "NA", "Crash location": "Yakutat Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "11", "PAX fatalities": "11", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "\"The flight departed from Anchorage at 0020, November 27, 1947, carrying 11 revenue passengers and 600 gallons of fuel. At 0238 the flight reported that it was over Yakataga, Alaska, at 6,000 feet, and that it was proceeding in accordance with instrument flight rules to Yakutat, estimating arrival there at 0320. Twenty-eight minutes later at 0306 the flight called Yakutat Radio, stating that it was leaving the 6,000-foot altitude and making an approach \"\"straight in.\"\" The CAA communicator acknowledged and transmitted the Yakutat weather \"\"Indefinite ceiling", "Crash cause": " 500-foot overcast visibility 3 miles", "Date_stringindexer_transform": 12.0, "Time_stringindexer_transform": 24.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 59.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 20.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 429.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 8.0, "PAX fatalities_stringindexer_transform": 4.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 136.0, "Crash cause_stringindexer_transform": 10.0}, {"Date": "11/27/1947", "Time": "NA", "Aircraft": "De Havilland DH.83 Fox Moth", "Operator": "McAvoy Diamond Drilling %26 Development Company Ltd", "Registration": "CF-DJK", "Flight phase": "Landing (descent or approach)", "Flight type": "Executive/Corporate/Business", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Yellowknife - Gordon Lake", "MSN": "FM.36", "YOM": "NA", "Flight number": "NA", "Crash location": "Gordon Lake Northwest Territories", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing in Gordon Lake and was lost. All three occupants escaped unhurt.", "Crash cause": "Unknown", "Date_stringindexer_transform": 12.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 90.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 10.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 140.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 203.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 296.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/27/1947", "Time": "NA", "Aircraft": "Airspeed AS.65 Consul", "Operator": "Payloads Charter Company", "Registration": "G-AIOO", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "London-Gatwick \u2013 Perpignan", "MSN": "4357", "YOM": "1946", "Flight number": "NA", "Crash location": "Perpignan Pyr\u00e9n\u00e9es-Orientales", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Perpignan Airport, the twin engine aircraft stalled and crashed in a field. All three occupants were injured and the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 12.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 131.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 227.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 327.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 445.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "11/28/1947", "Time": "14H 10M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "43-48736", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Pisa \u2013 Frankfurt", "MSN": "14552/25997", "YOM": "1944", "Flight number": "NA", "Crash location": "Trappa Piedmont", "Country": "Italy", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "15", "PAX fatalities": "15", "Other fatalities": "0", "Total fatalities": 20, "Circumstances": "After his departure from Pisa Airport, the crew encountered very poor weather conditions with alto-cumulus, heavy snow falls and wind from the southeast up to 25 knots. Due to the wind, the aircraft went off course up to 50 km to the west, and due to poor visibility, the crew was unaware of this course deviation. The aircraft hit the slope of a mountain located near Trappa and was destroyed. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. On January 31st, 1948, Italian skiers found the wreckage of the aircraft and 20 dead bodies in an isolated area. According to some US military Officers, at least two passengers survived the crash but died few hours later.", "Crash cause": "Weather", "Date_stringindexer_transform": 29.0, "Time_stringindexer_transform": 107.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 60.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 187.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 324.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 6.0, "PAX fatalities_stringindexer_transform": 9.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 379.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "11/28/1947", "Time": "12H 15M 0S", "Aircraft": "North American B-25 Mitchell", "Operator": "GLAM - Groupe de Liaisons A\u00e9riennes Minist\u00e9rielles", "Registration": "41-30330", "Flight phase": "Flight", "Flight type": "Government", "Survivors": "No", "Crash site": "Desert", "Schedule": "Oran - Colomb-B\u00e9char", "MSN": "87-8495", "YOM": "NA", "Flight number": "NA", "Crash location": "B\u00e9char B\u00e9char", "Country": "Algeria", "Region": "Africa", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "9", "PAX fatalities": "9", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "The aircraft christened 'Tailly 2' left Oran at 1015LT in marginal weather conditions. Enroute, due to sandstorm, the captain decided to reduce his altitude in an attempt to establish a visual contact with the ground. Twice, the crew informed ground that his ETA in Colomb-B\u00e9char was delayed about fifteen minutes. While descending at a too low altitude, the twin engine aircraft hit the ground near a railroad and crashed in a huge explosion about 56 km north of Colomb-B\u00e9char. All thirteen occupants were killed, among them the French General Philippe Leclerc. Thirteen bodies were recovered and evacuated to France, but only twelve of them were identified. A thirteenth occupant, wearing a French Army uniform with the grade of Lieutenant was recovered but unidentified. Crew: Lt Fran\u00e7ois-Ren\u00e9 Delluc, pilot, Lt Andr\u00e9-Ren\u00e9 Pilleboue, navigator, Adj Jean Guillou, mechanic, Sgt Eug\u00e8ne Lamotte, radio operator. Passengers: Gen Philippe Leclerc, Col Th\u00e9odore Fieschi, Col Charles Cl\u00e9mentin, Col Louis du Garreau de la M\u00e9chenie, Col Paul Fouchet, Cpt Georges Frichement, Cdt Michel Meyrrand, S/Lt Robert Miron de L'Espinay.", "Crash cause": "Human factor", "Date_stringindexer_transform": 29.0, "Time_stringindexer_transform": 18.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 300.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 16.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 246.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 166.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 8.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 171.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "11/28/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Argentinian Air Force - Fuerza A\u00e9rea Argentina", "Registration": "T-18", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "20406", "YOM": "1944", "Flight number": "NA", "Crash location": "Bah\u00eda Blanca Buenos Aires province", "Country": "Argentina", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Upon landing, the aircraft hit unknown obstacles. On impact, the undercarriage were sheared off and the aircraft skidded for several yards before coming to rest. There were no casualties while the aircraft was written off.", "Crash cause": "Other causes", "Date_stringindexer_transform": 29.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 270.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 275.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 339.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "11/30/1947", "Time": "14H 25M 0S", "Aircraft": "Douglas C-54 Skymaster", "Operator": "Alaska Airlines", "Registration": "NC91009", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Anchorage \u2013 Yakutat \u2013 Seattle", "MSN": "7453", "YOM": "1943", "Flight number": "NA", "Crash location": "Tacoma Washington", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "25", "PAX fatalities": "7", "Other fatalities": "1", "Total fatalities": 9, "Circumstances": "\"The flight arrived over the Seattle radio range station at 3,000 feet on its initial approach to the Boeing Airport at 1357. Shortly before Captain Farris had reported to Seattle Radio that he had 2 rough engines, but he did not declare an emergency. The condition of engine roughness is discussed below. Weather at Boeing Field, Seattle, Washington, was reported to be ceiling indefinite 500 feet visibility one mile. An instrument approach for landing at Boeing Field was made, but not completed because of the low ceiling and visibility, so the flight returned to an altitude of 1,500 feet on the northwest course of the Seattle radio range. During this time Copilot Whitting remained in the left seat and flew the airplane. The second instrument approach was made for a landing at the Seattle-Tacoma Airport, sometimes referred to as the Bow Lake Airport, which is located 4 miles south of the Seattle radio range station. The airplane was flown inbound on the northwest course of the range. Then, after passing over the range station at 1,500 feet, a heading of 193 degrees toward the airport was flown, and a descent made for landing. The aircraft was first observed at the Seattle-Tacoma Airport when approximately 500 feet above the approach and of Runway 20, 5,611 feet long, at which time it was flying at an angel to the left of the runway. An \"\"S\"\" maneuver and rapid decent were made. A right turn was entered and held until the airplane was again over Runway 20", "Crash cause": " then it turned left. When the airplane first made contact with the runway it was in the left turn", "Date_stringindexer_transform": 202.0, "Time_stringindexer_transform": 102.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 398.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 101.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 121.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 10.0, "PAX fatalities_stringindexer_transform": 6.0, "Other fatalities_stringindexer_transform": 2, "Circumstances_stringindexer_transform": 58.0, "Crash cause_stringindexer_transform": 9.0}, {"Date": "12/1/1947", "Time": "NA", "Aircraft": "Ilyushin II-12", "Operator": "Polyarnaya Aviatsiya", "Registration": "CCCP-N439", "Flight phase": "Takeoff (climb)", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kimry-Borki - Moscow", "MSN": "30 047", "YOM": "1947", "Flight number": "NA", "Crash location": "Taldom Moscow oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a positioning flight from Kimry-Borki to Moscow-Zakharkovo. Few minutes after takeoff, the left engine lost oil pressure and power. The captain elected to make an emergency landing but the aircraft crashed in a wooded area located in Taldom, about 13 km southeast of Borki Airport. The aircraft was destroyed and all five crew members were injured. At the time of the accident, weather conditions were poor with a cloud base at 100 meters and an horizontal visibility limited to two km. It appears that the crew did not receive any permission to complete this positioning flight to Moscow.", "Crash cause": "Other causes", "Date_stringindexer_transform": 14.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 224.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 14.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 226.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 319.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 7.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "12/1/1947", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "PH355", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Moreton-in-Marsh - Moreton-in-Marsh", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Moreton-in-Marsh AFB Gloucestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, was performing a training sortie in RAF Moreton-in-Marsh, consisting of stall maneuvers. While conducting an umpteenth stall, he lost control of the airplane that went into a spin. He tried to bail out but the aircraft dove into the ground and crashed in a field near the airbase. The aircraft was destroyed and the pilot was killed. For undetermined reason, the pilot's harness was not properly secured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 14.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 410.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 43.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 43.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 358.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "12/1/1947", "Time": "NA", "Aircraft": "De Havilland DH.90 Dragonfly", "Operator": "Airlines WA", "Registration": "VH-ADG", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Guildford \u2013 Bunbury", "MSN": "7516", "YOM": "NA", "Flight number": "NA", "Crash location": "Guildford Western Australia", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll, the aircraft skidded, veered off runway and came to rest upside down. All three occupants were rescued, one of the passenger was slightly injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 14.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 392.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 64.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 409.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 432.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/5/1947", "Time": "16H 36M 0S", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Lancashire Aircraft Corporation - LAC", "Registration": "G-AIHU", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lille \u2013 Liverpool", "MSN": "1306", "YOM": "1946", "Flight number": "NA", "Crash location": "Saint Asaph Denbighshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "\"While at Lille 6,380 kg (96 bales) of fabric was loaded onto the aircraft, this was described in contemporary newspaper reports as being woolen piece goods. Once this was complete their flight plan was submitted to the Lille controller, it was a direct flight back to Speke, and they received a weather briefing for the planned route. This indicated that there would be dense cloud layers from 1000 feet upwards on the entire route with some rain. The wind as far as the London area was forecast to be from the Southwest at 35 to 40 knots and from the Northwest beyond there at a similar speed. The estimated flight time was 1 hour 30 minutes. The aircraft departed Lille at 14:38 GMT and made contact with the regional control at Uxbridge at 15:06, they reported that they had flown over the French coast in the Dunkerque area at 14:46. At around 15:15 they were over the east coast of England between Ipswich and Colchester, they were already someway off course due to the strong wind and this was confirmed with a position fix at 15:35 which put the aircraft over the fens in the Ely area. Had they not had the strong cross wind their intended track at this point would have taken them over Bedford. Upon confirming how far off course they were the pilot adopted a more westerly course and asked Uxbridge if he should contact the Manchester area control at Ringway, they replied yes. By around 16:00 to 16:05 was more or less back on the right course in the Stafford area. The crew never made contact with Ringway, their call-sign was heard at 15:59 but another aircraft was communicating with Ringway at the time. Once this transmission was completed the Ringway controller attempted to contact G-AIHU twice but failed to get a response, the crew had in fact made contact directly with the approach controller at Speke around the time of the second attempt by Ringway. This was to request a QTE (true bearing) from Speke, this was passed as 1340. At 16:10 the Speke controller asked the crew what their ETA was and they replied 16:20, three minutes later he gave the crew permission to enter the controlled airspace around Speke and circle the airfield. They were instructed to report when they had descended to 2,000 ft and reply by R/T (Radio Telephony) to the Aerodrome Controller, up to this point they had been communicating by morse (Wireless Telegraphy). No communication was received from them by R/T and after dealing with other aircraft the approach controller managed to re-establish contact at 16:28 by W/T. The crew reported in plain language \"\"unable to raise 6440 - landing instructions?\"\"", "Crash cause": " they also requested a QDM (magnetic course to steer) at 16:32", "Date_stringindexer_transform": 252.0, "Time_stringindexer_transform": 103.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 208.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 263.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 186.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 308.0, "Crash cause_stringindexer_transform": 14.0}, {"Date": "12/9/1947", "Time": "NA", "Aircraft": "Fairchild C-82 Packet", "Operator": "United States Air Force - USAF", "Registration": "44-22994", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "10038", "YOM": "NA", "Flight number": "NA", "Crash location": "Elgin Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed 11 miles northeast of Elgin following an engine failure. Occupant fate unknown.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 186.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 385.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 205.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 138.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/10/1947", "Time": "20M 0S", "Aircraft": "Douglas C-54 Skymaster", "Operator": "United States Air Force - USAF", "Registration": "42-72572", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Goose Bay \u2013 Westover", "MSN": "10677", "YOM": "1945", "Flight number": "NA", "Crash location": "Goose Bay Newfoundland & Labrador", "Country": "Canada", "Region": "North America", "Crew on board": "4", "Crew fatalities": "1", "Pax on board": "25", "PAX fatalities": "22", "Other fatalities": "0", "Total fatalities": 23, "Circumstances": "One minute after a night takeoff from Goose Bay, while in initial climb, the pilot encountered serious difficulties to gain height, informed ground and elected to return. Shortly later, the four engine aircraft stalled and crashed in flames in a wooded area located 13,5 km north of the airport. Six occupants were seriously injured while 23 others were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 279.0, "Time_stringindexer_transform": 99.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 288.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 231.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 419.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 10.0, "PAX fatalities_stringindexer_transform": 12.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 302.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "12/11/1947", "Time": "18H 10M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "44-76366", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "El Paso \u2013 Memphis", "MSN": "15950/32698", "YOM": "1945", "Flight number": "NA", "Crash location": "Memphis Tennessee", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "16", "PAX fatalities": "16", "Other fatalities": "0", "Total fatalities": 20, "Circumstances": "On final approach to Memphis in marginal weather conditions, the aircraft banked right, dove into the ground and crashed in a wooded area located 4 miles short of runway threshold. All 20 occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 166.0, "Time_stringindexer_transform": 33.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 311.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 135.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 378.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 23.0, "PAX fatalities_stringindexer_transform": 26.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 169.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/13/1947", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Central African Airways - CAA", "Registration": "VP-YBK", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Salisbury \u2013 Zambezi", "MSN": "6359", "YOM": "1937", "Flight number": "NA", "Crash location": "Zambezi North-Western", "Country": "Zambia", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "5", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on approach to Zambezi Airport for unknown reason. The aircraft was damaged beyond repair and all six occupants were slightly injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 293.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 104.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 220.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 385.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 9.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 413.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/14/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Indonesian Air Force - TNI-AU Tentara Nasional Indonesia - Angkatan Udara", "Registration": "RI-003", "Flight phase": "Flight", "Flight type": "Delivery", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Songkhla \u2013 Bukittinggi", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bukit Tanjung Hantu Perak", "Country": "Malaysia", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft left Songkhla, Thailand, bound for Bukittinggi, West Sumatra, to be delivered to the Indonesian Air Force. It was carrying medical supplies as well. While flying along the west coast of Malaysia, the twin engine aircraft crashed in unknown circumstances into the sea, killing both occupants, Lt Col Iswahjudi and Air Vice-Marshal Halim Perdanakusuma.", "Crash cause": "Unknown", "Date_stringindexer_transform": 256.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 256.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 163.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 173.0, "Country_stringindexer_transform": 37.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 37.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/15/1947", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Alfred Wegener Institute", "Registration": "VH-BEP", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Calcutta West Bengal", "Country": "India", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances while preparing to land in Calcutta Airport. The aircraft was written off and both occupants were injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 139.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 260.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 29.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 470.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/16/1947", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW301", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Abingdon - Abingdon", "MSN": "SET33", "YOM": "1946", "Flight number": "NA", "Crash location": "Abingdon AFB Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While descending to RAF Abingdon, while on a local training sortie, the captain was forced to shut down the engine number three due to an excessive temperature. As the aircraft was unstable on approach, the captain decided to make a go around when the engine number four overheat. Simultaneously, the approach light system failed. In dark, the crew decided to land immediately, raised the undercarriage and crash landed in a field short of runway threshold. While all five crew members were unhurt, the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 77.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 45.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 299.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 28.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 23.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/16/1947", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "United States Navy - USN", "Registration": "48291", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Norfolk - Norfolk", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Norfolk Virginia", "Country": "United States of America", "Region": "North America", "Crew on board": "7", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew was performing a training sortie in NAS Norfolk. In flight, the seaplane collided with a Chance Vought F4U Corsair. Both aircraft dove into the ground and crashed near the airbase. One crew aboard the Catalina survived the crash while six other occupants and the pilot of the Corsair were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 77.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 384.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 59.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 47.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 250.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "12/18/1947", "Time": "9H 30M 0S", "Aircraft": "Ilyushin II-12", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L1343", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Krasnoyarsk \u2013 Omsk", "MSN": "30 049", "YOM": "1947", "Flight number": "NA", "Crash location": "Krasnoyarsk Krasnoyarsk Krai", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "4", "Pax on board": "20", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "Fifteen minutes after takeoff from Krasnoyarsk-Severniy Airport, the oil pressure on the left engine dropped. The crew shut down the engine, feathered the propeller and decided to return to Krasnoyarsk for a safe landing. On final approach, the speed was too high and the crew encountered problems to lower the undercarriage so the captain elected to make a go around. Few minutes later, during a second attempt to land, while at a height of some 50 meters, the aircraft stalled and crashed few hundred yards short of the runway threshold. Eighteen occupants were injured while seven others, among them four crew members, were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 73.0, "Time_stringindexer_transform": 43.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 302.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 254.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 401.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 13.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 75.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/18/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L997", "Flight phase": "Landing (descent or approach)", "Flight type": "Test", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Moscow-Vnukovo - Moscow-Vnukovo", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Moscow-Vnukovo Moscow oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was engaged in a test flight following modification on the engines by GVF (Grazhdansky Vozdushnyi Flot). The final approach to Vnukovo Airport was completed in low visibility due to foggy conditions, when the aircraft hit a hill and crashed about 10 km northeast of the airport. The occupant fate remains unknown.", "Crash cause": "Human factor", "Date_stringindexer_transform": 73.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 121.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 70.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 23.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 168.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "12/19/1947", "Time": "NA", "Aircraft": "Martin 187 Baltimore", "Operator": "Turkish Air Force - T\u00fcrk Hava Kuvvetleri", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Diyarbakir - Diyarbakir", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Diyarbakir Southeastern Anatolia Region (G\u00fcneydogu Anadolu B\u00f6lgesi)", "Country": "Turkey", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Crashed in unknown circumstances in Diyarbakir while completing a training sortie. All four crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 71.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 122.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 13.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 31.0, "Country_stringindexer_transform": 38.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 347.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/19/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "NZ3558", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "16969/34229", "YOM": "1945", "Flight number": "NA", "Crash location": "Dinalungan Aurora", "Country": "Philippines", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "10", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The starboard engine blew up about 480 km north of Manila. Flight was maintained on one engine but bad weather and turbulence forced the plane down to below 1,000 feet. At about 200 km from Manila, some personal baggage and mail were jettisoned. The crew eventually realized it was impossible to join Manila so decided to make a wheels up landing near Dinalungan. The aircraft crash landed and was damaged beyond repair while all 12 occupants were unhurt.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 71.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 414.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 436.0, "Country_stringindexer_transform": 18.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 11.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 22.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/20/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KN439", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "16121/32869", "YOM": "1945", "Flight number": "NA", "Crash location": "Uetersen Schleswig-Holstein", "Country": "Germany", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Uetersen in poor weather conditions, the left engine failed. The pilot lost control of the aircraft that stalled and crashed in flames in a field short of runway threshold. All occupants were injured, the copilot more seriously. The aircraft was destroyed by fire.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 177.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 404.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 162.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 17.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 147.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/22/1947", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Iberia - Lineas A\u00e9reas de Espana", "Registration": "EC-ACG", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "19553", "YOM": "1944", "Flight number": "NA", "Crash location": "Madrid-Barajas Madrid", "Country": "Spain", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Suffered a ground accident in Barajas Airport. No casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 283.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 149.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 156.0, "Country_stringindexer_transform": 4.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 124.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/23/1947", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "45-21775", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Ladd - Ladd", "MSN": "13669", "YOM": "NA", "Flight number": "NA", "Crash location": "Nome Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "8", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew left Ladd Army Airfield in the day for a 15 hours training sortie. While flying over the Seward Peninsula at low height, the four engine aircraft christened 'The Clobbered Turkey' hit the slope of Mt Hot Springs. The aircraft was written off but all eight crew members survived. Two of them decided to walk away to find help but were found dead few days later. Six other occupants were rescued later and three rescuers were killed as well during the salvage operations. Crew: Lt Vern H. Arnett, pilot, Lt Donald B. Duesler, copilot, Lt Frederick E. Sheetz, navigator, Lt Lyle B. Larson, flight engineer, Lt Francis Schaack, radar operator, T/Sgt Wilbur E. Decker, electrical mechanic, Sgt Olan R. Samford, radio operator, S/Sgt Leslie R. Warre, photographer. Source: http://vintageairphotos.blogspot.ch/2014/12/the-legacy-of-clobbered-turkey-tragedy_19.html", "Crash cause": "Unknown", "Date_stringindexer_transform": 31.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 262.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 170.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 435.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 155.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/23/1947", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Coastal Air Lines", "Registration": "NA", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Raleigh \u2013 Miami", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Miami Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a cargo flight from Raleigh to Miami and while reaching Melbourne, Florida, he was informed by ATC that Miami Airport was closed to traffic due to poor weather conditions. For same reason, the alternate airport West Palm Beach was closed and the crew was advised to divert to Key West or Tampa. Few minutes later, the captain informed ATC that he was short of fuel and started the approach to Miami in low visibility. During the last turn to join the approach path, the right engine failed due to fuel exhaustion. The aircraft stalled and crashed. Both crew members were injured while the aircraft was written off.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 31.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 261.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 9.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 114.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/23/1947", "Time": "NA", "Aircraft": "Short S.29 Stirling", "Operator": "Air Transport - Belgium", "Registration": "OO-XAC", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brussels \u2013 Paris \u2013 Rome \u2013 Beyrouth \u2013 Karachi \u2013 Kunming \u2013 Shanghai", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Kunming Yunnan", "Country": "China", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "26", "PAX fatalities": "21", "Other fatalities": "0", "Total fatalities": 25, "Circumstances": "Shortly after takeoff from Kunming Airport, while in initial climb, the aircraft stalled and crashed in a field located 3 km from the airport. Five passengers were seriously injured while all 25 other occupants were killed. It appears that three of the four engines failed shortly after rotation. All passengers were Belgian missionaries.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 31.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 383.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 27.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 251.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 25.0, "PAX fatalities_stringindexer_transform": 19.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 442.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/24/1947", "Time": "NA", "Aircraft": "Lockheed C-60 LodeStar", "Operator": "SABENA - Soci\u00e9t\u00e9 Anonyme Belge d'Exploitation de la Navigation A\u00e9rienne", "Registration": "OO-CAR", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mitwaba \u2013 Manono", "MSN": "2419", "YOM": "1943", "Flight number": "NA", "Crash location": "Mitwaba Katanga", "Country": "Democratic Republic of Congo", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after takeoff, while in initial climb, the twin engine aircraft stalled and crashed in a field. All five occupants were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 67.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 52.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 212.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 343.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 229.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/24/1947", "Time": "NA", "Aircraft": "Douglas A-26 Invader", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "V\u00e9lizy-Villacoublay \u2013 Blida", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Chelles-le-Pin Seine-et-Marne", "Country": "France", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "9", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Few minutes after takeoff from V\u00e9lizy-Villacoublay, an engine caught fire. The captain elected to return but was forced to attempt an emergency landing in a field located near the aerodrome of Chelles-le-Pin. The aircraft belly landed and came to rest in flames. All 15 occupants, most of them women and children flying back to Algeria, were slightly injured while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 67.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 14.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 172.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 255.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 375.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/27/1947", "Time": "12H 40M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "PH-TCV", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Amsterdam \u2013 Leeuwarden \u2013 Groningen", "MSN": "12309", "YOM": "1944", "Flight number": "NA", "Crash location": "Leeuwarden Friesland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "10", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While approaching Leeuwarden, the crew encountered poor weather conditions with heavy rain falls and a cloud base at 100 meters. Unable to locate the airport, the captain decided to make a go around and increased engine power. Shortly later, while flying over the city of Leeuwarden, the aircraft hit with its left wing the church of Saint Bonifatius which is 70 meters high. Three meters of the left wing were sheared off. The captain reduced his altitude in an attempt to make an emergency landing and completed a belly landing in a field. The aircraft skidded for several yards and hit three successive ditches before coming to rest with both propellers sheared off. All 15 occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Weather", "Date_stringindexer_transform": 46.0, "Time_stringindexer_transform": 116.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 13.0, "Registration_stringindexer_transform": 153.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 121.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 272.0, "Country_stringindexer_transform": 17.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 11.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 190.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "12/27/1947", "Time": "NA", "Aircraft": "Douglas C-48 (DC-3)", "Operator": "Air India", "Registration": "VT-AUG", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Karachi \u2013 Bombay", "MSN": "4175", "YOM": "1941", "Flight number": "NA", "Crash location": "Karachi Sindh (<U+0633><U+0646><U+068C> <U+0633><U+0646><U+062F><U+06BE>)", "Country": "Pakistan", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "19", "PAX fatalities": "19", "Other fatalities": "0", "Total fatalities": 23, "Circumstances": "Shortly after takeoff by night, while in initial climb, the aircraft banked right, stalled and crashed by a 30\u00b0 nose down angle in Korangi Creek. All 23 occupants were killed. At the time of the accident, visibility was poor and weather conditions were considered as marginal.", "Crash cause": "Human factor", "Date_stringindexer_transform": 46.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 147.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 188.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 26.0, "Country_stringindexer_transform": 36.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 22.0, "PAX fatalities_stringindexer_transform": 25.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 71.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "12/28/1947", "Time": "12H 0M 0S", "Aircraft": "Douglas DC-3", "Operator": "Servicio A\u00e9reo Panini", "Registration": "XA-GEE", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Durango \u2013 L\u00e9on \u2013 Mexico City", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Le\u00f3n Guanajuato", "Country": "Mexico", "Region": "Central America", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "7", "PAX fatalities": "3", "Other fatalities": "3", "Total fatalities": 8, "Circumstances": "Shortly after takeoff from Le\u00f3n-Guanajuato-Del Bajio Airport, the crew informed ground that an engine failed and received the authorization to return for an emergency landing. While completing a last turn, the pilot lost control of the aircraft that stalled and crashed in a residential area located near the airport. Both pilots, three passengers and three people on the ground were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 120.0, "Time_stringindexer_transform": 2.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 40.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 145.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 174.0, "Country_stringindexer_transform": 23.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 7.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 2, "Circumstances_stringindexer_transform": 224.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "12/28/1947", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Waite Fisheries", "Registration": "CF-FFP", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Buffalo Narrows \u2013 Big River", "MSN": "46", "YOM": "1941", "Flight number": "NA", "Crash location": "Saskatchewan Saskatchewan", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute from Buffalo Narrows to Big River, the pilot encountered poor weather conditions with a snowstorm. He reduced his altitude in an attempt to make an emergency landing when landing on a road, the aircraft ended up in the bush and was destroyed. Both occupants were injured.", "Crash cause": "Weather", "Date_stringindexer_transform": 120.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 238.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 23.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 182.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 195.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "12/29/1947", "Time": "19H 0M 0S", "Aircraft": "Vickers Viking", "Operator": "Det Danske Luftfartselskab - DDL", "Registration": "OY-DLI", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Paris \u2013 Copenhagen", "MSN": "197", "YOM": "1947", "Flight number": "NA", "Crash location": "Copenhagen Hovedstaden", "Country": "Denmark", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "11", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Copenhagen-Kastrup Airport, the twin engine aircraft went unstable, rolled left and right, stalled and crashed in a flat position in the \u00d8resund, about 500 meters short of runway threshold. While all 15 occupants were uninjured and quickly rescued, the aircraft christened 'Torulf Viking' was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 229.0, "Time_stringindexer_transform": 17.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 79.0, "Registration_stringindexer_transform": 325.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 24.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 175.0, "Country_stringindexer_transform": 30.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 8.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 359.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/30/1947", "Time": "NA", "Aircraft": "Lisunov LI-2", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L4214", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Chelyabinsk \u2013 Kazan \u2013 Moscow", "MSN": "18421005", "YOM": "0", "Flight number": "NA", "Crash location": "Zlatoust Chelyabinsk oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew left Chelyabinsk Airport at 1215LT, established contact with RDS Koltsovo and was instructed to proceed to the altitude of 1,500 meters, although this was lower than the minimum safe altitude of 2,100 meters on the route Chelyabinsk - Kazan. An hour later, the crew encountered poor weather conditions with a cloud base at 200 meters, heavy snow falls and an estimated horizontal visibility less than 4 km. While cruising at the altitude of 1,145 meters, the twin engine aircraft hit the slope of Mt Taganay located about 20 km north of Zlatoust. The wreckage was found in an isolated and mountainous area a day later, the aircraft was destroyed by impact forces and a post crash fire and all six occupants have been killed. The aircraft was carrying a load of various goods consisting of grinding wheels, boxes and a furnace-type PET-8 for a total of 2,298 kilos.", "Crash cause": "Human factor", "Date_stringindexer_transform": 206.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 283.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 32.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 207.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 317.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "12/31/1947", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "44-62200", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Elmendorf - Elmendorf", "MSN": "11677", "YOM": "NA", "Flight number": "NA", "Crash location": "Elmendorf-Richardson AFB (JBER) Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "Crashed shortly after takeoff from Elmendorf AFB, killing all nine crew members.", "Crash cause": "Unknown", "Date_stringindexer_transform": 56.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 103.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 147.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 313.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 10.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 327.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "12/31/1947", "Time": "NA", "Aircraft": "Avro 19", "Operator": "Bharat Airways", "Registration": "VT-CJZ", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1384", "YOM": "NA", "Flight number": "NA", "Crash location": "Srinagar Jammu and Kashmir", "Country": "India", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. The exact date remains unknown, somewhere during 1947.", "Crash cause": "Unknown", "Date_stringindexer_transform": 56.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 243.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 403.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 325.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/2/1948", "Time": "20H 5M 0S", "Aircraft": "Grumman G-44 Widgeon", "Operator": "United States Coast Guard - USCG", "Registration": "32977", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "San Diego \u2013 Memphis \u2013 Chattanooga", "MSN": "1331", "YOM": "NA", "Flight number": "NA", "Crash location": "Signal Mountain Tennessee", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While descending to Chattanooga Airport by night, the seaplane hit tree tops and crashed in flames in a wooded area located in Signal Mountain, north of Chattanooga. Both crew members were killed. Crew: Ens Roger W. Whale, Amm1 Kristian F. Anderson.", "Crash cause": "Human factor", "Date_stringindexer_transform": 75.0, "Time_stringindexer_transform": 97.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 28.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 171.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 381.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 135.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "1/2/1948", "Time": "NA", "Aircraft": "AAC.1 Toucan", "Operator": "SOCOTRA - Soci\u00e9t\u00e9 Coop\u00e9rative de Tramping A\u00e9rien", "Registration": "F-BBZC", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "248", "YOM": "NA", "Flight number": "NA", "Crash location": "Casablanca Grand Casablanca", "Country": "Morocco", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On touchdown, a landing gear failed. The aircraft was damaged beyond repair while all three crew members were unhurt.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 75.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 73.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 24.0, "Country_stringindexer_transform": 19.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 276.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/5/1948", "Time": "NA", "Aircraft": "Lockheed 18 LodeStar", "Operator": "South African Airways -SAA - Suid Afrikaanse Lugdiens - SAL", "Registration": "ZS-ASW", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2037", "YOM": "1940", "Flight number": "NA", "Crash location": "Johannesburg Gauteng", "Country": "South Africa", "Region": "Africa", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "11", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On landing, an undercarriage collapsed. The aircraft went out of control, veered off runway and hit a drainage ditch. All 15 occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 161.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 146.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 316.0, "Country_stringindexer_transform": 33.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 8.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 49.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/6/1948", "Time": "21H 0M 0S", "Aircraft": "Vickers Viking", "Operator": "British European Airways - BEA", "Registration": "G-AHPK", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Glasgow \u2013 Northolt", "MSN": "148", "YOM": "1947", "Flight number": "NA", "Crash location": "Northolt AFB London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "14", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On approach to Northolt Airport, about seven km from the runway threshold, the captain decided to make a go around and informed ATC he was unable to distinguish the runway due to poor weather conditions. A second and a third attempt to land were aborted few minutes later. During the fourth attempt, the aircraft was too low and hit tree tops before crashing in a field located 4 km short of the runway threshold. 17 occupants were injured while a passenger was killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 121.0, "Time_stringindexer_transform": 16.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 72.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 274.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 414.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 16.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 418.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "1/6/1948", "Time": "19H 37M 0S", "Aircraft": "Douglas DC-3", "Operator": "Air France", "Registration": "F-BAXC", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brussels \u2013 Paris", "MSN": "42972", "YOM": "1946", "Flight number": "NA", "Crash location": "Paris-Le Bourget Seine-Saint-Denis", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "11", "PAX fatalities": "11", "Other fatalities": "0", "Total fatalities": 16, "Circumstances": "While approaching Paris, the crew was instructed by ATC to stack for about 30 minutes due to an Air Alg\u00e9rie DC-3 landing at the same time. Also, ATC told the crew to divert to Pontoise-Cormeilles en Vexin if they wanted to land immediately. The captain decided to stack for about 30 minutes at an altitude between 700 and 1,000 meters and was later authorized to descent to Le Bourget. On final approach, while at a height of some 150 feet, the aircraft stalled and crashed in a tulip field located 1,500 meters short of runway threshold. Two passengers were seriously injured while all 14 other occupants were killed. Few hours later, both survivors died from their injuries. Crew: Edouard Albin, pilot, Georges Capron, copilot, Pierre Lebeau, radio navigator, Joseph Lacroix, mechanic, Mr. Germ\u00e9, steward.", "Crash cause": "Unknown", "Date_stringindexer_transform": 121.0, "Time_stringindexer_transform": 41.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 287.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 215.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 4.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 8.0, "PAX fatalities_stringindexer_transform": 4.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 232.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/7/1948", "Time": "7H 45M 0S", "Aircraft": "Douglas DC-3", "Operator": "Coastal Air Lines", "Registration": "NC60331", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Newark \u2013 Philadelphia \u2013 Raleigh \u2013 Miami", "MSN": "12968", "YOM": "1944", "Flight number": "NA", "Crash location": "Levy South Carolina", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "25", "PAX fatalities": "17", "Other fatalities": "0", "Total fatalities": 18, "Circumstances": "After refueling to 600 gallons of gasoline, the flight departed at 0553 on an instrument flight plan to Miami, via Airway Amber 7, at an altitude of 2,000 feet. The crew reported over the Florence, South Carolina, range station at 0643 at an altitude of 2,000 feet. At 0716 they reported over Charleston, South Carolina, at an altitude of 2,000 feet, and estimated their arrival over Savannah at 0744. This was the last communication received from the flight. Between Charleston and Savannah, Co-pilot Eick left the cockpit to obtain navigational charts, during which time he heard one or both of the engines run roughly. By the time he returned to his seat, however, both engines were again operating normally. A few minutes later both engines stopped, and the fuel pressure gauges were observed to be at zero. The wobble pump was used, different positions of the fuel tank selector valves were tried, the cross-feed valves were turned to the \u201con\u201d position, but no fuel pressure could be obtained. When it became apparent that the engines could not be restarted, Captain Antonioli informed the co-pilot that it would be necessary to make a forced landing in a nearby marsh, and instructed him to see that the passengers were secured by safety belts. Co-pilot Eick proceeded immediately to the cabin where he buckled the safety belts of 4 or 5 passengers. Then he felt the airplane turning steeply, and he attempted to return to the cockpit. By the time he reached the radio compartment passageway between the passenger cabin and the cockpit he was forced to the floor by centrifugal force. The aircraft shuddered as though in a stall, and crashed. Witnesses on a nearby barge saw the aircraft approaching from a north-westerly direction at an altitude estimated to be 1,000 feet, descending without audible engine noise. It was observed to enter a gliding turn to the left which was continued for about one and one-half revolutions, until the airplane crashed into a marsh and burst into flames. A pilot and 17 passengers were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 20.0, "Time_stringindexer_transform": 70.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 428.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 157.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 222.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 10.0, "PAX fatalities_stringindexer_transform": 11.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 290.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/7/1948", "Time": "NA", "Aircraft": "Avro 19", "Operator": "Sivewright Airways", "Registration": "G-AIXE", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1376", "YOM": "1946", "Flight number": "NA", "Crash location": "Chelford Cheshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute, the pilot was forced to make an emergency landing for unknown reason. The aircraft crash landed in a field in Chelford and was damaged beyond repair. There were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 20.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 67.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 270.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 407.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/7/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KN553", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Waterbeach - Waterbeach", "MSN": "16416/33164", "YOM": "1945", "Flight number": "NA", "Crash location": "Waterbeach AFB Cambridgeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training sortie at RAF Waterbeach, consisting of touch and goes. On final approach, the instructor deliberately shut down an engine to simulate a failure. Following this, the pilot in command missed the landing procedure, overshot and landed too far down the runway. After touchdown, the aircraft was unable to stop within the remaining distance, overran, crossed a road and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "Crash cause": "Human factor", "Date_stringindexer_transform": 20.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 327.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 47.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 116.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 357.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "1/8/1948", "Time": "NA", "Aircraft": "SNCAC NC.701/702 Martinet", "Operator": "Compagnie Alg\u00e9rienne des Transports A\u00e9riens - CATA", "Registration": "F-BDLG", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Algiers \u2013 Biskra \u2013 Philippeville", "MSN": "275", "YOM": "NA", "Flight number": "NA", "Crash location": "Lakhdaria Bouira", "Country": "Algeria", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "7", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "While cruising in marginal weather conditions, the radio navigator informed ground that an engine failed and elected to return to Algiers. Shortly later, the aircraft went out of control and crashed in an affluent of the Isser River, about 11 km from Palestro (now Lakhdaria). All nine occupants were killed. Crew: Mr. P\u00e9hu, pilot, Mr. Suhaud, radio navigator.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 204.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 431.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 210.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 243.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 7.0, "PAX fatalities_stringindexer_transform": 6.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 310.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/10/1948", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "VIARCO - Vias A\u00e9reas Colombianas", "Registration": "C-414", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cartagena \u2013 Madrid", "MSN": "529", "YOM": "NA", "Flight number": "NA", "Crash location": "Madrid AFB Cundinamarca", "Country": "Colombia", "Region": "South America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Madrid AFB, the crew decided to make a go around when the seaplane stalled and crashed short of runway threshold. All three crew members were rescued while the aircraft was destroyed. Engine failure is suspected.", "Crash cause": "Unknown", "Date_stringindexer_transform": 6.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 436.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 95.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 18.0, "Country_stringindexer_transform": 21.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 183.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/10/1948", "Time": "NA", "Aircraft": "Savoia-Marchetti SM.79 Sparviero", "Operator": "Corrieri Aerei Militari - CAM", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Rome \u2013 Varese", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cerbaiola Friuli-Venezia Giulia", "Country": "Italy", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Enroute, the aircraft hit the slope of Mt dell'Aretino located near Cerbaiola, killing all four crew members.", "Crash cause": "Unknown", "Date_stringindexer_transform": 6.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 209.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 265.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 131.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/10/1948", "Time": "NA", "Aircraft": "Martin PBM Mariner", "Operator": "United States Navy - USN", "Registration": "84606", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Qingdao Shandong", "Country": "China", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from the Qingdao Bay, while climbing, the aircraft caught fire, exploded and crashed into the sea. A crew member was killed while the aircraft was destroyed by fire.", "Crash cause": "Other causes", "Date_stringindexer_transform": 6.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 391.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 5.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 427.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "1/10/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KN426", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "NA", "MSN": "16106/32854", "YOM": "1945", "Flight number": "NA", "Crash location": "Cairo Cairo", "Country": "Egypt", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute, an engine failed. The crew tried several times to restart the engine that fell off shortly later. In such conditions, the crew elected to make an emergency landing in a desert area located about 40 km northwest of Cairo. The aircraft belly landed and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 6.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 140.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 114.0, "Country_stringindexer_transform": 12.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 340.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/11/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Dominicana de Aviaci\u00f3n", "Registration": "HI-6", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Santa Cruz de Barahona \u2013 Santiago de los Caballeros", "MSN": "4735", "YOM": "1942", "Flight number": "NA", "Crash location": "Yamas\u00e1 Monte Plata", "Country": "Dominican Republic", "Region": "Central America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "30", "PAX fatalities": "30", "Other fatalities": "0", "Total fatalities": 32, "Circumstances": "Few minutes after its departure from Santa Cruz de Barahona Airport, the crew encountered poor weather conditions and decided to modify his route, diverting to Ciudad Trujillo, the capital city. While cruising about 20 km north of Ciudad Trujillo in low visibility, the aircraft hit the slope of a mountain and crashed near Yamas\u00e1. All 32 occupants were killed, among them members of the baseball team of Santiago returning home.", "Crash cause": "Human factor", "Date_stringindexer_transform": 199.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 363.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 186.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 52.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 36.0, "PAX fatalities_stringindexer_transform": 33.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 422.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "1/13/1948", "Time": "15H 0M 0S", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "RP555", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Topcliffe - Topcliffe", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Topcliffe AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The aircraft took off from RAF Topcliffe in the mid-afternoon so the pilot could train on instrument flying. Also on board was a second pilot who was acting as an instructor, a radio operator and a passenger. The purpose of the latter was so that he could carry out radar tests during the flight. The aircraft took off in the gusty conditions with the pilot having to use both hands to maintain lateral control, the aircraft climbed normally to 400 feet but after which the nose rose sharply. The pilot pushed the control column forward to try and make the aircraft return to level but this had no effect, full power was applied but the aircraft continued to climb at this rate until it was at about 1000 feet. The speed of it had now dropped to 80 knots so the pilot ordered the crew to bale out before it stalled. Only the second pilot was able to get out before the nose sank and the aircraft entered a dive from which it could not be recovered from. The survivor sustained slight injuries after being dragged by his parachute when on the ground after it caught in the strong wind. The other three had no chance to get out before it crashed and were sadly killed in the crash at 1500LT. Source: http://www.yorkshire-aircraft.co.uk/aircraft/yorkshire/rp555.html", "Crash cause": "Technical failure", "Date_stringindexer_transform": 5.0, "Time_stringindexer_transform": 1.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 14.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 1.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 6.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 459.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/13/1948", "Time": "13H 40M 0S", "Aircraft": "Douglas C-54 Skymaster", "Operator": "Flota Aerea Mercante Argentina - FAMA", "Registration": "LV-AFG", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Rome - Rome", "MSN": "7479", "YOM": "1944", "Flight number": "NA", "Crash location": "Rome-Fiumicino-Leonardo da Vinci Lazio", "Country": "Italy", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft was carrying a passenger and six crew members on a test flight in Rome-Fiumicino Airport. While flying in the vicinity of the airfield, an engine caught fire and the captain elected to make an emergency landing. The aircraft belly landed in a field located in Ponte Galeria, east of the airport, and came to rest in flames. All seven occupants were unhurt while the aircraft was destroyed by fire.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 5.0, "Time_stringindexer_transform": 22.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 458.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 265.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 408.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 218.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/13/1948", "Time": "4H 36M 0S", "Aircraft": "Douglas DC-3", "Operator": "Eastern Airlines", "Registration": "NC28384", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Houston \u2013 Atlanta \u2013 Greenville \u2013 Winston \u2013 Washington DC", "MSN": "4092", "YOM": "1941", "Flight number": "NA", "Crash location": "Oxon Hill Maryland", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "6", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "\"Flight 572 arrived in Atlanta, Georgia, from its point of origin, Houston, Texas, at 2330, January 12, 1948. With a new crew, consisting of Captain Paul J. Saltanis, First Officer Ralph B. Sanborn, Jr., and Flight Attendant Peter L. Philiois, the flight departed from Atlanta at 2355 for Greenville and Winston-Salem, North Carolina, and Washington, D. C. The flight as far as Winston-Salem was routine. At 0306, January 13, 1948, the flight took off from Winston-Salem carrying six passengers, a crew of three, and 600 gallons of fuel. It proceeded at the altitude of 9,000 feet specified in the flight plan, to Washington, via Blackstone and Richmond, Virginia. Shortly after reporting over Blackstone, at 0405, 146 miles southwest of Washington, an airway traffic control clearance was transmitted by company radio to the flight authorizing it to cross the Doncaster fan marker, 27 miles southwest of Washington, at 5,000 feet. Captain Saltanis requested a lower altitude and ten minutes later received another ATC clearance approving 3,000 feet over Doncaster, and permission to descend to 2,500 feet immediately after crossing Doncaster. At 0427, the flight reported its position to the Washington control tower, stating that it was over Doncaster at 3,000 feet. It was instructed by the tower to maintain 2,500 feet, and to report again when it was over Mt. Vernon. 9 miles south of the Washington National Airport. At about this same time another Eastern Air Lines\u2019 flight, No, 454, reported that it was at 4,500 feet over the Arcola range station, which is located 23 miles west-northwest of Washington, D. C. Since the two Eastern Air Lines' flights were converging toward Mt. Vernon, the airport traffic controller thought that flight 454 might fly over Mt. Vernon before it had descended to a safe altitude below Flight 572. To assure that both airplanes would not be over Mt. Vernon at the seine time and altitude, the controller instructed Flight 572 to climb to 3,500 feet Flight 572 acknowledged, advised that it was contact, and asked why it was necessary to climb. Less than a minute later, at approximately 0430, the east bound flight, No. 454, reported that it was \u201ccontact\u201d at 2,000 feet and approaching Mt. Vernon. The controller then knowing that a safe altitude separation existed between the two aircraft, cleared night 572 back to its previous approach altitude of 2,500 feet. At 0433, flight 572 was again cleared to the airport by the Washington Tower, and advised to report when leaving 2,500 feet, when leaving Mt. Vernon, and when \"\"VFR.\"\" 2 Following this transmission flight 572 was asked to give a short count", "Crash cause": " since the tower wished to adjust its receiving frequency. The flight complied. Then at 0435", "Date_stringindexer_transform": 5.0, "Time_stringindexer_transform": 28.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 49.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 256.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 229.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 12.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 208.0, "Crash cause_stringindexer_transform": 19.0}, {"Date": "1/13/1948", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Mexicana de Aviaci\u00f3n", "Registration": "XA-GOC", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "4101", "YOM": "1941", "Flight number": "NA", "Crash location": "Guaymas Sonora", "Country": "Mexico", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 5.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 182.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 4.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 61.0, "Country_stringindexer_transform": 23.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/17/1948", "Time": "NA", "Aircraft": "De Havilland DH.104 Dove", "Operator": "Airways India", "Registration": "VT-CQA", "Flight phase": "Flight", "Flight type": "Delivery", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "4077", "YOM": "NA", "Flight number": "NA", "Crash location": "Viterbo Lazio", "Country": "Italy", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a flight from England to India to deliver the aircraft that was brand new. While descending to Rome for a refueling stop, the twin engine aircraft hit the slope of Mt Urbanu located in the region of Viterbo. Both pilots were injured and the aircraft was destroyed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 267.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 303.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 133.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 435.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/18/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "42-100999", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "19462", "YOM": "1944", "Flight number": "NA", "Crash location": "Andrews AFB Maryland", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On final approach to Andrews AFB, the aircraft was too low, hit a building and crashed. A crew member was killed while three others were injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 212.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 358.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 147.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 154.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/20/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "African Air Cars", "Registration": "VP-KDJ", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "Khartoum \u2013 Malakal", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ed Dueim White Nile (<U+0627><U+0644><U+0646><U+064A><U+0644> <U+0627><U+0644><U+0623><U+0628><U+064A><U+0636>)", "Country": "Sudan", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute to Malakal, the crew was forced to make an emergency landing near Ed Dueim for unknown reason. While both crew members were unhurt, the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 99.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 185.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 111.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 300.0, "Country_stringindexer_transform": 20.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 480.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/20/1948", "Time": "NA", "Aircraft": "Curtiss C-46 Commando", "Operator": "China National Aviation Corporation - CNAC", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Humanitarian", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mukden Liaoning", "Country": "China", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "51", "PAX fatalities": "11", "Other fatalities": "0", "Total fatalities": 11, "Circumstances": "Shortly after takeoff from Mukden Airport, while climbing in heavy snow falls to a height of 60 feet, the aircraft stalled and crashed near the runway. Eleven passengers were killed while 43 other occupants were injured. The crew was in charge to evacuate some people fleeing the regime recently introduced in Mukden.", "Crash cause": "Other causes", "Date_stringindexer_transform": 99.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 18.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 379.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 30.0, "PAX fatalities_stringindexer_transform": 4.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 205.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "1/21/1948", "Time": "16H 30M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Federal Aviation Administration - FAA", "Registration": "NC206", "Flight phase": "Flight", "Flight type": "Calibration", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Denver \u2013 Grand Junction", "MSN": "4776", "YOM": "1942", "Flight number": "NA", "Crash location": "Ward Colorado", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The aircraft departed Denver at 1602 for Grand Junction. The crew, all employees of the Civil Aeronautics Administration, consisted of Fred L. Snavely, pilot; Warren L. Lungstrum, copilot; and Ross C. Brown, observer. Over the route to Grand Junction a check was to be made by these men of the VHF (very high frequency) airway facilities to determine whether they were operating normally. According to the flight plan, the flight was to proceed over Red Airway 6 at an air speed of 150 mph. Though only 2 hours were required for the trip, 8 hours supply of fuel was carried. Information supplied to Copilot Lungstrum at the Denver United States Weather Bureau Office was to the effect that clear weather conditions existed generally over the intended route. Over Fraser, Colorado, located approximately 50 miles west northwest of Denver, however, broken clouds were reported. Since this layer of clouds was only 2,000 feet in depth, with tops at 13,500 feet above sea level, it appeared that a cruising altitude of 14,000 or 15,000 feet would be high enough for the flight. Winds at that altitude were from the northwest at 50 mph. Weather Bureau personnel advised that these winds would result in considerable turbulence. Take-off was accomplished at 1602. Twenty-two minutes later, at 1624, the CAA communication station at Denver received a position report from the flight that it was at an altitude of 14,500 feet, 500 feet over the top of clouds, and 20 miles west of Denver. The flight also reported that they were experiencing severe turbulence. Since the flight plan specified that the trip would be made in accordance with visual flight rules, and since the position report indicated that the aircraft was being flown over the top of clouds, the flight was requested at the termination of their 1624 position to verify whether they were actually proceeding in accordance with visual flight rules. A response in the affirmative was received. About one minute after the 1624 report the CAA communicator at Cheyenne, Wyoming, called NC206 and asked for a check of his station\u2019s radio transmission. NC206 responded, \u201cRead Cheyenne Radio loud and clear.\u201d The communicator then asked for a position report from NC206, and the flight replied, \u201cWe are approximately. . . .\u201d The remainder of this message, received shortly after 1625, was garbled and faded. The Cheyenne communicator attempted to contact the flight again but was unable to do so. Since interference to radio transmission could have resulted from the mountain ranges between Cheyenne and the aircraft, and since the Cheyenne communicator had overheard the report of severe turbulence, he presumed that the crew was completely occupied in flying the aircraft, and that either they had not heard the last transmission or were too busy at the time to acknowledge. Accordingly, he placed no significance on the failure of the flight to reply. A request had previously been made by the communication station at Eagle, Colorado, for the flight to check the radio transmission of that station. Since Eagle Radio did not receive any calls from NC206, the station called the flight at 1645. No reply was received. Repeated calls were made by the communicator at Eagle on all available frequencies at three-minute intervals until 1735. Then the station requested information concerning the flight from Grand Junction Radio, but neither Grand Junction Radio nor any other radio station on the route had received a call from NC206 since 1625. At 1825, 23 minutes after the estimated arrival time of NC206 at Grand Junction, an emergency was declared.", "Crash cause": "Weather", "Date_stringindexer_transform": 13.0, "Time_stringindexer_transform": 72.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 202.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 18.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 223.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 296.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 209.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "1/21/1948", "Time": "4H 17M 0S", "Aircraft": "Lockheed L-649 Constellation", "Operator": "Eastern Airlines", "Registration": "NC111A", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Miami \u2013 Newark", "MSN": "2532", "YOM": "1947", "Flight number": "NA", "Crash location": "Boston Massachusetts", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "20", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "\"Flight 604 departed Miami, Florida, at 2301, January 20, 1948, on an instrument flight rules clearance, non-stop to Newark, New Jersey, to cruise at 15,000 feet via Airway Amber 7 to Jacksonville, Florida, and Airway Amber 6 to Alma, Georgia, thence direct to Spartanburg, South Carolina, Winston-Salem, North Carolina, and Washington, D. C., and via Airway Amber 7 to Newark, Boston, Massachusetts, and Providence. Rhode Island, were designated as alternate air ports. In order to remain above the overcast, the flight requested changes of cruising altitude between Winston-Salem and Washington, and at 0232, at which time it reported over Washington, the flight was cruising at 21,000 feet. Shortly after passing Washington, Flight 604 was cleared to descend en route to Newark and to cross Philadelphia at 7,000 feet, and was advised that no traffic was reported above 7,000 feet. A descent was established and at 0253 the flight reported over Philadelphia \"\"at 8", "Crash cause": "000 feet descending.\"\" Shortly thereafter the company radio station at LaGuardia Field", "Date_stringindexer_transform": 13.0, "Time_stringindexer_transform": 85.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 251.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 28.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 214.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 13.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 240.0, "Crash cause_stringindexer_transform": 15.0}, {"Date": "1/21/1948", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Philippine Airlines - PAL", "Registration": "PI-C145", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "10269", "YOM": "1943", "Flight number": "NA", "Crash location": "Iloilo City Iloilo", "Country": "Philippines", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Belly landed for unknown reason. The aircraft was damaged beyond repair and there were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 13.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 135.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 432.0, "Country_stringindexer_transform": 18.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 471.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/21/1948", "Time": "NA", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "LR134", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Swinderby - Swinderby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Swinderby AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was performing a night training sortie in RAF Swinderby. On final approach, while at an insufficient altitude, the aircraft hit the ground at a relative high speed and crashed one mile short of runway threshold. The aircraft was destroyed and all three crew members were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 13.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 169.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 190.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 348.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 14.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "1/24/1948", "Time": "14H 40M 0S", "Aircraft": "Airspeed AS.65 Consul", "Operator": "Chartair - UK", "Registration": "G-AIOM", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Croydon \u2013 Lyon", "MSN": "4347", "YOM": "1946", "Flight number": "NA", "Crash location": "Lyon-Bron Rh\u00f4ne", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Lyon-Bron, the pilot encountered poor weather conditions and decided to make an emergency landing. The twin engine aircraft belly landed in a flooded field located 10 km north of the airport and came to rest. All three occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Weather", "Date_stringindexer_transform": 72.0, "Time_stringindexer_transform": 10.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 434.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 251.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 135.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 174.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "1/24/1948", "Time": "NA", "Aircraft": "Lockheed 18 LodeStar", "Operator": "United States Coast Guard - USCG", "Registration": "5049", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Newark \u2013 Washington DC", "MSN": "2175", "YOM": "1941", "Flight number": "NA", "Crash location": "Baltimore Maryland", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The twin engine aircraft was returning from Newark and was diverted from National Airport due to a severe snowstorm, to Baltimore Municipal Airport. While approaching, the airplane crashed in unknown circumstances, killing all four crew members. The wreckage was located two days later after an extensive search by Army, Navy and Coast Guard aircraft. Crew: Lcdr Charles W. Schuh, Lt Jg William N. Killebrew, Amm1 Charles A. MacArthur, Arm1 Rudolph H. Schoning.", "Crash cause": "Weather", "Date_stringindexer_transform": 72.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 85.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 11.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 200.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 209.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 207.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "1/25/1948", "Time": "NA", "Aircraft": "Bristol 170 Freighter", "Operator": "Soci\u00e9t\u00e9 Indochinoise de Transports A\u00e9riens - SITA", "Registration": "F-BCJA", "Flight phase": "Flight", "Flight type": "Delivery", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Marseille \u2013 Rome \u2013 Athens \u2013 Nicosia \u2013 Baghdad \u2013 Saigon", "MSN": "12802", "YOM": "1946", "Flight number": "NA", "Crash location": "Mediterranean Sea All World", "Country": "World", "Region": "World", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft was on its way to Indochina to be delivered to the Soci\u00e9t\u00e9 Indochinoise de Transports A\u00e9riens (SITA) and was carrying two British engineers and three pilots. While cruising between Turkey and Cyprus, the aircraft crashed in unknown circumstances into the Mediterranean Sea, about 100 km north of the Cyprus coast. No trace of the aircraft nor the five occupants was ever found.", "Crash cause": "Unknown", "Date_stringindexer_transform": 82.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 191.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 252.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 1.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 20.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/25/1948", "Time": "NA", "Aircraft": "Canadian Vickers Stranraer", "Operator": "Queen Charlotte Airlines", "Registration": "CF-BYI", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "CV184", "YOM": "NA", "Flight number": "NA", "Crash location": "Vancouver Island British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Caught fire and sank off Vancouver Island enroute to Forward Harbour. After it went to a halt, all four occupants were able to evacuate.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 82.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 441.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 59.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 329.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/26/1948", "Time": "15H 50M 0S", "Aircraft": "SNCASE SE.161 Languedoc", "Operator": "Air France", "Registration": "F-BCUC", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "City", "Schedule": "Paris-Le Bourget - Paris-Le Bourget", "MSN": "29", "YOM": "1946", "Flight number": "NA", "Crash location": "Paris Paris", "Country": "France", "Region": "Europe", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "Shortly after takeoff from Paris-Le Bourget Airport, while climbing, the four engine aircraft went out of control and crashed on a factory located in Romainville, in the suburbs of Paris. All nine occupants were killed while two workers in the factory were slightly injured. The crew was performing a local training flight from Paris-Le Bourget Airport and the takeoff was initiated with one engine voluntarily inoperative. Crew: Georges Lemare, pilot, Charles Fouquet, pilot, Fran\u00e7ois Rogale, copilot, Jean Soulard, radio navigator, Pierre Tolosano, mechanic, Hubert Halter, mechanic, Guy Kerespert, mechanic, Roger Deluc, mechanic, Pierre Ledoux, radio navigator by Air Atlas.", "Crash cause": "Unknown", "Date_stringindexer_transform": 191.0, "Time_stringindexer_transform": 42.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 25.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 5.0, "Schedule_stringindexer_transform": 295.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 239.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 10.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 125.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/27/1948", "Time": "15H 30M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "44-76443", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Frankfurt \u2013 Istres \u2013 Pisa \u2013 Udine", "MSN": "16027/32775", "YOM": "1945", "Flight number": "NA", "Crash location": "Ch\u00e2teau Garnier Alpes-de-Haute-Provence", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "8", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 11, "Circumstances": "The aircraft left Istres-Le Tub\u00e9 AFB at 1237LT bound for Udine with an intermediate stop in Pisa. While flying over the Alps, the crew encountered poor visibility with snowstorm and strong winds. In such conditions, the captain decided to return to Istres but was unable to locate his position with certainty. Few minutes later, while flying northwest of the village of Ch\u00e2teau Garnier, the aircraft hit the slope of Mt du Cheval Blanc culminating at an altitude of 2,323 meters. The wreckage was spotted by the crew of a USAF B-17 based in Germany two days later. On site, rescuers did not find any survivors and among the passengers were five children aged 5, and women of US soldiers based in Udine. The day after the wreckage was found, the US B-17 crashed in the same region, killing its entire crew of nine.", "Crash cause": "Weather", "Date_stringindexer_transform": 96.0, "Time_stringindexer_transform": 95.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 390.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 68.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 294.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 14.0, "PAX fatalities_stringindexer_transform": 7.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 98.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "1/27/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Air Portugal - Transportes A\u00e9reos Portugueses", "Registration": "CS-TDB", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Lisbon - Lisbon", "MSN": "10033", "YOM": "1943", "Flight number": "NA", "Crash location": "Monte da Caparica Estremadura - Lisbon District", "Country": "Portugal", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was performing a training flight in the vicinity of Lisbon. In flight, the pilot encountered poor weather conditions and lost control of the aircraft that crashed in a huge explosion in Monte da Caparica, south of Lisbon. All three crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 96.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 274.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 2.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 377.0, "Country_stringindexer_transform": 28.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 145.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/28/1948", "Time": "10H 50M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Airline Transport Carriers", "Registration": "NC36480", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Oakland \u2013 Imperial", "MSN": "16850/33598", "YOM": "1945", "Flight number": "NA", "Crash location": "Coalinga California", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "29", "PAX fatalities": "29", "Other fatalities": "0", "Total fatalities": 32, "Circumstances": "The flight departed from its operating base, Burbank, California, for Oakland, California, at 0646, January, 1948. According to company instructions, the crew consisting of Francis Charles Atkinson, captain; Marion Harlow Ewing, first officer; and Mrs. Francis Charles Atkinson, stewardess, were to fly NC79055, which was certificated to carry 32 passengers, however, the crew made a mistake and departed in NC36480. This airplane was certificated to carry only 26 passengers and was 7 hours overdue for a 100-hour inspection at the time of departure from Burbank. Landing at Oakland was accomplished at 0849. The trip had been routine, and somewhere between Burbank and Oakland the pilot apparently realized that he was flying the wrong airplane for he requested his landing instructions from the Oakland tower with the appropriate airplane call numbers, 480. In Oakland, 28 Mexican Nationals and one United States Immigration official were enplaned for a flight to the Imperial County Airport, Imperial County, California. This flight was to be performed under a contract which the company had with the United States Immigration and Naturalization Service. Since NC36480 had accommodations for only 26 passengers, three of the 28 Mexican Nationals who boarded the aircraft were unable to be seated where they could be secured with safety belts. According to the statement of a United States Immigration official who assisted in the loading, three pieces of unsecured luggage were in the aisle at the time of take-off, and it as probable that the three passengers were seated on this luggage after the aircraft taxied from its parking area at the Oakland Airport for take-off. The remainder of the airplane load consisted of 375 gallons of fuel. Total weight was 67 pounds in excess of the maximum allowable. No flight plan was filed for the southbound trip since clear weather conditions prevailed over the route to the Imperial County Airport. Take-off was accomplished at approximately 0930. Before leaving the Oakland tower frequency Captain Atkinson received a message from his company, relayed through the tower, that he was to return directly to Burbank. His acknowledgment of this message was the last communication received from the flight. One hour and 35 minutes after the aircraft had departed from Oakland, it was observed over the vicinity of Coalinga, California, cruising at an estimated altitude of 5,000 feet above the ground. At this time a trail of white vapor or smoke, 150 to 200 feet long, was observed streaming from the left engine of the aircraft. Ten to 15 seconds later flames were seen flowing from the left engine over the wing and back to the empennage. Seconds later the left wing and the left engine dropped free from the rest of the aircraft; and the airplane fell out of control, crashed to the ground, and burst into flames.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 298.0, "Time_stringindexer_transform": 93.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 416.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 89.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 284.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 37.0, "PAX fatalities_stringindexer_transform": 34.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 263.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/30/1948", "Time": "12H 54M 0S", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Air Force - USAF", "Registration": "44-83787", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Istres - Istres", "MSN": "32428", "YOM": "NA", "Flight number": "NA", "Crash location": "Chanolles Alpes-de-Haute-Provence", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "4", "Pax on board": "5", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "The aircraft left Istres-Le Tub\u00e9 Airbase in the morning to try to locate an USAF C-47 that disappeared in the region three days earlier. In fact, this C-47 registered 44-76443 crashed on the Cheval Blanc mountain, killing all 11 occupants. Around noon, the crew of the B-17 localized the wreckage of the C-47 on the east slope of the mountain and while flying to close from the terrain, the aircraft went out of control, maybe due to downdraft, and hit the north slope of the same mountain, near the village of Chanolles. The aircraft was destroyed on impact and eight of the ten occupants were killed. Two crew members, among them a pilot, survived. The pilot decided to leave the area to find help but his dead body was found in an isolated area on March 25, 1948. The only survivor, Sgt Angelo La Salle, was rescued few hours later.", "Crash cause": "Weather", "Date_stringindexer_transform": 10.0, "Time_stringindexer_transform": 34.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 122.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 15.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 17.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 293.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 9.0, "PAX fatalities_stringindexer_transform": 16.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 210.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "1/30/1948", "Time": "3H 17M 0S", "Aircraft": "Avro 689 Tudor", "Operator": "British South American Airways - BSAA", "Registration": "G-AHNP", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "London \u2013 Lisbon \u2013 Horta \u2013 Hamilton \u2013 Havana", "MSN": "1349", "YOM": "1946", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "25", "PAX fatalities": "25", "Other fatalities": "0", "Total fatalities": 31, "Circumstances": "Christened 'Star Tiger', the four engine aircraft left Horta, in the Azores Islands, at 1534LT bound for Hamilton, Bermuda. At 0200LT, about 10,5 hours into the flight, the navigator Cyril Ellison fixed its position and learned that they too had been blown off course and were crabbing away from Bermuda. He informed the pilot McMillan about a new course which turned the aircraft directly into a gale. However, McMillan still expected to reach Bermuda with at least an hour's worth of fuel remaining upon landing. At 0304LT, the radio officer Robert Tuck requested a radio bearing from Bermuda, but the signal was not strong enough to obtain an accurate reading. He repeated the request eleven minutes later, and this time the Bermuda radio operator was able to obtain a bearing of 72 degrees, accurate to within 2 degrees. The Bermuda operator transmitted this information, and Tuck acknowledged receipt at 0317LT. This was the last radio contact with the aircraft and its crew. As the aircraft failed to arrive in Hamilton, SAR operations were conducted but were eventually suspended few days later as no trace of the aircraft nor the 31 occupants was found.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 10.0, "Time_stringindexer_transform": 24.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 375.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 16.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 0.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 10.0, "PAX fatalities_stringindexer_transform": 20.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 9.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "1/30/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Middle East Airlines - MEA", "Registration": "LR-AAA", "Flight phase": "Taxiing", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "13192", "YOM": "1944", "Flight number": "NA", "Crash location": "Beirut Beirut Governorate", "Country": "Lebanon", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Damaged beyond repair in a ground accident in Beirut with a Junkers JU.52/3m operated by Compagnie G\u00e9n\u00e9rale Transsaharienne (CGT). There were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 10.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 189.0, "Flight phase_stringindexer_transform": 4, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 21.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 462.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/30/1948", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "Compagnie G\u00e9n\u00e9rale TransSaharienne - CGT France", "Registration": "NA", "Flight phase": "Taxiing", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Beirut Beirut Governorate", "Country": "Lebanon", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Damaged beyond repair in a ground accident in Beirut with a C-47 operated by Middle East Airlines and registered LR-AAA. There were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 10.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 4, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 21.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 221.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "1/31/1948", "Time": "NA", "Aircraft": "Avro 683 Lancaster", "Operator": "Royal Air Force - RAF", "Registration": "TW902", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Istres-Le Tub\u00e9 Bouches-du-Rh\u00f4ne", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "12", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "Shortly after takeoff from Istres-Le Tub\u00e9 Airbase, the captain was forced to feather the propeller on engine number one because it was running roughly. He elected to return to Istres, initiated a turn and started an approach when he realized he was misaligned with the runway centerline. He increased power on the three remaining engines in an attempt to make a go around when the aircraft stalled and crashed on an abandoned hangar located short of the runway threshold. Four crew were injured, five others were unhurt and seven passengers were killed. Crew killed were (115th Squadron): S/L D. T. Moir, pilot, G. Atter, flight engineer, G. G. W. Carter, J. T. Walton, F/Lt P. Smith, F/Sgt S. A. Wallace, AC2 R. A. Knapp.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 193.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 451.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 306.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 6.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 400.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "2/1/1948", "Time": "NA", "Aircraft": "Fokker F7", "Operator": "Skane Flyg", "Registration": "SE-APR", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "5086", "YOM": "NA", "Flight number": "NA", "Crash location": "Lake Iv\u00f6sj\u00f6n Sk\u00e5ne", "Country": "Sweden", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While landing on the iced Lake Iv\u00f6sj\u00f6n, the three engine aircraft went through the ice and sank. There were no casualties but the aircraft was lost.", "Crash cause": "Unknown", "Date_stringindexer_transform": 170.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 306.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 45.0, "Country_stringindexer_transform": 6.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 184.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "2/2/1948", "Time": "NA", "Aircraft": "Northrop N-23 Pioneer", "Operator": "Northrop Aircraft", "Registration": "NX8500H", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2501", "YOM": "NA", "Flight number": "NA", "Crash location": "California California", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The three engine aircraft was operated by the manufacturer Northrop in a number of various unimproved and short fields in Southern California (exact place unknown). The crew, consisting of one engineer and two pilots, was performing a test of an experimental dorsal fin. While flying in the vicinity of an airfield, the fin broke loose and damaged the Pioneer\u2019s tail surfaces, making the aircraft uncontrollable. The test pilot Latham A. \u201cSlim\u201d Perrett did what he could to steady the aircraft to allow the copilot and an engineer to parachute to safety. Sadly, there was no time for Perrett to escape. The aircraft was destroyed and the pilot was killed. Source: http://oldmachinepress.com/2014/05/17/northrop-n-23-pioneer-and-n-32-yc-125-raider/", "Crash cause": "Technical failure", "Date_stringindexer_transform": 214.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 388.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 130.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 60.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "2/6/1948", "Time": "20H 0M 0S", "Aircraft": "North American B-25 Mitchell", "Operator": "United States Air Force - USAF", "Registration": "44-30078", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Wright-Patterson - Little Rock", "MSN": "108-33353", "YOM": "NA", "Flight number": "NA", "Crash location": "Jasper Arkansas", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "While cruising at an altitude of 2,000 feet by night on a flight from Wright-Patterson AFB to Little Rock, the twin engine aircraft hit the east slope of Mt Round Top located three miles south of Jasper, in the Ozark Mountains. The aircraft was destroyed by impact forces and a post crash fire and the wreckage was spotted around midnight, four hours after the crash. All five occupants, four USAF officers and one Navy Officer, were killed. Crew: Lt Phillip Novick, pilot, Lt Charles W. Thomas, copilot, M/Sgt George L. Haties, crew chief. Passengers: Lt Felton F. Roberson, GM2 Francis J. Russell.", "Crash cause": "Unknown", "Date_stringindexer_transform": 112.0, "Time_stringindexer_transform": 9.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 330.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 250.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 397.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 336.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "2/6/1948", "Time": "NA", "Aircraft": "Vickers Viking", "Operator": "Air India", "Registration": "VT-CLY", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Calcutta \u2013 Bombay", "MSN": "205", "YOM": "1947", "Flight number": "NA", "Crash location": "Mumbai Maharashtra", "Country": "India", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "15", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach, one of the engine failed. The aircraft stalled and crashed in a field short of the runway threshold. The aircraft was damaged beyond repair and all 19 occupants were injured.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 112.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 323.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 67.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 11.0, "Country_stringindexer_transform": 32.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 6.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 428.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "2/7/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "43-48910", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Bolling - Greenville", "MSN": "14726/26171", "YOM": "1944", "Flight number": "NA", "Crash location": "Saluda North Carolina", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "8", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Enroute, the aircraft hit the east slope of Mt Page located 2 miles southwest of Saluda, North Carolina. The aircraft was destroyed by impact forces and a post crash fire. Four passengers were killed while six other occupants were injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 302.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 453.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 275.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 299.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 14.0, "PAX fatalities_stringindexer_transform": 5.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 237.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "2/9/1948", "Time": "NA", "Aircraft": "De Havilland DH.104 Dove", "Operator": "British Overseas Airways Corporation - BOAC", "Registration": "G-AJHL", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "4043", "YOM": "1947", "Flight number": "NA", "Crash location": "Locri Calabria", "Country": "Italy", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances into the Ionian Sea off Locri, Calabria. All occupants were quickly rescued while the aircraft sank and was lost.", "Crash cause": "Unknown", "Date_stringindexer_transform": 21.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 57.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 189.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 258.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "2/9/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Cathay Pacific Airways", "Registration": "VR-HDX", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Sandoway Rakhine State", "Country": "Myanmar", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on approach to Sandoway Airport. The aircraft was written off but there were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 21.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 377.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 66.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 323.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "2/9/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "TX168", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Hendon - Hendon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Hendon Middlesex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to RAF Hendon, while performing a local training sortie, the aircraft stalled and hit several buildings located 1'100 yards short of the runway threshold. On impact, the aircraft nosed down and crashed on a trolleybus. Both pilots were killed while eight civilians seating in the trolleybus were seriously injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 21.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 51.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 58.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 422.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 63.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "2/10/1948", "Time": "16H 25M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "PK-REA", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Bandung \u2013 Jakarta \u2013 Banjoemans \u2013 Semarang", "MSN": "16380/33128", "YOM": "1945", "Flight number": "NA", "Crash location": "Bandung West Java", "Country": "Indonesia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "15", "PAX fatalities": "15", "Other fatalities": "0", "Total fatalities": 19, "Circumstances": "Shortly after takeoff from Bandung-Andir Airport, while climbing in stormy weather, the crew informed ground that an engine failed. While trying to return, the pilot lost control of the aircraft that dove into the ground and crashed in a huge explosion into a wooded ravine located near Padalarang, about 10 km northwest of Bandung Airport. The aircraft disintegrated on impact and all 19 occupants were killed, among them 11 soldiers and four members of a music ensemble.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 39.0, "Time_stringindexer_transform": 15.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 13.0, "Registration_stringindexer_transform": 361.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 71.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 359.0, "Country_stringindexer_transform": 7.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 6.0, "PAX fatalities_stringindexer_transform": 9.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 173.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "2/10/1948", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Gulf Transportation Company", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Brownsville \u2013 Ciudad del Carmen", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ciudad del Carmen Campeche", "Country": "Mexico", "Region": "Central America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was on his way from Brownsville to Ciudad del Carmen to pick up a load of seafood for the US market. While cruising vertical to the Gulf of Mexico, the right engine failed, forcing the crew to ditch the aircraft 24 km off Ciudad del Carmen. While preparing a life raft, the American pilot Neil Womack fell into the water and was drowned. The Mexican copilot Esteban de Le\u00f3n was rescued by the crew of a ship christened 'Roat\u00e1n' nine days later.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 39.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 44.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 103.0, "Country_stringindexer_transform": 23.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 371.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "2/10/1948", "Time": "NA", "Aircraft": "Martin PBM Mariner", "Operator": "United States Navy - USN", "Registration": "84772", "Flight phase": "Landing (descent or approach)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Jacksonville - Jacksonville", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Jacksonville-Towers Field NAS Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "7", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to Jacksonville-Towers Field NAS, following a maritime patrol flight, the seaplane was too low, hit tree tops and crashed in a wooded area located few hundred yards short of runway. Two crew members were killed while five others were injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 39.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 44.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 15.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 127.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 93.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 399.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "2/11/1948", "Time": "NA", "Aircraft": "Lockheed 10 Electra", "Operator": "Qantas Airways - Queensland and Northern Territory Aerial Services", "Registration": "VH-AEC", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Brisbane \u2013 Roma", "MSN": "1034", "YOM": "NA", "Flight number": "NA", "Crash location": "Condamine Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "9", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute from Brisbane-Archerfield to Roma, while flying in the region of Condamine in poor weather conditions, the right engine failed. The crew reduced his altitude and elected to make an emergency landing when the aircraft hit a tree and crashed in a field. A passenger and a pilot were slightly injured while all other occupants were unarmed. The aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 291.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 74.0, "Registration_stringindexer_transform": 339.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 280.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 178.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 452.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "2/13/1948", "Time": "13H 25M 0S", "Aircraft": "Douglas C-53 Skytrooper (DC-3)", "Operator": "Det Danske Luftfartselskab - DDL", "Registration": "OY-DCI", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Copenhagen \u2013 Frankfurt \u2013 Zurich", "MSN": "7330", "YOM": "1942", "Flight number": "NA", "Crash location": "Ulrichstein Hesse", "Country": "Germany", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "17", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 12, "Circumstances": "While descending to Frankfurt-Main Airport in marginal weather conditions, the crew informed ground that an engine failed and was forced to make an emergency landing as he was unable to maintain a safe altitude. The aircraft crash landed in a field located in Ulrichstein, about 70 km northeast of Frankfurt Airport. On impact , a wing was sheared off, causing a gaping hole in the cabin, allowing some of the passengers to quickly evacuate the aircraft. Nevertheless, all four crew members and eight other passengers were killed in the accident.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 61.0, "Time_stringindexer_transform": 109.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 79.0, "Registration_stringindexer_transform": 32.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 19.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 291.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 15.0, "PAX fatalities_stringindexer_transform": 7.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 160.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "2/13/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Handley Page Aircraft Company Ltd", "Registration": "PP285", "Flight phase": "Landing (descent or approach)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Radlett - Radlett", "MSN": "1358", "YOM": "NA", "Flight number": "NA", "Crash location": "Radlett Hertfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew consisting of pilots and engineers from the manufacturer Handley Page Aircraft was completing a test flight in Radlett. Upon landing, an undercarriage collapsed. The aircraft went out of control and veered off runway before coming to rest. All four occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 61.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 31.0, "Registration_stringindexer_transform": 41.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 49.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 228.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 231.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "2/16/1948", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW182", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Hullavington - Hullavington", "MSN": "MW182", "YOM": "1945", "Flight number": "NA", "Crash location": "Hullavington AFB Wiltshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a training sortie in RAF Hullavington. The aircraft landed 200 yards after the runway threshold. On a relatively short runway, the aircraft was unable to stop within the remaining distance, overran and came to rest into a ditch. All four crew members were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Human factor", "Date_stringindexer_transform": 249.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 399.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 192.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 292.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 446.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "2/17/1948", "Time": "17H 40M 0S", "Aircraft": "Avro 683 Lancaster", "Operator": "Royal Air Force - RAF", "Registration": "SW326", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kinloss - Kinloss", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tain AFB Ross and Cromarty", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew (236th OCU) was engaged in a night training sortie from RAF Kinloss. While flying in the vicinity of Tain, the aircraft went out of control and crashed in flames in a prairie. All five crew members were injured while the aircraft was destroyed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 233.0, "Time_stringindexer_transform": 14.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 143.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 14.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 154.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 180.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "2/19/1948", "Time": "17H 45M 0S", "Aircraft": "Avro 694 Lincoln", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A73-11", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Laverton-Amberley", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Amberley Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "12", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 16, "Circumstances": "The aircraft departed Laverton at 1415LT for Amberley. Aeradio position reports were received normally through out the flight, until 1734LT, when clearance was obtained to descend from 8000 feet preparatory to the landing at Amberley. A short time later Amberley Flight Control cleared the aircraft for a straight-in approach RWY 05 at an angle of 45 degrees, turn right to align itself with the runway and commence to lose height on the approach - which appeared to be lower and faster that usual. The aircraft touched down in a tail high attitude, approximately 300 feet after crossing the threshold. After travelling a short distance, the aircraft then left the ground, rising to about five feet. From eyewitness reports, attempts were then made by the crew to force the aircraft onto the runway but this only resulted in three more bounces. When about 600 feet from the upwind end of the runway, engine power was applied to make a go around. It is estimated by ground observers that, by this stage, the airspeed of the Lincoln had decreased to approximately 80-85 knots. The Lincoln was then seen to climb slightly, level out at 100 feet, after which the nose of the aircraft rose sharply to place the aircraft in a climbing attitude of 40 degrees. After a further few seconds, the attitude changed abruptly to a climb of 80 degrees. With all engines roaring presumably under full power, the aircraft attained an altitude of approximately 500 feet AGL when, with no forward speed, the port wing slowly dropped and the aircraft steadily accelerated until the port main plane struck the ground in a vertical position. By this time the fuselage was parallel with the ground. The aircraft caught fire immediately and, although the fire tender arrived shortly after the crash, the fire could not be sufficiently controlled to extricate the crew or passengers. The crash site was 400 yards from the end of RWY 05 and displaced approximately 100 yards left of the runway. Source: http://www.adf-gallery.com.au/", "Crash cause": "Other causes", "Date_stringindexer_transform": 231.0, "Time_stringindexer_transform": 61.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 118.0, "Registration_stringindexer_transform": 396.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 55.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 384.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 288.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "2/20/1948", "Time": "13H 40M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aerea Teseo", "Registration": "I-REGI", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Florence - Pisa - Rome", "MSN": "4312", "YOM": "1941", "Flight number": "NA", "Crash location": "Pisa Tuscany", "Country": "Italy", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "7", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The aircraft was scheduled to fly from Florence to Rome but few minutes prior to departure, the operator decided to make an unscheduled stop in Pisa Airport to disembark passengers that were blocked in Florence due to a technical failure on the aircraft. Due to low clouds, the crew was forced to fly at low height from Florence to Pisa and apparently, the weather conditions dropped as the aircraft approached Pisa Airport. Descending from the south in poor visibility, the aircraft hit the slope of a mountain and crashed near the village of Collesalvetti, south of the airport. All three crew members and four passengers were killed while three other passengers were seriously injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 245.0, "Time_stringindexer_transform": 22.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 313.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 197.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 119.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 7.0, "PAX fatalities_stringindexer_transform": 5.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 305.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "2/21/1948", "Time": "14H 0M 0S", "Aircraft": "Lat\u00e9co\u00e8re 631", "Operator": "Lat\u00e9co\u00e8re Industries", "Registration": "F-BDRD", "Flight phase": "Flight", "Flight type": "Positioning", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Le Havre \u2013 Biscarosse", "MSN": "7", "YOM": "1948", "Flight number": "NA", "Crash location": "Saint-Marcouf Islands Manche", "Country": "France", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "11", "PAX fatalities": "11", "Other fatalities": "0", "Total fatalities": 19, "Circumstances": "Few minutes after takeoff from Le Havre, while flying over the Bay of Seine, the crew encountered poor weather conditions with snow falls. The seaplane went out of control and crashed into the sea off the Saint-Marcouf Islands, between Le Havre and Cherbourg. The aircraft was lost and all 19 occupants, pilots and engineers of the manufacturer, were killed.", "Crash cause": "Weather", "Date_stringindexer_transform": 205.0, "Time_stringindexer_transform": 108.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 100.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 14.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 124.0, "MSN_stringindexer_transform": 134.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 126.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 8.0, "PAX fatalities_stringindexer_transform": 4.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 95.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "2/23/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Linea Aeropostal Venezolana - LAV", "Registration": "YV-AGU", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Caracas \u2013 Maracaibo \u2013 C\u00facuta \u2013 Bogota", "MSN": "4205", "YOM": "1941", "Flight number": "NA", "Crash location": "La Grita T\u00e1chira", "Country": "Venezuela", "Region": "South America", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "12", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On the leg from Maracaibo to C\u00facuta, while starting the descent, the crew encountered technical problems with the engines and elected to make an emergency landing. The aircraft crash landed and was written off. All 17 occupants were injured, nine of them seriously.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 86.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 83.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 21.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 358.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 230.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "2/23/1948", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Commercial Airways - Philippines", "Registration": "PI-C262", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mati Davao Oriental", "Country": "Philippines", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "9", "PAX fatalities": "9", "Other fatalities": "0", "Total fatalities": 12, "Circumstances": "Crashed shortly after takeoff from Mati, killing all 12 occupants.", "Crash cause": "Unknown", "Date_stringindexer_transform": 86.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 194.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 237.0, "Country_stringindexer_transform": 18.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 8.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 11.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "2/25/1948", "Time": "6H 0M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Bruning Aviation", "Registration": "NC36498", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Pittsburgh \u2013 Columbus", "MSN": "12527", "YOM": "1944", "Flight number": "NA", "Crash location": "Columbus-John Glenn (Port Columbus) Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Captain De Cicco took over the controls of the aircraft shortly after the flight had passed the Newark fan marker, and started an instrument approach to the Port Columbus Airport. Altitude was reduced to 1,600 feet which was the minimum for that part of the instrument approach to Columbus. However, Captain De Cicco continued his descent below 1,600 feet despite the objections of Mr. Cole. Mr. Cole stated that he immediately engaged himself in a search of the cockpit for an instrument approach chart for Columbus, presumably to show Captain De Cicco that an altitude of 1,600 feet was required until over the Summit Hill fan marker. The descent was continued, and just as the aircraft emerged below the overcast Mr. Cole looked up to see the trees into which the aircraft flew. The first tree struck extended approximately 90 feet above the terrain, the elevation of which was 1,055 feet. The aircraft continued in a straight line, striking a second tree 60 feet away from the first. At this point the right horizontal stabilizer tip and the right elevator were sheared from the empennage A third tree was struck, 265 feet from the first point of contact, and miscellaneous fuselage parts and the right wing were torn from the aircraft. The airplane then made contact with the ground at which time both propellers were broken from the engines. The main body of the wreckage came to rest and burned 1,150 feet from the first point of impact. The pilot was killed, but the co-pilot, although seriously injured has substantially recovered.", "Crash cause": "Human factor", "Date_stringindexer_transform": 240.0, "Time_stringindexer_transform": 73.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 216.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 40.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 390.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 84.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "2/27/1948", "Time": "16H 0M 0S", "Aircraft": "Airspeed AS.65 Consul", "Operator": "Pullman Airways", "Registration": "G-AJGE", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Nairobi \u2013 El Adem \u2013 Benina \u2013 Castel Benito \u2013 London", "MSN": "5121", "YOM": "1947", "Flight number": "NA", "Crash location": "Mediterranean Sea All World", "Country": "World", "Region": "World", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "At Benina Airport, the pilot was in a hurry and took off in a rush at 1535LT, with the passenger but without his radio navigator. While flying along the Libyan coast, he encountered poor weather conditions and the twin engine aircraft crashed into the sea around 1600LT. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor both occupants was found. On March 6, 1948, some debris and the dead body of the passenger were found on a beach in Zarzis, Tunisia.", "Crash cause": "Human factor", "Date_stringindexer_transform": 98.0, "Time_stringindexer_transform": 56.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 188.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 307.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 1.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 303.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "2/27/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Registration": "2040", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Rio de Janeiro \u2013 Bel\u00e9m \u2013 Cayenne", "MSN": "20048", "YOM": "1944", "Flight number": "NA", "Crash location": "Bel\u00e9m Par\u00e1", "Country": "Brazil", "Region": "South America", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "20", "PAX fatalities": "17", "Other fatalities": "0", "Total fatalities": 23, "Circumstances": "On final approach to Bel\u00e9m Airport, the aircraft stalled and crashed in a prairie short of runway threshold. Three passengers were seriously injured while 23 other occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 98.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 393.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 126.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 424.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 13.0, "PAX fatalities_stringindexer_transform": 11.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 66.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "3/1/1948", "Time": "NA", "Aircraft": "Fairchild C-82 Packet", "Operator": "United States Air Force - USAF", "Registration": "44-23003", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "10047", "YOM": "1944", "Flight number": "NA", "Crash location": "Mobile Alabama", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute, the crew encountered unknown technical problems and decided to abandon the aircraft and to bail out. Out of control, the aircraft dove into the ground and crashed. All five crew members were unhurt.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 136.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 136.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 106.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 139.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "3/2/1948", "Time": "21H 14M 0S", "Aircraft": "Douglas DC-3", "Operator": "SABENA - Soci\u00e9t\u00e9 Anonyme Belge d'Exploitation de la Navigation A\u00e9rienne", "Registration": "OO-AWH", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brussels \u2013 London", "MSN": "43154", "YOM": "1947", "Flight number": "NA", "Crash location": "London-Heathrow London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "19", "PAX fatalities": "17", "Other fatalities": "0", "Total fatalities": 20, "Circumstances": "The approach to London-Heathrow Airport was started in reduced visibility due to the night and foggy conditions. On final, the aircraft hit the ground, exploded and came to rest in flames short of the runway threshold. Only two passengers survived the crash and were seriously injured while 20 other occupants were killed. Crew: Henri Goblet, pilot, Jean Lomba, radio operator, Louis De Geyndt, steward.", "Crash cause": "Human factor", "Date_stringindexer_transform": 64.0, "Time_stringindexer_transform": 23.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 217.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 181.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 3.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 22.0, "PAX fatalities_stringindexer_transform": 11.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 177.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "3/2/1948", "Time": "NA", "Aircraft": "AAC.1 Toucan", "Operator": "Soci\u00e9t\u00e9 de Transports A\u00e9riens - STA", "Registration": "F-BBYC", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Oran \u2013 Perpignan \u2013 Lyon", "MSN": "223", "YOM": "NA", "Flight number": "NA", "Crash location": "Mediterranean Sea All World", "Country": "World", "Region": "World", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The three engine aircraft departed Oran-Es Senia Airport at 1530LT on a cargo flight to Lyon via Perpignan, carrying a load of vegetables. En route, the airplane crashed in the Gulf of Lion about 90 km east of Perpignan for unknown reason. All four occupants were killed. Crew: Mr. Screka, pilot, Mr. Pelletier, radio operator, Mr. Prado, mechanic. Passenger: Mr. Saada.", "Crash cause": "Unknown", "Date_stringindexer_transform": 64.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 29.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 291.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 1.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 370.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "3/4/1948", "Time": "NA", "Aircraft": "Airspeed AS.65 Consul", "Operator": "United Air Services - Tanzania", "Registration": "VR-TAR", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Dar es-Salaam \u2013 Mombasa", "MSN": "5169", "YOM": "1947", "Flight number": "NA", "Crash location": "Mombasa Coast", "Country": "Kenya", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Belly landed in Mombasa and slid for several yards before coming to rest. Both occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 208.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 119.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 73.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 312.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 391.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "3/7/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Loftleidir Icelandic Airlines", "Registration": "TF-RVL", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Vestmannaeyjar \u2013 Reykjavik", "MSN": "4185", "YOM": "NA", "Flight number": "NA", "Crash location": "Hellishei\u00f0i Southern Region (Su\u00f0urland)", "Country": "Iceland", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While cruising in poor weather conditions, the twin engine aircraft hit the slope of Mt Skalafell located near Hellishei\u00f0i. The aircraft was destroyed by impact forces and all four occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 3.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 271.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 26.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 100.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 473.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "3/7/1948", "Time": "NA", "Aircraft": "Messerschmitt M.20", "Operator": "VARIG - Via\u00e7\u00e3o A\u00e9rea Rio Grandense", "Registration": "PP-VAK", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "546", "YOM": "NA", "Flight number": "NA", "Crash location": "Brazil All Brazil", "Country": "Brazil", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in Brazil. Occupant fate unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 3.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 3.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 4.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 27.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 1.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "3/7/1948", "Time": "NA", "Aircraft": "Messerschmitt M.20", "Operator": "VARIG - Via\u00e7\u00e3o A\u00e9rea Rio Grandense", "Registration": "PP-VAK", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "546", "YOM": "NA", "Flight number": "NA", "Crash location": "Brazil All Brazil", "Country": "Brazil", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in Brazil. Occupant fate unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 3.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 3.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 4.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 27.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 1.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "3/7/1948", "Time": "NA", "Aircraft": "Lisunov LI-2", "Operator": "Polyarnaya Aviatsiya", "Registration": "CCCP-N444", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Dudinka \u2013 Amderma", "MSN": "1848009", "YOM": "NA", "Flight number": "NA", "Crash location": "Mt Netem-Pe Republic of Yamalia", "Country": "Russia", "Region": "Asia", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "14", "PAX fatalities": "14", "Other fatalities": "0", "Total fatalities": 20, "Circumstances": "While flying by night from Dudinka to Amderma, the crew encountered poor weather conditions and due to low visibility, became lost. The aircraft hit the eastern slope of Mt Netem-Pe (1,338 meters high) located 143 km north of Kharp, in the Iamalo-Nenets okrug. As the aircraft failed to arrive, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. Walkers found the wreckage in an isolated area on September 17, 1950. All 20 occupants were killed. It appears the crew was tired at the time of the accident and did not have a sufficient rest time prior to start the flight.", "Crash cause": "Human factor", "Date_stringindexer_transform": 3.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 273.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 213.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 75.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 16.0, "PAX fatalities_stringindexer_transform": 21.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 164.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "3/8/1948", "Time": "18H 0M 0S", "Aircraft": "Douglas DC-3", "Operator": "Eagle Air Freight", "Registration": "NC64722", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Seattle \u2013 San Francisco", "MSN": "10052", "YOM": "1943", "Flight number": "NA", "Crash location": "Mt Hamilton California", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The flight departed from Seattle, Washington, at approximately 1300, March 8, 1948, with a crew consisting of George S. Griebel, pilot, and William F. Grund, co-pilot. It carried 800 gallons of fuel, but no passengers or cargo, weighing at the time of take-off 21.963 pounds. At 1615, the flight reported over Red Bluff, California, at 12.000 feet, and requested clearance to descend to and cruise at 10.000 feet. Oakland Airway Traffic Control granted the request, and also cleared the flight to the Moffett radio range station. 25 miles southeast of San Francisco Municipal Airport, San Francisco, California. At 1715, the flight advised San Francisco Approach Control that it as holding northwest of the Moffett radio range station at 10,000 feet. In reply, San Francisco Approach Control directed the flight to hold between the Moffett radio range station and a point 2 minutes northwest of it. At the same time the flight was advised to expect clearance to the San Francisco Municipal Airport at 1745. Between 1717 and 1734 the flight, while flying its holding pattern, received clearance and descended from 10,000 to 6,000 feet. At 1741, it was cleared to make a \u201cstraight in\u201d approach to the San Francisco Airport. It was directed to report when it crossed the Moffett radio range station and 4,000 feet, and to report again when it had descended below the overcast, A minute later, at 1742, the flight reported leaving the Moffett radio range station and 4,000 feet. Though the San Francisco Tower called repeatedly, this was the last communication received from the flight. Between 1755 and 1805 a rancher in the vicinity of Mt. Hamilton heard a noise he thought to be either thunder or blasting. About 1945, after driving to another part of his ranch, he observed fire in the hills and realized then that the noise he had thought to be thunder was that of an aircraft crashing. It was midnight before a searching party reached the wreckage, which was approximately 20 miles east-southeast (on a bearing of 110 degrees) from the Moffett radio range station, and at an elevation of 1,800 feet.", "Crash cause": "Human factor", "Date_stringindexer_transform": 129.0, "Time_stringindexer_transform": 3.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 151.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 290.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 165.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 38.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "3/8/1948", "Time": "NA", "Aircraft": "Consolidated Canso", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "PK-CTC", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "21995", "YOM": "1943", "Flight number": "NA", "Crash location": "Poso Central Sulawesi", "Country": "Indonesia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "9", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed into the sea shortly after takeoff from the bay of Poso. All 13 occupants were rescued while the seaplane sank and was lost.", "Crash cause": "Unknown", "Date_stringindexer_transform": 129.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 13.0, "Registration_stringindexer_transform": 253.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 194.0, "Country_stringindexer_transform": 7.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 31.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "3/10/1948", "Time": "22H 58M 0S", "Aircraft": "Douglas DC-4", "Operator": "Delta Airlines", "Registration": "N37478", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Chicago \u2013 Miami", "MSN": "18390", "YOM": "1944", "Flight number": "NA", "Crash location": "Chicago-Midway Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "9", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 12, "Circumstances": "The takeoff roll and the first part of the climb appeared to be normal until the aircraft and progressed three-quarters of the way down the runway, at which time it had reached an altitude between 150 and 200 feet. Then, while still within the airport boundaries, it assumed a very steep, near vertical, climbing attitude. Airport, tower, and flight personal observing from the ground believed the flight to be in difficulty, and though no distress signal was received from the airplane, the tower promptly telephoned the crash and fire facilities on the field. At an altitude between 500 and 800 feet the airplane appeared to stall, and the nose and right wing dropped. A partial recovery from the stall was made before the aircraft crashed to the ground and burst into flames. A passenger was seriously injured while 12 other occupants were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 74.0, "Time_stringindexer_transform": 86.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 235.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 85.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 321.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 7.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 235.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "3/10/1948", "Time": "NA", "Aircraft": "Douglas C-54 Skymaster", "Operator": "American Airlines", "Registration": "N90426", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Tulsa \u2013 Los Angeles", "MSN": "10433", "YOM": "1944", "Flight number": "NA", "Crash location": "Dallas-Love Field Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "33", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll in Tulsa, the nose gear hit a snowdrift. After departure, during initial climb, the crew was unable to raise the nose gear so the captain decided to divert to Dallas-Love Field for a safe landing. After touchdown, the aircraft slid on its nose and came to rest. There were no casualties but the aircraft was written off.", "Crash cause": "Other causes", "Date_stringindexer_transform": 74.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 440.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 25.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 341.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 18.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 421.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "3/12/1948", "Time": "21H 14M 0S", "Aircraft": "Douglas C-54 Skymaster", "Operator": "Northwest Airlines", "Registration": "NC95422", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Shanghai \u2013 Anchorage \u2013 New York", "MSN": "35966", "YOM": "1945", "Flight number": "NA", "Crash location": "Mt Sanford Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "24", "PAX fatalities": "24", "Other fatalities": "0", "Total fatalities": 30, "Circumstances": "Take-off from Anchorage was accomplished at 2012, March 12, 1948, and the flight proceeded en route. 2 At 2028 the flight reported over the Wasilla Intersection, which is the intersection of the north course of the Anchorage radio range and the east course of the Skwentna radio range. This intersection is located 35 miles north 3 of Anchorage. Three minutes later, at 2031, the flight reported that it was at its cruising altitude of 11,000 feet. At 2042 the flight reported over Sheep Mountain, a non-directional radio beacon located 85 miles airways distance, 31 degrees, from Anchorage. At 2103 the flight reported being over the Gulkana radio range station, 159 miles, 34 degrees, from Anchorage, and at this time it estimated that it would be over Northway, Alaska, 283 miles from Anchorage, at 2136. Gulkana did not establish communication with the flight. However, the flight repeated its clearance into the Fairbanks area back to Northway, indicating that the flight could receive on 400 kcs, the frequencies for both the Northway radio range and communication. Shortly before the position report of 2103, the flight was observed flying an easterly heading approximately 4 miles south of the Gulkana radio range station. Approximately 42 miles, 51 degrees, from the Gulkana radio range station is Mt. Sanford, the elevation of which is 16,208 feet. In order to provide a safe lateral distance from Mt. Sanford for aircraft flying the route, the airway from Gulkana east is deflected to the north, its course being 23 degrees. Fifteen minutes after the flight was observed flying easterly from Gulkana a fire was observed on the western slope of Mt. Sanford. Except for a repeat transmission of the flight's Gulkana position report, overheard by Northway Radio 124 miles northeast of Gulkana and approximately one minute before the fire was observed on Mt. Sanford, no communication was received from the flight after 2103. Northwest Airlines, at 2150, requested from Anchorage Radio the reported time of the flight over Northway, at which time Anchorage Radio advised that neither the Northway nor the Gulkana stations had been able to contact the flight, and that a fire had been reported on Mt. Sanford. Radio facilities over the route were immediately alerted. Since all attempts to contact the flight were unsuccessful, it was concluded that the flight had struck Mt. Sanford and burned.", "Crash cause": "Human factor", "Date_stringindexer_transform": 58.0, "Time_stringindexer_transform": 23.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 435.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 297.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 159.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 34.0, "PAX fatalities_stringindexer_transform": 15.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 406.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "3/12/1948", "Time": "10H 0M 0S", "Aircraft": "Martin 187 Baltimore", "Operator": "Italian Air Force - Aeronautica Militare Italiana", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Guidonia - Guidonia", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Guidonia AFB Lazio", "Country": "Italy", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from Guidonia AFB, while in initial climb, the right engine failed. Unable to gain height, the aircraft hit power cables and crashed in flames in a field located three km southeast of the airport, near Tivoli. The radio navigator was seriously injured while both pilots were killed. Crew: Cpt Gianni Colaprete, pilot, Mar Teodoro Tagliabue, copilot, Mr. Borelli, radio navigator.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 58.0, "Time_stringindexer_transform": 20.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 5.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 40.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 144.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "3/13/1948", "Time": "NA", "Aircraft": "De Havilland DH.83 Fox Moth", "Operator": "Great Northern Skyways", "Registration": "CF-DIS", "Flight phase": "Takeoff (climb)", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "FM.19", "YOM": "NA", "Flight number": "NA", "Crash location": "McGregor Bay Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after takeoff from McGregor Bay following an engine failure. The aircraft was written off and the pilot was injured.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 94.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 129.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 11.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 256.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 29.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "3/13/1948", "Time": "NA", "Aircraft": "Douglas C-53 Skytrooper (DC-3)", "Operator": "Cruzeiro do Sul", "Registration": "PP-CBX", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "11658", "YOM": "1943", "Flight number": "NA", "Crash location": "Sierra Cristais Minas Gerais", "Country": "Brazil", "Region": "South America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "Hit a rocky peak located in the Sierra Cristais and crashed. All six occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 94.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 6.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 322.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 356.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "3/15/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Agencia Interamericana de Aviaci\u00f3n - AIDA Colombia", "Registration": "C-1002", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "El Secreto \u2013 Bogota", "MSN": "6252", "YOM": "1943", "Flight number": "NA", "Crash location": "Alto El Arrastradero Cundinamarca", "Country": "Colombia", "Region": "South America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "12", "PAX fatalities": "11", "Other fatalities": "0", "Total fatalities": 14, "Circumstances": "While descending to Bogota Airport, the aircraft hit the slope of Alto El Arrastradero mountain located about 40 km northeast of the capital city. A 14 years old girl was rescued while 14 other occupants were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 275.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 357.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 96.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 246.0, "Country_stringindexer_transform": 21.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 4.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 434.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "3/16/1948", "Time": "NA", "Aircraft": "Lisunov LI-2", "Operator": "Polyarnaya Aviatsiya", "Registration": "CCCP-N456", "Flight phase": "Takeoff (climb)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Vorkuta - Vorkuta", "MSN": "184 277 05", "YOM": "1947", "Flight number": "NA", "Crash location": "Vorkuta Republic of Komi", "Country": "Russia", "Region": "Asia", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following the disappearance of a LI-2 registered CCCP-N444 on March 7, rescue operations were conducted and dispatched. Unfortunately, due to poor weather conditions (heavy snow falls), most of the crew were forced to stay on the ground. That day, a crew decided to make a sortie but the runway at Vorkuta Airport has not been cleared of snow. The captain ask three crew members to seat in the rear of the cabin and started the takeoff procedure on a snow covered runway (up to 30 cm of snow). After a course of about 700 meters, the aircraft lifted off but failed to gain height due to an insufficient speed. After passing the runway end, the aircraft hit the roof of a house, lost an engine, stalled and crashed in a field. All six crew members were injured and the aircraft was written off.", "Crash cause": "Other causes", "Date_stringindexer_transform": 257.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 94.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 15.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 146.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 346.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 393.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "3/17/1948", "Time": "9H 47M 0S", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "RP499", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Topcliffe - Topcliffe", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Topcliffe AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was engaged in a night training sortie at RAF Topcliffe. Shortly after takeoff, while climbing at a height of some 300 feet, the aircraft collided with a second Vickers 619 Wellington X. Registered RP565, it was carrying another crew of four, was also completing a training flight and was attempting to land. Both aircraft went out of control and crashed in a field near the airport. All eight crew members were killed. Crew: F/Lt Franciszek Kula, pilot, Colin Bass, pilot, Sig Walter Ernest Leslie Howell, Sig Arthur Edward Highman, F/Lt William James Jones, F/Lt Robert Sneddon Laird, F/Lt Harry Corelius New, F/Lt John Edge Kerslake.", "Crash cause": "Human factor", "Date_stringindexer_transform": 107.0, "Time_stringindexer_transform": 5.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 17.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 1.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 6.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 374.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "3/17/1948", "Time": "9H 47M 0S", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "RP565", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Topcliffe - Topcliffe", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Topcliffe AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was engaged in a night training sortie at RAF Topcliffe. While approaching the airbase at a height of some 300 feet, the aircraft collided with a second Vickers 619 Wellington X. Registered RP499, it was carrying another crew of four and just took off from RAF Topcliffe. Both aircraft went out of control and crashed in a field near the airport. All eight crew members were killed. Crew: F/Lt Franciszek Kula, pilot, Colin Bass, pilot, Sig Walter Ernest Leslie Howell, Sig Arthur Edward Highman, F/Lt William James Jones, F/Lt Robert Sneddon Laird, F/Lt Harry Corelius New, F/Lt John Edge Kerslake.", "Crash cause": "Human factor", "Date_stringindexer_transform": 107.0, "Time_stringindexer_transform": 5.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 124.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 1.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 6.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 153.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "3/20/1948", "Time": "8H 12M 0S", "Aircraft": "Vultee V-1", "Operator": "Private American", "Registration": "NC22077", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Providence \u2013 White Plains \u2013 Saint-Louis", "MSN": "16", "YOM": "1935", "Flight number": "NA", "Crash location": "Somerset Pennsylvania", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "7", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "Aircraft NC 22077 departed from Providence, Rhode Island, for White Plains, New York, at about 0730 March 19, 1948. The aircraft carried the pilot, Herman F. Burlingame III, his wife Ruth L. Burlingame, their infant daughter Kathleen, and George H. Armitage, as well as four Chow dogs and personal baggage. Arriving at Westchester Airport, White Plains, one hour and 20 minutes later, aircraft NC22077 was serviced with 118 gallons of fuel. At 0935 the aircraft departed from White Plains, the pilot telling airport officials that he intended to fly either to Hadley Field, New Brunswick, New Jersey, or Solberg-Hunterdon Airport, White House, New Jersey. Two hours and 31 minutes later the aircraft returned to White Plains, Mr. Burlingame telling airport officials that he had not landed at either of the alternative destinations. The aircraft was parked for the night, after being serviced with 85 gallons of fuel. The following morning, March 20, 1948, at 0550 the flight departed from White Plains for St. Louis, Missouri. The aircraft carried an additional four persons who had joined the original group at White Plains. The take-off weight could not be precisely determined, but it was close to the maximum allowable. No flight plan was filed with CAA Airways Traffic Control, and though NC22077 was equipped with two-way radio, no transmissions were received from the flight after its departure from White Plains. Consequently the exact route over which the flight proceeded is not known. Shortly after 0800, witnesses in the vicinity of the west portal of the Laurel Hill Tunnel of the Pennsylvania Turnpike, approximately 45 miles southeast of Pittsburgh, Pennsylvania, observed an aircraft flying at a low altitude on a northwesterly heading. It was flying in and out of low-hanging cloud fringes, and therefore, was not continuously visible. However, the aircraft was observed to approach the tunnel, circle in front of the portal, and then disappear into the overcast. After losing sight of the aircraft, some of the witnesses stated that they heard a surge of engine power, followed by the sound of a crash. Others, more distant, noticed that sound from the aircraft ceased abruptly. Since no other aircraft was observed in the vicinity at that time, there is no doubt but what it was NC22077 that these witnesses saw.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 80.0, "Time_stringindexer_transform": 46.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 369.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 152.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 95.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 7.0, "PAX fatalities_stringindexer_transform": 6.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 298.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "3/20/1948", "Time": "NA", "Aircraft": "North American B-25 Mitchell", "Operator": "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Bel\u00e9m \u2013 S\u00e3o Luis", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Rio Gurupizinho Par\u00e1", "Country": "Brazil", "Region": "South America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Crashed in unknown circumstances near the Rio Gurupizinho, at the border of Par\u00e1 and Maranh\u00e3o States. The wreckage was found two days later and all four crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 80.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 69.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 318.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 354.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "3/21/1948", "Time": "1H 7M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "43-16267", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Travis - Hillsboro", "MSN": "20733", "YOM": "1944", "Flight number": "NA", "Crash location": "Woodland Washington", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "8", "PAX fatalities": "6", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The crew left Travis AFB for a night flight to Hillsboro, in the suburb of Portland, Oregon. During the approach to Hillsboro, the crew encountered poor weather conditions and missed the airport. While flying in dark conditions, the aircraft hit the slope of Mt Davis located about 11 miles northeast of Woodland. Two passengers were seriously injured while eight other occupants were killed.", "Crash cause": "Weather", "Date_stringindexer_transform": 260.0, "Time_stringindexer_transform": 52.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 123.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 304.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 41.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 14.0, "PAX fatalities_stringindexer_transform": 10.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 152.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "3/25/1948", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Private Swedish", "Registration": "SE-AHO", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2118", "YOM": "1930", "Flight number": "NA", "Crash location": "Dorotea V\u00e4sterbotten", "Country": "Sweden", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On a local flight from G\u00f6teborg, the pilot encountered poor weather conditions and was forced to reduce his altitude when the aircraft hit power cables and crashed in a field. The pilot was injured and the aircraft was written off. The aircraft was owned by Nils Olofsson.", "Crash cause": "Human factor", "Date_stringindexer_transform": 97.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 171.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 364.0, "Country_stringindexer_transform": 6.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 278.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "3/25/1948", "Time": "NA", "Aircraft": "Miles M.57 Aerovan", "Operator": "Ulster Aviation", "Registration": "G-AJKJ", "Flight phase": "Flight", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Belfast \u2013 Liverpool", "MSN": "6406", "YOM": "1947", "Flight number": "NA", "Crash location": "Southport Merseyside", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While flying over the Irish Sea, enroute from Belfast to Liverpool, the pilot was forced to ditch the aircraft off Southport. He was quickly rescued while the aircraft sank and was lost.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 97.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 37.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 14.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 72.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 252.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 119.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "3/27/1948", "Time": "7H 30M 0S", "Aircraft": "Vickers Viking", "Operator": "Indian National Airways - INA", "Registration": "VT-CEL", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "New Delhi \u2013 Rome \u2013 London", "MSN": "166", "YOM": "1947", "Flight number": "NA", "Crash location": "Mt Cardo Haute-Corse", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "15", "PAX fatalities": "15", "Other fatalities": "0", "Total fatalities": 19, "Circumstances": "While flying at an altitude of 2,400 meters in poor weather conditions, the twin engine aircraft hit the slope of Mt Cardo located in the center of Corsica. The wreckage was found few hours later and all 19 occupants were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 200.0, "Time_stringindexer_transform": 80.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 200.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 268.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 382.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 6.0, "PAX fatalities_stringindexer_transform": 9.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 398.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/1/1948", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "Portuguese Air Force - Aeron\u00e1utica Militar", "Registration": "276", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "32353", "YOM": "1944", "Flight number": "NA", "Crash location": "Lajes Azores Islands", "Country": "Portugal", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After touchdown, the four engine aircraft overran and collided with a rocky wall. There were no casualties but the aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 278.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 34.0, "Registration_stringindexer_transform": 42.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 143.0, "Country_stringindexer_transform": 28.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 279.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/5/1948", "Time": "14H 30M 0S", "Aircraft": "Vickers Viking", "Operator": "British European Airways - BEA", "Registration": "G-AIVP", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "London \u2013 Berlin", "MSN": "229", "YOM": "1946", "Flight number": "NA", "Crash location": "Berlin-Gatow Berlin", "Country": "Germany", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "10", "PAX fatalities": "10", "Other fatalities": "0", "Total fatalities": 14, "Circumstances": "On final approach to Berlin-Gatow Airport, at an altitude of 1,500 feet, the twin engine aircraft collided with a Soviet Air Force Yakovlev Yak-3. Both aircraft went out of control and crashed. All 14 occupants on board the Viking were killed as well as the fighter pilot. Crew: John Ralph, pilot, Norman Merrington, copilot, Charles Mamser, radio operator, Leonard G. Goodman, steward. Passengers: Sgt Pasquale E. Pintus, Frances Ruth Clough, J. K. Shea, J. E. Roberts, S. J. Stocking, Robert Collier, Waldemar Hald, Cpt Flamings, M. Lewin, H. Read-Jahn.", "Crash cause": "Human factor", "Date_stringindexer_transform": 34.0, "Time_stringindexer_transform": 55.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 176.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 115.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 32.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 11.0, "PAX fatalities_stringindexer_transform": 17.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 148.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/5/1948", "Time": "NA", "Aircraft": "Vickers 619 Wellington X", "Operator": "Royal Air Force - RAF", "Registration": "RP504", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Sea All World", "Country": "World", "Region": "World", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Left its base at 0930LT for a training mission over the North Sea. At 1435LT, the crew informed ground about his position and that he was flying at an altitude of 15,000 feet some 192 km from his departure point. Few minutes later, the aircraft crashed into the sea in unknown circumstances. No trace of the aircraft nor the crew was ever found.", "Crash cause": "Unknown", "Date_stringindexer_transform": 34.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 254.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 108.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 25.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/5/1948", "Time": "NA", "Aircraft": "Curtiss C-46 Commando", "Operator": "United States Marine Corps", "Registration": "39550", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "30327", "YOM": "1944", "Flight number": "NA", "Crash location": "China All China", "Country": "China", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was forced to make an emergency landing for unknown reason. The aircraft came to rest in marsh field and was damaged beyond repair. There were no casualties.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 34.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 409.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 172.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 105.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "4/7/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Air Congo", "Registration": "OO-CFB", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1362", "YOM": "NA", "Flight number": "NA", "Crash location": "Kindu Maniema", "Country": "Democratic Republic of Congo", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 159.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 157.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 125.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/9/1948", "Time": "10H 0M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "SCOLTA - Sociedad Colombiana de Transportes A\u00e9reos", "Registration": "C-40", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Maracaibo \u2013 Cartagena", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Venezuela All Venezuela", "Country": "Venezuela", "Region": "South America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "About half an hour after its departure from Maracaibo Airport, the aircraft crashed in a mountainous region located in the east part of Venezuela. As the aircraft failed to arrive in Cartagena, SAR operations were conducted but eventually suspended few days later as no trace was found. The wreckage was located in June 1959 in an isolated area. All four occupants were killed, among them Hernando Navarro Botero, Director of the company. The registration remains unconfirmed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 115.0, "Time_stringindexer_transform": 20.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 155.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 113.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 51.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 26.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/9/1948", "Time": "NA", "Aircraft": "Douglas A-26 Invader", "Operator": "United States Air Force - USAF", "Registration": "41-39526", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "7239", "YOM": "1941", "Flight number": "NA", "Crash location": "Mt Baird Washington", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Crashed in unknown circumstances on Mt Baird located in the Cowlitz county, Washington. All three crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 115.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 141.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 406.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 39.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/10/1948", "Time": "8H 33M 0S", "Aircraft": "Douglas DC-4", "Operator": "Air France", "Registration": "F-BBDC", "Flight phase": "Takeoff (climb)", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lagos \u2013 Kano \u2013 Algiers \u2013 Paris", "MSN": "42935", "YOM": "1946", "Flight number": "NA", "Crash location": "Kano Kano", "Country": "Nigeria", "Region": "Africa", "Crew on board": "6", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Following the failure of the starter on engine number one, the crew was unable to restart this engine and received the authorization to perform an empty leg back to Paris for maintenance purposes. During the takeoff roll in Kano Airport, the aircraft went out of control and veered off runway before colliding with a BOAC technical hangar. A crew member was killed while five others were injured. The aircraft was destroyed. Pilots : Mr. Salvetat & Marchandise.", "Crash cause": "Human factor", "Date_stringindexer_transform": 91.0, "Time_stringindexer_transform": 37.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 18.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 11.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 269.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 232.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 366.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/10/1948", "Time": "NA", "Aircraft": "Douglas A-26 Invader", "Operator": "United States Air Force - USAF", "Registration": "44-35446", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Eglin - Eglin", "MSN": "28725", "YOM": "NA", "Flight number": "NA", "Crash location": "Destin Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was performing a training flight from Eglin AFB. Enroute, an unexpected situation forced to crew to abandon the aircraft that crashed into the sea two miles off Destin. Two crew members, F/Lt John Kubo and T/Sgt Joseph A. Riley were rescued while the body of T/Sgt John E. Brizendine was never found.", "Crash cause": "Unknown", "Date_stringindexer_transform": 91.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 381.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 83.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 391.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 242.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/11/1948", "Time": "NA", "Aircraft": "Bristol 170 Freighter", "Operator": "Compagnie Air Transport - CAT", "Registration": "F-BENG", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Bordeaux \u2013 Gibraltar \u2013 Casablanca", "MSN": "12812", "YOM": "1947", "Flight number": "NA", "Crash location": "Algeciras Andalusia", "Country": "Spain", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after a night takeoff from Gibraltar, while climbing to an altitude of 2,500 to 3,000 feet, the twin engine aircraft hit the slope of a mountain located in Los Barrios, northwest of Algeciras. The aircraft was destroyed and all three crew members were killed. They were performing a cargo flight from Bordeaux to Casablanca with an intermediate stop in Gibraltar. The aircraft was carrying a load of four tons of various goods.", "Crash cause": "Human factor", "Date_stringindexer_transform": 196.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 345.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 179.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 388.0, "Country_stringindexer_transform": 4.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 69.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/15/1948", "Time": "2H 34M 0S", "Aircraft": "Lockheed L-049 Constellation", "Operator": "Pan American World Airways - PAA", "Registration": "NC88858", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Calcutta \u2013 Damascus \u2013 Istanbul \u2013 Brussels \u2013 London \u2013 Shannon \u2013 Gander \u2013 New York", "MSN": "2058", "YOM": "1946", "Flight number": "NA", "Crash location": "Shannon Munster", "Country": "Ireland", "Region": "Europe", "Crew on board": "10", "Crew fatalities": "10", "Pax on board": "21", "PAX fatalities": "20", "Other fatalities": "0", "Total fatalities": 30, "Circumstances": "\"Pan American's Flight 1-10, originating in San Francisco, California, April 10, 1948, was scheduled to fly around the world to New York, New York. In accordance with company practice the flight changed to a different aircraft, NC-88858, at the Pan American Airways' base in Calcutta, India. The flight took off from Calcutta, April 13, 1948, and continued without incident via Damascus, Syria, and Istanbul, Turkey, to Brussels, Belgium. During a night landing approach at Brussels the fluorescent lighting on the left or pilot side of the cockpit went out. Since the only other lighting immediately available was a chart light which was focused on the automatic direction finder indicator, the flight instruments could not be read, and the remainder of the landing approach was accomplished without visual reference to the flight instruments. An examination was made of the fluorescent lights after the landing. They appeared to operate normally, so the flight departed from Brussels, continuing without difficulty until on the final landing approach into London. When the power was reduced the same pilot's fluorescent lights again went out. This time the chart light was focused on the airspeed indicator. The approach was continued, and the landing was accomplished without incident. A faulty rheostat switch was found to be the cause of the fluorescent light failure, but since a spare switch could not be located, it was not changed at London. An entry describing the defect was placed in the aircraft's Form C, the airplane flight log, and the captain and the flight engineer of the new crew were informed by the company's maintenance supervisor of the condition. Though no actual maintenance was accomplished, the lights again appeared to be operating normally, so the captain, F. C. Jakel, decided to take-off, departing from London at 0035, April 15, 1948, for Shannon. At this time available weather forecasts indicated that at the estimated time of the flight's arrival at Shannon the ceiling there would be 700 feet with a higher cloud layer at 1,000 feet, and visibility 4 miles. At 0159, April 15, 1948, the flight reported being at an altitude of 4,500 feet, contact, over the Limerick Junction fan marker, located 25 statute miles southeast from the Shannon Airport, and requested permission to make a practice approach to the field with the use of the instrument landing system. Shannon Tower cleared the flight for this approach. The tower advised that 3 hours previously the instrument landing system equipment on the airport had been reported faulty, but that it had since been serviced and was operating normally according to its monitoring board, though not flight-checked. At 0210, the flight reported that it was proceeding to the outer marker, 5.2 statute miles northeast of the Shannon Airport, and also made a report, routine for Pan American flights, \"\"mechanical condition okay.\"\" In response Shannon Tower advised the flight that the weather over the field was \"\"fog patches", "Crash cause": " 3 miles visibility", "Date_stringindexer_transform": 284.0, "Time_stringindexer_transform": 40.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 423.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 258.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 131.0, "Country_stringindexer_transform": 34.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 11.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 20.0, "PAX fatalities_stringindexer_transform": 30.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 6.0, "Crash cause_stringindexer_transform": 7.0}, {"Date": "4/18/1948", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Guinea Air Traders", "Registration": "VH-ALA", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lae \u2013 Bulolo", "MSN": "414-6460", "YOM": "1942", "Flight number": "NA", "Crash location": "Lae Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "33", "PAX fatalities": "33", "Other fatalities": "0", "Total fatalities": 37, "Circumstances": "Shortly after takeoff from Lae-Nadzab Airport, while in initial climb, an engine failed. The pilot lost control of the aircraft that crashed on an island located in the Markham River, south of the airport. All 37 occupants were killed. It was determined that all passengers were local farmers that were seating in the main cabin without seat or seat belt. Worst accident involving a Lockheed Hudson.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 237.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 263.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 205.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 15.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 18.0, "PAX fatalities_stringindexer_transform": 18.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 238.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "4/19/1948", "Time": "15H 20M 0S", "Aircraft": "Lockheed 10 Electra", "Operator": "New Zealand National Airways", "Registration": "ZK-AGJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Auckland \u2013 Tauranga \u2013 Gisborne", "MSN": "1127", "YOM": "1937", "Flight number": "NA", "Crash location": "Tauranga Bay of Plenty Regional Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "10", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The twin engine aircraft christened 'Kahu' left Auckland Airport at 1435LT bound for Gisborne with an intermediate stop in Tauranga. On final approach, the crew encountered poor weather conditions with thunderstorm activity and strong winds. The aircraft lost height and crashed in the Waipu Bay, less than 200 yards from the runway threshold. All 12 occupants were rescued while the aircraft was damaged beyond repair. Crew: A. C. Harris, pilot, G. E. Bruce, copilot.", "Crash cause": "Weather", "Date_stringindexer_transform": 156.0, "Time_stringindexer_transform": 120.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 219.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 142.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 226.0, "Country_stringindexer_transform": 24.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 11.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 270.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "4/20/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Philippine Airlines - PAL", "Registration": "PI-C14", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "13193", "YOM": "1944", "Flight number": "NA", "Crash location": "Jolo Island Sulu", "Country": "Philippines", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing. No casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 172.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 349.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 355.0, "Country_stringindexer_transform": 18.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 4.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/21/1948", "Time": "20H 1M 0S", "Aircraft": "Vickers Viking", "Operator": "British European Airways - BEA", "Registration": "G-AIVE", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Northolt \u2013 Glasgow", "MSN": "218", "YOM": "1946", "Flight number": "NA", "Crash location": "Glasgow Strathclyde", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "16", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The twin engine aircraft left RAF Northolt at 1809LT bound for Glasgow-Renfrew Airport. At 1946LT, while cruising at an altitude of 4,700 feet, the captain contacted ATC to obtain the permission to descend to Renfrew. Few minutes later, he requested if the outer marker was operative. Shortly later, the aircraft hit the slope of Mt Irish Law and crashed. All 20 occupants were quickly rescued, two of them were slightly injured. The aircraft was destroyed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 28.0, "Time_stringindexer_transform": 53.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 341.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 57.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 374.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 23.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 70.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/21/1948", "Time": "16H 20M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L1215", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Takhtamygda - Takhtamygda", "MSN": "16978/34239", "YOM": "1945", "Flight number": "NA", "Crash location": "Tynda Amur oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "3", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "An Aeroflot LI-2 registered CCCP-L4279 made an emergency landing near Tynda on April 20. A day later, a Deputy from the Amur Region decided to conduct a mission to help and forced the crew to takeoff despite the fact that weather conditions were below minima. The aircraft left Takhtamygda Airport at 1550LT. About twenty minutes later, the right engine failed. The crew was forced to feather the propeller and the captain decided to return to his departure point. Shortly later, while losing altitude, the aircraft hit tree tops with its propeller while the left elevator hit a telephone pole. The aircraft stalled and crashed. Three crew members, among them the captain, were killed while three other occupants were injured.", "Crash cause": "Human factor", "Date_stringindexer_transform": 28.0, "Time_stringindexer_transform": 49.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 315.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 15.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 63.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 420.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 301.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/21/1948", "Time": "10H 30M 0S", "Aircraft": "Grumman G-44 Widgeon", "Operator": "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Registration": "2667", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1271", "YOM": "1943", "Flight number": "NA", "Crash location": "Praia de Ponte Negra Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew left Rio de Janeiro-Gale\u00e3o Airport at 1000LT. About half an hour later, the aircraft crashed in unknown circumstances in Praia de Ponte Negra, about 150 km southwest of its departure point. Both pilots were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 28.0, "Time_stringindexer_transform": 7.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 48.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 141.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 482.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/23/1948", "Time": "NA", "Aircraft": "Lockheed P-2 Neptune", "Operator": "United States Navy - USN", "Registration": "39325", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "126-1025", "YOM": "1947", "Flight number": "NA", "Crash location": "Quonset Point NAS Rhode Island", "Country": "United States of America", "Region": "North America", "Crew on board": "8", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Quonset Point NAS, both engines failed. The aircraft stalled and crashed into the sea few miles off shore. All eight crew members were rescued while the aircraft sank and was lost.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 43.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 292.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 423.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 396.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "4/23/1948", "Time": "NA", "Aircraft": "Curtiss C-46 Commando", "Operator": "Israeli Air Force - Heyl Ha'avir", "Registration": "RX-138", "Flight phase": "Takeoff (climb)", "Flight type": "Delivery", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Burbank \u2013 Mexico City \u2013 Panama City", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mexico City Federal District of Mexico City", "Country": "Mexico", "Region": "Central America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after lift off, the aircraft went out of control and crashed in flames. The copilot was killed while the captain was seriously injured. He died from his injuries few hours later. The crew was on its way from Burbank to Israel to deliver the aircraft to the Israel Air Force. Four other similar aircraft were performing the same trip at the same time. At the time of the accident, the aircraft was still under the Panamanian register by LAPSA - Lineas A\u00e9reas de Panama. Crew: William Guy Gerson, pilot, Ernest Glen King, copilot.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 43.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 342.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 168.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 73.0, "Country_stringindexer_transform": 23.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 181.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "4/23/1948", "Time": "NA", "Aircraft": "Lisunov LI-2", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L4437", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Khabarovsk \u2013 Yuzhno-Sakhalinsk", "MSN": "33 05", "YOM": "30", "Flight number": "NA", "Crash location": "Khabarovsk Khabarovsk Krai", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "1", "Pax on board": "12", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "During the takeoff roll, the aircraft veered off the center line to the right as the rudder trim has not been set to neutral position before takeoff. The crew failed to abort the takeoff procedure and about 30 seconds after liftoff, during initial climb, the right wing hit a telegraph line and collided with the pole of a high voltage power line. Out of control, the aircraft stalled and crashed. The mechanic was killed while 13 other occupants were injured. The aircraft was destroyed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 43.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 352.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 230.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 35.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 19.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/24/1948", "Time": "14H 40M 0S", "Aircraft": "Lisunov LI-2", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L4460", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kirensk \u2013 Bodaibo", "MSN": "37 04", "YOM": "31", "Flight number": "NA", "Crash location": "Bodaibo Irkutsk oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "25", "PAX fatalities": "24", "Other fatalities": "0", "Total fatalities": 28, "Circumstances": "Approaching Bodaibo, the crew lost his orientation due to low visibility caused by poor weather conditions (snow falls). The captain decided to reduce his altitude and followed the Vitim River to join Bodaibo Airport at a height of 100 meters. The aircraft hit the water surface and crashed in a huge explosion into the river off Mamakan, about 13 km southwest of Bodaibo. A passenger was injured and rescued while all 28 other occupants were killed.", "Crash cause": "Weather", "Date_stringindexer_transform": 265.0, "Time_stringindexer_transform": 10.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 278.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 259.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 104.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 10.0, "PAX fatalities_stringindexer_transform": 15.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 24.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "4/25/1948", "Time": "NA", "Aircraft": "Consolidated PB4Y-2 Privateer", "Operator": "United States Navy - USN", "Registration": "59860", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "59860", "YOM": "1943", "Flight number": "NA", "Crash location": "Corpus Christi NAS Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On final approach to Corpus Christi NAS, the aircraft hit tree tops and crashed. At least one crew member was killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 183.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 227.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 290.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 249.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "4/30/1948", "Time": "NA", "Aircraft": "Curtiss C-46 Commando", "Operator": "United States Marine Corps", "Registration": "39535", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "26753", "YOM": "1944", "Flight number": "NA", "Crash location": "Qingdao Shandong", "Country": "China", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances into the sea some 5 km off Qingdao. All occupants were rescued while the aircraft was recovered nine hours later but written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 22.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 277.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 5.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 261.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "4/30/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "PH602", "Flight phase": "Taxiing", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Vienna Vienna", "Country": "Austria", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While taxiing, the twin engine aircraft swung due to heavy winds, lost its undercarriage and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "Crash cause": "Weather", "Date_stringindexer_transform": 22.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 347.0, "Flight phase_stringindexer_transform": 4, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 233.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 42.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "4/30/1948", "Time": "NA", "Aircraft": "Avro 694 Lincoln", "Operator": "Royal Air Force - RAF", "Registration": "RF474", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Northolt \u2013 Luqa", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Verqui\u00e8res Bouches-du-Rh\u00f4ne", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "7", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 11, "Circumstances": "Prior to departure, the crew was briefed about the poor weather conditions in south of France and that he should avoid this area. While cruising southeast of Avignon, the aircraft went through a low pressure zone with cumulonimbus. It encountered severe turbulences, lost two engines and its tail, went into a dive and crashed in a field in Verqui\u00e8res. All 11 occupants were killed. It appears that few elements of the aircraft broke off due to severe turbulences that exceeded their certification.", "Crash cause": "Weather", "Date_stringindexer_transform": 22.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 457.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 6.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 44.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 7.0, "PAX fatalities_stringindexer_transform": 6.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 467.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "5/1/1948", "Time": "10H 46M 0S", "Aircraft": "Douglas DC-6", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "PH-TKW", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Amsterdam - Amsterdam", "MSN": "43112", "YOM": "1948", "Flight number": "NA", "Crash location": "Amsterdam-Schiphol North Holland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was engaged in a local training flight on this brand new aircraft that was delivered to KLM last April 22. After several touch and goes completed without any issues, the instructor decided to perform a takeoff with the engine number one voluntarily inoperative. Ready for departure on runway 23, the crew increased power on all four engines and started the takeoff procedure. At a speed of 137 km/h, the captain started the rotation and the nose wheel left the ground. At a speed of 169 km/h, the instructor decided to reduce the power on the engine number one and pull the power lever to the back. At this moment, the aircraft was still on the ground and slightly deviated from the runway center line to the left. The captain tried to counteract this with the tail when the right main gear left the ground. Due to the presence of obstacles ahead, the instructor decided to increase power on the engine number one that oversped. The left wing dropped and hit a rocky wall, causing the aircraft to stall and crash into a ditch. All five crew members were injured while the aircraft was destroyed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 174.0, "Time_stringindexer_transform": 54.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 13.0, "Registration_stringindexer_transform": 5.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 240.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 34.0, "Country_stringindexer_transform": 17.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 321.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/5/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Superior Oil Corporation", "Registration": "NC17645", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Gander \u2013 Shannon", "MSN": "13978/25423", "YOM": "1944", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Crashed into the Atlantic Ocean in unclear circumstances. As the aircraft failed to arrive in Shannon, SAR operations were conducted but eventually suspended five days later, on May 10, as no trace of the aircraft nor both crew members was found.", "Crash cause": "Unknown", "Date_stringindexer_transform": 259.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 205.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 84.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 0.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 469.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/6/1948", "Time": "13H 21M 0S", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Connellan Airways", "Registration": "VH-BKM", "Flight phase": "Takeoff (climb)", "Flight type": "Delivery", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Daly Waters \u2013 Alice Springs", "MSN": "6543", "YOM": "1941", "Flight number": "NA", "Crash location": "Daly Waters Northern Territory", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed one minute after its takeoff from Daly Waters while performing a delivery flight to Alice Springs with two crew and two ladies as passengers on board. After takeoff, during the initial climb, while at an altitude of 150 feet, both engines failed simultaneously. The captain elected to make an emergency landing in a prairie but at the last moment, the left engine regained power. The aircraft went out of control and crashed in flames. All four occupants were injured while the aircraft was destroyed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 228.0, "Time_stringindexer_transform": 98.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 401.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 296.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 295.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 282.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/9/1948", "Time": "3H 0M 0S", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "United States Navy - USN", "Registration": "64015", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Roosevelt Roads - Key West", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Long Island Long Island", "Country": "Bahamas", "Region": "Central America", "Crew on board": "12", "Crew fatalities": "12", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 12, "Circumstances": "Crashed into the sea off Long Island, Bahamas, while performing a night flight from Roosevelt Roads NAS (Ceiba, Porto Rico) to Key West. No trace of the aircraft nor the crew was ever found.", "Crash cause": "Unknown", "Date_stringindexer_transform": 30.0, "Time_stringindexer_transform": 87.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 165.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 278.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 157.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 9.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 117.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/9/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Pakistan Airways - Pak Air", "Registration": "AP-ABZ", "Flight phase": "Landing (descent or approach)", "Flight type": "Delivery", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "NA", "MSN": "1374", "YOM": "1945", "Flight number": "NA", "Crash location": "Shaibah AFB (Basrah) Al-Basrah (<U+0627><U+0644><U+0628><U+0635><U+0631><U+0629>)", "Country": "Iraq", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew started the descent to Shaibah Airbase near Basra when all four engines stopped simultaneously. The captain elected to make an emergency landing in a desert area located 66 km northwest of the airport. The aircraft came to rest and was damaged beyond repair while all three crew members were unhurt. The crew was in charge to deliver the aircraft in Karachi as it was just on the Pakistan register since 4 days.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 30.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 258.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 30.0, "Country_stringindexer_transform": 9.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 463.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/9/1948", "Time": "NA", "Aircraft": "Douglas DC-2", "Operator": "New Holland Airways", "Registration": "VH-AEN", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1259", "YOM": "1934", "Flight number": "NA", "Crash location": "Darwin Northern Territory", "Country": "Australia", "Region": "Oceania", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing in unknown circumstances. There were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 30.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 35.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 433.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 159.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/10/1948", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Israeli Air Force - Heyl Ha'avir", "Registration": "B-51", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "City", "Schedule": "NA", "MSN": "723", "YOM": "1944", "Flight number": "NA", "Crash location": "Amman Amman City District", "Country": "Jordan", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Taking part to the Independence War of Israel, the single engine aircraft was engaged in a bombing mission when it crashed in unknown circumstances in Bait Mahseer, a suburb of Amman. All four occupants were killed, among them pilots Yariv Sheinbaum and Daniel Bukstein.", "Crash cause": "Unknown", "Date_stringindexer_transform": 140.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 276.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 18.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 5.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 193.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 410.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/11/1948", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "44-61510", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Desert", "Schedule": "NA", "MSN": "10987", "YOM": "NA", "Flight number": "NA", "Crash location": "Nairyah ash-Sharqiyah (<U+0627><U+0644><U+0634><U+0631><U+0642><U+064A><U+0629><U+200E>)", "Country": "Saudi Arabia", "Region": "Asia", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "Following an engine failure, went out of control and crashed in a desert area located near Nairyah. All nine crew members were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 286.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 426.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 416.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 10.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 113.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/12/1948", "Time": "NA", "Aircraft": "De Havilland DH.84 Dragon", "Operator": "Mandated Airlines", "Registration": "VH-AKX", "Flight phase": "Flight", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Lae \u2013 Daru \u2013 Horn Island \u2013 Sydney", "MSN": "2061", "YOM": "1943", "Flight number": "NA", "Crash location": "Turnagain Island Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On May 11, the pilot John Spiers left Lae on a ferry flight to Sydney for the annual CofA renewal. On May 12, he departed Daru for Horn Island. Halfway across Torres Strait, he encountered a severe rain storm and turned back to Daru. At low level over sea, the pilot saw a small low mudflat island, so made a forced landing there, wrecking the Dragon. No radio on the aircraft, so Spiers waited to be found. A search was made by a Mandated Airlines C-47 with pilots Brian Carpenter and Tom Deegan as far south as the Australian Gulf country for 3 days. When returning to Daru from Horn Island, they spotted the Dragon on the mudflat island with Spiers sitting on the roof of the aircraft. He had been unable to find food and at high tide the island was mostly under water, so he stayed in the cabin of the Dragon while the sea gradually broke up the aircraft for 6 days without food, surviving by drinking rainwater. RAAF Catalina from Port Moresby landed off Turnagain Island, sent a crew member ashore in a rubber dinghy to collect Spiers. A storm blew up so Catalina returned to Moresby, leaving the two men on the island. They were rescued by a pearling lugger sent from Thursday Island. Source: http://www.goodall.com.au", "Crash cause": "Weather", "Date_stringindexer_transform": 258.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 437.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 14.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 161.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 139.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 47.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "5/13/1948", "Time": "17H 30M 0S", "Aircraft": "De Havilland DH.104 Dove", "Operator": "Skyways of London", "Registration": "G-AJOU", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Croydon \u2013 Paris \u2013 Cannes", "MSN": "4058", "YOM": "1947", "Flight number": "NA", "Crash location": "Saint-Bauzile Ard\u00e8che", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The twin engine aircraft left Croydon in the early afternoon for Paris with eight passengers and a crew of two. Six passengers disembarked in Paris and the aircraft took off around 1530LT bound for Cannes. About two hours into the flight, the crew encountered poor weather conditions with heavy rain, turbulence and strong winds. The aircraft went out of control and crashed in a wooded area located on Mt Le Coran, near Saint-Bauzile, about 9 km southeast of Privas. A local farmer was quickly on the scene but all four occupants were killed. Rescue teams arrived the next morning. Crew: Peter Townsend, pilot, Arthur Frederick Freeman, radio operator. Passengers: Peter Wentworth-Fitzwilliam, Kathleen Kennedy-Cavendish, young sister of John Fitzgerald Kennedy.", "Crash cause": "Weather", "Date_stringindexer_transform": 16.0, "Time_stringindexer_transform": 4.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 344.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 123.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 185.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 234.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "5/13/1948", "Time": "11H 0M 0S", "Aircraft": "Douglas DC-4", "Operator": "SABENA - Soci\u00e9t\u00e9 Anonyme Belge d'Exploitation de la Navigation A\u00e9rienne", "Registration": "OO-CBE", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Johannesburg \u2013 L\u00e9opoldville \u2013 Libenge \u2013 Brussels", "MSN": "42932", "YOM": "1946", "Flight number": "NA", "Crash location": "NA", "Country": "Democratic Republic of Congo", "Region": "Africa", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "25", "PAX fatalities": "24", "Other fatalities": "0", "Total fatalities": 31, "Circumstances": "The four engine aircraft left L\u00e9opoldville Airport at 0805LT bound for Libenge. About three hours later, as he started the descent to Libenge, the crew encountered poor weather conditions with heavy rain falls, low clouds and turbulence. While descending at an altitude of 700 feet, the aircraft went out of control and crashed in a wooded area located near the village of Magazini, some 27 km south of Libenge. A passenger was seriously injured while 31 other occupants were killed.", "Crash cause": "Weather", "Date_stringindexer_transform": 16.0, "Time_stringindexer_transform": 63.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 56.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 125.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 140.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 10.0, "PAX fatalities_stringindexer_transform": 15.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 200.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "5/13/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "A\u00e9ro Cargo", "Registration": "F-BCJX", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1347", "YOM": "1945", "Flight number": "NA", "Crash location": "Bovingdon AFB Hertfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After landing at RAF Bovingdon, while completing a cargo flight, the four engine aircraft was unable to stop within the remaining distance, overran and came to rest. All three crew members were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 16.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 34.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 2.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 293.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/14/1948", "Time": "NA", "Aircraft": "Vickers Viking", "Operator": "Flota Aerea Mercante Argentina - FAMA", "Registration": "LV-AFL", "Flight phase": "Landing (descent or approach)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mendoza \u2013 Buenos Aires", "MSN": "192", "YOM": "1947", "Flight number": "NA", "Crash location": "Jun\u00edn Mendoza", "Country": "Argentina", "Region": "South America", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a test flight from Mendoza to Buenos Aires-Aeroparque-Jorge Newbury Airport. Enroute, the pilot encountered engine problems and decided to divert to Jun\u00edn Airport. On approach, the twin engine aircraft crashed in a field, lost its undercarriage and came to rest in flames. All five crew members were unhurt while the aircraft was destroyed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 218.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 317.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 302.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 184.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 236.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/15/1948", "Time": "7H 20M 0S", "Aircraft": "Douglas C-49 (DC-3)", "Operator": "Mercury Aviation", "Registration": "ZS-BWY", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Durban \u2013 Johannesburg \u2013 London", "MSN": "6341", "YOM": "1943", "Flight number": "NA", "Crash location": "Vrede Free State", "Country": "South Africa", "Region": "Africa", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "8", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "The aircraft left Durban in the early morning on a flight to London via Johannesburg. While cruising in poor weather conditions, the aircraft hit the slope of Mt Spitzkop located 32 km south of Vrede, in the Witkoppens Mountain Range. All 13 occupants were killed. At the time of the accident, the aircraft was off track by eight miles, probably due to navigational error on part of the crew, caused by the lack of visibility due to poor weather conditions.", "Crash cause": "Human factor", "Date_stringindexer_transform": 268.0, "Time_stringindexer_transform": 96.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 97.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 169.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 333.0, "Country_stringindexer_transform": 33.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 14.0, "PAX fatalities_stringindexer_transform": 7.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 128.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/16/1948", "Time": "20H 42M 0S", "Aircraft": "Curtiss C-46 Commando", "Operator": "Slick Airways", "Registration": "NC59489", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Newark \u2013 Chicago \u2013 Denver \u2013 Burbank \u2013 San Francisco", "MSN": "2938", "YOM": "1945", "Flight number": "NA", "Crash location": "Columbus-Rickenbacker (Lockbourne AFB) Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "\"The flight departed from Newark, New Jersey, at 1733 May 16, 1948, for Chicago, Illinois, Denver, Colorado, Burbank, and San Francisco, California. In addition to a crew consisting of Captain William R. McCauley and Copilot Jack R. Foote, the flight carried 5,280 pounds of fuel, and 10,263 pounds of cargo. According to the hourly weather reports available to the crew in Newark prior to departure, thunderstorm activity which existed over the vicinity of Goshen and Fort Wayne, Indiana, was moving eastward. Chicago Municipal Airport was reported to have a ceiling of 2,000 feet. The flight plan specified a cruising altitude of 4,000 feet to Chicago, the first intended point of landing. South Bend, Indiana, was designated as the alternate airport. No unusual incident was reported for approximately the first two hours of the trip, then, at 1931 the flight reported over Cleveland, Ohio, at 4,000 feet, stating that there was extreme turbulence approximately five miles east of the Cleveland Airport. At this time the flight acknowledged receipt of a weather report from Toledo, Ohio, to the effect that light thunderstorms with cloud to cloud lightning were moving northeasterly from Toledo. At 2013 the flight reported at 4,000 feet over Mansfield, Ohio, 58 miles south southwest of Cleveland. The crew stated that they had changed course to the south to avoid thunderstorms, and intended to proceed to Columbus, Ohio, in accordance with visual flight rules. A special weather observation taken at Cleveland at 2003 which reported a ceiling of 2,000 feet, visibility 10 miles, light rain, wind from the northwest at 30 miles per hour with strong gusts, and cloud to cloud and cloud to ground lightning was transmitted to the flight Cleveland Radio also transmitted a weather observation taken at Columbus at 1930 which reported an unlimited ceiling, visibility of 15 miles, and wind from the south at 14 miles per hour. After acknowledging receipt of this weather information, the flight stated \"\"For your information advise no one to go through the turbulence we just went through.\"\" The next position report was received at 2032 at which time the flight reported being five miles north of Columbus. Following this report it was cleared by Columbus Tower for landing. In reply the flight stated to the tower", "Crash cause": " \"\"We are declaring an emergency. Our rudder is locked", "Date_stringindexer_transform": 239.0, "Time_stringindexer_transform": 84.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 329.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 249.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 430.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 59.0, "Crash cause_stringindexer_transform": 6.0}, {"Date": "5/17/1948", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Philippine Airlines - PAL", "Registration": "PI-C143", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cebu City \u2013 Manila", "MSN": "13780", "YOM": "1944", "Flight number": "NA", "Crash location": "Cebu City Cebu", "Country": "Philippines", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "14", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff, while in initial climb, the aircraft stalled and crashed in a field. All 17 occupants were injured and the aircraft was destroyed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 113.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 366.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 134.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 20.0, "Country_stringindexer_transform": 18.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 16.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 458.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/17/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "British American Air Services - BAAS", "Registration": "G-AKAD", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1356", "YOM": "1947", "Flight number": "NA", "Crash location": "Rennes Ille-et-Vilaine", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Upon landing in Rennes, an undercarriage collapsed. The aircraft slid for several yards and came to rest. There were no injuries but the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 113.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 304.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 97.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 440.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/18/1948", "Time": "12H 15M 0S", "Aircraft": "Martin 187 Baltimore", "Operator": "Italian Air Force - Aeronautica Militare Italiana", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Guidonia \u2013 Frosinone", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Guidonia AFB Lazio", "Country": "Italy", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Crashed shortly after takeoff from Guidonia. A crew member (observer) was killed while four others were injured.", "Crash cause": "Unknown", "Date_stringindexer_transform": 195.0, "Time_stringindexer_transform": 18.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 208.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 40.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 12.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/20/1948", "Time": "23H 30M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Air Transport Charter", "Registration": "G-AJBG", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Valence \u2013 Bovingdon", "MSN": "14003/25448", "YOM": "1944", "Flight number": "NA", "Crash location": "Bovingdon AFB Hertfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The aircraft left Valence-Chabeuil Airport at 2232LT on a cargo flight to RAF Bovingdon, carrying a crew of four and a load of fruits. On a night approach, the pilot encountered poor visibility due to a low ceiling. During the last turn, the aircraft stalled and crashed in a wooded area located few dozen yards from the airport. A crew member was rescued while three others were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 8.0, "Time_stringindexer_transform": 11.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 354.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 243.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 2.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 80.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/20/1948", "Time": "11H 30M 0S", "Aircraft": "Noorduyn Norseman", "Operator": "SOMACO", "Registration": "NC79822", "Flight phase": "Takeoff (climb)", "Flight type": "Delivery", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brussels \u2013 Rome \u2013 Tel Aviv", "MSN": "527", "YOM": "1944", "Flight number": "NA", "Crash location": "Rome-Urbe Lazio", "Country": "Italy", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a delivery flight from Brussels to Tel Aviv via Rome-Urbe Airport. Shortly after takeoff, while in initial climb, the aircraft suffered an explosion and crashed near the runway end. Both pilots were killed and the aircraft was destroyed. The crew consisted of Leonard Cohen and George Frederick Beurling, a Canadian pilot, hero from WWII.", "Crash cause": "Terrorism act, Hijacking, Sabotage", "Date_stringindexer_transform": 8.0, "Time_stringindexer_transform": 13.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 412.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 136.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 277.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 260.0, "Crash cause_stringindexer_transform": 5.0}, {"Date": "5/20/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KN424", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "L\u00fcbeck - L\u00fcbeck", "MSN": "16104/32852", "YOM": "1945", "Flight number": "NA", "Crash location": "L\u00fcbeck-Blankensee Schleswig-Holstein", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a training sortie in L\u00fcbeck, towing a glider. While flying around the airport at low height, the left engine failed. The crew immediately dropped the glider and reduced his altitude in an attempt to make an emergency landing. The aircraft crash landed in a field located near the airport, slid for several yards and came to rest in flames. Both pilots escaped uninjured while the aircraft was partially destroyed by fire.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 8.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 373.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 36.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 350.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 311.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/20/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Soci\u00e9t\u00e9 Auxiliaire de Navigation A\u00e9rienne - SANA", "Registration": "F-BCJT", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1393", "YOM": "NA", "Flight number": "NA", "Crash location": "Paris-Le Bourget Seine-Saint-Denis", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crash landed. No injuries.", "Crash cause": "Unknown", "Date_stringindexer_transform": 8.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 19.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 4.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 35.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/22/1948", "Time": "18H 40M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L1073", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Petropavlovsk-Kamchatsky \u2013 Magadan", "MSN": "17054/34321", "YOM": "8", "Flight number": "NA", "Crash location": "Magadan Magadan oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "5", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "Following an uneventful flight from Petropavlovsk-Kamchatsky-Yelizovo Airport, the crew started the descent to Magadan in poor weather conditions. During the final approach, at a distance of 13 km from the runway threshold, the captain was unable to locate the runway and decided to descend to 500 meters, the decision altitude. Unable to establish a visual contact with the runway, he decided to abandon the approach, started a go around and diverted to the Seymchan Airport located some 350 km north of Magadan. Few minutes later, while cruising in poor visibility, the aircraft hit the slope of Mt Marchekanskaya (707 meters high). A passenger was seriously injured while eight other occupants were killed. It appears the aircraft hit the mountain 70 meters below the summit.", "Crash cause": "Human factor", "Date_stringindexer_transform": 262.0, "Time_stringindexer_transform": 121.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 207.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 224.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 349.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 9.0, "PAX fatalities_stringindexer_transform": 5.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 151.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/23/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Bond Air Services", "Registration": "G-AIZO", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Valencia - Bovingdon", "MSN": "1366", "YOM": "1947", "Flight number": "NA", "Crash location": "Studham Hertfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to RAF Bovingdon, the aircraft became unstable and the captain was forced to attempt an emergency landing. The aircraft crash landed in a field located in Studham, about 11 km north of the airbase. While all five occupants were unhurt, the aircraft was damaged beyond repair. It was completing a cargo flight from Valencia, Spain, with a load of apricots.", "Crash cause": "Other causes", "Date_stringindexer_transform": 104.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 107.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 53.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 195.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 349.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "5/23/1948", "Time": "NA", "Aircraft": "Curtiss C-46 Commando", "Operator": "Israeli Air Force - Heyl Ha'avir", "Registration": "RX-136", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "\u017datec - Ekron", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Latrun Jerusalem District", "Country": "Israel", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was performing a flight from \u017datec, Czech Republic, to the airbase of Ekron-Tel Nof, carrying a load of bombs and a Czech fighter aircraft. While descending to Ekron, the crew encountered poor weather conditions and the captain decided to divert to Tel Aviv-Sde Dov Airport. On final approach, the aircraft was hit by gun fire. In such conditions, the captain increased power and started a go around to leave the area. Few minutes later, while cruising a low height in reduced visibility, the aircraft hit the slope of a mountain located south of Latrun. Both pilots were rescued while the navigator was killed. It was later confirmed by the authorities that the soldiers in place in Tel Aviv Airport opened fire on the aircraft as they have not been informed that an aircraft would land.", "Crash cause": "Human factor", "Date_stringindexer_transform": 104.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 163.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 51.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 64.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 451.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/24/1948", "Time": "NA", "Aircraft": "Airspeed AS.65 Consul", "Operator": "Morton Air Services", "Registration": "G-AIOU", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "Croydon \u2013 Cairo", "MSN": "4355", "YOM": "1946", "Flight number": "NA", "Crash location": "El Alamein Matruh", "Country": "Egypt", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Enroute, the pilot encountered an unexpected situation and was forced to make an emergency landing in a desert area located about 26 km south of El Alamein. All four occupants were rescued while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 223.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 380.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 298.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 298.0, "Country_stringindexer_transform": 12.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 360.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/25/1948", "Time": "15H 42M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Colombian Air Force - Fuerza A\u00e9rea Colombiana", "Registration": "662", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Madrid - Madrid", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Madrid AFB Cundinamarca", "Country": "Colombia", "Region": "South America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was completing a local training sortie in Madrid AFB. On final approach, the twin engine aircraft collided with a private Luscombe that just took off from the same runway. Both aircraft went out of control and crashed near the runway threshold. All four crew members on board the C-47 and the pilot of the Luscombe were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 54.0, "Time_stringindexer_transform": 104.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 293.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 109.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 18.0, "Country_stringindexer_transform": 21.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 338.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/25/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Alpha Airways", "Registration": "G-AKBA", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Albacete - Albacete", "MSN": "1303", "YOM": "1945", "Flight number": "NA", "Crash location": "Albacete Castile-La Mancha", "Country": "Spain", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was engaged in a local training flight in Albacete. Shortly after takeoff, while in initial climb, the four engine aircraft collided with a small private plane. Both aircraft went out of control and crashed near the runway end. All four crew members on board the Halifax and the pilot of the private plane were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 54.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 128.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 66.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 262.0, "Country_stringindexer_transform": 4.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 411.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/26/1948", "Time": "NA", "Aircraft": "Lisunov LI-2", "Operator": "LOT Polish Airlines - Polskie Linie Lotnicze", "Registration": "SP-LBC", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "184 190 10", "YOM": "1946", "Flight number": "NA", "Crash location": "Popowice Masovian Voivodeship (Mazowieckie)", "Country": "Poland", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown", "Date_stringindexer_transform": 190.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 430.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 286.0, "Country_stringindexer_transform": 29.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 0.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/28/1948", "Time": "13H 29M 0S", "Aircraft": "Miles M.60 Marathon", "Operator": "Aeroplane %26 Armament Experimental Establishment - A%26AEE", "Registration": "G-AGPD", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Boscombe Down - Boscombe Down", "MSN": "6265", "YOM": "1946", "Flight number": "NA", "Crash location": "Boscombe Down AFB Wiltshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was involved in a test flight at RAF Boscombe Down, with some propeller blade control. While cruising at low height, the crew informed ground he was encountering difficulties and lost control of the airplane that dove into the ground and crashed in a wooded area located eight miles northeast of the airbase. The aircraft was destroyed and both crew members were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 38.0, "Time_stringindexer_transform": 77.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 41.0, "Registration_stringindexer_transform": 115.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 118.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 19.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 456.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "5/28/1948", "Time": "NA", "Aircraft": "De Havilland DH.83 Fox Moth", "Operator": "Karachi Aero Club", "Registration": "AP-ABS", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "FM.46", "YOM": "NA", "Flight number": "NA", "Crash location": "Karachi Sindh (<U+0633><U+0646><U+068C> <U+0633><U+0646><U+062F><U+06BE>)", "Country": "Pakistan", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason, injuring both occupants.", "Crash cause": "Unknown", "Date_stringindexer_transform": 38.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 319.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 26.0, "Country_stringindexer_transform": 36.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 449.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/28/1948", "Time": "NA", "Aircraft": "Douglas A-26 Invader", "Operator": "Turkish Air Force - T\u00fcrk Hava Kuvvetleri", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "\u00c7ubuk Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "Country": "Turkey", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The twin engine aircraft crashed in unknown circumstances near the \u00c7ubuk dam, killing the pilot, sole on board.", "Crash cause": "Unknown", "Date_stringindexer_transform": 38.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 122.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 279.0, "Country_stringindexer_transform": 38.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 292.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "5/31/1948", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Royal Navy", "Registration": "NR753", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "6841", "YOM": "1945", "Flight number": "NA", "Crash location": "Boscombe Down AFB Wiltshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While cruising in the vicinity of the RAF Boscombe Down, the twin engine aircraft collided in unknown circumstances with a RAF Avro 652 Anson registered NL248. The Dominie went out of control and crashed in a prairie while the pilot of the Anson was able to land safely. All three crew members on board the Dominie were killed. Crew: F/O Ashley James Greer, Peter J. Bartlett, Peter C. Damon.", "Crash cause": "Human factor", "Date_stringindexer_transform": 50.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 89.0, "Registration_stringindexer_transform": 231.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 19.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 372.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "5/31/1948", "Time": "NA", "Aircraft": "Short S.25 Sunderland", "Operator": "Royal Air Force - RAF", "Registration": "SZ574", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Enniskillen - Enniskillen", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Enniskillen Fermanagh", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During takeoff from Lough Erne off Enniskillen, the seaplane hit several waves in strong winds. The departure was interrupted and the aircraft came to rest. There were no casualties but the airplane was damaged beyond repair.", "Crash cause": "Weather", "Date_stringindexer_transform": 50.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 379.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 310.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 80.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 94.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "6/8/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Air Portugal - Transportes A\u00e9reos Portugueses", "Registration": "CS-TDF", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lisbon - Lisbon", "MSN": "18998", "YOM": "1943", "Flight number": "NA", "Crash location": "Lisbon Estremadura - Lisbon District", "Country": "Portugal", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a training mission in Lisbon. Shortly after takeoff from Lisbon-Portela de Sacav\u00e9m Airport, while in initial climb, the instructor shut down an engine. The aircraft stalled and crashed near the runway end. While all five crew members were injured, the aircraft was destroyed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 85.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 1.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 2.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 36.0, "Country_stringindexer_transform": 28.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 2.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/8/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Air Portugal - Transportes A\u00e9reos Portugueses", "Registration": "CS-TDF", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lisbon - Lisbon", "MSN": "18998", "YOM": "1943", "Flight number": "NA", "Crash location": "Lisbon Estremadura - Lisbon District", "Country": "Portugal", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a training mission in Lisbon. Shortly after takeoff from Lisbon-Portela de Sacav\u00e9m Airport, while in initial climb, the instructor shut down an engine. The aircraft stalled and crashed near the runway end. While all five crew members were injured, the aircraft was destroyed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 85.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 1.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 2.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 36.0, "Country_stringindexer_transform": 28.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 2.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/10/1948", "Time": "20H 0M 0S", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Hargreaves Airways", "Registration": "G-AIUI", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Birmingham \u2013 Douglas", "MSN": "6675", "YOM": "1946", "Flight number": "NA", "Crash location": "Peel Isle of Man", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "6", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew started the descent to Douglas-Ronaldsway Airport in poor weather conditions. Apparently following a navigational error, the aircraft came from the west at a too low altitude when it hit a cliff located near Peel. The wreckage was found few hours later. Both crew members and four passengers were killed while two others were seriously injured. The crew was unable to locate the airport of Douglas and to know his exact position when the accident occurred. The pilot was completing his first flight to Douglas Airport.", "Crash cause": "Human factor", "Date_stringindexer_transform": 301.0, "Time_stringindexer_transform": 9.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 367.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 248.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 418.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 12.0, "PAX fatalities_stringindexer_transform": 5.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 476.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/11/1948", "Time": "9H 5M 0S", "Aircraft": "Avro 19", "Operator": "Lancashire Aircraft Corporation - LAC", "Registration": "G-AGNI", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Blackpool \u2013 Walney Island \u2013 Douglas", "MSN": "1214", "YOM": "1945", "Flight number": "NA", "Crash location": "Port Erin Isle of Man", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "7", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a charter flight from Blackpool to Douglas with an intermediate stop in RAF Walney Island, Cumbria. On approach to the Isle of Man, the crew encountered poor weather conditions and continued to the west to Ireland without locating the Douglas-Ronaldsway Airport. Few minutes later, the pilot realized that the fuel reserve was insufficient and decided to ditch the aircraft into the Irish Sea, off Port Erin. The aircraft came to rest few miles off shore and floated for a while, allowing the occupants to take refuge on the wings, awaiting for help. The crew of a boat rescued all nine occupants shortly later and the aircraft sank and was lost.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 287.0, "Time_stringindexer_transform": 19.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 177.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 39.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 311.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 7.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 227.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "6/12/1948", "Time": "1H 5M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Eagle Air Freight", "Registration": "NC79042", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Burbank \u2013 El Paso", "MSN": "9394", "YOM": "1943", "Flight number": "NA", "Crash location": "Eloy Arizona", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "At approximately 2235, June 11, 1948, the flight departed from Burbank, California, for Fort Worth, Texas, via El Paso, Texas. Prior to takeoff a VFR2 flight plan was filed, the weather being clear. Only cargo was carried the only persons aboard being the crew, which consisted of John Dobson, pilot, and John Leslie, copilot. After departure from Burbank, the flight proceeded en route to El Paso at the specified flight plan altitude of 9,000 feet. Approximately 15 minutes after takeoff, over the vicinity of Palmdale, California, control of the aircraft was given to the copilot, and the pilot went to sleep. No trouble was experienced until 0048, at which time the copilot observed flames, deep orange in color and extending about two feet rearward, coming from under the cowl flaps around the entire circumference of the left engine. The pilot was awakened by a shout, and he immediately assumed control of the aircraft. In an attempt to control the fire the crew discharged the emergency fire bottle, cut the fuel flow to the engine, and feathered the propeller, however, the fire continued to burn intensely and the propeller did not feather. A descent for an emergency landing was started, during which the color of the flame changed to brilliant white. It appeared to the crew that the nacelle skin and the leading edge of the wing were burning. Three emergency radio transmissions from NC-79042 were intercepted by an Air Force airplane which relayed the message to Tucson Radio at 0056. To correct excessive air speed the crew reduced power to the right engine and raised the nose of the aircraft. Then the cockpit filled with smoke to the extent that the crew were unable to see the instruments. The aircraft vibrated violently, then fell into an uncontrolled spin or spiral. At approximately 4,000 feet smoke cleared from the cockpit and control of the aircraft was regained. During the descent the burning engine had fallen from the wing, and after regaining control, the crew could observe no sign of fire. Since the aircraft seemed to fly satisfactorily, a right turn towards Tucson, approximately 47 miles to the southeast, was made. In the turns however, altitude could not be maintained, and the aircraft became increasingly right-wing heavy. Accordingly it was decided to land at Eloy, Arizona, 45 miles northwest of Tucson which was observed straight ahead. Ground witnesses in Eloy saw the aircraft at a low altitude with fire in the left wing. A crash landing was made in a wheat stubble field one-fourth mile northeast of Eloy and the crew escaped through the cockpit hatch from the burning aircraft.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 142.0, "Time_stringindexer_transform": 81.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 33.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 235.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 188.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 52.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "6/13/1948", "Time": "NA", "Aircraft": "Avro 616 Avian IVM", "Operator": "Southern Cross Aviation Service", "Registration": "ZK-ADQ", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "435", "YOM": "1930", "Flight number": "NA", "Crash location": "Waimate Canterbury Regional Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot, sole on board, was forced to make an emergency landing in a field located in Willowbridge, southeast of Waimate. He was unhurt while the aircraft was considered as damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 261.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 158.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 405.0, "Country_stringindexer_transform": 24.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 85.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/14/1948", "Time": "NA", "Aircraft": "SNCASE SE.161 Languedoc", "Operator": "Air France", "Registration": "F-BATG", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "7", "YOM": "NA", "Flight number": "NA", "Crash location": "Coulommiers Seine-et-Marne", "Country": "France", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances in Coulommiers. There were no casualties.", "Crash cause": "Unknown", "Date_stringindexer_transform": 83.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 20.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 134.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 74.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 306.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/14/1948", "Time": "NA", "Aircraft": "Airspeed AS.65 Consul", "Operator": "British Air Transport - BAT", "Registration": "G-AIDY", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "3094", "YOM": "1946", "Flight number": "NA", "Crash location": "Berck-sur-Mer Pas-de-Calais", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft was on its way from Redhill, Surrey to France when, approaching Berck-sur-Mer, the pilot was forced to attempt an emergency landing for unknown reason. While both occupants were unarmed, the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 83.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 98.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 332.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 150.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/16/1948", "Time": "18H 0M 0S", "Aircraft": "Douglas DC-4", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "PH-TCF", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Geneva \u2013 Amsterdam", "MSN": "42996", "YOM": "1946", "Flight number": "NA", "Crash location": "Amsterdam-Schiphol North Holland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "20", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to runway 23, while at a height of 500 meters and with an indicated speed of 160 km/h about 500 meters from the runway threshold, the flight engineer reported to the captain that flaps were selected to 3/4 and that the speed was a bit low. The captain did not react and continued the approach in such configuration. Once the aircraft passed over the perimeter road, the captain ordered full flaps and throttle down. The engineer then selected full flaps and slowly retarded the power lever when the aircraft lost height, hit tree tops and hit the ground 175 meters short of the runway threshold. It rolled for several yards and hit a ditch before coming to rest. While all 27 occupants were evacuated safely, the aircraft was considered as damaged beyond repair due to severe structural damages.", "Crash cause": "Human factor", "Date_stringindexer_transform": 227.0, "Time_stringindexer_transform": 3.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 13.0, "Registration_stringindexer_transform": 261.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 61.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 34.0, "Country_stringindexer_transform": 17.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 13.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 365.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/17/1948", "Time": "12H 41M 0S", "Aircraft": "Douglas DC-6", "Operator": "United Airlines", "Registration": "NC37506", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "San Diego \u2013 Los Angeles \u2013 Chicago \u2013 New York", "MSN": "42871", "YOM": "1947", "Flight number": "NA", "Crash location": "Mount Carmel Pennsylvania", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "39", "PAX fatalities": "39", "Other fatalities": "0", "Total fatalities": 43, "Circumstances": "\"The airplane arrived in Chicago at 0952LT, en route from Los Angeles to New York City. At Chicago, the airplane was given a routine station inspection, serviced, loaded, and the flight departed for New York with a new crew at 1044. Aboard were 39 passengers, a crew of four, 2,568 pounds of cargo and 1,800 gallons of fuel, all properly loaded. The resulting total airplane weight was within the certificated gross weight. The airplane climbed en route to its planned altitude of 17,000 feet, proceeding on course, and at 1155 the captain reported to the company radio at LaGuardia Field, that the airplane was mechanically \"\"okay\u201d for a return trip. A routine report was made over Phillipsburg", "Crash cause": " PA", "Date_stringindexer_transform": 76.0, "Time_stringindexer_transform": 51.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 232.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 189.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 396.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 27.0, "PAX fatalities_stringindexer_transform": 29.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 18.0, "Crash cause_stringindexer_transform": 8.0}, {"Date": "6/17/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Ecuadorian Air Force - Fuerza A\u00e9rea Ecuatoriana", "Registration": "FAE502", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Shell - Shell", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Shell Pastaza", "Country": "Ecuador", "Region": "South America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "1", "Total fatalities": 1, "Circumstances": "The crew was engaged in a local training flight in Shell-Mera Airport. During the takeoff roll with both engines at full power, the aircraft swung to the right. The pilot in command over corrected so the aircraft veered off runway to the left, hit an earth mount and a tree stump before crashing into a building. While all three crew members were unhurt, an employee in the building was killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 76.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 318.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 45.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 138.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 2, "Circumstances_stringindexer_transform": 272.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "6/18/1948", "Time": "NA", "Aircraft": "Siebel Si-204", "Operator": "Compa\u00f1\u00eda Auxiliar de Navegaci\u00f3n A\u00e9rea", "Registration": "EC-ADB", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "111322", "YOM": "NA", "Flight number": "NA", "Crash location": "Reus Catalonia", "Country": "Spain", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was forced to attempt an emergency landing for unknown reason. Upon landing, the aircraft hit several nutmeg trees and came to rest. The aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 238.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 183.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 181.0, "Country_stringindexer_transform": 4.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 90.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/21/1948", "Time": "NA", "Aircraft": "Lockheed P-2 Neptune", "Operator": "United States Navy - USN", "Registration": "39353", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Whidbey Island - Whidbey Island", "MSN": "126-1053", "YOM": "1947", "Flight number": "NA", "Crash location": "Whidbey Island NAS (Ault Field) Washington", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training sortie at Whidbey Island NAS when an engine caught fire in flight. The pilot decided to return but was eventually forced to make an emergency landing in a field. The aircraft belly landed and came to rest in flames. There were no casualties but the aircraft was destroyed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 57.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 284.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 7.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 39.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 426.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "6/21/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Transporte A\u00e9reo Transandino", "Registration": "YV-C-AQC", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "19126", "YOM": "1943", "Flight number": "NA", "Crash location": "Maracaibo Zulia", "Country": "Venezuela", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After landing in Maracaibo Airport, the aircraft went out of control, veered off runway and came to rest in flames. There were no casualties but the aircraft was destroyed by fire.", "Crash cause": "Unknown", "Date_stringindexer_transform": 57.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 180.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 434.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 431.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/23/1948", "Time": "10H 30M 0S", "Aircraft": "Savoia-Marchetti SM.79 Sparviero", "Operator": "Italian Air Force - Aeronautica Militare Italiana", "Registration": "MM21311", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Guidonia - Guidonia", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Segni Lazio", "Country": "Italy", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While on a test flight, the aircraft crashed in unknown circumstances in Segni, about 40 km southeast of Guidonia airbase. Two crew members were injured while the pilot Antonio Biscardi was killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 116.0, "Time_stringindexer_transform": 7.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 106.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 5.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 85.0, "Country_stringindexer_transform": 15.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 264.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/23/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Clairways", "Registration": "VP-KEM", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Merka Shabeellaha Hoose (<U+0634><U+0628><U+064A><U+0644><U+064A> <U+0627><U+0644><U+0633><U+0641><U+0644><U+0649>)", "Country": "Somalia", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances in Merka, some 70 km southwest of Mogadishu. The pilot was unhurt while the aircraft was damaged beyond repair. The exact date of the occurrence remains uncertain.", "Crash cause": "Unknown", "Date_stringindexer_transform": 116.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 359.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 8.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 460.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/24/1948", "Time": "NA", "Aircraft": "Junkers W.34", "Operator": "Central BC Airways", "Registration": "CF-ASN", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2731", "YOM": "21", "Flight number": "NA", "Crash location": "British Columbia British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason and came to rest on its nose. All occupants escaped uninjured while the aircraft was damaged beyond repair. The accident occurred somewhere in British Columbia, the exact place remains unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 169.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 223.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 271.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 417.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/25/1948", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Iraq Petroleum Transport Company", "Registration": "G-AGOP", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "Haifa \u2013 Damascus", "MSN": "6873", "YOM": "1945", "Flight number": "NA", "Crash location": "Syria All Syria", "Country": "Syria", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route to Damascus, the pilot was forced to make an emergency landing in a desert area located in the southeast of Syria. Both occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 210.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 374.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 6.0, "Schedule_stringindexer_transform": 76.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 180.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 13.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/26/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Linea Aeropostal Venezolana - LAV", "Registration": "YV-C-AHI", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "16992/34254", "YOM": "1945", "Flight number": "NA", "Crash location": "Caracas Caracas Federal District", "Country": "Venezuela", "Region": "South America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "14", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On landing, went out of control, veered off runway and came to rest. A crew member was killed while 16 other occupants were injured. The aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 270.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 144.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 105.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 16.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 86.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/27/1948", "Time": "NA", "Aircraft": "Douglas A-26 Invader", "Operator": "United States Air Force - USAF", "Registration": "44-34101", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "27380", "YOM": "NA", "Flight number": "NA", "Crash location": "Blythe California", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "In flight, the twin engine aircraft collided with a USAF North American P-51D Mustang registered 45-11680. A crew member was able to bail out before the Invader crashed in a field, killing all three other crew members. The fate of the P-51's crew remains unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 254.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 328.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 264.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 348.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/29/1948", "Time": "12H 0M 0S", "Aircraft": "Lockheed 18 LodeStar", "Operator": "SCOLTA - Sociedad Colombiana de Transportes A\u00e9reos", "Registration": "C-408", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bogot\u00e1 \u2013 Medell\u00edn", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bogot\u00e1-Techo Bogot\u00e1 Capital District", "Country": "Colombia", "Region": "South America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Bogot\u00e1-Techo Airport, while on a cargo flight to Medell\u00edn, the crew encountered engine problems and elected to return. Due to technical issues, the crew was unable to lower the gear so the aircraft belly landed and came to rest. There were no injuries but the aircraft was considered as damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 33.0, "Time_stringindexer_transform": 2.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 297.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 164.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 335.0, "Country_stringindexer_transform": 21.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 287.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "6/29/1948", "Time": "NA", "Aircraft": "Beechcraft C-45 Expeditor", "Operator": "United States Air Force - USAF", "Registration": "44-47712", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "8120", "YOM": "1944", "Flight number": "NA", "Crash location": "Erding AFB Bavaria", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Crashed in unknown circumstances near Erding AFB, killing all four occupants.", "Crash cause": "Unknown", "Date_stringindexer_transform": 33.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 113.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 78.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 133.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "6/29/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Airlines WA", "Registration": "VH-BIU", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cue - Cue", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cue Western Australia", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from Cue Airport, while on a local training flight, an engine failed. The aircraft lost height, hit trees and crashed in a wooded area. Both pilots were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 33.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 222.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 255.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 441.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 377.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/1/1948", "Time": "15H 0M 0S", "Aircraft": "Douglas DC-3", "Operator": "Private Mexican", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Minatitl\u00e1n \u2013 Mexico City", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ciudad Serd\u00e1n Puebla", "Country": "Mexico", "Region": "Central America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "12", "PAX fatalities": "12", "Other fatalities": "0", "Total fatalities": 14, "Circumstances": "En route, the crew encountered poor weather conditions with heavy rain falls and thunderstorm activity. The airplane hit the slope of Orizaba Peak located northeast of Ciudad Serd\u00e1n. The wreckage was found three days later and all 14 occupants were killed. The aircraft was performing a special flight for the US-Mexico Foot and Mouth Disease Commission.", "Crash cause": "Weather", "Date_stringindexer_transform": 7.0, "Time_stringindexer_transform": 1.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 0.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 178.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 63.0, "Country_stringindexer_transform": 23.0, "Region_stringindexer_transform": 6.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 4.0, "PAX fatalities_stringindexer_transform": 13.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 127.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "7/1/1948", "Time": "12H 20M 0S", "Aircraft": "Fiat G.212", "Operator": "Avio Linee Italiane - ALI", "Registration": "I-ELSA", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Milan \u2013 Brussels", "MSN": "4", "YOM": "1948", "Flight number": "NA", "Crash location": "Keerbergen Flemish Brabant", "Country": "Belgium", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "4", "Pax on board": "7", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "On approach to Brussels-Zaventem Airport, the crew encountered poor weather conditions with heavy rain falls, low visibility and a ceiling at 100 meters. In such conditions, the captain overshot the runway in Zaventem and was unable to land. He increased power on all three engines and continued to the northeast. Few minutes later, he decided to land on a makeshift airfield in Keerbergen but during the last turn to the left, the aircraft stalled and crashed in a field. Three passengers and a crew member survived while all eight other occupants were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 7.0, "Time_stringindexer_transform": 65.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 23.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 37.0, "MSN_stringindexer_transform": 22.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 117.0, "Country_stringindexer_transform": 10.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 7.0, "PAX fatalities_stringindexer_transform": 5.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 274.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/1/1948", "Time": "NA", "Aircraft": "Avro 683 Lancaster", "Operator": "Royal Air Force - RAF", "Registration": "PA442", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lindholme - Lindholme", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lindholme AFB South Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training sortie in RAF Lindholme. On final approach with one engine voluntarily inoperative, the pilot was unable to lower the undercarriage. The crew decided to go around when the aircraft stalled and hit the runway surface, crashing on its belly. There were no injuries but the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 7.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 245.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 88.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 123.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 167.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/1/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Clairways", "Registration": "VP-KDW", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Merka Shabeellaha Hoose (<U+0634><U+0628><U+064A><U+0644><U+064A> <U+0627><U+0644><U+0633><U+0641><U+0644><U+0649>)", "Country": "Somalia", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances 15 miles from Merka. Both crew members survived while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 7.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 406.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 8.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 67.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/2/1948", "Time": "NA", "Aircraft": "Avro 694 Lincoln", "Operator": "Royal Air Force - RAF", "Registration": "RF560", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Boscombe-Down - Defford", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wylye Wiltshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was performing a test flight from RAF Boscombe Down to RAF Defford on behalf of the A & AEE. Shortly after takeoff, while climbing to a height of 3,500 feet with the propeller of the engine number one feathered and the number two running at low speed, the aircraft stalled, went into a dive and crashed in a field located in Wylye, about 10 miles west of RAF Boscombe Down. All four crew members were killed. Crew: S/L A. Toot, F/Lt A. G. Bradfield, F/O G. W. Williams, P. W. Howes.", "Crash cause": "Human factor", "Date_stringindexer_transform": 152.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 314.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 176.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 431.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 30.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/3/1948", "Time": "NA", "Aircraft": "De Havilland DH.83 Fox Moth", "Operator": "Central BC Airways", "Registration": "CF-DIQ", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Prince George - Prince George", "MSN": "FM.17", "YOM": "NA", "Flight number": "NA", "Crash location": "Prince George British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On final approach to Prince George, while completing a local flight, the single engine aircraft stalled and crashed. All three occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 304.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 364.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 98.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 161.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 73.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/4/1948", "Time": "15H 3M 0S", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW248", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Luqa - Northolt", "MSN": "MW248", "YOM": "1946", "Flight number": "NA", "Crash location": "Northwood London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "4", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The four engine aircraft left Malta-Luqa Airport bound for RAF Northolt with four passengers and a crew of three on board. While approaching the London area, the crew encountered low visibility due to poor weather conditions. The crew was cleared to descent to 3,000 feet when the aircraft collided with a Scandinavian Airlines System (SAS) DC-6 registered SE-BDA. Inbound from Amsterdam, this second aircraft was carrying 25 passengers and a crew of 7. Following the collision, both aircraft went out of control, dove into the ground and crashed in a wooded area located in Northwood, about 4 miles north of RAF Northolt. Both aircraft were destroyed and all 39 people were killed. Among the passenger of the York was Sir Gerard Edward James, High Commissioner in Malaysia for Her Majesty the Queen of England.", "Crash cause": "Human factor", "Date_stringindexer_transform": 23.0, "Time_stringindexer_transform": 6.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 459.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 211.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 10.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 17.0, "PAX fatalities_stringindexer_transform": 5.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 83.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/4/1948", "Time": "15H 3M 0S", "Aircraft": "Douglas DC-6", "Operator": "Scandinavian Airlines System - SAS", "Registration": "SE-BDA", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Stockholm \u2013 Amsterdam \u2013 Northolt", "MSN": "43119", "YOM": "1948", "Flight number": "NA", "Crash location": "Northwood London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "25", "PAX fatalities": "25", "Other fatalities": "0", "Total fatalities": 32, "Circumstances": "The four engine aircraft christened 'Agnar Viking' was approaching RAF Northolt when the crew encountered low visibility due to poor weather conditions. After being cleared by ATC to descent to 2,500 feet, the crew was unable to locate the airport and decided to return to Amsterdam-Schiphol Airport. Few minutes later, while climbing to an altitude of 3,000 feet, the aircraft collided with a Royal Air Force Avro 685 York C.1 registered MW248. This second aircraft was completing a flight from Malta-Luqa with four passengers and a crew of three. Following the collision, both aircraft went out of control, dove into the ground and crashed in a wooded area located in Northwood, about 4 miles north of RAF Northolt. Both aircraft were destroyed and all 39 people were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 23.0, "Time_stringindexer_transform": 6.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 413.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 31.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 10.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 7.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 10.0, "PAX fatalities_stringindexer_transform": 20.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 46.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/4/1948", "Time": "NA", "Aircraft": "Curtiss C-46 Commando", "Operator": "Israeli Air Force - Heyl Ha'avir", "Registration": "RX-133", "Flight phase": "Parking", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Ekron - \u017datec", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ekron-Tel Nof AFB Central District", "Country": "Israel", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The left engine caught fire during start up. The crew called the fire brigade and evacuated the aircraft. The fire was extinguished but the aircraft was partially destroyed by fire and considered as damaged beyond economical repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 23.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 448.0, "Flight phase_stringindexer_transform": 5, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 183.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 212.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 345.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/5/1948", "Time": "23H 59M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "43-15096", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin \u2013 Wiesbaden", "MSN": "19562", "YOM": "1944", "Flight number": "NA", "Crash location": "Wiesbaden-Erbenheim AFB Hesse", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The approach to Wiesbaden-Erbenheim AFB was completed by night and poor weather conditions. On final, the aircraft hit tree tops and crashed in a wooded area located 1,6 km short of runway 25 threshold. Both pilots were injured while the aircraft was damaged beyond repair.", "Crash cause": "Human factor", "Date_stringindexer_transform": 248.0, "Time_stringindexer_transform": 50.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 309.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 285.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 46.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 392.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/6/1948", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Norwegian Air Force - Kongelige Norske Luftforsvaret", "Registration": "V-AB", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Oslo - Oslo", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Oslo-Gardermoen Akershus", "Country": "Norway", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a training flight from Oslo-Fornebu Airport to Oslo-Gardermoen Airport. The twin engine aircraft crash landed for unknown reason and was damaged beyond repair. All three crew members were unarmed. Crew: Lt Nils Arveschoug, Lt H. Hartmann, Lt F. Eriksrud.", "Crash cause": "Unknown", "Date_stringindexer_transform": 150.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 257.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 301.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 57.0, "Country_stringindexer_transform": 16.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 281.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/7/1948", "Time": "1H 50M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aigle Azur", "Registration": "F-BCYP", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Saigon - \u00d0\u00e0 L<U+1EA1>t", "MSN": "9158", "YOM": "1943", "Flight number": "NA", "Crash location": "Di Linh L\u00e2m \u00d0<U+1ED3>ng Province", "Country": "Vietnam", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "13", "PAX fatalities": "13", "Other fatalities": "0", "Total fatalities": 16, "Circumstances": "While flying by night and in poor weather conditions, the aircraft hit the slope of a mountain located near Li Dinh. The wreckage was found a day later and all 16 occupants were killed. Crew: Ottino Sabbadini, pilot, Andr\u00e9 Delfau, radio navigator, Andr\u00e9 Stang, mechanic.", "Crash cause": "Unknown", "Date_stringindexer_transform": 19.0, "Time_stringindexer_transform": 76.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 58.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 4.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 320.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 19.0, "PAX fatalities_stringindexer_transform": 14.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 76.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/7/1948", "Time": "NA", "Aircraft": "Douglas A-26 Invader", "Operator": "United States Air Force - USAF", "Registration": "44-34667", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Offutt - Offutt", "MSN": "27946", "YOM": "NA", "Flight number": "NA", "Crash location": "Offutt AFB (Bellevue) Nebraska", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed 2 miles southwest of Offutt AFB following an engine failure. The crew fate remains unknown.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 19.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 110.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 128.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 200.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 170.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/7/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "43-15282", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "19748", "YOM": "1944", "Flight number": "NA", "Crash location": "Greenville North Carolina", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "During a night approach to Greenville, the aircraft crashed in flames and burned. At least one crew member was killed in the accident.", "Crash cause": "Unknown", "Date_stringindexer_transform": 19.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 242.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 88.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 1.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 107.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/8/1948", "Time": "23H 30M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "43-48256", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Wiesbaden \u2013 Berlin", "MSN": "14072/25517", "YOM": "1944", "Flight number": "NA", "Crash location": "K\u00f6nigstein im Taunus Hesse", "Country": "Germany", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Few minutes after takeoff from Wiesbaden-Erbenheim AFB, while climbing by night, the aircraft hit the slope of Mt Steinkopf located near K\u00f6nigstein im Taunus, about 16 km northeast of Wiesbaden Airport. All three crew members were killed. They were involved in the Berlin Airlift.", "Crash cause": "Unknown", "Date_stringindexer_transform": 68.0, "Time_stringindexer_transform": 11.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 394.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 10.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 362.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 364.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/8/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Argentinian Navy - Armada Argentina", "Registration": "260", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "9899", "YOM": "1943", "Flight number": "NA", "Crash location": "Coronel Pringles Buenos Aires province", "Country": "Argentina", "Region": "South America", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "While cruising in foggy conditions, the aircraft hit the slope of a mountain located 17 km from Coronel Pringles. The aircraft was destroyed by impact forces and a post crash fire and all five crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 68.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 331.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 134.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 62.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/10/1948", "Time": "NA", "Aircraft": "Curtiss C-46 Commando", "Operator": "Expreso A\u00e9reo Interamericano", "Registration": "CU-P198", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Havana - Maiquet\u00eda", "MSN": "33534", "YOM": "1945", "Flight number": "NA", "Crash location": "Caracas-Maiquet\u00eda-Sim\u00f3n Bol\u00edvar Vargas", "Country": "Venezuela", "Region": "South America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Maiquet\u00eda-Sim\u00f3n Bol\u00edvar Airport, while on a cargo flight from Havana, both engines flamed out. The aircraft stalled and crashed into the sea few hundred yards short of the runway threshold. All three crew members were rescued while the aircraft sank and was lost.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 141.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 99.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 193.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 55.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 341.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/11/1948", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Australian Air Force - RAAF", "Registration": "AW618", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Laverton - Laverton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Laverton AFB (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During a training sortie in Laverton AFB, the crew encountered an unexpected situation and made an emergency landing in a field located one mile north of the airbase. Both occupants were rescued while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 295.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 118.0, "Registration_stringindexer_transform": 382.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 221.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 145.0, "Country_stringindexer_transform": 14.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 337.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/12/1948", "Time": "NA", "Aircraft": "Douglas DC-4", "Operator": "Air France", "Registration": "F-BBDL", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "42989", "YOM": "1946", "Flight number": "NA", "Crash location": "Paris-Orly Val-de-Marne", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "8", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "For unknown reason, the four engine aircraft crash landed and came to rest in flames. All 12 occupants were rescued while the aircraft was destroyed by fire.", "Crash cause": "Unknown", "Date_stringindexer_transform": 148.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 335.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 65.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 14.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 300.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/14/1948", "Time": "9H 18M 0S", "Aircraft": "Short S.25 Sunderland", "Operator": "Royal Air Force - RAF", "Registration": "NJ276", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Singapore - Singapore", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Singapore-Seletar All Singapore", "Country": "Singapore", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was engaged in a local training flight in Singapore-Seletar Airport. Just after liftoff, an engine was cut by the instructor. The aircraft stalled and bounced, causing the tail to separate. The seaplane crashed and came to rest. There were no casualties but the aircraft was written off.", "Crash cause": "Human factor", "Date_stringindexer_transform": 44.0, "Time_stringindexer_transform": 58.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 215.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 158.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 99.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 79.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/14/1948", "Time": "8H 45M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "British Overseas Airways Corporation - BOAC", "Registration": "G-AGKN", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Luqa \u2013 Marseille \u2013 London", "MSN": "14984/26429", "YOM": "1944", "Flight number": "NA", "Crash location": "Toulon Var", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew started the approach to Marseille-Marignane Airport in foggy conditions. The aircraft hit a cliff located near Cape Sici\u00e9, south of Toulon. All six occupants were killed.", "Crash cause": "Weather", "Date_stringindexer_transform": 44.0, "Time_stringindexer_transform": 12.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 159.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 100.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 398.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 334.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "7/14/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Aerovias Brasil", "Registration": "PP-AVO", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "19113", "YOM": "1943", "Flight number": "NA", "Crash location": "Bel\u00e9m-Val de Cans-J\u00falio Cezar Ribeiro Par\u00e1", "Country": "Brazil", "Region": "South America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after takeoff from runway 06, while on initial climb, the pilot made a turn to the left when the aircraft stalled and crashed in a huge explosion. The aircraft was destroyed by fire and all five occupants were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 44.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 117.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 314.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 1.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 129.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/15/1948", "Time": "NA", "Aircraft": "North American B-25 Mitchell", "Operator": "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Registration": "5025", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "S\u00e3o Paulo-Guarulhos S\u00e3o Paulo", "Country": "Brazil", "Region": "South America", "Crew on board": "12", "Crew fatalities": "12", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 12, "Circumstances": "Crashed in unknown circumstances in Cumbica, south of the S\u00e3o Paulo-Guarulhos Airport. All 12 crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 37.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 296.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 90.0, "Country_stringindexer_transform": 13.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 9.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 100.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/15/1948", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "44-61713", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Smoky Hill - Smoky Hill", "MSN": "11190", "YOM": "NA", "Flight number": "NA", "Crash location": "Schilling AFB (Smoky Hill AFB), Salina Kansas", "Country": "United States of America", "Region": "North America", "Crew on board": "13", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "Shortly after takeoff from Smoky Hill AFB (Schilling AFB), while on a local training flight, an engine failed. Four crew members were able to bail out before the aircraft dove into the ground and crashed in a field located two miles southeast of Smolan, about four miles south of the airbase. The aircraft was destroyed by impact forces and nine crew members were killed. The four crew members who were able to bail out were injured, one of them seriously.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 37.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 236.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 257.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 146.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 14.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 74.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/15/1948", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "Private Venezuelan", "Registration": "YV-C-APJ", "Flight phase": "NA", "Flight type": "Private", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Puerto Cabello Carabobo", "Country": "Venezuela", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances into the Puerto Cabello harbor. The crew fate remains unknown but the aircraft was lost.", "Crash cause": "Unknown", "Date_stringindexer_transform": 37.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 267.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 442.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 319.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/17/1948", "Time": "18H 0M 0S", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "Cathay Pacific Airways", "Registration": "VR-HDT", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Macau \u2013 Hong Kong", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Macau Macau", "Country": "China", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "23", "PAX fatalities": "22", "Other fatalities": "0", "Total fatalities": 25, "Circumstances": "Shortly after takeoff from Macau, a hijacker came into the cockpit and killed the captain with a gun. The copilot lost control of the aircraft christened 'Miss Macau' that crashed into the Zhujiang River Estuary, between Macau and Hong Kong. A passenger was seriously injured while all 25 other occupants were killed. This event was considered as the first official hijacking of a commercial aircraft in the Civil Aviation History. It was later reported that lone survivor, Huang Yu, was the admitted leader of the hijacking plot. He survived by jumping out the emergency exit just before the crash. He was brought to court by the Macau Police, but the Macau court suggested that the prosecution should be brought in Hong Kong instead, since the plane was registered in Hong Kong and most of the passengers were from there. However, the British colonial government in Hong Kong stated that the incident happened over Chinese territory in which the British have no jurisdiction. Since no state claimed authority to try him, Huang was released without trial from Macau prison on 11 June 1951, and was then deported to China.", "Crash cause": "Terrorism act, Hijacking, Sabotage", "Date_stringindexer_transform": 35.0, "Time_stringindexer_transform": 3.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 346.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 62.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 268.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 31.0, "PAX fatalities_stringindexer_transform": 12.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 217.0, "Crash cause_stringindexer_transform": 5.0}, {"Date": "7/17/1948", "Time": "NA", "Aircraft": "Airspeed AS.65 Consul", "Operator": "Extractors Hull", "Registration": "G-AIIO", "Flight phase": "Flight", "Flight type": "Executive/Corporate/Business", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "4349", "YOM": "1946", "Flight number": "NA", "Crash location": "Lumbreras La Rioja", "Country": "Spain", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Hit the slope of a mountain located near Lumbreras, province of La Rioja. All three occupants flying from White Waltham were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 35.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 279.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 10.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 259.0, "Country_stringindexer_transform": 4.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 2.0, "PAX fatalities_stringindexer_transform": 2.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 130.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/17/1948", "Time": "NA", "Aircraft": "Miles M.57 Aerovan", "Operator": "Israeli Air Force - Heyl Ha'avir", "Registration": "B-71", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "6418", "YOM": "1947", "Flight number": "NA", "Crash location": "Tel Aviv (<U+05EA><U+05DC> <U+05D0><U+05D1><U+05D9><U+05D1>-<U+05D9><U+05E4><U+05D5>) Tel Aviv District", "Country": "Israel", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, an engine failed, forcing the crew to attempt an emergency landing south of Tel Aviv. While the aircraft was damaged beyond repair, all five occupants survived. The captain Murray Weissberg was recovered later while the second pilot Spencer Boyd and all three passengers were captured by Palestinians soldiers and later executed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 35.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 47.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 155.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 179.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/20/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "476561", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Algiers \u2013 Istres", "MSN": "16145/32893", "YOM": "1945", "Flight number": "NA", "Crash location": "Mediterranean Sea All World", "Country": "World", "Region": "World", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "18", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was forced to ditch the aircraft into the Mediterranean Sea some 130 km south of Marseille. All twenty occupants were rescued while the aircraft sank and was lost.", "Crash cause": "Unknown", "Date_stringindexer_transform": 25.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 14.0, "Registration_stringindexer_transform": 173.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 201.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 1.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 21.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 57.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/20/1948", "Time": "NA", "Aircraft": "SNCAC NC.211 Cormoran", "Operator": "SNCAC - Soci\u00e9t\u00e9 Nationale de Constructions A\u00e9ronautiques du Centre", "Registration": "F-WFKH", "Flight phase": "Landing (descent or approach)", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Toussus-le-Noble \u2013 V\u00e9lizy-Villacoublay", "MSN": "1", "YOM": "1948", "Flight number": "NA", "Crash location": "V\u00e9lizy-Villacoublay Yvelines", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was engaged in a test flight on this first prototype and was completing a short flight from Toussus-le-Noble to his main base in V\u00e9lizy-Villacoublay. On final approach, at an altitude of 250 meters, the four engine aircraft nosed down and crashed in a huge explosion in the wood of Verri\u00e8res located less than two km from the runway threshold. The aircraft was destroyed by impact forces and a post crash fire and all five crew members were killed. Crew: Louis Bertrand, pilot, Abel Nicolle, flight engineer, Robert Facomprez, radio operator, Maurice Itasse, mechanic, Marcel Constum, mechanic.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 25.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 195.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 282.0, "MSN_stringindexer_transform": 1.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 383.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 477.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/20/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Mayflower Air Services", "Registration": "G-AJPJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Delivery", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "White Waltham \u2013 Lod", "MSN": "1336", "YOM": "1945", "Flight number": "NA", "Crash location": "Lod (<U+05DC><U+05D5><U+05B9><U+05D3>) Central District", "Country": "Israel", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Lod Airport, the aircraft stalled and crashed short of runway. All three crew members were unhurt while the aircraft was damaged beyond repair. It appears that two engines were inoperative at the time of the accident, maybe following fuel starvation ? Israel authorities reported that the aircraft was on a delivery flight from the UK and that nor the crew nor the operator received any permission to land in Israel.", "Crash cause": "Human factor", "Date_stringindexer_transform": 25.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 76.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 9.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 105.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 168.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 376.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/21/1948", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "45-21847", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "13741", "YOM": "NA", "Flight number": "NA", "Crash location": "Lake Mead Nevada", "Country": "United States of America", "Region": "North America", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "This version was an electronic reconnaissance aircraft used in Arctic conditions. It crashed into Lake Mead, during a research flight. The crew of five was able to scramble away before the plane sank. It has been located by sonar in 170 feet of water, largely intact except for 3 missing engines (number two, three and four). The flight was for a secret missile guidance system that allowed navigation by tracking of the Sun. A low pass over calm water with pilot error put it into the lake. The aircraft plummeted from high altitude down to as close to the lake as possible. Unfortunately, Captain Robert M. Madison lost his depth perception and plowed the huge plane into the lake at 230 mph. The impact tore off all but one of the engines and sent the plane skipping along the lake surface. When she eventually stopped, she began to take on water and started to sink. Fortunately, all of the crew was able to escape into life rafts and wait for rescue. Source: http://www.advanceddivermagazine.com/articles/B29/B29.html", "Crash cause": "Human factor", "Date_stringindexer_transform": 65.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 321.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 365.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 56.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/21/1948", "Time": "NA", "Aircraft": "North American B-25 Mitchell", "Operator": "Royal Netherlands Air Force - Koninklijke Luchtmacht", "Registration": "A-21", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Auchenblae Aberdeenshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew was engaged in a maritime patrol flight over the North Sea. While flying over Scotland, the crew encountered poor visibility when the twin engine aircraft hit the slope of a mountain near Auchenblae. All six crew members were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 65.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 212.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 15.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 438.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 104.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/22/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Ethiopian Airlines", "Registration": "ET-T-5", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "19416", "YOM": "1944", "Flight number": "NA", "Crash location": "Gore Oromia", "Country": "Ethiopia", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After landing, the aircraft failed to stop within the remaining runway, overran and hit some rocks. While there were no casualties, the aircraft was damaged beyond repair. For unknown reason, the aircraft landed too far down the runway.", "Crash cause": "Human factor", "Date_stringindexer_transform": 182.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 134.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 305.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 93.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/23/1948", "Time": "12H 0M 0S", "Aircraft": "Siebel Si-204", "Operator": "Compa\u00f1\u00eda Auxiliar de Navegaci\u00f3n A\u00e9rea", "Registration": "EC-ACM", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Sevilla \u2013 Madrid", "MSN": "111324", "YOM": "NA", "Flight number": "NA", "Crash location": "Hinojosa del Duque Andalusia", "Country": "Spain", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "7", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the crew encountered an unexpected situation and was forced to attempt an emergency landing in Hinojosa del Duque. The aircraft crash landed in a field and came to rest in flames. All ten occupants were injured while the aircraft was destroyed by fire.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 281.0, "Time_stringindexer_transform": 2.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 269.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 244.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 81.0, "Country_stringindexer_transform": 4.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 7.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 233.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/24/1948", "Time": "17H 30M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Rimouski Airlines", "Registration": "CF-FKY", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Port-Menier \u2013 Gasp\u00e9", "MSN": "6246", "YOM": "1943", "Flight number": "NA", "Crash location": "Cap-des-Rosiers Quebec", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "27", "PAX fatalities": "27", "Other fatalities": "0", "Total fatalities": 29, "Circumstances": "The aircraft left Port-Menier, Anticosti Island, on a charter flight to Gasp\u00e9, carrying two pilots and 27 people, most of them employees of the Consolidated Paper Company. The approach to Gasp\u00e9 Airport was started from the east in foggy conditions. While flying too low, the aircraft hit some trees, stalled and crashed in a wooded area located near Cap-des-Rosiers, about 20 km east of Gasp\u00e9 Airport. Rescuers arrived on the scene few hours later and all 29 occupants were killed. Crew: Emerson Mills, pilot, Ross Miles, copilot. Passengers: Germain Jean, Elle Godin, Camille Furgesson, Jean Laflamme, Lawrence Travers, Mathias Cote, Henri Tardif, Rolland Denis, Alphonse Veer, Ren\u00e9 Blais, Alfred Desjardins, Rodolphe Gendreau, Roger Gendreau, Hughes Prouix, James Travers, G\u00e9rard Despr\u00e9s, Harris Gleeton, Eddy Bouchard, Julien Fynott, Mr. and Mrs. Berth McCallum and son, Joseph Gauvin, Romuald Dufresne, Clarimond Fournier, Mr. and Mrs. Emmett Maloney.", "Crash cause": "Human factor", "Date_stringindexer_transform": 95.0, "Time_stringindexer_transform": 4.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 186.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 5.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 110.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 352.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 29.0, "PAX fatalities_stringindexer_transform": 23.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 262.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/24/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KN252", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin \u2013 Fassberg", "MSN": "15733/27178", "YOM": "1945", "Flight number": "NA", "Crash location": "Fassberg AFB Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Fassberg AFB, an engine caught fire. On landing, an undercarriage collapsed and the aircraft veered off runway and came to rest in flames. While all three crew members were unhurt, the aircraft was destroyed by fire.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 95.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 419.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 154.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 287.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 439.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/25/1948", "Time": "1H 0M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "43-49534", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "City", "Schedule": "Wiesbaden \u2013 Berlin", "MSN": "15350/26795", "YOM": "1944", "Flight number": "NA", "Crash location": "Berlin-Tempelhof Berlin", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to Berlin-Tempelhof Airport, taking part to the Berlin Airlift, the twin engine aircraft hit the roof of a building and crashed in flames in the adjacent street located in the suburb of Friedenau. Both crewmen were killed while three people on the ground were injured. The aircraft was destroyed by impact forces and a post crash fire.", "Crash cause": "Unknown", "Date_stringindexer_transform": 147.0, "Time_stringindexer_transform": 90.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 360.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 5.0, "Schedule_stringindexer_transform": 10.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 22.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 353.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/27/1948", "Time": "19H 0M 0S", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "44-62309", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "11786", "YOM": "NA", "Flight number": "NA", "Crash location": "Aden-Khormaksar 'Adan (<U+0639><U+062F><U+0646>)", "Country": "Yemen", "Region": "Asia", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "After takeoff, while climbing in thunderstorm activity, the aircraft went out of control and crashed in to the sea. All six crew members were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 11.0, "Time_stringindexer_transform": 17.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 368.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 56.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 61.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/27/1948", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW311", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "MW311", "YOM": "1946", "Flight number": "NA", "Crash location": "Abingdon AFB Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll, the four engine aircraft went out of control, veered off runway, lost its undercarriage and came to rest. There were no casualties but the aircraft was written off.", "Crash cause": "Unknown", "Date_stringindexer_transform": 11.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 190.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 28.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 436.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/27/1948", "Time": "NA", "Aircraft": "Lockheed C-60 LodeStar", "Operator": "Air Transport - Belgium", "Registration": "OO-GVP", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "18-2320", "YOM": "1943", "Flight number": "NA", "Crash location": "Wadi Halfa Northern (<U+0627><U+0644><U+0634><U+0645><U+0627><U+0644><U+064A><U+0629>)", "Country": "Sudan", "Region": "Africa", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "9", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Just after liftoff, the twin engine aircraft stalled and crashed in flames. All 14 occupants were quickly rescued while the aircraft was destroyed by a post crash fire. The crew was completing a flight from Belgian Congo to Brussels via Sudan.", "Crash cause": "Unknown", "Date_stringindexer_transform": 11.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 66.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 363.0, "Country_stringindexer_transform": 20.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 3.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 461.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/27/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "Soci\u00e9t\u00e9 Auxiliaire de Navigation A\u00e9rienne - SANA", "Registration": "F-BCJQ", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "City", "Schedule": "NA", "MSN": "1392", "YOM": "NA", "Flight number": "NA", "Crash location": "Paris-Le Bourget Seine-Saint-Denis", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Paris-Le Bourget Airport, the four engine aircraft christened 'Keroual' crashed in unknown circumstances in Aubervilliers, south of the airport. All three crew members were slightly injured while the aircraft was damaged beyond repair.", "Crash cause": "Unknown", "Date_stringindexer_transform": 11.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 336.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 5.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 4.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 289.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/28/1948", "Time": "NA", "Aircraft": "SNCAC NC.701/702 Martinet", "Operator": "SNECMA - Soci\u00e9t\u00e9 Nationale d'Etude et de Construction de Moteurs d'Aviation", "Registration": "F-BDLR", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Melun - Melun", "MSN": "281", "YOM": "NA", "Flight number": "NA", "Crash location": "Melun-Villaroche Seine-et-Marne", "Country": "France", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after takeoff from Melun-Villaroche Airport while on a test flight. The crew fate remains unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 106.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 74.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 6.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 80.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 151.0, "Country_stringindexer_transform": 2.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 166.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/28/1948", "Time": "NA", "Aircraft": "Canadian Vickers PBV-1 Canso (OA-10 Canso)", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "11081", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "CV-411", "YOM": "1944", "Flight number": "NA", "Crash location": "Kittigazuit Northwest Territories", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On landing off Kittigazuit, the seaplane hit rocks and sank rapidly. There were no casualties but the aircraft was lost.", "Crash cause": "Other causes", "Date_stringindexer_transform": 106.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 3.0, "Registration_stringindexer_transform": 252.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 444.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 108.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "7/29/1948", "Time": "9H 15M 0S", "Aircraft": "Short S.25 Sunderland", "Operator": "Aviaci\u00f3n del Litoral Fluvial Argentino - ALFA", "Registration": "LV-AAP", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Rosario \u2013 Buenos Aires", "MSN": "SH-02C", "YOM": "NA", "Flight number": "NA", "Crash location": "Buenos Aires Buenos Aires City", "Country": "Argentina", "Region": "South America", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "18", "PAX fatalities": "14", "Other fatalities": "0", "Total fatalities": 20, "Circumstances": "The approach to Buenos Aires harbor was completed in foggy conditions. The seaplane hit the water surface and crashed in the River Plate. Six passengers were injured while 18 other occupants were killed. Few hours later, two survivors died from their injuries.", "Crash cause": "Human factor", "Date_stringindexer_transform": 122.0, "Time_stringindexer_transform": 68.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 348.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 167.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 302.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 4.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 21.0, "PAX fatalities_stringindexer_transform": 21.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 141.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "7/29/1948", "Time": "NA", "Aircraft": "Curtiss C-46 Commando", "Operator": "Civil Air Transport", "Registration": "XT-822", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Qingdao \u2013 Jinan", "MSN": "22355", "YOM": "1945", "Flight number": "NA", "Crash location": "Qingdao Shandong", "Country": "China", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "20", "PAX fatalities": "15", "Other fatalities": "0", "Total fatalities": 18, "Circumstances": "Shortly after takeoff, while climbing to a height of 100 meters, the aircraft went out of control and crashed near the runway end. Five passengers and a crew member were seriously injured while 18 other occupants were killed.", "Crash cause": "Unknown", "Date_stringindexer_transform": 122.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 322.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 81.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 5.0, "Country_stringindexer_transform": 22.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 13.0, "PAX fatalities_stringindexer_transform": 9.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 219.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/30/1948", "Time": "21H 0M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "British European Airways - BEA", "Registration": "G-AGIX", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Edinburgh \u2013 Northolt", "MSN": "12053", "YOM": "1943", "Flight number": "NA", "Crash location": "Sywell Northamptonshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "14", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route to RAF Northolt, the crew encountered technical problem with the right engine and was forced to shut it down and to feather its propeller. As the aircraft was unable to maintain the prescribed altitude, the crew decided to divert to Sywell. On final approach, the aircraft was misaligned and overflew the runway at low height before colliding with power cables. Out of control, it crashed in a field and came to rest. All 19 occupants were slightly injured while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 48.0, "Time_stringindexer_transform": 16.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 265.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 116.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 187.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 16.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 206.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "7/30/1948", "Time": "NA", "Aircraft": "Handley Page H.P.70 Halifax VIII", "Operator": "A\u00e9ro Cargo", "Registration": "F-BCJV", "Flight phase": "NA", "Flight type": "Cargo", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1371", "YOM": "NA", "Flight number": "NA", "Crash location": "Casablanca Grand Casablanca", "Country": "Morocco", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Crew fate unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 48.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 295.0, "Flight phase_stringindexer_transform": 3, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 2, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 24.0, "Country_stringindexer_transform": 19.0, "Region_stringindexer_transform": 3.0, "Crew on board_stringindexer_transform": 3.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 344.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "7/31/1948", "Time": "17H 40M 0S", "Aircraft": "Naval Aircraft Factory PBN-1 Nomad", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L789", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Krasnoyarsk \u2013 Podkamennaya Tunguska \u2013 Turukhansk \u2013 Valek", "MSN": "2879", "YOM": "1944", "Flight number": "NA", "Crash location": "Turukhansk Krasnoyarsk Krai", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "15", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On approach to Turukhansk, the wind was gusting to 43 km/h. Waves up to 50 cm were spotted in the Enisey River. On landing, the seaplane hit three successive waves and plunged into the water. The cockpit separated from the rest of the fuselage, the aircraft came to rest and sank. Three passengers, two women and one child, were killed while 17 other occupants were rescued, five of them seriously injured. The aircraft was a total loss.", "Crash cause": "Human factor", "Date_stringindexer_transform": 303.0, "Time_stringindexer_transform": 14.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 462.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 56.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 325.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 6.0, "PAX fatalities_stringindexer_transform": 3.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 257.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/1/1948", "Time": "23H 55M 0S", "Aircraft": "Lat\u00e9co\u00e8re 631", "Operator": "Air France", "Registration": "F-BDRC", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Fort-de-France \u2013 Port-Etienne \u2013 Paris", "MSN": "6", "YOM": "1947", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "11", "Crew fatalities": "11", "Pax on board": "41", "PAX fatalities": "41", "Other fatalities": "0", "Total fatalities": 52, "Circumstances": "The crew was performing a flight from Fort-de-France, Martinique, to Paris, with an intermediate stop in Port-Etienne, Mauritania. While cruising by night over the Atlantic Ocean, about 1,920 km from Port-Etienne (now Nouadhibou), the aircraft crashed into the ocean in unknown circumstances at 2355LT. No message was sent by the crew. SAR operations were jointly conducted by several countries and few debris were found by the crew of USS Campbell three days later, on August 4. Unfortunately, none of the 52 occupants survived the crash of this six-engine aircraft christened 'Henri Guillaumet'. Crew: Corentin Kersual, pilot, Jean Goutay, copilot, Henri Gloux, radio navigator, Gontran Ronat, radio navigator, Henri Cabanes, navigator, Gaston Le Morvan, mechanic, Jean Coustaline, mechanic, Alfred Jaggi, mechanic, Mr. Arbelot, mechanic, Mr. Sgourdeos, steward, Mr. Meunier, steward.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 41.0, "Time_stringindexer_transform": 25.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 429.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 91.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 0.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 13.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 38.0, "PAX fatalities_stringindexer_transform": 24.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 92.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/1/1948", "Time": "9H 40M 0S", "Aircraft": "Avro 691 Lancastrian", "Operator": "OnzeAir", "Registration": "AP-ACM", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Chaklala \u2013 Mauripur", "MSN": "37031", "YOM": "NA", "Flight number": "NA", "Crash location": "Mauripur AFB (Karachi) Sindh (<U+0633><U+0646><U+068C> <U+0633><U+0646><U+062F><U+06BE>)", "Country": "Pakistan", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was completing a cargo flight from Chaklala Airport in Islamabad, carrying a load of military goods. On final approach to Mauripur Airport, while at an altitude of 300 feet, the aircraft pitched up and down and then went into a nose down attitude. Out of control, it plunged into the earth and crashed in a near vertical angle near the runway 22 threshold. The aircraft was destroyed and all four crew members were killed.", "Crash cause": "Other causes", "Date_stringindexer_transform": 41.0, "Time_stringindexer_transform": 48.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 337.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 162.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 407.0, "Country_stringindexer_transform": 36.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 187.0, "Crash cause_stringindexer_transform": 4.0}, {"Date": "8/1/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KN238", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin \u2013 London", "MSN": "15662/27107", "YOM": "1945", "Flight number": "NA", "Crash location": "Berlin-Gatow Berlin", "Country": "Germany", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Berlin-Gatow Airport, the crew reported technical problems and received the permission to return for an emergency landing. On touchdown, the undercarriage collapsed. The aircraft slid for several yards and came to rest. All three crew members were unhurt while the aircraft was considered as damaged beyond repair.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 41.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 387.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 9.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 32.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 54.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/5/1948", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "United States Navy - USN", "Registration": "17285", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Norfolk \u2013 Opa Locka", "MSN": "14505/25950", "YOM": "1944", "Flight number": "NA", "Crash location": "Miami Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "10", "Crew fatalities": "10", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 10, "Circumstances": "The crew was descending to Opa Locka Airport when the aircraft collided with a Stearman while 11 miles north of Miami. Both aircraft dove into the ground and crashed. While both occupants of the Stearman were able to bail out and were found alive, all 10 crew members of the R4D-6 inbound from Norfolk NAS were killed. The exact circumstances and causes of the in flight collision remains unknown.", "Crash cause": "Unknown", "Date_stringindexer_transform": 300.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 455.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 153.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 9.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 11.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 178.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/9/1948", "Time": "8H 45M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "New Zealand National Airways", "Registration": "ZK-AOE", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Blenheim \u2013 Paraparaumu", "MSN": "16383/33131", "YOM": "1945", "Flight number": "NA", "Crash location": "Port Underwood Marlborough District Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "About 15 minutes after takeoff from Blenheim-Woodbourne Airport, while on a cargo flight to Paraparaumu, the crew encountered poor weather conditions. The aircraft hit the slope of a mountain located in Rununder Point, near Port Underwood, 32 km northeast of Blenheim. Both pilots were killed. Crew: Murdo McLeod, R. J. R. H. Makgill.", "Crash cause": "Human factor", "Date_stringindexer_transform": 294.0, "Time_stringindexer_transform": 12.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 22.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 87.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 112.0, "Country_stringindexer_transform": 24.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 212.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/11/1948", "Time": "NA", "Aircraft": "Avro 685 York", "Operator": "Royal Air Force - RAF", "Registration": "MW259", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "MW259", "YOM": "1946", "Flight number": "NA", "Crash location": "Desford Leicestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the crew informed ATC that the engine number four failed. He received the permission to divert to RAF Desford to attempt an emergency landing. To lower the risk of fire, the crew decided to shut down the engine number three and feathered the propeller as well. Due to a loss of speed, the aircraft was unable to maintain a safe altitude. During the last segment, the aircraft stalled and hit violently the runway surface. On impact, the aircraft broke in two and came to rest in flames. All four crew members were evacuated safely while the aircraft was destroyed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 215.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 443.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 400.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 81.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/12/1948", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "44-86383", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Roswell \u2013 Gander", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Roswell New Mexico", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "17", "PAX fatalities": "9", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "Shortly after a night takeoff from Roswell Airport, while in initial climb, the aircraft went out of control and crashed in a huge explosion six miles south of the airfield. Eight crew members were injured while 13 others were killed. It was reported that the aircraft may have been overloaded. Crew killed were: Maj Joe O. Will Jr., pilot, Cpt Richard W. Hunsicker, M/Sgt James L. Brewer, Sgt Clyde N. Vanderslice, Sgt Earl P. Boley, Cpl Richard L. Lighthall, Cpl Gordon E. McNeill, Cpl Wayne O. Werkchiser, Pfc John J. Capitan, Pfc Maurice Harris, Pvt Kenneth Ruohonen, Sgt Charles R. Jackson, Pfc Norman J. Remy.", "Crash cause": "Unknown", "Date_stringindexer_transform": 24.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 46.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 305.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 276.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 15.0, "PAX fatalities_stringindexer_transform": 8.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 297.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/12/1948", "Time": "NA", "Aircraft": "Canadair C-4 North Star", "Operator": "Trans-Canada Air Lines - TCAL", "Registration": "CF-TEL", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Montreal \u2013 Sydney \u2013 Prestwick \u2013 London", "MSN": "103", "YOM": "1947", "Flight number": "NA", "Crash location": "Sydney Nova Scotia", "Country": "Canada", "Region": "North America", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "11", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Sydney, the aircraft was too low and hit an earth mound short of the runway threshold. On impact, an undercarriage punctured a fuel tank and a fire erupted. The aircraft landed safely but came to rest in flames and was damaged beyond repair. All 17 occupants were unhurt.", "Crash cause": "Human factor", "Date_stringindexer_transform": 24.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 96.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 3.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 94.0, "MSN_stringindexer_transform": 65.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 153.0, "Country_stringindexer_transform": 3.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 6.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 8.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 286.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/12/1948", "Time": "NA", "Aircraft": "Consolidated PB4Y-2 Privateer", "Operator": "United States Navy - USN", "Registration": "59776", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Agana - Rota Island", "MSN": "59776", "YOM": "1943", "Flight number": "NA", "Crash location": "Rota Island Northern Marianna Islands", "Country": "Northern Mariana Islands", "Region": "Oceania", "Crew on board": "12", "Crew fatalities": "12", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 12, "Circumstances": "The crew was completing a short flight from Agana NAS to Rota Island. On final approach to runway 27, in poor weather conditions, the aircraft was too low and hit a cliff located about 2 miles from the runway threshold. All 12 crew members were killed. Crew: Lt Thomas C. O'Connor, Russell G. Delany, Walter R. Delaney, Charles D. Rudolph, Trafton R. Lee, John A. Beland, Carl H. Christensen, Charles G. Degarimore, Clarence Pinkerton, Paul D. McDonald, Lt William L. Wise, Frederick A. Earle Chaero.", "Crash cause": "Human factor", "Date_stringindexer_transform": 24.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 4.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 42.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 410.0, "Country_stringindexer_transform": 42.0, "Region_stringindexer_transform": 5.0, "Crew on board_stringindexer_transform": 9.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 285.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/13/1948", "Time": "NA", "Aircraft": "Douglas C-54 Skymaster", "Operator": "United States Air Force - USAF", "Registration": "45-0514", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "35967", "YOM": "1945", "Flight number": "NA", "Crash location": "Berlin-Tempelhof Berlin", "Country": "Germany", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After touchdown on runway 27R at Tempelhof Airport, the aircraft was unable to stop within the remaining distance, overran, hit a wooded fence and came to rest in flames. All four crew members were unhurt while the aircraft was partially destroyed by fire. The crew was taking part to the Berlin Airlift.", "Crash cause": "Unknown", "Date_stringindexer_transform": 134.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 53.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 22.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 252.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/15/1948", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Private British", "Registration": "G-ABEH", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2072", "YOM": "1930", "Flight number": "NA", "Crash location": "Thruxton Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On landing, the aircraft overturned and came to rest upside down. The pilot, sole on board, was unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Human factor", "Date_stringindexer_transform": 224.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 56.0, "Registration_stringindexer_transform": 69.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 4.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 308.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 5.0, "Crew fatalities_stringindexer_transform": 0.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 247.0, "Crash cause_stringindexer_transform": 1.0}, {"Date": "8/19/1948", "Time": "NA", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "42-63442", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Ellsworth - Ellsworth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ellsworth AFB South Dakota", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "13", "PAX fatalities": "13", "Other fatalities": "0", "Total fatalities": 17, "Circumstances": "Shortly after takeoff from Ellsworth AFB, while in initial climb, the aircraft went out of control and crashed in a huge explosion in a prairie located 5 miles north of the airfield. All 17 occupants were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 111.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 371.0, "Flight phase_stringindexer_transform": 2, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 271.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 415.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 1.0, "Crew fatalities_stringindexer_transform": 4.0, "Pax on board_stringindexer_transform": 19.0, "PAX fatalities_stringindexer_transform": 14.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 423.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/19/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "Royal Air Force - RAF", "Registration": "KJ962", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "14809/25254", "YOM": "1944", "Flight number": "NA", "Crash location": "Batu Melintang Negeri Sembilan", "Country": "Malaysia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was involved in a training mission and was in charge to locate an appropriate dropping zone for paratroopers. While flying at an estimated height of few hundred yards, the crew realized that smoke was coming out from the right engine. Few seconds later, the aircraft banked right, dove into the ground and crashed in a prairie. All five crew members were killed.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 111.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 167.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 0.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 211.0, "Country_stringindexer_transform": 37.0, "Region_stringindexer_transform": 2.0, "Crew on board_stringindexer_transform": 4.0, "Crew fatalities_stringindexer_transform": 5.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 213.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/20/1948", "Time": "NA", "Aircraft": "Aero C-3A", "Operator": "Czech Air Force - Cesk\u00e9 Vojensk\u00e9 Letectvo", "Registration": "D-78", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Prague - Liberec", "MSN": "233", "YOM": "NA", "Flight number": "NA", "Crash location": "Liberec Liberec Region (Libereck\u00fd kraj)", "Country": "Czech Republic", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "3", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft left Prague-Kbely Airport in the early morning with a crew of three and three engineers on board, bound for Liberec where they should take part to a meeting. While descending to Liberec in poor weather conditions (heavy rain falls), the twin engine aircraft hit the slope of Mt Je\u0161ted few meters below the top and came to rest in flames. Two passengers were seriously injured and evacuated to a local hospital while four other occupants were killed. Six days later, one of the survivor died from his injuries. The visibility was very limited due to heavy rain falls and low ceiling. Crew: V\u00e1clav Barborka, pilot, Jan Padouch, radio operator, Josef Kroul\u00edk, navigator. Passengers: Anton\u00edn Husn\u00edk (survived but died 6 days later), Vladim\u00edr Karmaz\u00edn, killed, V\u00e1clav Brabec, survived.", "Crash cause": "Weather", "Date_stringindexer_transform": 89.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 291.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 3.0, "Schedule_stringindexer_transform": 294.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 124.0, "Country_stringindexer_transform": 25.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 5.0, "PAX fatalities_stringindexer_transform": 1.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 101.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "8/20/1948", "Time": "NA", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "AVENSA - Aerovias Venezolanas", "Registration": "YV-C-AVN", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Maiquet\u00eda \u2013 Las Piedras \u2013 Maracaibo", "MSN": "19984", "YOM": "1944", "Flight number": "NA", "Crash location": "Caribbean Sea All World", "Country": "World", "Region": "World", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On the leg from Maiquet\u00eda to Las Piedras, while on a cargo flight to Maracaibo, the aircraft crashed in unknown circumstances into the Caribbean Sea, off the Venezuelan coast. No trace of the aircraft nor the crew was found.", "Crash cause": "Unknown", "Date_stringindexer_transform": 89.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 442.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 2.0, "Schedule_stringindexer_transform": 143.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 152.0, "Country_stringindexer_transform": 40.0, "Region_stringindexer_transform": 7.0, "Crew on board_stringindexer_transform": 2.0, "Crew fatalities_stringindexer_transform": 3.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 172.0, "Crash cause_stringindexer_transform": 0.0}, {"Date": "8/23/1948", "Time": "NA", "Aircraft": "Avro 683 Lancaster", "Operator": "Royal Air Force - RAF", "Registration": "SW361", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Kinloss - Kinloss", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Kinloss Moray (Elginshire)", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The crew was completing a training sortie in RAF Kinloss. The final approach was completed in heavy cross winds (up to 50 knots) and during the last segment, the captain decided to abandon the landing procedure and started a go around maneuver. During initial climb, while at a height of 250 feet, the four engine aircraft went out of control and crashed in a huge explosion. All eight crew members were killed.", "Crash cause": "Weather", "Date_stringindexer_transform": 276.0, "Time_stringindexer_transform": 0.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 2.0, "Registration_stringindexer_transform": 156.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 2.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 14.0, "MSN_stringindexer_transform": 0.0, "YOM_stringindexer_transform": 0.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 285.0, "Country_stringindexer_transform": 1.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 8.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 10.0, "Crash cause_stringindexer_transform": 3.0}, {"Date": "8/24/1948", "Time": "19H 38M 0S", "Aircraft": "Boeing B-29 Superfortress", "Operator": "United States Air Force - USAF", "Registration": "42-24641", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Barbers Point \u2013 Kwajalein \u2013 Kadena", "MSN": "4302", "YOM": "1942", "Flight number": "NA", "Crash location": "Hickam AFB Hawaii", "Country": "United States of America", "Region": "North America", "Crew on board": "20", "Crew fatalities": "16", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 16, "Circumstances": "Shortly after takeoff from Barbers Point NAS, bound for Kadena via Kwajalein, the pilot informed ground that an engine failed and elected to return. ATC guided the crew to Hickam Field in Honolulu and eight minutes later, while on approach, the airplane overshot so the pilot-in-command decided to make a go around when control was lost. The airplane crashed in flames and skidded for about 600 yards before coming to rest in flames. Sixteen crew members were killed while four others were injured.", "Crash cause": "Technical failure", "Date_stringindexer_transform": 130.0, "Time_stringindexer_transform": 100.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 38.0, "Flight phase_stringindexer_transform": 1, "Flight type_stringindexer_transform": 0.0, "Survivors_stringindexer_transform": 0, "Crash site_stringindexer_transform": 0.0, "Schedule_stringindexer_transform": 185.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 128.0, "Country_stringindexer_transform": 0.0, "Region_stringindexer_transform": 0.0, "Crew on board_stringindexer_transform": 15.0, "Crew fatalities_stringindexer_transform": 7.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 165.0, "Crash cause_stringindexer_transform": 2.0}, {"Date": "8/24/1948", "Time": "7H 31M 0S", "Aircraft": "Douglas C-47 Skytrain (DC-3)", "Operator": "United States Air Force - USAF", "Registration": "43-15116", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Berlin - Wiesbaden", "MSN": "19582", "YOM": "1944", "Flight number": "NA", "Crash location": "Ravolzhausen Hesse", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a cargo flight from Berlin-Tempelhof to the airbase of Wiesbaden-Erbenheim, taking part to the Berlin Airlift. While cruising in a reduced visibility due to foggy conditions, the aircraft collided with a USAF Douglas C-47A-90-DL registered 43-16036 and carrying also a crew of two and conducting the same operation from Berlin to Wiesbaden. Following the collision, both aircraft dove into the ground. The first crashed about 100 yards south of the city of Ravolzhausen while the second crashed about one km northwest of the same city. All four crew members on both aircraft were killed.", "Crash cause": "Human factor", "Date_stringindexer_transform": 130.0, "Time_stringindexer_transform": 101.0, "Aircraft_stringindexer_transform": 71.0, "Operator_stringindexer_transform": 123.0, "Registration_stringindexer_transform": 50.0, "Flight phase_stringindexer_transform": 0, "Flight type_stringindexer_transform": 8.0, "Survivors_stringindexer_transform": 1, "Crash site_stringindexer_transform": 1.0, "Schedule_stringindexer_transform": 82.0, "MSN_stringindexer_transform": 160.0, "YOM_stringindexer_transform": 7.0, "Flight number_stringindexer_transform": 0, "Crash location_stringindexer_transform": 179.0, "Country_stringindexer_transform": 8.0, "Region_stringindexer_transform": 1.0, "Crew on board_stringindexer_transform": 0.0, "Crew fatalities_stringindexer_transform": 2.0, "Pax on board_stringindexer_transform": 0.0, "PAX fatalities_stringindexer_transform": 0.0, "Other fatalities_stringindexer_transform": 0, "Circumstances_stringindexer_transform": 475.0, "Crash cause_stringindexer_transform": 1.0}], "FE": [{"transformationsData": [{"feature_label": "Date", "transformation_label": "String Indexer"}], "feature": "Date", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "1/10/1923", "max": "9/9/1921", "missing": "0", "distinct": "305"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Date"}, {"transformationsData": [{"feature_label": "Time", "transformation_label": "String Indexer"}], "feature": "Time", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "10H 0M 0S", "max": "NA", "missing": "0", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Time"}, {"transformationsData": [{"feature_label": "Aircraft", "transformation_label": "String Indexer"}], "feature": "Aircraft", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Aeromarine 40", "max": "Wild WT-S", "missing": "0", "distinct": "96"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Aircraft"}, {"transformationsData": [{"feature_label": "Operator", "transformation_label": "String Indexer"}], "feature": "Operator", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "AVENSA - Aerovias Venezolanas", "max": "Waite Fisheries", "missing": "0", "distinct": "123"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Operator"}, {"transformationsData": [{"feature_label": "Registration", "transformation_label": "String Indexer"}], "feature": "Registration", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "1302.53", "stddev": "5524.09", "min": "103", "max": "V-201", "missing": "0", "distinct": "454"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Registration"}, {"transformationsData": [{"feature_label": "Flight phase", "transformation_label": "String Indexer"}], "feature": "Flight phase", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Flight", "max": "Taxiing", "missing": "0", "distinct": "6"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Flight phase"}, {"transformationsData": [{"feature_label": "Flight type", "transformation_label": "String Indexer"}], "feature": "Flight type", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Aerial photography", "max": "Training", "missing": "0", "distinct": "18"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Flight type"}, {"transformationsData": [{"feature_label": "Survivors", "transformation_label": "String Indexer"}], "feature": "Survivors", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "NA", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Survivors"}, {"transformationsData": [{"feature_label": "Crash site", "transformation_label": "String Indexer"}], "feature": "Crash site", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Airport (less than 10 km from airport)", "max": "Plain, Valley", "missing": "0", "distinct": "7"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crash site"}, {"transformationsData": [{"feature_label": "Schedule", "transformation_label": "String Indexer"}], "feature": "Schedule", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Abu Sueir - Abu Sueir", "max": "Wright Patterson AFB-Wright Patterson AFB", "missing": "0", "distinct": "311"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Schedule"}, {"transformationsData": [{"feature_label": "MSN", "transformation_label": "String Indexer"}], "feature": "MSN", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "81024.0", "stddev": "1084425.62", "min": "1", "max": "SH.915", "missing": "0", "distinct": "160"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "MSN"}, {"transformationsData": [{"feature_label": "YOM", "transformation_label": "String Indexer"}], "feature": "YOM", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "1919.92", "stddev": "1.06", "min": "1918", "max": "NA", "missing": "0", "distinct": "29"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "YOM"}, {"transformationsData": [{"feature_label": "Flight number", "transformation_label": "String Indexer"}], "feature": "Flight number", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "NA", "max": "NA", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Flight number"}, {"transformationsData": [{"feature_label": "Crash location", "transformation_label": "String Indexer"}], "feature": "Crash location", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Abadan Khuzestan", "max": "\u00c7ubuk Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "missing": "0", "distinct": "362"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crash location"}, {"transformationsData": [{"feature_label": "Country", "transformation_label": "String Indexer"}], "feature": "Country", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Australia", "max": "Zimbabwe", "missing": "0", "distinct": "42"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Country"}, {"transformationsData": [{"feature_label": "Region", "transformation_label": "String Indexer"}], "feature": "Region", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Africa", "max": "World", "missing": "0", "distinct": "8"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Region"}, {"transformationsData": [{"feature_label": "Crew on board", "transformation_label": "String Indexer"}], "feature": "Crew on board", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "1.02", "stddev": "1.29", "min": "0", "max": "NA", "missing": "0", "distinct": "16"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crew on board"}, {"transformationsData": [{"feature_label": "Crew fatalities", "transformation_label": "String Indexer"}], "feature": "Crew fatalities", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "0.51", "stddev": "1.11", "min": "0", "max": "5", "missing": "0", "distinct": "7"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crew fatalities"}, {"transformationsData": [{"feature_label": "Pax on board", "transformation_label": "String Indexer"}], "feature": "Pax on board", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "5.08", "stddev": "9.45", "min": "0", "max": "9", "missing": "0", "distinct": "11"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Pax on board"}, {"transformationsData": [{"feature_label": "PAX fatalities", "transformation_label": "String Indexer"}], "feature": "PAX fatalities", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "3.09", "stddev": "7.66", "min": "0", "max": "9", "missing": "0", "distinct": "35"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "PAX fatalities"}, {"transformationsData": [{"feature_label": "Other fatalities", "transformation_label": "String Indexer"}], "feature": "Other fatalities", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "0.01", "stddev": "0.22", "min": "0", "max": "5", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Other fatalities"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total fatalities", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "5.1", "stddev": "8.95", "min": "0", "max": "53", "missing": "0"}, "updatedLabel": "Total fatalities"}, {"transformationsData": [{"feature_label": "Circumstances", "transformation_label": "String Indexer"}], "feature": "Circumstances", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "\"After takeoff from Lae-Nadzab Airport, while climbing vertical to the Huon Gulf, the right engine failed, followed shortly later by the left engine. The pilot reduced his altitude and ditched the aircraft off Lae. All three occupants were quickly rescued by a fisherman while the aircraft was lost. Testimony from the passenger: \"\"I had the day off and Johnny Rose was doing a trip to Kokoda and Popondetta. I'd never been there and when he offered me a seat I jumped at it. He had another passenger on board", "max": "While taxiing, the twin engine aircraft swung due to heavy winds, lost its undercarriage and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "missing": "0", "distinct": "433"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Circumstances"}, {"transformationsData": [{"feature_label": "Crash cause", "transformation_label": "String Indexer"}], "feature": "Crash cause", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Human factor", "max": "Weather", "missing": "0", "distinct": "20"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crash cause"}, {"feature": "Date_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "112.27", "stddev": "88.4", "min": "0.0", "max": "304.0", "missing": "0"}, "updatedLabel": "Date_stringindexer_transf..."}, {"feature": "Time_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "16.13", "stddev": "32.22", "min": "0.0", "max": "124.0", "missing": "0"}, "updatedLabel": "Time_stringindexer_transf..."}, {"feature": "Aircraft_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "71.0", "stddev": "0.0", "min": "71.0", "max": "71.0", "missing": "0"}, "updatedLabel": "Aircraft_stringindexer_tr..."}, {"feature": "Operator_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "18.86", "stddev": "30.8", "min": "0.0", "max": "122.0", "missing": "0"}, "updatedLabel": "Operator_stringindexer_tr..."}, {"feature": "Registration_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "219.5", "stddev": "142.88", "min": "0.0", "max": "468.0", "missing": "0"}, "updatedLabel": "Registration_stringindexe..."}, {"feature": "Flight phase_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.97", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "Flight phase_stringindexe..."}, {"feature": "Flight type_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.25", "stddev": "2.89", "min": "0.0", "max": "17.0", "missing": "0"}, "updatedLabel": "Flight type_stringindexer..."}, {"feature": "Survivors_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.44", "stddev": "0.6", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "Survivors_stringindexer_t..."}, {"feature": "Crash site_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.12", "stddev": "1.42", "min": "0.0", "max": "6.0", "missing": "0"}, "updatedLabel": "Crash site_stringindexer_..."}, {"feature": "Schedule_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "96.66", "stddev": "103.14", "min": "0.0", "max": "310.0", "missing": "0"}, "updatedLabel": "Schedule_stringindexer_tr..."}, {"feature": "MSN_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "121.54", "stddev": "68.11", "min": "0.0", "max": "160.0", "missing": "0"}, "updatedLabel": "MSN_stringindexer_transfo..."}, {"feature": "YOM_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "4.3", "stddev": "3.41", "min": "0.0", "max": "7.0", "missing": "0"}, "updatedLabel": "YOM_stringindexer_transfo..."}, {"feature": "Flight number_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Flight number_stringindex..."}, {"feature": "Crash location_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "422.7", "stddev": "88.16", "min": "4.0", "max": "446.0", "missing": "0"}, "updatedLabel": "Crash location_stringinde..."}, {"feature": "Country_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "17.47", "stddev": "17.04", "min": "0.0", "max": "42.0", "missing": "0"}, "updatedLabel": "Country_stringindexer_tra..."}, {"feature": "Region_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.77", "stddev": "1.09", "min": "0.0", "max": "7.0", "missing": "0"}, "updatedLabel": "Region_stringindexer_tran..."}, {"feature": "Crew on board_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "3.42", "stddev": "2.52", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "Crew on board_stringindex..."}, {"feature": "Crew fatalities_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.83", "stddev": "2.26", "min": "0.0", "max": "7.0", "missing": "0"}, "updatedLabel": "Crew fatalities_stringind..."}, {"feature": "Pax on board_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.48", "stddev": "5.79", "min": "0.0", "max": "40.0", "missing": "0"}, "updatedLabel": "Pax on board_stringindexe..."}, {"feature": "PAX fatalities_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.29", "stddev": "1.49", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "PAX fatalities_stringinde..."}, {"feature": "Other fatalities_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.04", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Other fatalities_stringin..."}, {"feature": "Circumstances_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "235.74", "stddev": "144.08", "min": "0.0", "max": "485.0", "missing": "0"}, "updatedLabel": "Circumstances_stringindex..."}, {"feature": "Crash cause_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.42", "stddev": "2.31", "min": "0.0", "max": "19.0", "missing": "0"}, "updatedLabel": "Crash cause_stringindexer..."}], "samplecount": 500, "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "FEGraph": [{"values": {"label": ["4/9/1947", "4/10/1947", "4/13/1947", "4/15/1947", "4/17/1947", "4/18/1947", "4/19/1947", "4/22/1947", "4/24/1947", "4/25/1947", "4/27/1947", "4/28/1947", "4/29/1947", "4/30/1947", "5/2/1947", "5/4/1947", "5/6/1947", "5/7/1947", "5/9/1947", "5/10/1947", "5/11/1947", "5/12/1947", "5/14/1947", "5/15/1947", "5/16/1947", "5/17/1947", "5/18/1947", "5/19/1947", "5/22/1947", "5/24/1947", "5/28/1947", "5/29/1947", "5/30/1947", "5/31/1947", "6/3/1947", "6/4/1947", "6/5/1947", "6/6/1947", "6/7/1947", "6/10/1947", "6/11/1947", "6/12/1947", "6/13/1947", "6/14/1947", "6/15/1947", "6/16/1947", "6/19/1947", "6/20/1947", "6/21/1947", "6/22/1947", "6/23/1947", "6/25/1947", "6/26/1947", "6/27/1947", "6/28/1947", "7/1/1947", "7/2/1947", "7/3/1947", "7/5/1947", "7/7/1947", "7/8/1947", "7/11/1947", "7/12/1947", "7/13/1947", "7/14/1947", "7/15/1947", "7/16/1947", "7/17/1947", "7/18/1947", "7/21/1947", "7/22/1947", "7/25/1947", "7/26/1947", "7/29/1947", "7/31/1947", "8/1/1947", "8/2/1947", "8/4/1947", "8/5/1947", "8/6/1947", "8/8/1947", "8/9/1947", "8/11/1947", "8/12/1947", "8/13/1947", "8/14/1947", "8/15/1947", "8/16/1947", "8/18/1947", "8/20/1947", "8/21/1947", "8/22/1947", "8/23/1947", "8/25/1947", "8/28/1947", "8/29/1947", "8/30/1947", "8/31/1947", "9/2/1947", "9/3/1947", "9/5/1947", "9/6/1947", "9/9/1947", "9/15/1947", "9/17/1947", "9/18/1947", "9/19/1947", "9/20/1947", "9/21/1947", "9/24/1947", "9/28/1947", "10/1/1947", "10/3/1947", "10/4/1947", "10/7/1947", "10/9/1947", "10/10/1947", "10/14/1947", "10/16/1947", "10/17/1947", "10/21/1947", "10/23/1947", "10/24/1947", "10/25/1947", "10/26/1947", "10/27/1947", "10/30/1947", "10/31/1947", "11/2/1947", "11/3/1947", "11/5/1947", "11/10/1947", "11/11/1947", "11/13/1947", "11/14/1947", "11/15/1947", "11/16/1947", "11/17/1947", "11/18/1947", "11/19/1947", "11/20/1947", "11/21/1947", "11/23/1947", "11/25/1947", "11/27/1947", "11/28/1947", "11/30/1947", "12/1/1947", "12/5/1947", "12/9/1947", "12/10/1947", "12/11/1947", "12/13/1947", "12/14/1947", "12/15/1947", "12/16/1947", "12/18/1947", "12/19/1947", "12/20/1947", "12/22/1947", "12/23/1947", "12/24/1947", "12/27/1947", "12/28/1947", "12/29/1947", "12/30/1947", "12/31/1947", "1/2/1948", "1/5/1948", "1/6/1948", "1/7/1948", "1/8/1948", "1/10/1948", "1/11/1948", "1/13/1948", "1/17/1948", "1/18/1948", "1/20/1948", "1/21/1948", "1/24/1948", "1/25/1948", "1/26/1948", "1/27/1948", "1/28/1948", "1/30/1948", "1/31/1948", "2/1/1948", "2/2/1948", "2/6/1948", "2/7/1948", "2/9/1948", "2/10/1948", "2/11/1948", "2/13/1948", "2/16/1948", "2/17/1948", "2/19/1948", "2/20/1948", "2/21/1948", "2/23/1948", "2/25/1948", "2/27/1948", "3/1/1948", "3/2/1948", "3/4/1948", "3/7/1948", "3/8/1948", "3/10/1948", "3/12/1948", "3/13/1948", "3/15/1948", "3/16/1948", "3/17/1948", "3/20/1948", "3/21/1948", "3/25/1948", "3/27/1948", "4/1/1948", "4/5/1948", "4/7/1948", "4/9/1948", "4/10/1948", "4/11/1948", "4/15/1948", "4/18/1948", "4/19/1948", "4/20/1948", "4/21/1948", "4/23/1948", "4/24/1948", "4/25/1948", "4/30/1948", "5/1/1948", "5/5/1948", "5/6/1948", "5/9/1948", "5/10/1948", "5/11/1948", "5/12/1948", "5/13/1948", "5/14/1948", "5/15/1948", "5/16/1948", "5/17/1948", "5/18/1948", "5/20/1948", "5/22/1948", "5/23/1948", "5/24/1948", "5/25/1948", "5/26/1948", "5/28/1948", "5/31/1948", "6/8/1948", "6/10/1948", "6/11/1948", "6/12/1948", "6/13/1948", "6/14/1948", "6/16/1948", "6/17/1948", "6/18/1948", "6/21/1948", "6/23/1948", "6/24/1948", "6/25/1948", "6/26/1948", "6/27/1948", "6/29/1948", "7/1/1948", "7/2/1948", "7/3/1948", "7/4/1948", "7/5/1948", "7/6/1948", "7/7/1948", "7/8/1948", "7/10/1948", "7/11/1948", "7/12/1948", "7/14/1948", "7/15/1948", "7/17/1948", "7/20/1948", "7/21/1948", "7/22/1948", "7/23/1948", "7/24/1948", "7/25/1948", "7/27/1948", "7/28/1948", "7/29/1948", "7/30/1948", "7/31/1948", "8/1/1948", "8/5/1948", "8/9/1948", "8/11/1948", "8/12/1948", "8/13/1948", "8/15/1948", "8/19/1948", "8/20/1948", "8/23/1948", "8/24/1948"], "data": [1, 2, 3, 1, 1, 1, 2, 3, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 2, 3, 2, 3, 5, 3, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 3, 1, 1, 2, 1, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 3, 3, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 4, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 3, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 1, 4, 1, 4, 1, 1, 2, 4, 2, 2, 1, 2, 1, 4, 1, 1, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 4, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 3, 1, 2, 2, 1, 1, 1, 1, 1, 3, 3, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 1, 4, 1, 2, 1, 2, 1, 3, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 3, 4, 1, 1, 3, 1, 1, 3, 2, 1, 1, 1, 3, 3, 3, 3, 2, 1, 1, 2, 1, 4, 2, 2, 2, 1, 3, 1, 1, 1, 3, 1, 1, 2, 2, 1, 2]}, "label": "Date", "count": 305, "min": "1/10/1923", "max": "9/9/1921"}, {"values": {"label": ["NA", "19H 30M 0S", "9H 19M 0S", "21H 30M 0S", "10H 40M 0S", "23H 13M 0S", "19H 55M 0S", "18H 26M 0S", "15H 15M 0S", "9H 39M 0S", "13H 35M 0S", "16H 25M 0S", "22H 45M 0S", "19H 5M 0S", "12H 48M 0S", "17H 41M 0S", "12H 0M 0S", "4H 0M 0S", "22H 0M 0S", "23H 7M 0S", "18H 16M 0S", "14M 0S", "18H 20M 0S", "1H 40M 0S", "9H 12M 0S", "18H 7M 0S", "9H 28M 0S", "4H 30M 0S", "22H 40M 0S", "10H 15M 0S", "13H 30M 0S", "2H 30M 0S", "14H 41M 0S", "15H 0M 0S", "10H 20M 0S", "20H 40M 0S", "18H 49M 0S", "11H 30M 0S", "23H 27M 0S", "23H 45M 0S", "6H 11M 0S", "9H 5M 0S", "15H 21M 0S", "15H 10M 0S", "11H 12M 0S", "8H 55M 0S", "18H 23M 0S", "8H 35M 0S", "10H 4M 0S", "14H 50M 0S", "12H 29M 0S", "13H 45M 0S", "13H 0M 0S", "8H 5M 0S", "18H 0M 0S", "4H 20M 0S", "3H 17M 0S", "14H 10M 0S", "12H 15M 0S", "14H 25M 0S", "16H 36M 0S", "20M 0S", "18H 10M 0S", "9H 30M 0S", "12H 40M 0S", "19H 0M 0S", "20H 5M 0S", "21H 0M 0S", "19H 37M 0S", "7H 45M 0S", "13H 40M 0S", "4H 36M 0S", "16H 30M 0S", "4H 17M 0S", "14H 40M 0S", "15H 50M 0S", "15H 30M 0S", "10H 50M 0S", "12H 54M 0S", "20H 0M 0S", "13H 25M 0S", "17H 40M 0S", "17H 45M 0S", "14H 0M 0S", "6H 0M 0S", "16H 0M 0S", "21H 14M 0S", "22H 58M 0S", "10H 0M 0S", "9H 47M 0S", "8H 12M 0S", "1H 7M 0S", "7H 30M 0S", "14H 30M 0S", "8H 33M 0S", "2H 34M 0S", "15H 20M 0S", "20H 1M 0S", "16H 20M 0S", "10H 30M 0S", "10H 46M 0S", "13H 21M 0S", "3H 0M 0S", "17H 30M 0S", "11H 0M 0S", "7H 20M 0S", "20H 42M 0S", "23H 30M 0S", "18H 40M 0S", "15H 42M 0S", "13H 29M 0S", "1H 5M 0S", "12H 41M 0S", "12H 20M 0S", "15H 3M 0S", "23H 59M 0S", "1H 50M 0S", "9H 18M 0S", "8H 45M 0S", "1H 0M 0S", "9H 15M 0S", "23H 55M 0S", "9H 40M 0S", "19H 38M 0S", "7H 31M 0S"], "data": [343, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1]}, "label": "Time", "count": 125, "min": "10H 0M 0S", "max": "NA"}, {"values": {"label": ["Douglas C-47 Skytrain (DC-3)", "Noorduyn Norseman", "Lockheed C-60 LodeStar", "Avro 685 York", "Vickers 440 Wellington X", "De Havilland DH.89 Dragon Rapide", "Lockheed PV-1 Ventura", "Handley Page H.P.63 Halifax VI", "Boeing B-29 Superfortress", "Douglas DC-3", "Avro 652 Anson", "De Havilland DH.83 Fox Moth", "Lockheed 18 LodeStar", "Airspeed AS.65 Consul", "AAC.1 Toucan", "Fiat G.12", "Siebel Si-204", "Vickers 619 Wellington X", "Beechcraft C-45 Expeditor", "Lockheed L-049 Constellation", "Fairchild C-82 Packet", "Avro 691 Lancastrian", "Ford 4", "Savoia-Marchetti SM.79 Sparviero", "Caudron C.440 Go\u00e9land", "Handley Page H.P.63 Halifax VII", "Boeing C-97 Stratofreighter", "Avro 683 Lancaster", "Douglas C-54 Skymaster", "Douglas DC-4", "Handley Page H.P.70 Halifax VIII", "Grumman G-21A Goose", "Petlyakov Pe-8", "Miles M.57 Aerovan", "Lisunov LI-2", "Beechcraft AT-7 Navigator", "De Havilland DH.60 Moth", "SNCAC NC.701/702 Martinet", "Ilyushin II-12", "Short S.25 Sunderland", "De Havilland DH.84 Dragon", "Ford 5", "Martin 187 Baltimore", "Consolidated PB4Y-2 Privateer", "North American B-25 Mitchell", "Lockheed 10 Electra", "Douglas A-20 Havoc", "Consolidated PBY-5A Catalina", "Junkers JU.52", "Vought-Sikorsky VS-44", "Boeing B-17 Flying Fortress", "Curtiss C-46 Commando", "Short S.25 Sandringham", "Avro 689 Tudor", "Canadian Vickers PBV-1 Canso (OA-10 Canso)", "De Havilland DH.80 Puss Moth", "Vickers Viking", "Boeing 247", "Avro 694 Lincoln", "SNCASE SE.161 Languedoc", "Boeing 314 Clipper", "Bristol 170 Freighter", "Douglas DC-6", "Lockheed L-414 Hudson", "Vickers 458 Wellington XI", "Douglas C-53 Skytrooper (DC-3)", "Beechcraft D18", "Lockheed 9 Orion", "Airspeed AS.10 Oxford", "De Havilland DH.90 Dragonfly", "Short S.29 Stirling", "Douglas A-26 Invader", "Douglas C-48 (DC-3)", "Avro 19", "Grumman G-44 Widgeon", "Martin PBM Mariner", "De Havilland DH.104 Dove", "Lockheed L-649 Constellation", "Canadian Vickers Stranraer", "Fokker F7", "Northrop N-23 Pioneer", "Lat\u00e9co\u00e8re 631", "Messerschmitt M.20", "Consolidated Canso", "Vultee V-1", "Lockheed P-2 Neptune", "Douglas DC-2", "Douglas C-49 (DC-3)", "Miles M.60 Marathon", "Avro 616 Avian IVM", "Junkers W.34", "Fiat G.212", "SNCAC NC.211 Cormoran", "Naval Aircraft Factory PBN-1 Nomad", "Canadair C-4 North Star", "Aero C-3A"], "data": [90, 10, 5, 15, 2, 10, 2, 1, 13, 27, 27, 7, 5, 11, 11, 1, 3, 10, 5, 4, 4, 8, 1, 3, 2, 1, 1, 7, 13, 9, 16, 1, 1, 6, 12, 2, 2, 4, 3, 6, 3, 1, 5, 3, 9, 3, 1, 8, 3, 1, 3, 11, 2, 2, 2, 3, 9, 1, 4, 3, 1, 5, 5, 2, 1, 3, 1, 1, 2, 1, 1, 6, 1, 3, 2, 2, 3, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Aircraft", "count": 96, "min": "Aeromarine 40", "max": "Wild WT-S"}, {"values": {"label": ["United States Army Air Forces - USAAF", "Indian Overseas Airlines - IOA", "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Compa\u00f1ia Transandina de Aviaci\u00f3n", "British South American Airways - BSAA", "Royal Air Force - RAF", "British European Airways - BEA", "South African Air Force", "Mercury Aviation", "Aeroflot - Russian International Airlines", "Delta Airlines", "Guinea Air Traders", "China National Aviation Corporation - CNAC", "McAvoy Diamond Drilling %26 Development Company Ltd", "Trans-Canada Air Lines - TCAL", "Milburn Air", "Anglo-Iranian Oil Company", "Aerovias Latino Americanas", "Air France", "Italian Air Force - Aeronautica Militare Italiana", "Union Southern Airlines", "TACA International Airlines - Transportes A\u00e9reos Centro Americanos", "Polyarnaya Aviatsiya", "Trans World Airlines - TWA", "Skyways of London", "Negociaci\u00f3n A\u00e9rea Mexicana", "Corrieri Aerei Militari - CAM", "Secr\u00e9tariat G\u00e9n\u00e9ral de l'Aviation Civile - SGAC", "Strato Freight", "Philippine Air Force - Hukbong Himpapawid NG Pilipinas", "Aerovias Brasil", "Royal Netherlands Air Force - Koninklijke Luchtmacht", "United Airlines", "Flugf\u00e9lag \u00cdslands", "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Eastern Airlines", "Bond Air Services", "Services Fran\u00e7ais de T\u00e9l\u00e9communications et de Signalisation", "Ellis Airlines", "Butler Air Transport", "Lancashire Aircraft Corporation - LAC", "Air Gagnon", "LOT Polish Airlines - Polskie Linie Lotnicze", "Flota Aerea Mercante Argentina - FAMA", "Pays Plat Outfitters", "Pennsylvania Central Air Lines", "French Air Force - Arm\u00e9e de l'Air", "North Sea Air Transport", "Philippine Airlines - PAL", "Lineas A\u00e9reas de Transporte Nacional - LATN", "Pan American World Airways - PAA", "Buchan's Mining Company", "Ontario Provincial Air Service", "Private Canadian", "Colombian Air Force - Fuerza A\u00e9rea Colombiana", "Soci\u00e9t\u00e9 A\u00e9rienne de Transports Internationaux - SATI", "Ulster Aviation", "Transportes A\u00e9reos Nacionales - TAN Costa Rica", "French Navy", "Air Transport Association", "Air Azur", "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Burke Air Transport", "Qantas Airways - Queensland and Northern Territory Aerial Services", "Aros-Flyg", "Miles Aircraft", "A\u00e9ro Cargo", "British Overseas Airways Corporation - BOAC", "Shell Company of Ecuador", "Turkish Air Force - T\u00fcrk Hava Kuvvetleri", "Southern Aerowork", "Argentinian Air Force - Fuerza A\u00e9rea Argentina", "United States Navy - USN", "Indonesian Government", "Chinese Air Force - AFPLA - Chung-Kuo Shan Min Taie Fang Tsun Pu-Tai", "London Aero %26 Motor Services - LAMS", "LAN Chile - Linea A\u00e9rea Nacional de Chile", "SATA Air A\u00e7ores", "Gidrometeosluzhba", "Vingtor Luftveier", "American Airlines", "New England Airways", "Aktiebolaget Aerotransport - ABA", "Photographic Survey Company", "TARS - Transporturile Aeriene Rom\u00e2no-Sovietice", "Transporte A\u00e9reo de Carga Internacional", "Mandated Airlines", "Slick Airways", "Minister of Supply %26 Aircraft Production", "Charter Airways", "Det Norske Luftfartselskap - DNL", "Royal New Zealand Air Force - RNZAF", "Royal Canadian Air Force - RCAF", "Transportes A\u00e9reos Peruanas - TAPSA", "Air Atlas", "Nayler Air Services", "Hellenic Airlines", "Payloads Charter Company", "Servicio A\u00e9reo Panini", "Hellenic Air Force - Elleniki Polemiki Aeroporia", "Compania Anonima Vuelos Express - CAVE", "Tata Airlines", "Franco-British Commercial %26 Industrial Company", "United States Air Force - USAF", "The Uganda Company", "Indian Air Force - Bharatiya Vayu Sena", "Malayan Airways", "American International Airlines", "Soci\u00e9t\u00e9 A\u00e9rienne du Littoral - SAL", "Central Air Transport - China", "Institut G\u00e9ographique National", "John Fairfax %26 Sons", "Philippines Air Express", "Air India", "Private British", "Soci\u00e9t\u00e9 Auxiliaire de Navigation A\u00e9rienne - SANA", "Rijksluchtvaartschool - RLS", "Airspan Travel", "Private American", "Trafik-Turist-Transportflyg", "British Air Transport - BAT", "Bristol Aeroplane Company", "Linea Aeropostal Venezolana - LAV", "Jugoslovenske Sovjet Transport Aviacija - JUSTA", "Columbia Air Cargo", "GLAM - Groupe de Liaisons A\u00e9riennes Minist\u00e9rielles", "Alaska Airlines", "Airlines WA", "Central African Airways - CAA", "Indonesian Air Force - TNI-AU Tentara Nasional Indonesia - Angkatan Udara", "Alfred Wegener Institute", "Iberia - Lineas A\u00e9reas de Espana", "Coastal Air Lines", "Air Transport - Belgium", "SABENA - Soci\u00e9t\u00e9 Anonyme Belge d'Exploitation de la Navigation A\u00e9rienne", "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Waite Fisheries", "Det Danske Luftfartselskab - DDL", "Bharat Airways", "United States Coast Guard - USCG", "SOCOTRA - Soci\u00e9t\u00e9 Coop\u00e9rative de Tramping A\u00e9rien", "South African Airways -SAA - Suid Afrikaanse Lugdiens - SAL", "Sivewright Airways", "Compagnie Alg\u00e9rienne des Transports A\u00e9riens - CATA", "VIARCO - Vias A\u00e9reas Colombianas", "Dominicana de Aviaci\u00f3n", "Mexicana de Aviaci\u00f3n", "Airways India", "African Air Cars", "Federal Aviation Administration - FAA", "Chartair - UK", "Soci\u00e9t\u00e9 Indochinoise de Transports A\u00e9riens - SITA", "Queen Charlotte Airlines", "Air Portugal - Transportes A\u00e9reos Portugueses", "Airline Transport Carriers", "Middle East Airlines - MEA", "Compagnie G\u00e9n\u00e9rale TransSaharienne - CGT France", "Skane Flyg", "Northrop Aircraft", "Cathay Pacific Airways", "Gulf Transportation Company", "Handley Page Aircraft Company Ltd", "Royal Australian Air Force - RAAF", "Aerea Teseo", "Lat\u00e9co\u00e8re Industries", "Commercial Airways - Philippines", "Bruning Aviation", "Pullman Airways", "Soci\u00e9t\u00e9 de Transports A\u00e9riens - STA", "United Air Services - Tanzania", "Loftleidir Icelandic Airlines", "VARIG - Via\u00e7\u00e3o A\u00e9rea Rio Grandense", "Eagle Air Freight", "Northwest Airlines", "Great Northern Skyways", "Cruzeiro do Sul", "Agencia Interamericana de Aviaci\u00f3n - AIDA Colombia", "Private Swedish", "Indian National Airways - INA", "Portuguese Air Force - Aeron\u00e1utica Militar", "United States Marine Corps", "Air Congo", "SCOLTA - Sociedad Colombiana de Transportes A\u00e9reos", "Compagnie Air Transport - CAT", "New Zealand National Airways", "Israeli Air Force - Heyl Ha'avir", "Superior Oil Corporation", "Connellan Airways", "Pakistan Airways - Pak Air", "New Holland Airways", "British American Air Services - BAAS", "Air Transport Charter", "SOMACO", "Morton Air Services", "Alpha Airways", "Aeroplane %26 Armament Experimental Establishment - A%26AEE", "Karachi Aero Club", "Royal Navy", "Hargreaves Airways", "Southern Cross Aviation Service", "Ecuadorian Air Force - Fuerza A\u00e9rea Ecuatoriana", "Compa\u00f1\u00eda Auxiliar de Navegaci\u00f3n A\u00e9rea", "Transporte A\u00e9reo Transandino", "Clairways", "Central BC Airways", "Iraq Petroleum Transport Company", "Private Mexican", "Avio Linee Italiane - ALI", "Scandinavian Airlines System - SAS", "Royal Norwegian Air Force - Kongelige Norske Luftforsvaret", "Aigle Azur", "Argentinian Navy - Armada Argentina", "Expreso A\u00e9reo Interamericano", "Private Venezuelan", "Extractors Hull", "SNCAC - Soci\u00e9t\u00e9 Nationale de Constructions A\u00e9ronautiques du Centre", "Mayflower Air Services", "Ethiopian Airlines", "Rimouski Airlines", "SNECMA - Soci\u00e9t\u00e9 Nationale d'Etude et de Construction de Moteurs d'Aviation", "Aviaci\u00f3n del Litoral Fluvial Argentino - ALFA", "Civil Air Transport", "OnzeAir", "Czech Air Force - Cesk\u00e9 Vojensk\u00e9 Letectvo", "AVENSA - Aerovias Venezolanas"], "data": [19, 2, 1, 2, 6, 55, 6, 1, 2, 14, 2, 3, 3, 2, 2, 1, 1, 1, 11, 4, 1, 1, 5, 2, 4, 1, 2, 1, 2, 1, 2, 3, 3, 1, 1, 3, 2, 1, 1, 1, 3, 1, 2, 5, 1, 1, 9, 1, 4, 1, 4, 1, 2, 1, 2, 1, 3, 1, 2, 1, 1, 8, 1, 2, 1, 1, 3, 5, 1, 4, 1, 3, 11, 1, 1, 2, 1, 1, 2, 1, 3, 1, 2, 1, 2, 1, 2, 3, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 35, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 2, 3, 1, 1, 2, 1, 2, 1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 3, 5, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Operator", "count": 225, "min": "AVENSA - Aerovias Venezolanas", "max": "Waite Fisheries"}, {"values": {"label": ["AS-32084", "E4104", "A8544", "AS-32098", "AS-4130", "N2851", "B3087", "D4593", "5", "B9976", "D1745", "B927", "F2633", "AS-23130", "NA", "SC-39168", "D9327", "6", "AS-39406", "AS-22846", "97", "E9362", "B9983", "F7136", "A-31615", "AS-29071", "AS-62447", "D8340", "8", "3", "F3748", "68", "G-EAAA", "AS-22853", "11495", "AS-30985", "H5894", "69", "D5439", "C7829", "C6861", "61", "B9982", "AS-43626", "G-EAAR", "78", "AS-30865", "B9981", "84", "E5557", "82", "110", "G-EACL", "86", "G-EAAO", "N123", "G-EAET", "AS-30992", "G-EAGO", "SC-829", "G-EAHO", "G-EAAN", "G-EACG", "G-EAGM", "AS-30931", "G-EAAQ", "AS-30963", "AS-24271", "AS-32390", "SC-24269", "AS-24198", "G-EAEW", "AS-24150", "G-EAFG", "AS-24006", "32", "87", "AS-30547", "G-EADO", "G-EAHG", "AS-32333", "90", "AS-514", "AS-24263", "77", "G-EACW", "G-EACD", "G-EACY", "G-EAOW", "G-EAAP", "G-EAMR", "G-EAHF", "G-EAOV", "G-EAGJ", "G-EAHM", "AS-31079", "108", "G-EADL", "203", "G-UABA", "AS-39408", "G-EANV", "G-EAMC", "AS-32466", "G-EAAV", "AS-32404", "SC-23961", "F8615", "CH-16", "F-ALAO", "65", "G-EACT", "105", "E9744", "72", "G-EAHW", "F302", "49", "44", "G-EADS", "G-EAMI", "91", "98", "AS-32562", "F-CGTY", "Cartagena", "N4044", "G-EACV", "95", "79", "103", "AS-63123", "AS-63385", "CH-4", "88", "AS-24158", "60", "204", "AS-62973", "AS-63169", "G-EARU", "AS-63173", "80", "G-EADR", "G-EAKE", "A-25", "G-EAGI", "AS-63501", "AS-23405", "G-EALO", "F.38", "F1646", "AS-22856", "Santa Marta", "G-EAGW", "G-EAPV", "G-EAGV", "G-EARZ", "SC-30913", "G-EAMY", "AS-23587", "G-CYAL", "G-EARI", "G-EALW", "31704", "G-EAJH", "AS-63244", "G-EAGX", "G-CYAD", "106", "G-CAAR", "CH-18", "305", "73", "G-CADB", "G-EANN", "308", "AS-63454", "AS-63019", "G-CABU", "G-EAJQ", "N.11", "G-EAPC", "31679", "G-EANS", "G-CYAZ", "F-ALAI", "F-ALTA", "H9853", "G-CYCF", "76", "G-EATP", "178", "G-EAQN", "F9745", "AS-68024", "AS-68154", "AS-63233", "G-CYBN", "31", "AS-68150", "AS-63130", "G-EAMA", "G-EAQA", "F-ALBO", "AS-40043", "AS-22998", "G-CABP", "G-CABM", "153", "AS-68176", "AS-63670", "N.19", "O-BAIN", "AS-63972", "AS-27969", "130", "AS-63417", "AS-63709", "A-26", "301", "179", "F-ALBA", "D-128", "42", "124", "G-CYCI", "E9691", "AS-63456", "67", "3605", "F8751", "O-BABI", "F8423", "G-CYCH", "D9383", "G-CYBD", "AS-44864", "G-CYBS", "H3021", "G-EAVL", "H81", "O-BATE", "G-CYCA", "160", "AS-63182", "196", "AS-62994", "176", "F-ALHE", "AS-62980", "AS-63566", "AS-38126", "G-EAUF", "H-NABL", "AS-62451", "AS-64243", "G-CADG", "G-CYBZ", "G-CYBW", "AS-63676", "F-CMAV", "G-CAAH", "AS-63145", "AS-63916", "F-CMAY", "D-18", "AS-38323", "AS-63915", "222", "G-CACN", "992", "AS-63690", "AS-63525", "AS-62965", "AS-63868", "AS-63891", "AS-63131", "AS-23190", "G-CYBV", "AS-64594", "G-CABA", "AS-63129", "AS-63502", "AS-63880", "F-ALBI", "AS-63082", "C4297", "AS-63967", "G-CADQ", "G-CAAU", "O-BLAN", "G-CYAW", "AS-63910", "H-NABP", "AS-64212", "F-ADCD", "G-EAWI", "AS-63452", "AS-64511", "AS-63595", "F-ADBN", "CH-71", "AS-63678", "AS-63567", "AS-68462", "G-EAEB", "AS-64521", "G-EACA", "F9157", "G-CADJ", "AS-64114", "T-DOBC", "G-CYBG", "AS-63865", "AS-24174", "H-116", "AS-63455", "F-ALQA", "G-EAFQ", "G-EAZF", "AS-63604", "AS-63033", "G-EAAB", "G-EANQ", "G-AUDI", "AS-63770", "E3440", "G-CYCB", "AS-68204", "E3446", "H2446", "229", "AS-63791", "AS-62989", "AS-30708", "AS-63249", "G-EATM", "D6243", "E5450", "H102", "E8474", "G-EATN", "AS-68036", "AS-63801", "H9829", "AS-63382", "AS-63366", "AS-64536", "E3568", "AS-63944", "D4542", "AS-64522", "N125", "AS-63989", "G-CACO", "G-EAPK", "E5497", "E967", "CH-77", "G-EAWU", "G-EAWO", "F-GEAD", "G-EBBZ", "AS-62990", "G-EASA", "AS-64138", "F-ALGU", "G-EBCL", "AS-63601", "F-ALFU", "AS-63395", "H-NABT", "AS-68180", "AS-24131", "G-EBDE", "CH-39", "F-ACMH", "75", "G-EAHU", "AS-68678", "G-EAOE", "B-2", "AS-68653", "AS-64556", "F8747", "H2364", "F-FREI", "N.21", "F-ALVE", "AS-68669", "AS-64535", "G-EBDH", "AS-68647", "G-EABX", "G-EAJG", "G-EBAV", "AS-64544", "E9910", "G-EBDI", "G-EALD", "43", "AS-64332", "AS-63548", "AS-64256", "227", "N4639", "AS-68648", "46", "E899", "D-27", "G-EAYT", "G-EAWK", "AS-63620", "AS-68673", "F-FRAV", "AS-63480", "AS-65045", "H-111", "G-EBBU", "AS-64634", "AS-63626", "AS-64537", "F-ESAB", "H-NABO", "AS-63408", "AS-63481", "F-ALNA", "AS-22365", "AS-42125", "249", "AS-63404", "AS-64461", "247", "F-AEIB", "Columbus", "F-ALJU", "223", "A-3359", "G-AUBL", "V-201", "A-2", "D-22", "G-AUCF", "291", "D-201", "D-217", "O-23", "F-AEEK", "AS-64205", "1970", "F-AFCP", "H-MACC", "Elisabeth"], "data": [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 43, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Registration", "count": 454, "min": "103", "max": "V-201"}, {"values": {"label": ["Takeoff (climb)", "Flight", "Landing (descent or approach)", "NA", "Taxiing", "Parking"], "data": [88, 196, 194, 15, 5, 2]}, "label": "Flight phase", "count": 6, "min": "Flight", "max": "Taxiing"}, {"values": {"label": ["Military", "Scheduled Revenue Flight", "Cargo", "Training", "Survey / Patrol / Reconnaissance", "Executive/Corporate/Business", "Private", "Charter/Taxi (Non Scheduled Revenue Flight)", "Positioning", "Topographic", "Government", "Postal (mail)", "NA", "Test", "Humanitarian", "Aerial photography", "Delivery", "Geographical / Geophysical / Scientific", "Ferry", "Demonstration", "Calibration", "Bombing"], "data": [101, 136, 77, 80, 8, 6, 15, 28, 6, 1, 4, 1, 1, 15, 2, 1, 10, 1, 4, 1, 1, 1]}, "label": "Flight type", "count": 22, "min": "Aerial photography", "max": "Training"}, {"values": {"label": ["Yes", "NA", "No"], "data": [306, 28, 166]}, "label": "Survivors", "count": 3, "min": "NA", "max": "Yes"}, {"values": {"label": ["Airport (less than 10 km from airport)", "NA", "Mountains", "Plain, Valley", "Desert", "Lake, Sea, Ocean, River", "City"], "data": [250, 7, 77, 86, 10, 65, 5]}, "label": "Crash site", "count": 7, "min": "Airport (less than 10 km from airport)", "max": "Plain, Valley"}, {"values": {"label": ["Dayton - Dayton", "Cricklewood - Cricklewood", "Abukir - Abukir", "Wright Patterson AFB-Wright Patterson AFB", "NA", "Isle of Grain - Usworth - Glasgow", "Seaton Carew - Seaton Carew", "Castle Bromwich - Castle Bromwich", "Seaton Carew AFB - Seaton Carew AFB", "Old Sarum - Old Sarum", "Bicester - Bicester", "Thessaloniki - Athens", "Villacoublay - Rome", "Andover - Andover", "Hendon - Bournemouth", "Udine - Bratislava", "Ellington AFB - Ellington AFB", "London - Paris", "London \u2013 Paris \u2013 Pisa \u2013 Rome \u2013 Cairo", "Aldeburgh - Aldeburgh", "Cleveland \u2013 Chicago", "Saint John's - Clifden", "Hendon - Hendon", "Bellefonte \u2013 Cleveland", "College Park - College Park", "Venice - Milan", "Hounslow Heath \u2013 Sandhurst", "Felixstowe - Felixstowe", "Manston- Hounslow Heath", "Weston-super-Mare - Weston-super-Mare", "Croydon \u2013 Newcastle", "Washington DC \u2013 New York", "Interlaken - Paris - Croydon", "Fort Sill AFB - Fort Sill AFB", "College Park \u2013 Belmont Park", "Hounslow Heath - Chania", "Paris-Le Bourget - Hounslow Heath", "Brooklands - Paris", "Paris - London", "Dessau - Dessau", "Brooklands - Derna - Wadi Halfa - Bulawayo - Cape Town", "Aswan - Khartoum", "Brooklands \u2013 Cairo \u2013 Gebelein \u2013 Kisumu \u2013 Mwanza \u2013 Tabora \u2013 Cape Town", "Wadi Halfa \u2013 Bulawayo \u2013 Cape Town", "Porrentruy - Porrentruy", "Chicago \u2013 Cleveland", "Paris - Hounslow Heath", "Roosevelt Field - Roosevelt Field", "Bellefonte - Heller Field", "Cricklewood - Biggin Hill", "Khartoum - Cairo", "Bustleton \u2013 Washington DC", "Barranquilla - Barranquilla", "Joyce Green - Brooklands", "Omaha \u2013 Iowa City \u2013 Chicago", "Romanshorn - Romanshorn", "Paris - Croydon", "Bournemouth - Peterborough", "Kjeller \u2013 Karlstad \u2013 Stockholm - Copenhagen", "Kalijati - Kalijati", "Twickenham \u2013 Northolt", "Havana \u2013 Jag\u00fcey Grande", "Salisbury - Salisbury", "Eastbourne - London", "Horten - Oslo", "Kenley - Kenley", "Cartagena - Barranquilla", "Brough - Scarborough", "Bournemouth - Bournemouth", "Camp Borden - Camp Borden", "Croydon - Paris", "Brighton - Eastbourne", "Hazlehurst \u2013 Cleveland", "Mineola \u2013 Northfield", "Alert Bay \u2013 Prince Rupert", "Hazlehurst \u2013 Bellefonte", "Toulouse - Barcelona", "Grantham - Grantham", "Chicago - Omaha", "Stockholm \u2013 Kristiania", "Salt Lake City \u2013 Cheyenne", "New Plymouth - New Plymouth", "Cricklewood - Paris", "Hounslow Heath - Paris", "Marina - Sacramento", "Croydon - Brussels", "Minneapolis \u2013 Chicago", "Lone Rock \u2013 La Crosse", "Cheyenne \u2013 Salt Lake City", "Gdansk \u2013 Berlin", "Rio de Janeiro - Rio de Janeiro", "Camp Borden - Toronto", "Baghdad - Baghdad", "Elko \u2013 Salt Lake City", "Farnborough - Farnborough", "Lake Maggiore - Lake Maggiore", "Martlesham Heath - Martlesham Heath", "Biggin Hill - Biggin Hill", "Fort Sill - Fort Sill", "Point Cook - Point Cook", "Basra - Baghdad", "Brussels - Paris", "Mitchel Field - Cleveland", "Barcelone \u2013 Alicante", "Carlstrom AFB - Carlstrom AFB", "Paris \u2013 Croydon", "Croydon \u2013 Rotterdam", "Langley \u2013 Bolling", "Calgary - Calgary", "Dortmund \u2013 Braunschweig", "San Francisco \u2013 Sacramento", "Malmen AFB - Malmen AFB", "Moundsville - Langley", "Luke AFB - Luke AFB", "High River - High River", "Edmonton \u2013 Peace River \u2013 Fort Vermilion \u2013 Hay River \u2013 Fort Providence \u2013 Fort Simpson \u2013 Norman Wells", "Charleston \u2013 Langley", "Warsaw - Prague - Strasbourg - Paris", "Croydon - Croydon", "Solothurn - Lausanne", "Stag Lane - Norwich", "Manston - Manston", "Croydon - Rotterdam", "Bandung - Batavia", "Penshurst - Ashford", "Geraldton \u2013 Kalbarri \u2013 Carnarvon \u2013 Karratha \u2013 Port Hedland \u2013 Broome \u2013 Derby", "Abu Sueir - Abu Sueir", "Cranwell - Cranwell", "Paris \u2013 London", "Kaikoura \u2013 Christchurch", "Hinaidi - Hinaidi", "El Bosque - El Bosque", "Sealand - Sealand", "Cowes - Isle of Grain", "Spitalgate - Spitalgate", "Baoding - Baoding", "Brooklands - Brooklands", "Alicante - Casablanca", "Perpignan \u2013 Barcelona", "Amsterdam - Rotterdam - Croydon", "Lyon - Marseille", "Lausanne - Lausanne", "Asch - Asch", "Batavia \u2013 Semarang", "Casablanca - Toulouse", "Hounslow Heath - Hounslow Heath", "Tours - Tours", "Izmir - Naxos - Tatoi AFB", "Bournemouth - Ashford", "Indianapolis \u2013 Cleveland", "Rutland - Rutland", "Hinaidi - Shaibah", "Goetsenhoven AFB - Goetsenhoven AFB", "Venice - London", "Wheeler AFB - Wheeler AFB", "Prague - Warsaw", "Kalijati - Bandung", "Paris - Paris", "Selfridge NAS - Selfridge NAS", "Toulouse - Barcelona - Valencia - Alicante - M\u00e1laga - Rabat", "Pearl Harbour - Pearl Harbour", "Salt Lake City \u2013 Rock Springs", "Toulouse \u2013 Barcelona \u2013 Valencia \u2013 Alicante \u2013 M\u00e1laga \u2013 Tanger \u2013 Rabat", "Luke Field - Luke Field", "Rock Springs \u2013 Salt Lake City", "Ajaccio - Antibes", "Key West - Havana", "Alicante \u2013 Barcelona", "Cheyenne - Cheyenne", "Bandung - Kalijati", "Girardot \u2013 Puerto Berr\u00edo", "Munich - Augsburg", "Albina - Macap\u00e1", "Oran \u2013 Casablanca", "Dayton - Langley", "Curitiba - Curitiba", "Paris \u2013 Strasbourg \u2013 Budapest \u2013 Bucharest", "Budapest - Budapest", "Wainwright - Wainwright"], "data": [1, 1, 1, 1, 262, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 2, 3, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 7, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 7, 1, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 2, 4, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Schedule", "count": 179, "min": "Abu Sueir - Abu Sueir", "max": "Wright Patterson AFB-Wright Patterson AFB"}, {"values": {"label": ["NA", "B9976", "B9983", "C6054", "B9982", "C105", "B9981", "D9298", "ATC.4", "1", "D5150", "D9343", "H1959", "E4225", "ATC.9", "K-161", "ATC.2", "G7/67", "ATC.13", "F8706", "F2694", "77", "E1663", "E4224", "C7175", "B9970", "ATC.3", "E4/500", "F2699", "C746", "E1707", "E4348", "539", "538", "HP.7", "HP.27", "K-107", "3437", "4570.56", "DH.16/1", "536", "E3364", "H2507", "PL.6146", "6526", "E4233", "544", "P.59", "D6245", "HP.22", "E4234", "E428", "E3", "H6599", "F302", "H6598", "H6551", "F.246", "H1917", "DH.18/1", "F7484", "E2", "H9255", "D9076", "2503", "H2514", "560", "C1293", "H2587", "970", "102", "E4", "E997", "31", "20", "F333", "H4600", "P.37E", "HP.25", "P.36E", "57", "P45", "AB.16", "AB.13", "H5915", "5220/8220.2", "610", "H9736", "3605", "H5925", "H5905", "103", "3", "1508", "15/2", "H9742", "1252", "M3100", "1254", "5097", "1161", "F2710", "AB.1", "22", "3752", "558", "17/7248", "H9196", "160", "E3672", "1913", "13", "B8774", "E6765", "1533", "17", "E4180", "H7426", "K100", "J755", "6116", "HP.42", "HP.43", "2", "FK.26/32", "F3439", "DH.18/04", "23", "15", "F9809", "127", "E9227", "3641/126", "1532", "H5738", "555", "E1611", "E3505", "25", "7", "117", "E4230", "H1956", "F9783", "F.330", "H1925", "14", "E3671", "133", "C74/1", "55889", "4", "6083.13", "557", "H4561", "565", "633", "1970", "5366.1", "628"], "data": [334, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "MSN", "count": 160, "min": "1", "max": "SH.915"}, {"values": {"label": ["1944", "1945", "NA", "1946", "1941", "1943", "1942", "28", "26", "0", "13", "19", "1947", "1928", "3", "1930", "27", "1951", "1932", "1933", "1937", "1940", "1948", "1935", "30", "31", "1934", "8", "21"], "data": [64, 57, 193, 53, 12, 39, 17, 1, 1, 2, 2, 1, 34, 1, 1, 4, 1, 1, 1, 1, 2, 1, 5, 1, 1, 1, 1, 1, 1]}, "label": "YOM", "count": 29, "min": "1918", "max": "NA"}, {"values": {"label": ["NA"], "data": [500]}, "label": "Flight number", "count": 1, "min": "NA", "max": "NA"}, {"values": {"label": ["Kelly AFB (ex Brooks Field, San Antonio) Texas", "Tiruppur Tamil Nadu", "Dalry Ayrshire", "Medell\u00edn Antioquia", "Dakar Dakar Region", "Bovingdon AFB Hertfordshire", "Greeba Isle of Man", "Aljammalab White Nile (<U+0627><U+0644><U+0646><U+064A><U+0644> <U+0627><U+0644><U+0623><U+0628><U+064A><U+0636>)", "Atlantic Ocean All World", "Kwajalein All Marshall Islands", "Malakal Upper Nile (<U+0623><U+0639><U+0627><U+0644><U+064A> <U+0627><U+0644><U+0646><U+064A><U+0644>)", "Volochanka Krasnoyarsk Krai", "Columbus Georgia", "Karlovy Vary Karlovy Vary Region (Karlovarsk\u00fd kraj)", "Port Moresby National Capital District", "Shanghai-Longhua Shanghai", "Coffey Lake Alberta", "Vancouver British Columbia", "Tatsfield Surrey", "Abadan Khuzestan", "San Salvador-Ilopango San Salvador", "Niamey Niamey City District", "Torino-Mirafiori Piedmont", "Newark New Jersey", "Nicoya Guanacaste (North Pacific)", "Beryozovo Tula oblast", "Driffield AFB East Yorkshire", "Songea Ruvuma Region", "Cartagena Bol\u00edvar", "Cape May Point New Jersey", "Austin-Bergstrom Texas", "H3 Oil Station Al-Anbar (<U+0627><U+0644><U+0623><U+0646><U+0628><U+0627><U+0631>)", "Nal (Bikaner) Rajasthan", "Ometepec Guerrero", "Rome-Centocelle Lazio", "Ch\u00e2tillon-sur-Colmont Mayenne", "Khabarovsk Khabarovsk Krai", "Gainesville-Lee Gilmer Georgia", "North Luffenham AFB Rutland", "Malaybalay Bukidnon", "Windsor Ontario", "Livingston Montana", "Finningley AFB South Yorkshire", "Rio de Janeiro-Santos Dumont Rio de Janeiro", "Wright-Patterson AFB (Dayton) Ohio", "Luqa All Malta", "Bulolo Morobe", "Gilze-Rijen AFB North Brabant", "Nairobi-Eastleigh (Moi Air Base) Nairobi City District", "Atsugi NAS Kanto", "New York-LaGuardia New York", "Mt Hestfjall Northeastern Region (Nor\u00f0urland eystra)", "Fort Wainwright AFB (Ladd Field) Alaska", "Trinidad Beni", "Bainbridge Maryland", "Barcelona Catalonia", "Algiers Algiers", "Ketchikan Alaska", "Schofields New South Wales", "G\u00e9menos Bouches-du-Rh\u00f4ne", "London-Heathrow London Metropolis", "Cottesmore AFB Rutland", "Mistassini Lake Quebec", "Mys Kosistyy Krasnoyarsk Krai", "Stockholm-Bromma Uppland", "Natal Rio Grande do Norte", "Oakington Cambridgeshire", "Cirrus Lake Ontario", "Lookout Rock West Virginia", "Vietnam All Vietnam", "Croydon Surrey", "Perkinsville Vermont", "Fort Knox Kentucky", "Leninabad Sughd Province", "Cebu City Cebu", "Quyquyh\u00f3 Paraguar\u00ed", "Al Mayadin Deir ez-Zor Governorate (<U+0645><U+064F><U+062D><U+0627><U+0641><U+0638><U+0629> <U+062F><U+064A><U+0631> <U+0627><U+0644><U+0632><U+0648><U+0631><U+200E>)", "Hall's Bay Newfoundland & Labrador", "Poshkakagan Lake Ontario", "Karkinyts\u2019ka Gulf Autonomous Republic of Crimea", "Grey Trout Lake Ontario", "Roncesvalles Tolima", "Kwagama Lake Ontario", "Hamlin Saskatchewan", "Mt Makiling Laguna", "Calcutta West Bengal", "Cloughey Down", "Isiolo Rift Valley", "Antananarivo Antananarivo Province", "Moscow-Vnukovo Moscow oblast", "Pacific Ocean All World", "Es\u00e9ka Centre", "Oran-Tafraoui Oran", "Newtownards Down", "Niton Isle of Wight", "Sargasso Sea All World", "Inishtrahull Island Ulster", "Saigon Th\u00e0nh ph<U+1ED1> H<U+1ED3> Ch\u00ed Minh City District", "Mt Meenard Londonderry", "Bizerte Bizerte Governorate (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+0628><U+0646><U+0632><U+0631><U+062A><U+200E>)", "Campo de Marte AFB (S\u00e3o Paulo) S\u00e3o Paulo", "Oberr\u00f6blingen Saxony-Anhalt", "Melbourne Florida", "Zenag Morobe", "Tumlehed V\u00e4sterg\u00f6tland", "Woodley Berkshire", "Vichy Allier", "Shaibah AFB (Basrah) Al-Basrah (<U+0627><U+0644><U+0628><U+0635><U+0631><U+0629>)", "Ecuador All Ecuador", "Diyarbakir Southeastern Anatolia Region (G\u00fcneydogu Anadolu B\u00f6lgesi)", "El Palomar AFB Buenos Aires province", "Eskisehir Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "Whidbey Island NAS (Ault Field) Washington", "Mor\u00f3n AFB Buenos Aires province", "Recife Pernambuco", "Yogyakarta Special Region of Yogyakarta", "Wuwei Gansu", "Bergamo Lombardy", "Kelso Washington", "Mt Tupungato Mendoza", "Antofagasta Regi\u00f3n de Antofagasta", "Ponta Delgada Azores Islands", "Naberezhnaya Moscow oblast", "Svolvaer (Lofoten Islands) Nordland", "Banke Aran", "Barra Hebrides Islands", "Kempsey New South Wales", "Malm\u00f6 Sk\u00e5ne", "Quebec Quebec", "Pendotiba Rio de Janeiro", "Itapemirim Esp\u00edrito Santo", "Orl\u00e9ans-Bricy Loiret", "Bucharest-Baneasa Bucure<U+0219>ti", "Ballykelly AFB Londonderry", "Montevideo Montevideo City District", "Maridi Western Equatoria (<U+063A><U+0631><U+0628> <U+0627><U+0644><U+0627><U+0633><U+062A><U+0648><U+0627><U+0626><U+064A><U+0629>)", "Lae Morobe", "Mt Blue Bell Knoll Utah", "Bahrain All Bahrain", "Woodford Cheshire", "Allen Lake Northwest Territories", "Harstad Troms", "Paraparaumu-Kapiti Coast Greater Wellington Regional Council", "Westgate-on-Sea Kent", "Cambridge Bay Nunavut", "Saposoa San Mart\u00edn", "El Hajeb Mekn\u00e8s-Tafilalet", "Eaton Bray Bedfordshire", "Dishforth AFB North Yorkshire", "Aberdeen-Dyce Aberdeenshire", "Athens-Hassani Attica / <U+0391>tt<U+03B9><U+03BA><U+03AE>", "Hamilton All Bermuda", "Klyazma Moscow oblast", "Ciudad Obreg\u00f3n Sonora", "Saint-Girons Landes", "Burbank California", "Farsala Thessaly / Tessa<U+03BB><U+03AF>a", "Buenos Aires-Aeroparque-Jorge Newbery Buenos Aires City", "La Carlota-General Francisco de Miranda AFB (Caracas) Caracas Federal District", "Junagarh Odisha (Orissa)", "Tunis Tunis Governorate (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+062A><U+0648><U+0646><U+0633><U+200E>)", "San Juan de Marcona Ica", "Floyd Bennett Field New York", "Zanzibar Unguja North Region", "Mautby Norfolk", "New Delhi-Palam National Capital Territory of Delhi", "Gulf of Aden All Yemen", "Belfast-Nutts Corner Antrim", "Ambavalao Fianarantsoa Province", "Annaba Annaba", "Cao B<U+1EB1>ng Cao B<U+1EB1>ng Province", "Borja Loreto", "Ipoh Perak", "Cabo de Palos Region of Murcia", "Sylva North Carolina", "Shijiazhuang Hebei", "Southend Essex", "Bryce Canyon Utah", "Saint-Etienne Loire", "Mt Hymettus Attica / <U+0391>tt<U+03B9><U+03BA><U+03AE>", "Annette Island Alaska", "Guilin Guangxi", "Balmoral New South Wales", "Pir Panjal Mountain Range Jammu and Kashmir", "Manila Metro Manila", "Marrakech Marrakech-Tensift-El Haouz", "Lyneham AFB Wiltshire", "Gallup New Mexico", "Buckenham Norfolk", "Spokane Washington", "Jammu Jammu and Kashmir", "La Rochelle Charente-Maritime", "Les Bouchoux Jura", "Soesterberg AFB Utrecht", "Ch\u00e2lons-en-Champagne Marne", "Los Angeles California", "Mumbai Maharashtra", "Mt Magazine Arkansas", "Ravello Campania", "Wilmington-New Castle County Delaware", "Brightstone Down Isle of Wight", "Porto de Moz Par\u00e1", "Saint Boniface Down Isle of Wight", "Birchington-on-Sea Kent", "Plouznice Liberec Region (Libereck\u00fd kraj)", "Wau Morobe", "Ciudad Bol\u00edvar Bol\u00edvar", "Port Sudan Red Sea (<U+0627><U+0644><U+0628><U+062D><U+0631> <U+0627><U+0644><U+0623><U+062D><U+0645><U+0631>)", "Mt Rumija Coastal Region", "Yakutat Alaska", "Gordon Lake Northwest Territories", "Perpignan Pyr\u00e9n\u00e9es-Orientales", "Trappa Piedmont", "B\u00e9char B\u00e9char", "Bah\u00eda Blanca Buenos Aires province", "Tacoma Washington", "Taldom Moscow oblast", "Moreton-in-Marsh AFB Gloucestershire", "Guildford Western Australia", "Saint Asaph Denbighshire", "Elgin Texas", "Goose Bay Newfoundland & Labrador", "Memphis Tennessee", "Zambezi North-Western", "Bukit Tanjung Hantu Perak", "Abingdon AFB Oxfordshire", "Norfolk Virginia", "Krasnoyarsk Krasnoyarsk Krai", "Dinalungan Aurora", "Uetersen Schleswig-Holstein", "Madrid-Barajas Madrid", "Nome Alaska", "Miami Florida", "Kunming Yunnan", "Mitwaba Katanga", "Chelles-le-Pin Seine-et-Marne", "Leeuwarden Friesland", "Karachi Sindh (<U+0633><U+0646><U+068C> <U+0633><U+0646><U+062F><U+06BE>)", "Le\u00f3n Guanajuato", "Saskatchewan Saskatchewan", "Copenhagen Hovedstaden", "Zlatoust Chelyabinsk oblast", "Elmendorf-Richardson AFB (JBER) Alaska", "Srinagar Jammu and Kashmir", "Signal Mountain Tennessee", "Casablanca Grand Casablanca", "Johannesburg Gauteng", "Northolt AFB London Metropolis", "Paris-Le Bourget Seine-Saint-Denis", "Levy South Carolina", "Chelford Cheshire", "Waterbeach AFB Cambridgeshire", "Lakhdaria Bouira", "Madrid AFB Cundinamarca", "Cerbaiola Friuli-Venezia Giulia", "Qingdao Shandong", "Cairo Cairo", "Yamas\u00e1 Monte Plata", "Topcliffe AFB North Yorkshire", "Rome-Fiumicino-Leonardo da Vinci Lazio", "Oxon Hill Maryland", "Guaymas Sonora", "Viterbo Lazio", "Andrews AFB Maryland", "Ed Dueim White Nile (<U+0627><U+0644><U+0646><U+064A><U+0644> <U+0627><U+0644><U+0623><U+0628><U+064A><U+0636>)", "Mukden Liaoning", "Ward Colorado", "Boston Massachusetts", "Iloilo City Iloilo", "Swinderby AFB Lincolnshire", "Lyon-Bron Rh\u00f4ne", "Baltimore Maryland", "Mediterranean Sea All World", "Vancouver Island British Columbia", "Paris Paris", "Ch\u00e2teau Garnier Alpes-de-Haute-Provence", "Monte da Caparica Estremadura - Lisbon District", "Coalinga California", "Chanolles Alpes-de-Haute-Provence", "Beirut Beirut Governorate", "Istres-Le Tub\u00e9 Bouches-du-Rh\u00f4ne", "Lake Iv\u00f6sj\u00f6n Sk\u00e5ne", "California California", "Jasper Arkansas", "Saluda North Carolina", "Locri Calabria", "Sandoway Rakhine State", "Hendon Middlesex", "Bandung West Java", "Ciudad del Carmen Campeche", "Jacksonville-Towers Field NAS Florida", "Condamine Queensland", "Ulrichstein Hesse", "Radlett Hertfordshire", "Hullavington AFB Wiltshire", "Tain AFB Ross and Cromarty", "Amberley Queensland", "Pisa Tuscany", "Saint-Marcouf Islands Manche", "La Grita T\u00e1chira", "Mati Davao Oriental", "Columbus-John Glenn (Port Columbus) Ohio", "Bel\u00e9m Par\u00e1", "Mobile Alabama", "Mombasa Coast", "Hellishei\u00f0i Southern Region (Su\u00f0urland)", "Brazil All Brazil", "Mt Netem-Pe Republic of Yamalia", "Mt Hamilton California", "Poso Central Sulawesi", "Chicago-Midway Illinois", "Dallas-Love Field Texas", "Mt Sanford Alaska", "Guidonia AFB Lazio", "McGregor Bay Ontario", "Sierra Cristais Minas Gerais", "Alto El Arrastradero Cundinamarca", "Vorkuta Republic of Komi", "Somerset Pennsylvania", "Rio Gurupizinho Par\u00e1", "Woodland Washington", "Dorotea V\u00e4sterbotten", "Southport Merseyside", "Mt Cardo Haute-Corse", "Lajes Azores Islands", "Berlin-Gatow Berlin", "North Sea All World", "China All China", "Kindu Maniema", "Venezuela All Venezuela", "Mt Baird Washington", "Kano Kano", "Destin Florida", "Algeciras Andalusia", "Shannon Munster", "Tauranga Bay of Plenty Regional Council", "Jolo Island Sulu", "Glasgow Strathclyde", "Tynda Amur oblast", "Praia de Ponte Negra Rio de Janeiro", "Quonset Point NAS Rhode Island", "Mexico City Federal District of Mexico City", "Bodaibo Irkutsk oblast", "Corpus Christi NAS Texas", "Vienna Vienna", "Verqui\u00e8res Bouches-du-Rh\u00f4ne", "Amsterdam-Schiphol North Holland", "Daly Waters Northern Territory", "Long Island Long Island", "Darwin Northern Territory", "Amman Amman City District", "Nairyah ash-Sharqiyah (<U+0627><U+0644><U+0634><U+0631><U+0642><U+064A><U+0629><U+200E>)", "Turnagain Island Queensland", "Saint-Bauzile Ard\u00e8che", "NA", "Jun\u00edn Mendoza", "Vrede Free State", "Columbus-Rickenbacker (Lockbourne AFB) Ohio", "Rennes Ille-et-Vilaine", "Rome-Urbe Lazio", "L\u00fcbeck-Blankensee Schleswig-Holstein", "Magadan Magadan oblast", "Studham Hertfordshire", "Latrun Jerusalem District", "El Alamein Matruh", "Albacete Castile-La Mancha", "Popowice Masovian Voivodeship (Mazowieckie)", "Boscombe Down AFB Wiltshire", "\u00c7ubuk Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "Enniskillen Fermanagh", "Lisbon Estremadura - Lisbon District", "Peel Isle of Man", "Port Erin Isle of Man", "Eloy Arizona", "Waimate Canterbury Regional Council", "Coulommiers Seine-et-Marne", "Berck-sur-Mer Pas-de-Calais", "Mount Carmel Pennsylvania", "Shell Pastaza", "Reus Catalonia", "Maracaibo Zulia", "Segni Lazio", "Merka Shabeellaha Hoose (<U+0634><U+0628><U+064A><U+0644><U+064A> <U+0627><U+0644><U+0633><U+0641><U+0644><U+0649>)", "British Columbia British Columbia", "Syria All Syria", "Caracas Caracas Federal District", "Blythe California", "Bogot\u00e1-Techo Bogot\u00e1 Capital District", "Erding AFB Bavaria", "Cue Western Australia", "Ciudad Serd\u00e1n Puebla", "Keerbergen Flemish Brabant", "Lindholme AFB South Yorkshire", "Wylye Wiltshire", "Prince George British Columbia", "Northwood London Metropolis", "Ekron-Tel Nof AFB Central District", "Wiesbaden-Erbenheim AFB Hesse", "Oslo-Gardermoen Akershus", "Di Linh L\u00e2m \u00d0<U+1ED3>ng Province", "Offutt AFB (Bellevue) Nebraska", "Greenville North Carolina", "K\u00f6nigstein im Taunus Hesse", "Coronel Pringles Buenos Aires province", "Caracas-Maiquet\u00eda-Sim\u00f3n Bol\u00edvar Vargas", "Laverton AFB (Melbourne) Victoria", "Paris-Orly Val-de-Marne", "Singapore-Seletar All Singapore", "Toulon Var", "Bel\u00e9m-Val de Cans-J\u00falio Cezar Ribeiro Par\u00e1", "S\u00e3o Paulo-Guarulhos S\u00e3o Paulo", "Schilling AFB (Smoky Hill AFB), Salina Kansas", "Puerto Cabello Carabobo", "Macau Macau", "Lumbreras La Rioja", "Tel Aviv (<U+05EA><U+05DC> <U+05D0><U+05D1><U+05D9><U+05D1>-<U+05D9><U+05E4><U+05D5>) Tel Aviv District", "V\u00e9lizy-Villacoublay Yvelines", "Lod (<U+05DC><U+05D5><U+05B9><U+05D3>) Central District", "Lake Mead Nevada", "Auchenblae Aberdeenshire", "Gore Oromia", "Hinojosa del Duque Andalusia", "Cap-des-Rosiers Quebec", "Fassberg AFB Lower Saxony", "Berlin-Tempelhof Berlin", "Aden-Khormaksar 'Adan (<U+0639><U+062F><U+0646>)", "Wadi Halfa Northern (<U+0627><U+0644><U+0634><U+0645><U+0627><U+0644><U+064A><U+0629>)", "Melun-Villaroche Seine-et-Marne", "Kittigazuit Northwest Territories", "Buenos Aires Buenos Aires City", "Sywell Northamptonshire", "Turukhansk Krasnoyarsk Krai", "Mauripur AFB (Karachi) Sindh (<U+0633><U+0646><U+068C> <U+0633><U+0646><U+062F><U+06BE>)", "Port Underwood Marlborough District Council", "Desford Leicestershire", "Roswell New Mexico", "Sydney Nova Scotia", "Rota Island Northern Marianna Islands", "Thruxton Hampshire", "Ellsworth AFB South Dakota", "Batu Melintang Negeri Sembilan", "Liberec Liberec Region (Libereck\u00fd kraj)", "Caribbean Sea All World", "Kinloss Moray (Elginshire)", "Hickam AFB Hawaii", "Ravolzhausen Hesse"], "data": [1, 1, 1, 1, 1, 4, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Crash location", "count": 446, "min": "Abadan Khuzestan", "max": "\u00c7ubuk Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)"}, {"values": {"label": ["United States of America", "United Kingdom", "Egypt", "France", "Portugal", "Greece", "Slovakia", "Italy", "Belgium", "Ireland", "Czech Republic", "Mexico", "Germany", "Sudan", "South Africa", "Malaysia", "Tanzania", "Zimbabwe", "Switzerland", "Spain", "World", "Colombia", "Sweden", "Indonesia", "Cuba", "Norway", "Philippines", "Canada", "New Zealand", "Brazil", "Poland", "Iraq", "Australia", "Netherlands", "Denmark", "Pakistan", "Chile", "China", "Turkey", "India", "Morocco", "Hungary"], "data": [209, 113, 4, 31, 2, 4, 1, 4, 5, 1, 2, 2, 6, 3, 1, 1, 1, 1, 9, 14, 1, 3, 7, 6, 2, 4, 3, 28, 2, 4, 1, 5, 4, 4, 1, 1, 2, 2, 1, 1, 3, 1]}, "label": "Country", "count": 42, "min": "Australia", "max": "Zimbabwe"}, {"values": {"label": ["North America", "Europe", "Africa", "Central America", "Asia", "World", "South America", "Oceania"], "data": [237, 210, 13, 4, 20, 1, 9, 6]}, "label": "Region", "count": 8, "min": "Africa", "max": "World"}, {"values": {"label": ["2", "0", "3", "6", "4", "9", "16", "5", "1", "7", "8", "12", "10", "13", "11", "20"], "data": [91, 78, 81, 27, 81, 5, 2, 59, 39, 12, 11, 6, 5, 1, 1, 1]}, "label": "Crew on board", "count": 16, "min": "0", "max": "NA"}, {"values": {"label": ["0", "3", "1", "4", "9", "16", "2", "5", "7", "6", "8", "12", "10", "11"], "data": [241, 50, 37, 46, 6, 3, 60, 20, 7, 16, 6, 4, 3, 1]}, "label": "Crew fatalities", "count": 14, "min": "0", "max": "5"}, {"values": {"label": ["0", "NA", "5", "3", "4", "1", "2", "12", "8", "6", "7"], "data": [397, 9, 4, 12, 5, 38, 26, 2, 4, 2, 1]}, "label": "Pax on board", "count": 11, "min": "0", "max": "9"}, {"values": {"label": ["0", "5", "3", "1", "12", "2", "6", "4"], "data": [460, 2, 5, 18, 2, 9, 1, 3]}, "label": "PAX fatalities", "count": 8, "min": "0", "max": "9"}, {"values": {"label": ["0", "5"], "data": [499, 1]}, "label": "Other fatalities", "count": 2, "min": "0", "max": "5"}, {"values": {"label": ["0.0 - 5.3", "5.3 - 10.6", "10.6 - 15.9", "15.9 - 21.2", "21.2 - 26.5", "26.5 - 31.8", "31.8 - 37.1", "37.1 - 42.4", "42.4 - 47.7", "47.7 - 53"], "data": [367, 52, 29, 22, 10, 6, 5, 2, 3, 4]}, "label": "Total fatalities", "count": 10, "min": 0.0, "max": 53}, {"values": {"label": ["Shortly after takeoff from Kelly AFB, an engine failed. The aircraft passed over few houses, stalled and crashed in a cotton field. A passenger was killed while all other occupants were rescued, some of them injured. The aircraft was written off. The crew was enroute to Davis Monthan carrying the members of a baseball team taking part to a tournament.", "Crashed in unknown circumstances.", "While cruising in poor weather conditions, the aircraft hit the slope of a mountain located in the region of Dalry. All six occupants were killed.", "Few minutes after takeoff from Medell\u00edn-Las Playas Airport, the crew decided to return for an emergency landing. On final, the twin engine aircraft crashed in flames in a field and was destroyed. Both occupants were uninjured.", "On final approach to Dakar-Yoff Airport, the captain decided to go around due to low visibility causes by poor weather conditions. A second and a third attempt to land were aborted few minutes later. During the fourth attempt, while short of fuel, the aircraft landed hard and the undercarriage were sheared off. The aircraft slid on its belly for several yards and came to rest, broken in two. Six passengers were killed while nine other occupants were injured.", "The crew was performing a training sortie from RAF Bovingdon. Enroute, the pilot encountered poor visibility due to foggy conditions and was unable to locate the destination airfield. Eventually, he ordered his crew to bail out and attempted to make a solo approach to RAF Bovingdon. Due to fog, he decided to reduce his altitude in an attempt to establish a visual contact with the ground when the airplane hit tree tops and crashed in Garston, east of the airfield. The pilot was killed while all five other crew members were later rescued.", "On approach to Douglas, the crew encountered poor visibility with mist. The captain decided to divert to RAF Jurby when the aircraft hit a hill, overturned and came to rest upside down. The aircraft was damaged beyond repair and all seven occupants were injured.", "Enroute to Khartoum, the twin engine aircraft crashed in unknown circumstances near Aljammalab, about 100 km southwest of Khartoum. The aircraft was destroyed and all 15 occupants were killed. All of them were pilots flying to UK to take deliver of Spitfire for the SAAF. Crew: Maj Frederick Welgemoed, pilot, Lt Hermanus Gerhardus van Rooyen, copilot, Petrus Andries Burger, flight engineer, Cpl Leslie Donovan Case, wireless operator. Passengers: Maj Andrew Christian Bosman, pilot, Cpt Hendrik Christoffel Weideman Liebenberg, pilot, Lt Ronald Leslie Crisp, pilot, Lt Jacobus Stephanus Gericke, pilot, Lt Robert Cecil Hirst, pilot, Lt Hermanus Johannes Kritzinger, pilot, Lt John Jurie Landman, pilot, Lt Peter David Nelson, pilot, Lt Peter Nicolay, pilot, Lt Norman Peter Prinsloo, pilot.", "\"Some 80 minutes after its departure from Belfast-Aldergrove Airport, the aircraft crashed in unknown circumstances into the Atlantic Ocean, about 150 km northwest of the Irish coast, at approximately 55\u00b000'00.0\"\"N 12\u00b000'00.0\"\"W. All nine crewmen were lost in the crash. It is believed that the crew encountered technical problems with some instruments. Crew (202nd Squadron): S/L D. L. Bisgood", "Crashed into the sea shortly after takeoff from the Kwajalein Atoll Airport. All 16 occupants were killed.", "Enroute, the crew was forced to attempt an emergency landing following an engine failure. The aircraft crash landed 10 km south of Malakal and came to rest. Two passengers were slightly injured while all other occupants were unhurt. The aircraft was damaged beyond repair.", "Enroute from Mys Kosistyy to Khatanga, the pilot was forced to attempt an emergency landing in the Taymyr Peninsula after the left engine failed. The aircraft crash landed in the tundra about 180 km northwest of Volochanka. The aircraft was damaged beyond repair but all 33 occupants survived the accident. Four days later, as the rescue teams were unable to locate the wreckage, the captain and eight passengers decided to leave the crash site to search for help. On May 11, 1947, the wreckage was eventually spotted and the rescuers arrived on site to evacuate the remaining 24 occupants. Unfortunately, no trace of the pilot and the eight other passengers was ever found. Officially registered CCCP-L1204 in the Soviet Register, the aircraft still have the 42-32892 registration on tail. The wreckage was recovered in 2016 and transferred to as delivered to the Museum of Northern development in Krasnoyarsk.", "On final approach to runway 05, while at a height of 10 feet, the DC-3 was hit by a private Vultee BT-13 registered NC55312 and carrying one pilot. Following the collision, both aircraft climbed to a height of 150 feet and then stalled and crashed in a huge explosion. Both aircraft were destroyed and all nine occupants were killed.", "In flight, all crew members decided to bail out and abandoned the aircraft that dove into the ground and crashed in a pasture. The aircraft was destroyed but all occupants were safe.", "While descending to Port Moresby Airport, the twin engine aircraft crashed in unknown circumstances 20 miles east of the city. Both crewmen were rescued while the aircraft was damaged beyond repair.", "Shortly after takeoff from Shanghai-Longhua Airport, while in initial climb, an engine failed. The aircraft stalled and crashed in an industrial area located near the airport. While both pilots were seriously injured, three people on the ground were killed.", "While on a flight from Yellowknife, the pilot was forced to attempt an emergency landing following an engine failure. The aircraft crash landed near Coffey Lake and was written off. All three occupants were rescued.", "While approaching Vancouver from the North, the crew did not realized that his altitude was insufficient due to the low visibility caused by night. The twin engine aircraft hit the east slope of a mountain located near Mt Elsay, some 16 km north of Vancouver. SAR operations were conducted in a large area but eventually suspended few days later as no trace of the aircraft nor the crew was found. Walkers found the wreckage of the aircraft in a remote area on September 27, 1994.", "While approaching Croydon Airport on a flight from Paris-Le Bourget, the twin engine aircraft crashed in unknown circumstances in a field located in Tatsfield, about 7 miles southeast of Croydon. The aircraft was destroyed and both occupants were killed, among them R. A. Milburn, pilot, co-owner and founder of this company.", "Crashed on landing for unknown reasons. All three occupants were rescued and the aircraft was destroyed.", "On final approach, the aircraft was too low and hit a train. On impact, the aircraft stalled and crashed in flames short of runway threshold. All four occupants were injured while the aircraft was destroyed by impact forces and a post crash fire. No one was hurt in the train.", "On final approach to Torino-Mirafiori Airport, the three engine crashed in flames on the Aeritalia hangar located near the airport. Both pilots were killed while three other occupants plus three people in the hangar were injured. Crew: Cpt Giulio Barattolo, pilot, \u2020 Cpt Bruno Gazzi, copilot, \u2020 Mar Pasquale Girometti, Mot Marco Ferrando, mechanic, Sgt Maj Genesio Saccucci, radio operator.", "The aircraft was approaching Newark Airport for landing. The airplane was too far to the right for an approach to runway 06 and the tower controller radioed that he was in line for an approach to runway 28. The approach was then made to runway 28 which is 7,100 feet long with an additional usable 500 feet at the end. The approach was fast, however and contact was not made with the runway until within the last 2,000 feet. The aircraft continued off the runway and ran into a drainage ditch where a fire broke out, which was quickly extinguished. Source: https://aviation-safety.net/database/record.php?id=19470504-0", "Shortly after takeoff, while in initial climb, an engine failed. The aircraft stalled and crashed in flames 5 km from the airport. The aircraft was destroyed and all 11 occupants were killed.", "While cruising at an altitude of 1,300 meters en route to Kramatorsk, Ukraine, the left engine failed. Shortly later, the right engine overheated and lost power. In such situation, the pilot attempted to make an emergency landing when the aircraft crash landed onto a hillside. All five occupants were unhurt while the aircraft was damaged beyond repair.", "On final approach to RAF Drieffield, the crew encountered control problems and informed ground that he was attempting an emergency landing. Few seconds later, the aircraft nosed down and crashed in a huge explosion few hundred yards short of runway threshold. The aircraft was destroyed by impact forces and a post crash fire and both pilots were killed.", "Crashed on landing in unknown circumstances. The aircraft was damaged beyond repair and all four occupants were rescued.", "During initial climb, while at a height of some 300 meters, the twin engine aircraft went out of control and crashed into the sea few hundred yards off shore. Both crew members were killed.", "The crew was conducting a training mission (pilot transition program). While cruising at an altitude of 2,500 feet and completing a turn to the left, the four engine aircraft christened 'Star of Athens' went into a dive and crashed into the Delaware Bay, some 7 miles west off Cape May Pount. The aircraft was destroyed on impact and all four crew members were killed.", "The crew was forced to make an emergency belly landing southeast of Bergstrom AFB, near Austin. There were no casualties but the aircraft was damaged beyond repair.", "Enroute from Cairo to Basra on a cargo flight, the crew encountered an unexpected situation and decided to divert to the H3 Oil Station Airfield for an emergency landing. The four engine aircraft crash landed and came to rest. All four occupants were unhurt while the aircraft was damaged beyond repair.", "Crashed on landing. Occupant fate unknown.", "During the takeoff roll, the three engine aircraft was caught by strong crosswinds, went out of control and veered off runway before coming to rest, broken in two. Both pilots were injured and the aircraft was written off.", "Crashed in flames during takeoff for unknown reason. The aircraft that was carrying mail and few passengers and crew was destroyed by a post crash fire but there were no casualties.", "The twin engine aircraft was returning to Paris-Le Bourget following a cartographic mission. After sunset, while flying at low height, the aircraft hit a tree and crashed in a field in Ch\u00e2tillon-sur-Colmont. All four occupants, two photographs and two pilots, among them Robert Leriche, were killed. The accident occurred in May (the exact date remains unclear).", "On final approach, the visibility was poor due to severe weather and as the aircraft was too low, it hit with its right wing a radio antenna located 2,600 meters short of the runway threshold. The aircraft stalled and crashed in a huge explosion, killing all 22 occupants.", "The DC-3 cargo plane landed on a runway which was 4,200 feet long but the pilot made his approach too fast. Brakes were not used until within 300 feet of the end of the runway. The aircraft continued off the runway, down a rough incline and across a dirt road. It was considered as damaged beyond repair. Source: https://aviation-safety.net/database/record.php?id=19470516-1", "During the takeoff roll, clear for rotation, the pilot lost directional control of the aircraft that overran and came to rest. There were no casualties but the aircraft was written off.", "While cruising in marginal weather conditions, the aircraft hit the slope of Mt Katanglad located about 24 km northwest of Malaybalay. All 18 occupants were killed. At the time of the accident, the visibility was poor due to weather and it appears that Mt Katanglad was showed with an elevation of 7,900 feet on maps while its real altitude was 9,300 feet.", "While approaching the Selfridge Air National Guard Base from the south, the twin engine aircraft crashed in unknown circumstances two miles south of Windsor, Ontario. All six occupants were killed.", "Enroute, the crew encountered an unexpected situation and decided to abandon the aircraft and to bail out. The aircraft dove into the ground and crashed in a mountainous are located 5 miles southeast of Livingston. Both pilots were found unharmed.", "The aircraft lost power during takeoff roll. The captain decided to abandon the takeoff procedure and raised the undercarriage. The aircraft sank on its belly and skidded for several yards before coming to rest. There were no casualties.", "Crashed in unknown circumstances in Santos Dumont Airport.", "On final approach to Wright-Patterson AFB, the aircraft went out of control and crashed in flames in a field located 5 miles short of runway. Five crew members were killed while two others were seriously injured.", "On final approach to Luqa Airport, the four engine aircraft was too low and hit a stone pile located in a stone-pit. The undercarriage were partially sheared off and the aircraft belly landed and came to rest. There were no casualties but the aircraft was damaged beyond repair. For unknown reason, the crew continued the final approach at an insufficient altitude.", "While on a cargo flight from Lae, the crew encountered an unexpected situation and was forced to make an emergency landing. The twin engine aircraft came to rest in a field located near Bulolo and was damaged beyond repair. Both crewmen were unhurt.", "The crew was engaged in a combined exercise with another RNAF Anson registered D-21 and carrying a crew of six as well. After takeoff from the Gilze-Rijen AFB, while in initial climb, both aircraft collided and crashed in a field. They were totally destroyed and all 12 crew members were killed.", "During the takeoff roll, the aircraft skidded and went out of control. The undercarriage collapsed and the airplane came to rest. There were no casualties among the crew of five from the 82nd Squadron.", "The crew was engaged in a combined exercise with another RNAF Anson registered D-22 and carrying a crew of six as well. After takeoff from the Gilze-Rijen AFB, while in initial climb, both aircraft collided and crashed in a field. They were totally destroyed and all 12 crew members were killed.", "The aircraft was performing a flight from Seoul-Kimpo to Tachikawa AFB with several US officers and five civilians on board. While approaching the Tokyo area by night and from the southwest, the crew completed a turn at an altitude of 1,500 meters in marginal weather conditions when the aircraft hit the slope of a mountain located west of the city of Atsugi, about 30 km southwest of Tachikawa AFB. The aircraft was destroyed by impact forces and burned completely. All 41 occupants were killed. At the time of the accident, the visibility was 10 km with cumulus and altostratus between 1,000 and 2,500 meters.", "\"Flight 521 taxied from its parked position, rolled onto Runway 18, and without pause or hesitation accelerated for take-off. The throttles were advanced. Air speed increased to above 90 miles per hour. Captain Baldwin applied back pressure to the control column, but the \"\"feel\"\" of the controls was \"\"heavy", "Enroute from Reykjavik to Akureyri, while flying in marginal weather conditions east of the city of Siglufj\u00f6r\u00f0ur, the aircraft hit the slope of Mt Hestfjall located on the west coast of the H\u00e9\u00f0insfj\u00f6r\u00f0ur Bay. The aircraft was totally destroyed and all 25 occupants were killed. Up to date, worst airplane crash in Iceland History.", "Shortly after takeoff from Fort Wainwright AFB (Ladd Field), while in initial climb, the aircraft stalled and crashed in flames 3 miles east of the airfield. Nine crew members were rescued while three others were killed.", "Crashed in unknown circumstances in a swampy area. Occupant fate remains unknown.", "The four engine aircraft left Newark Airport at 1704LT on a flight to Miami. While climbing to an altitude of 4,000 feet, the aircraft went out of control, dove into the ground and crashed in a huge explosion in a field located 2 miles east of Bainbridge. The aircraft was totally destroyed and all 53 occupants were killed.", "The crew was performing a cargo flight from London-Gatwick to Barcelona. After touchdown, the four engine aircraft was unable to stop within the remaining distance. It overran, lost its undercarriage, went through a fence, slid for several yards and lost its both left engines before coming to rest. All four crew members were unhurt while the aircraft was damaged beyond repair. It is believed that the landing was completed with an excessive speed.", "Just after lift off, while in initial climb, the three engine aircraft stalled and crashed in flames. All three crew members were killed. Crew: Georges Pascaud, pilot, Jean-Louis Coquerel, radio navigator, Pierre Besson, mechanic.", "Crashed while landing on a lake near Ketchikan. Occupant fate remains unknown. It is reported that the crew forgot to raise the landing gear.", "The crew was completing touch and goes at Schofields Airport. On final approach, the airplane failed to land, overshot and eventually crashed in a wooded area past the runway end. The aircraft was destroyed while both pilots were injured.", "On the leg from Nice to Marseille, the crew started the descent to Marignane Airport when the three engine aircraft hit the slope of a mountain located in the Sainte-Beaume Mountain Range, near G\u00e9menos. A crew member was seriously injured while both other occupants were killed. Two days later, the only survivor died from his injuries. Delivered in September 5, 1945, the aircraft entered in service in June 8, 1946 only. Crew: Gabriel Cahouet, pilot, Henri Decoudray, radio navigator, Robert Salles, mechanic.", "Following a wrong approach configuration, the aircraft landed very hard. After being parked on apron, the technician proceeded to a complete inspection which revealed that the fuselage was buckled. The aircraft was declared as damaged beyond economical repair.", "The crew was performing a training sortie when the aircraft went out of control, nosed down, lost several pieces and partially disintegrated in the air before crashing in a field located 6 miles east of RAF Cottesmore. All three crew members were killed.", "While landing on Mistassini Lake, the single engine aircraft went out of control, came to rest upside down and sank. There were no casualties but the aircraft was lost.", "On landing at Mys Kosistyy, near the Khatanga Bay, when had to go around due to strong cross winds. Engines # 3 and 4 flamed out shortly afterwards so the aircraft stalled and crashed in the tundra some 1,500 meters from the runway. While the aircraft was damaged beyond repair, all six occupants escaped unhurt.", "Crashed on landing for unknown reason. There were no casualties.", "On touchdown by night at Natal Airport, the aircraft went out of control, veered off runway, collided with airport facilities and came to rest in flames. Three crew members and two passengers were killed while 13 other occupants were injured. The aircraft was destroyed by fire.", "While on a training sortie in RAF Oakington, the aircraft belly landed and slid for several yards before coming to rest. All four crew members were unhurt while the aircraft was damaged beyond repair.", "Shortly after takeoff from Cirrus Lake, while climbing, the single engine aircraft hit trees and crashed in flames in a wooded area. The pilot was injured and the aircraft was destroyed by fire.", "\"The flight departed Pittsburgh at 1724 and at 1753, 29 minutes later, reported over the Flintstone Intersection, 88 miles southeast of Pittsburgh at 7,000 feet. At 1754 the flight received a message from Washington Airway Traffic Control clearing it to the Herndon Fan Marker to maintain 7,000 feet until further advised The flight was also instructed that there would be an indefinite delay at Herndon but that approach clearance could be expected no later than 1920, which was approximately one hour and 10 minutes later than its estimated time of arrival Immediately after receiving this message the flight was given the 1730 hourly weather sequence report for Washington After acknowledging receipt of the Washington weather report, Flight 410 instructed the company station at Washington to request from Airway Traffic Control a clearance to approach Washington in accordance with contact flight rules on the right side of the west leg of the Arcola radio range This request was approved by Airway Traffic Control and at 1803 the flight received a message clearing it to the Washington tower to cross the Arcola radio range station at or below 2,500 feet and in accordance with contact flight rules. The flight was advised that if this were not possible it was to hold at 2,500 feet and to inform Airway Traffic Control. Prior to establishing its descent the flight was instructed to report when leaving each 1,000-foot level In accordance with these instructions Flight 410 reported leaving the 7,000-foot level at 1805 and two minutes later another report was received from the flight indicating it was leaving 6,000 feet. The flight reported its position as \"\"south of Martinsburg\"\" at 1808 and immediately thereafter reported that it was leaving 5", "Crashed in unknown circumstances in a mountainous area located some 70 km north of \u00d0\u00e0 L<U+1EA1>t. All 12 occupants were killed.", "Shortly after takeoff, while in initial climb, the aircraft stalled and crashed. The passenger and the pilot were injured while the captain was killed. The crew was performing a cargo flight with a load of 604 racing pigeons.", "The flight had originated the previous morning when the plane took off from Davis-Monthan Air Force Base in Tucson, Arizona, for a navigational training mission to the east coast. The plane was scheduled to land at Andrews Field (Later known as Andrews Air Force Base) in Washington, D.C., but due to bad weather was diverted to Pittsburgh Airport where it arrived at 1507LT. After refueling, the aircraft proceeded towards Hanscom Air Force Base in Bedford, Massachusetts, where it was to remain overnight before flying back to Arizona the following day. However, the weather grew worse, and with poor visibility and darkness falling the crew became lost, ending up over Vermont instead of Massachusetts. Shortly after midnight on June 15, the bomber crashed into the southeast side of Hawks Mountain and exploded. All twelve men aboard were killed, and to this day the incident remains the worst aviation accident to ever occur in Vermont. Crew: 1st Lt Robert G. Fessler, pilot, 2nd Lt Wilfred E. Gassett, copilot, 2nd Lt Ceasare P. Fontana, observer, M/Sgt D. D. Jack, crew chief, T/Sgt Paul H. Fetterhoff, T/Sgt Clayton K. Knight, S/Sgt Oliver W. Hartwell, S/Sgt Sylvester S. Machalac, S/Sgt John J. O\u2019Toole, Cpl Harry C. Humphrey, Cpl Robert Clark, Pfc Robert M. Stewart. Source: http://www.newenglandaviationhistory.com/tag/b-29-44-62228/", "Crashed on landing. Crew fate unknown.", "The aircraft lifted off from Leninabad after a takeoff roll of 1,200 meters only. After rotation, while in initial climb at a height of 2-3 meters, the aircraft hit a telephone pole and power cables, stalled and crashed in flames. Three occupants were killed while four others were injured, among them the copilot. The aircraft was partially destroyed by fire. The crew was performing a cargo flight to Alma Ata, carrying a load consisting of apricots and silk.", "For unknown reason, the crew was forced to make an emergency landing on a beach in Cebu City. The aircraft was written off but there were no casualties.", "The twin engine aircraft left Asunci\u00f3n Airport at 1750LT with two officers and two pilots on board. About thirty minutes into the flight, the crew encountered poor weather conditions with thunderstorm activity. The aircraft went out of control and crashed in an uninhabited area located near Quyquyh\u00f3. The pilot was killed and his body was found in the wreckage. However, no trace of the three other occupants was found. It is believed that they may have abandon the aircraft and bail out, but as their bodies were never found, they were considered as deceased.", "\"Flight 121 departed from Karachi at 1537 June 18, 1947, for a return trip to the United States. The climb to the cruising altitude of' 18,500 feet was routine, and the flight was proceeding \u201cdirect\u201d to Istanbul, the first intended point of landing, estimating its arrival there to be 0208 the next day. Five hours after take-off trouble developed in the No. 1 engine, and the No. 1 propeller was feathered. The captain, J H. Hart, decided to continue to Istanbul with the use of three engines, however, it soon became evident that at an altitude of 18,500 feet the airspeed obtainable was not sufficient to provide adequate cooling for the engines. even though climb power was applied. Power was accordingly reduced and altitude was gradually lost. At 17,500 feet the engines still overheated and the descent was continued to 10,000 feet. At 2140, approximately one hour after the failure of engine No 1, the flight advised its company radio in Karachi of the engine trouble, following which it reported its 2200 position. This report placed the aircraft at 14,000 feet, 50 miles east of Baghdad, Iraq, and 90 miles east of the Royal Air Force Field at Habbaniya, Iraq Shortly after this report Habbaniya Tower was advised by the flight that its approximate position was over Baghdad. at an altitude of 10,000 feet, and the flight requested Habbaniya Tower to inform the civilian airfields in their area that the aircraft was proceeding with the use of only three engines to Istanbul Habbaniya Tower replied, stating that no airfields would be open until dawn, and suggested that an emergency landing be made at Habbaniya Flight 121, however, affirmed Its intention to continue, and added that if it were impossible to reach Istanbul, a landing would be made at Damascus, Syria Habbaniya Tower answered, at 2225, that all airfields in the Damascus area were closed until 0400 and again suggested that the flight land at Habbaniya. The flight again stated that It would continue to Istanbul, but that it would turn back to Habbaniya if it experienced any more trouble. Contemporaneous with this communication to Habbaniya Tower the flight sent a message, received in Karachi, and relayed to Damascus, requesting that Damascus Radio be alerted to stand by, and that the airport be opened. At 2308, June 18, Damascus Radio was on the air, and the field was opened as had been re quested. At approximately 2300 the flight reported its position to be 75 miles north west of Habbaniya at 10,000 feet Fifteen to thirty minutes later the purser seated in the passenger cabin noticed that the \"\"fasten seat belt-no smoking\u201d sign had come on", "On final approach to Poshkakagan Lake, the engine failed. The aircraft stalled and crashed on the shore. All four occupants were uninjured while the aircraft was written off.", "An engine failed in flight, forcing the crew to ditch the aircraft into the Karkinyts\u2019ka Gulf, some two km off shore. The aircraft sank fifteen minutes later and the crew of a trawler was able to evacuate 21 wounded people while 8 others, among them two crew members, were killed.", "Crashed in unknown circumstances shortly after takeoff from Grey Trout Lake, Ontario. All occupants survived while the aircraft owned by J. A. Mathieu was damaged beyond repair.", "The twin engine aircraft left Cali at 0827LT on a routine flight to Bogot\u00e1-Techo Airport. Some 45 minutes into the flight, the crew encountered icing conditions and the aircraft went out of control and crashed in a mountainous area located near the village of Roncesvalles, about 50 km southwest of Ibagu\u00e9. All eight occupants were killed.", "Shortly after takeoff from Kwagama Lake, while in initial climb, the single engine aircraft encountered downdraft, stalled and crashed into the lake. Both occupants were rescued while the aircraft sank and was lost.", "Crashed on landing. There were no casualties.", "While flying in marginal weather conditions, the twin engine aircraft hit the slope of Mt Makiling (1,090 meters high) located southeast of Calamba. The wreckage was founded three days later about 50 meters below the summit. All six occupants were killed.", "Crashed in unknown circumstances in Calcutta. The operator SATI may be Soci\u00e9t\u00e9 d'Avions Taxis d'Indochine.", "While approaching the Irish coast, the left engine failed. The crew was unable to maintain the assigned altitude so the captain decided to ditch the aircraft near the South Rock Lighthouse, about 3 km from Coughley (Coghly). The aircraft hit the water surface with the base of its tail, overturned and came to rest upside down. Both crewmen escaped uninjured and found refuge on one wing. They were eventually rescued by the crew of a vessel two hours later. The aircraft was lost.", "Enroute, the right engine failed and caught fire. The captain reduced his altitude and attempted an emergency landing in a swampy area located near Isiolo. The aircraft crash landed and was damaged beyond repair while all 15 occupants were able to evacuate safely. Crew from the 216th Squadron.", "On final approach, the aircraft was too low and hit the ground short of runway, lost its undercarriage and came to rest. There were no casualties but the aircraft was written off.", "One minute after takeoff, while in initial climb at a height of some 50 meters, the aircraft banked left to an angle of 30\u00b0, lost speed and altitude, then hit tree tops and crashed in a wooded area located 3 km from the airport. Four crew members were killed while a fifth crew and the passenger were seriously injured.", "While performing a cargo flight from Guayaquil to San Jos\u00e9, the aircraft failed to arrive in Costa Rica. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor the crew was found. It is possible the aircraft crashed into the Pacific Ocean off the Costa Rican coast.", "While cruising in marginal weather conditions, the three engine aircraft hit the slope of a mountain near Es\u00e9ka. All thirteen occupants were killed. Crew: Louis Coupvent, pilot, Robert Ferrisse, radio navigator, Frank Malaret, mechanic.", "While performing a solo training mission at Oran-Tafraoui Airfield (called BAN Lartigue in the 40's), the pilot lost control of the aircraft that crashed in Ouardia, about 2 km from the airport. The pilot Robert Georges Gosselin was killed.", "Crashed on final approach to Newtownards Airfield. The aircraft was damaged beyond repair and both crewmen were injured.", "Enroute, the twin engine aircraft went out of control and crashed into The Channel, about 24 km southwest of Isle of Wight. Both crew members were killed.", "The four engine aircraft left Hamilton, Bermuda, bound for Morrison AFB located in Palm Beach, Florida. While cruising about 294 miles northeast of the Florida coast, the crew encountered severe weather conditions with thunderstorm activity and turbulence. The aircraft went out of control and crashed into the sea. Some debris were found but no trace of the six occupants that were considered as deceased.", "The crew was engaged in an anti-submarine attack simulation of the HMS Sentinal. While cruising at low height, the seaplane hit the water surface, exploded and crashed about 32 km north of the Inishtrahull Island, off Donegal County. Five crew members were rescued while seven others were killed. For unknown reason, the pilot was flying at a too low altitude to complete the exercise. Crew from the 201st Squadron.", "While flying in a valley in marginal weather conditions, the twin engine aircraft hit tree tops and crashed in a wooded area located on Mt Meenard. Four crew members were injured while a pilot was killed.", "While approaching Bizerta Airport from the east, the twin engine aircraft crashed in unknown circumstances into the Mediterranean Sea, few km off shore. Both occupants were quickly rescued while the aircraft sank and was lost.", "Shortly after takeoff from Campo de Marte Airbase, while in initial climb, the twin engine aircraft went out of control and crashed. All occupants escaped injured while two people on the ground were killed.", "An engine failed enroute, forcing the crew to attempt an emergency landing. The aircraft crash landed in a field in Oberr\u00f6blingen. There were no casualties but the aircraft was damaged beyond repair.", "At 0134LT, the flight departed Augusta bound for Miami. The last communication from the crew was at 0303LT, the morning of July 13, at which time they reported to the Jacksonville Airway radio that they were at 2,000 feet. One and one-half hours later, the aircraft was observed approximately 2 1/2 miles west of Melbourne, Florida, flying southeast at an altitude of from 300 to 500 feet. The engines were heard to sputter and misfire as the aircraft proceeded ahead on a straight course. Altitude was gradually lost, the landing lights were turned on, and seconds later the aircraft struck the ground and crashed 4 miles southwest of Melbourne. Both pilots and twelve passengers were killed while all other occupants were injured, some of them seriously.", "Forced landing in trees in rugged terrain near the head of the Wampit River. Captain Ross K. Crabbe was en route from Lae to Wau with cases of supplies and two Australian passengers. Became trapped in a narrowing valley with low cloud base, deliberately put the aircraft into the spreading top branches of a tree. Crabb was hurled out of the cockpit through the nose and down to a ravine 36 meters below, injuring his back. The Dragon remained wedged in the top of the tree and his calls to the passengers were unanswered. A group of native hunters heard the crash and reported it to a nearby Government station. Two medical assistants were led to the scene, climbed the tree in the dark and administered morphine to the injured passengers and stayed with them for the night. The aircraft fabric was tearing as it moved and settled in the tree. Next day a team with a doctor arrived and the passengers were lowered in baskets. One seriously injured passenger was flown to Sydney by QEA DC-3 for plastic surgery for facial injuries. Source and photo: http://www.goodall.com.au/australian-aviation/dh84-pt2/dh84-dragon-pt2.htm", "The crew was performing a training flight from V\u00e4ster\u00e5s to G\u00f6teborg. On approach to Torslanda Airport from the northwest, the single engine aircraft went out of control, crashed into the sea off Tumlehed and came to rest upside down. Both occupants were rescued while the aircraft was damaged beyond repair.", "The crew (pilots and engineers) was involved in a ground test of the brakes systems. During taxiing, while practicing fast stop, the nose gear collapsed and punctured the cockpit floor. There were no injuries but the aircraft was written off.", "On touchdown, the three engine aircraft skidded and then went out of control. It veered off runway and came to rest in flames in a field. A passenger was killed.", "Crashed in unknown circumstances. Crew fate remains unknown.", "Enroute from Cairo to Basra, the crew was informed by ATC about poor weather in Basra and was instructed to divert to the Shaibah AFB located east of Basra. On approach by night, the pilot was unable to locate the runway and was forced to abandon the landing procedure for a go around. A second attempt to land and a third approach few minutes later were abandoned as well. During the fourth trial, the captain reduced his altitude in an attempt to establish a visual contact with the ground when the four engine aircraft hit the ground and bounced. It gain few meters, flew over a wooded area and eventually stalled and crashed 740 yards further, in a desert area. All six crew members were killed while 12 passengers were injured.", "Crashed somewhere in Ecuador. Occupant fate remains unknown.", "The pilot Sadettin Toker was killed when his Baltimore crashed in unknown circumstances near the Diyarbakir Airport while performing a training sortie.", "Crashed on takeoff from Croydon Airport for unknown reason. Both crew members were injured and the aircraft was written off.", "During the takeoff roll, the captain elected to rotate but the aircraft failed to respond. The crew attempted to make an emergency braking procedure but the aircraft failed to stop within the remaining runway, overran, hit several people who came to the airport to assist to the departure of the aircraft, crossed a road and came to rest in flames. Fourteen occupants plus three people on the ground were killed. Five other occupants plus eight people on the ground were seriously injured. The aircraft was destroyed by fire. The crew was on a flight to the nearby airbase of Mor\u00f3n to take part to the commemoration of the death of the Argentinian General Jos\u00e9 de San Martin in 1850. About 200 aircraft from the Argentinian Air Force were taking part to this event.", "Crashed while performing a training sortie in Eskisehir AFB. Both crew members were killed.", "On final approach to Whidbey Island-Ault Field NAS, the aircraft was too low, hit tree tops and crashed in flames. All five crew members were killed.", "The crew consisting of pilots and engineers was completing a test flight in Mor\u00f3n AFB following engine maintenance. After touchdown, the aircraft collided with a tank-truck that was mistakenly on the runway. The truck and the airplane exploded. Two crew members and the truck driver were killed while four other occupants were injured.", "After landing, the four engine aircraft encountered brakes problem and was unable to stop within the remaining distance. It overran and came across a river 250 yards further on. All 24 occupants were evacuated safely, four of them were slightly injured. The aircraft was written off.", "Crashed in unknown circumstances into the Rio Capibaribe in Recife. All six crew members were killed.", "The crew was performing a humanitarian flight from Singapore on behalf of the Indonesian Red Cross with drugs on board. On final approach to Yogyakarta-Maguwo Airport, the Dakota was shot down by the pilots of two NEIAF (Netherlands East Indies Air Force) fighters and crashed in an open field located few km from the airport. All five occupants were killed. Indonesian authorities confirmed that the aircraft was flying under civilian color scheme but did not have any Red Cross painted on its fuselage. So it is most probable that the fighters' pilots mistook the aircraft and thought it was a military plane carrying soldiers. Both pilots were Australian citizens as all three passengers were high ranking Indonesian Army Officers. Still registered in India, the aircraft was offered few days ago to the Indonesian government by Jawaharlal Nehru, future Indian Prime Minister. Following this tragedy, Indonesian Authorities will rename the airport of Yogyakarta that became Adisutjipto instead of Maguwo. Crew: A. N. Constantine, pilot, R. Hazlehurst, copilot, B. Ram, flight engineer, A. Q. Wirjokoesoemo, radio navigator. Passengers: Agustinus Adisutjipto, Abdulrahman Saleh, Adisumarmo Wirjokusumo.", "While on a flight from Urumqi to Lanzhou, the aircraft crashed in a mountainous area located in the region of Wuwei. The wreckage was found few days later and all 26 occupants were killed, among them one US and one British citizen.", "During the takeoff roll, the aircraft went out of control, veered off runway and came to rest. All five crew members were unhurt while the aircraft christened 'Port of Marseilles' was damaged beyond repair.", "The twin engine aircraft left McChord AFB at 0212LT bound for Hamilton AFB located in Novato, California. About fifteen minutes into the flight, the left engine caught fire and smoke spread into the cabin. Two crew members bailed out when the left wing broke off. Out of control, the aircraft dove into the ground and crashed in a pasture located 15 miles east of Kelso. Both crew who bailed out were able to walk away and to find help while both pilots were killed in the crash.", "After passing over Mendoza, enroute to Santiago de Chile, the crew encountered poor weather conditions with strong winds (up to 180 km/h) and heavy snow falls. While cruising at an altitude of 15,000 feet, the four engine aircraft christened 'Star Dust' hit the slope of Mt Tupungaro located in the Argentinian Andes. As the airplane failed to arrive, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor the crew was found. About 53 years later, in 2000, an official mission conducted by Argentinian Army Officers and Scientists was organized to find the aircraft. Few debris and three bodies were found and repatriated down to the valley.", "While cruising in marginal weather conditions, the twin engine aircraft christened 'Pedro de Valdivia' hit the slope of Mt Coloso located in the region of Antofagasta. All three occupants were killed. Crew: Roberto Reed Merino, pilot, Enrique \u00c1lmos Ojeda, copilot.", "Shortly after takeoff from Ponta Delgada Airport, while in initial climb, the twin engine aircraft went out of control and crashed into the sea few km off shore. Few debris were found on water surface but all six occupants were killed.", "The crew was engaged in a local training flight in Moscow. While flying at an altitude of 400-450 meters, the crew initiated an engine failure when the aircraft lost speed while performing a steep turn to the left. The aircraft went upside down and crashed in Naberezhnaya, in the suburb of Moscow. All five occupants were killed. It was reported that both passengers were illegal.", "While landing in the Svolv\u00e6r Bay, the seaplane went out of control and plunged into the water before coming to rest. There were no casualties among the 12 occupants while the aircraft was damaged beyond repair.", "The aircraft and its crew were dispatched from Baku-Zabrat Airport to the south (125 km south of Baku) to complete a night training program. While approaching Banke Airstrip, at a height of 100 meters, the pilot in command made a turn to the left when the aircraft stalled and crashed. Four crew members were killed while two others were seriously injured.", "Crashed shortly after takeoff from Barra Airport, Barra Island. The aircraft was written off and all seven occupants were rescued.", "The aircraft was on its way from Kodiak to Unalaska, carrying a crew of five and fifteen members of a Navy football team. While cruising some 250 km from the destination, the crew informed ground he encountered strong head winds. Shortly later, the seaplane crashed in unknown circumstances into the sea. All 20 occupants were killed.", "The aircraft took off on runway 13 of La Guardia Airport at 1843LT, having been cleared on an instrument flight plan to Rochester, New York, with Toronto, Ontario, as an alternate. Approximately 2 minutes after take-off the flight called La Guardia Tower and reported that it was in the vicinity of the south end of Whitestone Bridge, approximately 2 1/2 miles northeast of La Guardia Airport. The flight advised that the oil pressure was low on one engine, and requested clearance to land on runway 22. The request was approved, and the tower informed the crew that the wind was calm. When asked if emergency equipment was desired to stand by, the flight replied in the negative. Shortly thereafter, NX88787 reported that it was on the final approach, and that it was over the sand barges, located approximately one-half mile off the approach end of runway 22. In reply the flight was again given clearance to land. The aircraft was first seen at an altitude of approximately 800 feet, and about 1,300 feet off the approach end of runway 22 with the landing gear extended. The flaps were lowered, and the aircraft started a steep descent to runway 22,but it passed over the approach end of the runway at an altitude of approximately 300 feet. The flight then requested and was granted permission by the tower to make a right turn, however, the aircraft continued straight ahead over the runway, gradually losing altitude. When one-third of the way down the runway, the right propeller was feathered. When over the intersection of runways 22 and 18 and at an altitude of 200 feet the flaps were raised, which resulted in an additional loss of altitude. During or directly after raising the flaps, a right turn was initiated, and the landing gear was observed to retract slowly. Competent witnesses stated that the right turn was made at a very slow speed, at a high angle of attack, and at an altitude appearing never to have exceeded 200 feet. Over Bowery Bay the aircraft on two occasions almost settled into the water. When in a flat right turn toward runway 13 it lost altitude to about 50 feet. Approximately 2,000 feet from the end of the runway, the landing gear started to extend, and became fully extended when the aircraft was aligned with runway 13. At this time the airplane attitude appeared to be that of a steep climb. The wings were seen to wobble slightly, then the left wing and nose dropped, and the airplane struck the water at an angle of approximately 20 degrees. The forward movement of the aircraft continued on the surface of the water for 40 to 50 feet, throwing up a great spray as the tail rose to a vertical position, after which the aircraft continued over on its back and sank in about 5 minutes.", "The crew was completing a cargo flight from Sydney-Mascot. On touchdown in Kempsey, the undercarriage collapsed. The aircraft skidded on runway, came to rest and was damaged beyond repair. Both pilots were unarmed.", "On approach to Malm\u00f6-Bulltofta Airport, the aircraft was too high on the glide. Instead of making a go around, the captain decided to nose down, increase engine power and landed at high speed. Unable to stop within the remaining distance, the aircraft overran and hit an embankment before coming to rest. The aircraft was destroyed, a crew member was killed while four others were seriously injured.", "Ready for departure, the single engine aircraft was taxiing on a lake located in eastern Quebec, about 160 km south of Goose Bay, when it collided with an unknown obstacle and sank. Both occupants were unhurt.", "The crew was completing a training sortie from Rio de Janeiro-Gale\u00e3o Airport. While flying at low altitude in marginal weather conditions, the twin engine aircraft hit tree tops and crashed in a huge explosion in a wooded area located near Pendotiba, east of Rio de Janeiro. All seven crew members were killed.", "The four engine aircraft was completing a flight from Buenos Aires to Rio de Janeiro, carrying an Argentinian delegation to the Inter-American Conference in Rio de Janeiro. Due to poor visibility caused by thick fog, the crew failed to establish a visual contact with the airport of Rio and continued to the northeast. Eventually, the captain elected to make an emergency landing, maybe due to fuel shortage. The aircraft crash landed on a beach located in Itapemirim, about 330 km northeast of Rio. The aircraft was written off while all occupants were unhurt.", "Six minutes after takeoff from Orl\u00e9ans-Bricy Airbase, while in initial climb, the three engine aircraft went out of control and crashed in flames in a wooded area located 2 km north of Cercottes. All eight crew members were killed. Crew (Escadron de Transport 3/61 Poitou): Lt Andr\u00e9 Brisset, Lt Yves Fouques, Lt Bernard Couturier, Lt Charles Nguyen Than, Lt Pierre Bourdet, Lt Lucien Turina, Lt C\u00e9sar Serbassi, Sgt Charles Guinet.", "Crashed on final approach to Bucharest-Baneasa Airport. Three passengers were killed while five other occupants were injured.", "Crashed in a garden in New Germany while on approach to Wright-Patterson AFB. All four crew members were injured and the aircraft was written off.", "Crashed on takeoff when all four engines failed simultaneously. All five crew members were injured and the aircraft was written off.", "While landing by night off Montevideo, the seaplane crashed, overturned and sank. Four crew members were killed while both passengers and a fifth crewman were injured. The aircraft was lost. Source: http://1000aircraftphotos.com/Contributions/HornDavid/9343.htm", "While approaching the Hawaiian coast of Oahu Island on a flight from Tokyo, the crew encountered a fuel exhaustion and was forced to ditch the aircraft about 60 miles west of Hickam Field where it should land. Ten people were rescued while three others were killed, among them George Acheson, personal advisor of General McArthur and President of the Allied Council in Japan.", "While cruising by night in good weather conditions, a short-circuit on the electrical system caused the failure of several instruments. As the crew decided to fly without a navigator (which was considered against RAF procedures), the captain decided to reduce his altitude in an attempt to make an emergency landing. The aircraft belly landed in a prairie, skidded for several yards and eventually came to rest with its left engine in flames. Both crewmen were able to leave the aircraft that was destroyed by fire.", "\"After takeoff from Lae-Nadzab Airport, while climbing vertical to the Huon Gulf, the right engine failed, followed shortly later by the left engine. The pilot reduced his altitude and ditched the aircraft off Lae. All three occupants were quickly rescued by a fisherman while the aircraft was lost. Testimony from the passenger: \"\"I had the day off and Johnny Rose was doing a trip to Kokoda and Popondetta. I'd never been there and when he offered me a seat I jumped at it. He had another passenger on board", "While flying at an altitude of 10,000 feet in marginal weather conditions, the aircraft hit the slope of Mt Blue Bell Knoll located north of Boulder, Utah. The aircraft was destroyed by impact forces and all three occupants were killed.", "The approach to Bahrain was completed by night and the crew landed in the Marine Base at an indicated speed of 85 to 90 knots. Upon landing, the seaplane had a tendency to nose down so the captain counteracted with the control column and increased power simultaneously. The aircraft bounced, left water for about one to two seconds and then veered sharply to the left. Out of control, it plunged into water and came to rest. Three crew members and seven passengers were killed.", "Shortly after takeoff from Woodford Airport, while climbing to a height of some 60-80 feet, the four engine aircraft banked right, stalled and crashed in a wooded area. Four occupants were killed while two others were rescued. Crew: Bill Thorn, pilot, \u2020 David Wilson, copilot, \u2020 John Webster, flight engineer and radio operator, \u2020 Roy Chadwick, technician and designer, \u2020 Eddie Talbot, flight engineer, Stuart Davies, chief designer.", "While preparing for landing in Allen Lake, the single engine aircraft was caught by strong winds, landed hard, overturned and came to rest. The aircraft was lost and all five occupants were rescued.", "While cruising at an altitude of 13,000 feet in poor weather conditions, the four engine seaplane hit the slope of a mountain located 31 km northeast of Harstad. The wreckage was found in a rocky are some 290 meters from the summit and all 35 occupants were killed. It is believed that the aircraft was slightly off course at the time of the accident. Crew: John Buer, pilot, Karl Bengtsen, copilot, Johannes Daae Risnes, navigator, Paul Idland, radio operator, Gunnar Michaelsen, mechanic, Atle Fedje, steward, Ester Mildrid L\u00f8snes, stewardess.", "Crashed on landing. No casualties.", "The crew was completing a training sortie and while cruising at low height with an engine inoperative, the aircraft went out of control, dove into the ground and crashed in a huge explosion in a field located in Westgate-on-Sea. Both pilots were killed.", "Crashed on landing and broke in two. There were no casualties.", "Crashed in unknown circumstances. Occupant fate unknown.", "Hit a mountain near El Hajeb, killing at least one occupant.", "On approach to Eaton Bray aerodrome, the single engine aircraft stalled and crashed in flames. Both occupants, among them the pilot and owner Joan Nayler, were quickly rescued and uninjured. The aircraft was destroyed by fire. Source & photos: http://www.onthewire.co.uk/bray4.htm", "The crew was completing a training sortie in RAF Dishforth. Upon landing, while decelerating, the engine number two caught fire. The captain applied full brakes and stopped the aircraft. All five crew members were able to leave the cabin before the aircraft was destroyed by fire.", "Shortly after takeoff, while in initial climb, an engine failed. The captain decided to make an emergency landing and the aircraft crash landed in a field located 3 km from the airport. All 11 occupants escaped with minor injuries while the aircraft was damaged beyond repair.", "The crew consisting of eight pilots was completing a training exercise in Athens-Hassani Airport. On final approach, the aircraft encountered downdraft, lost height and crashed on a beach located in Voula, south of the airport. The three pilots that were seating in the cockpit were killed as the cockpit crashed on rocks. Five others occupants were seriously injured.", "While approaching Bermuda on a flight from London to Havana, the crew was instructed by ATC to stack due to poor weather conditions (thunderstorm). After 90 minutes, the crew was cleared to land at Hamilton-Kindley Field and started the approach that was completed in marginal weather conditions and poor visibility. Too low, the four engine aircraft christened 'Star Trail' hit a radio mast, stalled and crashed few hundred yards short of runway. All 20 occupants were rescued while the aircraft was written off.", "Crashed on landing for unknown reason. There were no casualties but the aircraft was written off.", "The airplane was on a delivery flight from Moscow to Leningrad-Koltushi Airport and has to be transferred from the Soviet Air Force to the Russian Hydro and Meteo Services (Gidrometeosluzhba). Shortly after takeoff, while climbing, the left engine caught fire. The pilot in command elected to make an emergency landing but smoke spread in the cockpit and the crew lost control of the aircraft that crashed in Klyazma. Three crew members, one passenger and one person on the ground were killed while three others were injured (one crew, one passenger and one person on the ground). The aircraft was destroyed.", "The crew departed Cazaux AFB bound to the south. Enroute, the right engine failed. The captain reduced his altitude and completed an emergency landing on a beach located in Saint-Girons. All three crew members were unhurt and with locals, were able to bring the aircraft out of water. Unfortunately, three hours later, the airplane was stuck by tide and written off. The accident occurred in September 1947 (exact date remains unknown).", "Just before reaching Las Vegas, however, a distance of 268 miles from Burbank, Captain Clark stated that his fuel quantity gauges indicated that he had 360 gallons of fuel remaining. Since he believed this to be sufficient to reach destination, he did not land at Las Vegas which was generally used as a fueling stop for Slick Airways. From Las Vegas to Palmdale, lighter winds were encountered resulting in a ground speed averaging 180 miles per hour. Palmdale was flown over at 1025, at which time the aircraft had been in the air a total of 5 hours and 18 minutes. Three minutes after passing over Palmdale, which was clear, the left engine fuel pressure dropped to 3 pounds, the red fuel warning light came on, and the left engine stopped. Fuel selector valves were changed, and as a result power was restored to the left engine. Captain Clark suspected a fuel leak. He inspected the aircraft for visible loss of fuel or fire, found none, and continued on to Burbank. As the flight approached Newhall California, Burbank reported a ceiling of 1,600 feet with visibility of two and one-half miles. The flight was instructed by the Los Angeles Airways Traffic Control Center to hold on the northwest course of the Burbank range, and advised that the approach clearance Into Burbank could be expected at approximately 1052. Captain Clerk informed the Burbank control tower that he was losing fuel and wanted to land as soon as possible, however, he declined to declare an emergency. Shortly after this, the left engine stopped for the second time, but power was again restored by changing the positions of the fuel selector valves. At 1056, approach clearance into Burbank was given, and at 1058, the flight reported inbound over the Chatsworth fan marker, approximately 14 miles from the Lockheed Air Terminal. The ceiling over Burbank had by this time lowered to 1,000 feet, and rain showers had reduced visibility to about one mile. As the flight descended below 1,600 feet only intermittent bursts of power could be secured from the left engine. The \u201cletdown\u201d was continued, the Burbank radio range station and the Lockheed Air Terminal were passed. Upon completion of a right turn to return to the range station the right engine stopped, and the propeller was immediately feathered. At an altitude of 200 to 400 feet, Captain Clark recognized almost immediately underneath him a hangar on the Lockheed Air Terminal. He executed a sharp right turn of approximately 270 degrees, and landed on the north-south taxi way about 400 feet before crossing Runway 7, a distance of approximately 1,900 feet from the south boundary of the airport. Brakes were applied, but the aircraft could not be brought to a stop within the airport boundaries. It came to rest only after skidding across a highway and railroad line adjacent to the south boundary of the airport.", "Crashed in unknown circumstances in Farsala, killing all six occupants, two crew members, a captain and three soldiers.", "Crashed on landing for unknown reason. Both crew members were slightly injured while the aircraft was written off.", "Crashed shortly after takeoff from Tunis while on a delivery flight to Antananarivo. The aircraft was destroyed and both crew members were injured. The airplane christened 'Tamatave' was on its way from Croydon to Antananarivo to be delivered to Air Madagascar.", "Enroute to Lima, it is believed that an engine caught fire. Most probably, the crew decided to divert to the Marcona Naval Station but the aircraft went out of control and crashed in a desert area located near San Juan de Marcona. The aircraft was destroyed by impact forces and a post crash fire and all 14 occupants were killed.", "\"Pan American's Flight 131 departed from Bermuda at 1358, September 20, 1947, with 36 passengers and a crew of 5. The take-off and climb to the cruising altitude of 8,000 feet were normal, and the flight proceeded on course to La Guardia Field, New York, for a period of 3 hours without incident Between 1650 and 1655, about 225 statute miles from destination, Warren Robinson, the first officer, noticed a fluctuation in fuel pressure for engines 1 and 2 Seconds later, the left auxiliary fuel tank quantity gauge dropped to zero, the fuel pressure warning light flashed on, and the No 1 engine faltered To insure a positive fuel supply for all engines Mr Robinson immediately turned the fuel selector valves for all engines to their respective main tanks, 2 following which all engines operated normally. Mr Robinson then transferred fuel from the right auxiliary tank to the left auxiliary tank so that they would contain equal amounts, which was 40 gallons each according to the fuel quantity gauges after completion of the operation A few minutes later Mr Robinson noticed that the right auxiliary fuel gauge indicated not 40 gallons, but 100, and that it was visibly increasing even though no fuel was at that time being transferred The No. 3 main fuel tank gauge then dropped to zero, and the fuel pressure for the No 4 engine started to fluctuate. Alarmed by what now appeared to be a serious malfunction in the right side of the fuel system, Mr Robinson operated all engines from the left main tanks (1 and 2), turning on all the cross feed valves, and the booster pumps for main tanks 1 and 2. The flight had by this time reached position \"\"Baker", "On start-up, the right engine caught fire. Both occupants were able to leave the aircraft that was partially destroyed by fire.", "The crew was completing a night training sortie from RAF Hemswell, Lincolnshire. While cruising northwest of Great Yarmouth, the crew encountered very poor weather conditions with thunderstorm activity and heavy turbulence. The aircraft went out of control, dove into the ground and crashed in a field located in Mautby. All nine crew members were killed. Crew (97th Squadron): F/Lt Stanley Frederick Whitlock, pilot, F/Lt Jack Anthony Guest, pilot, F/Lt John George Cook, navigator, F/Lt Ronald Vernon Havard, navigator and bomb aimer, Albert Wattleworth, signaler, Vincent Orville Woods, air gunner, William Allison, flight engineer, Roy Andrew Trundle, air gunner, LAC Denis Frederick Cummings.", "Crashed on landing in New Delhi-Palam Airport, killing all 5 crew members. The fifteen passengers were injured.", "The crew was performing a cargo flight from Aden-Khormaksar Airport. Enroute, the airplane went out of control, went into a dive by an angle of 30\u00b0 and finally crashed into the Gulf of Aden, about 352 km east of Aden. Few debris were found but no trace of the ten occupants who were considered as deceased. The aircraft sank in relatively deep. It is believed that an engine failed in flight and that the crew mistakenly shot down the wrong engine. It is possible that the engine failure was caused by a lack of electric power due to the failure of a battery. Also, it appears that the cargo loading was completed against the published procedures and that the CofG was affected, which may contribute to the loss of control.", "The takeoff was attempted in poor weather conditions. During takeoff roll started in visual reference, the visibility was insufficient and the captain decided to swap to instrument references. Control was lost and the airplane skidded and then swerved before coming to rest in the Cromlin river. All three crew members were injured while the aircraft was damaged beyond repair.", "After takeoff from Ambavalao Airport, while on a reconnaissance mission, the crew was forced to circle vertical to the city to gain sufficient height to clear the mountain. After passing the first mountainous terrain, the twin engine aircraft hit a rocky ridge and crashed. A crew member was seriously injured while six other occupants were killed. Crew: Sgt Anizet, Lt Col Pierre Lequesne, \u2020 Cpt Guillot, \u2020 S/Lt de Tournadre, \u2020 Adj Gourcerol, \u2020 Sgt Allard, \u2020 Sgt Katsia. \u2020", "During the takeoff roll, it appears that an undercarriage failed. The aircraft skidded, overran, lost its landing gear and came to rest with the engine number one on fire. All occupants were evacuated safely while the aircraft was damaged beyond repair.", "The aircraft was involved in a supply mission and was carrying paratroopers. While cruising at low height, the aircraft was hit by enemy fire and crashed in a wooded area located near Cao B<U+1EB1>ng. Adjutant Commercon was the only survivor while 15 other occupants were killed, among them Commander Lambert, Deputy Chief of Staff of the French troops in Indochina", "Crashed in unknown circumstances in a mountainous and uninhabited area located some 60 km southwest of Borja, Peru. The wreckage was found ten days later and all five occupants were killed, among them Colonel John R. Hawkins, Chief of the USAF in Peru.", "Take-off from Foynes was accomplished at 1540, the afternoon of October 13th. The flight climbed to its cruising altitude of 8,000 feet, proceeded on course for five hours and 50 minutes over the tops of clouds, and then, at 2130, instrument weather conditions were encountered. Since celestial navigation was no longer possible, Mr. Thompson, the only qualified celestial navigator aboard, retired. Before he had retired, however, he informed Captain Martin that the estimated time of arrival over the United States Coast Guard weather ship, Bibb, located on course and approximately 961 miles west of Foynes, was 0200. This was 45 minutes later than was originally estimated. Icing conditions were encountered shortly after midnight. At 0134, October 14th, the flight requested and was granted permission from the Moncton Ocean Air Traffic Control to descend to 6,000 feet. About this time the flight received from tie Gander radio station a weather forecast which included wind information at the original cruising altitude of 8,000 feet. According to the data received, the average headwind component had d velocity of 12 knots greater than that which was used in the computation of the flight plan. No further icing conditions were encountered at 6,000 feet, but instrument weather continued. The flight proceeded without the benefit of any navigational fix until 0205 when a radar fix from the Bibb placed the aircraft 68 miles from the vessel on a bearing of 80 degrees. At this time the flight had flown approximately 892 miles from Foynes, was slightly over half way to Gander, and had used 10 hours and 25 minutes of the estimated 22 fuel hours carried at the time of take off. They informed the Bibb that their estimated arrival time at Gander was 0930, which was 32 minutes later than was originally estimated. The crew anticipated no possibility of fuel exhaustion, and one hour and 11 minutes remained before they were to reach the point-of-no-return as computed in their flight plan. The Bibb reported the wind at its location at 6,000 feet to be 40 to 45 knots from the west. a headwind component of about 17 knots greater than that used in the flight plan. The captain estimated at 0232 that they were on course and 13 to 20 miles south of the Bibb. This was one hour and 17 minutes later than the original estimate and 32 minutes later than the amended estimate. Altitude was reduced to 4,000 feet after approval had been given by Moncton Ocean Air Traffic Control, and shortly thereafter, at 0327, eleven minutes after the flight passed its point-of-no-return, another weather forecast was received from Gander which showed the average headwind for the remainder of the route to be from 250 to 260 degrees at 38 knots, a headwind component 12 knots greater than that received in Shannon. Still no difficulty was anticipated, nor was the navigator consulted at this time. By 0500 clear weather was encountered. The navigator was then awakened in order that he might fix the aircraft's position by celestial observation, and according to the fixes that were plotted, headwinds in excess of 60 knots had existed en route, the average ground speed being only 59 knots. The crew immediately be came concerned as to whether or not the fuel remaining was sufficient. Approximately 550 miles remained to destination Captain Martin and First Officer Thompson believed that it was impossible to accomplish the remaining portion of the flight with the fuel remaining, so decided to return to the Bibb where rescue facilities would be immediately available. However, the flight continued westward and a position report was made to Gander at 0600. The turn around was actually made at 0758, at which time the aircraft was still 60 miles east of the previously reported 0600 position and approximately 460 miles east of Gander and 300 miles west of the Bibb Gander was advised of the decision, and at 0840 was Informed that the flight had two hours and 45 minutes of fuel remaining. The aircraft's position was reported at 0914 to be 100 miles west of the Bibb. The flight arrived over the Bibb at 0940, made four low passes, and then landed. All passengers had been fitted with life jackets and had been provided with seats and safety belts. Though the aircraft encountered waves six to eight feet high, no injury to any person or damage to the aircraft occurred. However, in taxying toward the Bibb the aircraft and Bibb drifted together with substantial damage to the aircraft. Rescue operations were slow and hazardous because of high seas, out by the next day all of the passengers and crew had been successfully transferred to the Bibb.", "While flying along the Spanish coast, the radio operator informed ground by radio: 'one engine stopped, are forced to ditch the aircraft'. Shortly later, the aircraft crashed into the sea some 25 km southeast off Cabo de Palos. The first rescuers arrived on site 24 hours later and were able to evacuate two survivors, the mechanic and a passenger. All 42 other occupants were killed. Crew: Mr. Galindo, pilot, Mr. Remy, mechanic, Mr. Chase, mechanic, Mr. Chanel, radio navigator, Anne-Marie Rouannet, stewardess.", "The aircraft departed Charlotte in a hurry because the pilot was afraid the cargo of baby chicks might suffocate due to high temperatures on the ground. Weather condition were not carefully checked. The crew were not able to locate their destination because of weather conditions and other station interference with their ADF. The DC-3 was found to have crashed into a mountain. Source: https://aviation-safety.net/database/record.php?id=19471016-1", "Crashed in a field few minutes after takeoff from Shijiazhuang Airport while on a cargo flight to Beijing. All three crew members were killed.", "During a training sortie, the engine number three failed. The captain decided to reduce his altitude in an attempt to ditch the aircraft when the same engine caught fire. Shortly later, the engine detached and the seaplane hit the water surface at high speed, overturned and came to rest off Southend. Six crew members were injured while the captain and all three passengers were killed.", "The crew was completing a night training mission in London-Heathrow Airport. On touchdown, the aircraft went out of control, ground looped and came to rest. All four crew members were unhurt while the aircraft christened 'Star Watch' was damaged beyond repair.", "Flight 608 departed Los Angeles, California, at 1023 with its destination Chicago, Illinois, to cruise at 19,000 feet according to visual flight rules. Routine position reports were made over Fontana, Daggett and Silver Lake, California; Las Vegas, Nevada; and Saint George, Utah. During the latter report, the flight indicated that it estimated passing over Bryce Canyon, Utah, at 1222. At 1221 Flight 608 reported that a fire had been detected in the baggage compartment which the crew was unable to extinguish. The report added that the cabin was filled with smoke and that the flight was attempting to make an emergency-landing at Bryce Canyon Airport. Shortly thereafter the flight again reported that the \u201ctail is going out--we may get down and we may not.\u201d At 1226 another transmission was received from the flight indicating that it was going into the \u201cbest place\u201d available. One minute later the flight reported \u201cwe may make it--approaching a strip.\u201d No further contact was had from the flight. Witnesses who observed the aircraft as it was approaching Bryce Canyon from approximately 20 miles southwest first observed what appeared to be white smoke streaming from the aircraft, followed later by dense black smoke. The first witnesses who observed fire in the bottom of the aircraft at approximately the center-section were located approximately 15 miles south of Bryce Canyon. Until shortly before the moment of impact, the aircraft appeared to be under normal control; however, no witnesses were located who observed the crash.", "While approaching Saint Etienne, an engine failed. The pilot attempted to make an emergency landing but the aircraft stalled and crashed in a prairie. All six occupants were killed. Crew: Robert Millet, pilot, Pierre-Claude Belmont, mechanic, Alain Le Bras, radio navigator, Roger Panenc, radio navigator. Passengers: Casimir Corniglion, photographer, Andr\u00e9 Lesure, chief of Photography by IGN.", "While descending to Athens-Hassani Airport, the crew was contacted by ATC and instructed to stack for a while due to poor weather conditions (thunderstorm activity) at destination. Few minutes later, the four engine aircraft christened 'Sunnan' hit the slope of Mt Hymettus located northeast of the airport. The airplane was destroyed by impact forces and all 44 occupants were killed. The crew was unable to distinguish the mountain due to poor visibility caused by low clouds. It is believed that the crew was not aware of his exact position at the time of the accident.", "Flight 923 departed at 1030 October 26, 1947, from Seattle, Washington, for Juneau, Alaska, with an intermediate stop scheduled at Annette Island Captain Alf N. Monsen flew as pilot and First Officer Laurence A Foster as copilot. The airplane carried 13 passengers including an infant, a crew of five, 2,500 gallons of fuel, and 822 pounds of cargo. This load was within the allowable airplane weight and was properly distributed in respect to the center of gravity. Company weather information given to Captain Monsen before departure was to the effect that there would be unlimited ceiling from Seattle to Comox, British Columbia. Then at the cruising altitude of 9,000 feet, instrument conditions, light icing, and light to moderate turbulence was expected over the route. Winds were forecasted to be from 200 to 230 degrees at 30 to 40 knots. It was also forecasted that at the time of the flight's arrival over Annette there would be an 800-foot overcast, lower broken clouds, visibility of 2 miles, light rain, and a surface wind from the south-southeast at 18 knots. A cold type occlusion or front which was moving toward Annette Island from a point about 375 miles west of there was expected to pass Annette Island before the flight arrived. Proceeding en route in accordance with an instrument clearance to fly at 9,000 feet, the flight arrived over Annette Island at 1338 after a routine trip. Earlier, at 1326, the company radio at Annette Island had transmitted a weather observation which reported an indefinite 1,400-foot ceiling, overcast, lower broken clouds, visibility of 3 miles, rain, wind southeast at 28 miles per hour, with gusts to 40 miles per hour. The flight acknowledged receipt of this information. Airway Traffic Control cleared the flight to pass over the radio range station located 1 5 mile northwest of the airport at 7,000 feet and then to proceed with a normal instrument letdown and approach to the field. The flight acknowledged this clearance, and reported its position over the radio range station at 7,000 feet at 1338. The normal instrument procedure for Annette Island was established with regard to the mountainous terrain east and northeast of the airport, which rises to an elevation of 3,596 feet on Tamgas Mountain. This procedure required the flight, after approaching from the south at 7,000 feet and reporting over the radio station, to remain west of the south course of the range while on instruments. Five minutes after the flight reported over the range station, at 1343 it advised Annette Radio that it was proceeding to Juneau, approximately 250 miles north-northwest of Annette Island, because of extreme turbulence. This was the first indication that the flight was encountering any difficulty in accomplishing a normal letdown and approach to the airport. In response, Annette Radio asked the flight to report its altitude, but there was no reply. After repeated calls to the flight Annette Radio issued an alert at 1401. It was estimated that the flight at the time of its last radio contact had aboard 9 hours and 16 minutes of fuel. At approximately 1430 the Civil Aeronautics Board was notified, and a search by air, land, and sea was immediately begun. However, adverse weather conditions retarded the search to such a degree that the wreckage was not located until 5 days after the accident October 31, 1947. It was found that the airplane had crashed on the north slope of Tamgas Mountain, approximately 8 miles east of Annette Island Airport and 8 miles east of the south course of the Annette radio range.", "Shot down by anti-aircraft fire and crashed in a field. A pilot survived while both other occupants were killed.", "Crashed and burned on Balmoral Station south of Muswellbrook, while on a trial newspaper dropping flight. The aircraft was preparing to drop newspapers in an open area when it appeared to dive almost vertically into the ground. Both crew members were killed. Crew: Geoff Hoskins, pilot, Edward Conner, copilot. Source: http://www.adastron.com/lockheed/hudson/vh-smj.htm", "Enroute from Jammu to Srinagar, the aircraft crashed in a mountainous area located in the Pir Panjal Mountain Range. As the aircraft failed to arrive, SAR operations were conducted but eventually suspended after few days as no trace of the aircraft nor the 25 occupants was found. Walkers found the wreckage in June 1980 in an isolated area. The crew was from the 12th Squadron.", "Crashed in unknown circumstances into the Laguna de Bay, off Barangay Rizal, a suburb located south of Manila. All five occupants were killed.", "For undetermined reason, the twin engine aircraft failed to rotate, overran and hit a concrete wall. Lieutenant Billaud, pilot, and Lieutenant Grandjean, radio navigator, were killed. The aircraft was destroyed.", "After landing, the brakes failed. The aircraft was unable to stop within the remaining distance, overran and collided with an embankment. All six occupants were unhurt while the aircraft was damaged beyond repair.", "The crew was engaged in a test flight at RAF Finningley. Enroute, both engines failed simultaneously. The captain elected to return to the airbase but on approach, the aircraft stalled and crashed in a field located five miles from the runway threshold. On ground, the aircraft hit an embankment located near a railway, sheared off some road signs and came to rest in flames. The pilot was killed while both other occupants were injured.", "Enroute from San Francisco to Chicago, the crew informed ATC that a fire erupted in the rear compartment of the aircraft and decided to divert to Gallup Airport for an emergency landing. The aircraft was difficult to maneuver and landed in flames. After it came to a halt, all 25 occupants were quickly disembarked and helped by local rescuers before the aircraft being totally destroyed by fire.", "The crew was performing a training sortie with other similar aircraft and De Havilland DH.103 Hornet as well. Enroute, the aircraft collided with a Hornet and both aircraft dove into the ground. During the dive, the captain of the Lancaster was able to bail out before the aircraft crashed in a field, killing all seven other occupants from the 35th and 115th Squadron. The Hornet's pilot was killed as well.", "Crashed in a mountainous area located some 30 miles northeast of Spokane. Five crew members were killed and five others were injured.", "After takeoff from Hamilton bound for Havana, while climbing to a height of 9,000 feet, the engine number four caught fire. The crew elected to return to Hamilton-Kindley Field for an emergency landing. On final approach, the aircraft stalled and crashed few hundred yards short of runway threshold. All 16 occupants were uninjured while the aircraft was damaged beyond repair.", "After landing at Jammu Airport, the aircraft failed to stop within the remaining distance. It overran and came to rest. There were no casualties while the aircraft was written off.", "The pilot was forced to make an emergency landing for unknown reason. There were no casualties but the aircraft owned by D. L. Steiner was damaged beyond repair.", "While flying over the Jura Mountain Range at a too low altitude, the three engine aircraft hit tree tops and crashed in flames in a wooded area called La Joux. The radio navigator Henri Glaise was slightly injured, the mechanic Leroy was seriously injured and the pilot Alain Bamayeux was killed.", "While performing a training flight in the area of Soesterberg AFB, the aircraft suffered a double engine failure. The crew attempted to make an emergency landing when the aircraft crashed in a field and was destroyed. All three crew members were slightly injured.", "In flight, the pilot was forced to reduce his altitude and to make an emergency landing in a field. There were no casualties but the aircraft was written off.", "Crashed in unknown circumstances. No casualties. The accident occurred in November 1947 (exact date unknown). The aircraft was owned by F. H. Stewart and T. M. Gibson.", "The crew was completing a training flight in Bombay-Santa Cruz Airport, consisting of touch and goes. On final approach, the instructor voluntarily shut down one engine. During the last segment, the aircraft banked left and right and the control became difficult. In such conditions, the instructor decided to raise the undercarriage, increased power on the three remaining engines and started a go around. The aircraft stalled and hit the runway surface, slid on its belly for several yards and came to rest. All three crew members were unhurt while the aircraft was damaged beyond repair.", "While cruising in a thunderstorm area, the aircraft went out of control and crashed in Mt Magazine, about five miles northwest of Havana, Arkansas. All six crew members were killed.", "Three student pilots and one instructor were completing a training sortie consisting of touch and goes. For unknown reason, the pilot in command failed to complete the flare properly, causing the aircraft to hit the runway surface. The aircraft bounced and the instructor decided to make a go around. At that time, the aircraft stalled and hit again the runway, swerved and came to rest in flames. All four crew members were uninjured while the aircraft was written off.", "The aircraft was returning to Stockholm with a crew of four and 21 Swedish pilots who delivered Saab B-17 to the Ethiopian Army in Addis-Ababa. It left Catania Airport at 1428LT bound for Rome. After passing over the Island of Stromboli, the crew encountered poor weather conditions with thick clouds. To avoid this area, the crew modified his route but few minutes later, while flying at an insufficient altitude of 1,040 meters in poor visibility, the aircraft hit tree tops located on the Mt Cerro near Ravello. The captain tried to avoid a ground collision so he increased engine power and attempted a 180 turn when the left wing hit the Santa Maria del Monte Peak. The aircraft crashed in flames and was destroyed. Four occupants were rescued while 21 others were killed.", "At 1210 the flight called the Wilmington-New Castle Tower and asked to be cleared for an instrument approach to runway one. The flight advised that they would fly law over the field on their first approach, and that they would then circle and land The approach was made, and the aircraft flew low over the field to the immediate right of runway one. After passing the north end of the runway. a climbing left turn was made to an altitude of 400 to 500 feet. The aircraft circled at that altitude until approximately one mile west of the south end of runway one, then it started a gliding left turn, toward the field. One-half mile south of the airport the turn was completed, and the aircraft flew a straight course on final approach toward runway one for landing. This last turn onto final approach was completed at an altitude of 200 to 300 feet. The landing gear was down, but the flaps were not extended. The descent on final approach continued normally until the aircraft had reached an altitude of approximately 50 feet above the ground, at which time it was 500 to 1,000 feet from the approach end of runway one. Then, the aircraft was observed to assume a nose-high attitude and to descend more rapidly. First contact with the ground was made 130 feet Prom the approach end of runway one, and 22 feet in front of a 5-foot embankment. The top of this embankment was level with the runway. Since the embankment was uniformly covered with sod, it was not discernible from the air. The extreme loads which were imposed upon the aircraft structure as it rolled into and over the rising embankment immediately after it had settled to the ground caused considerable damage to the landing gear, fuselage, and wings. Forced back into the air by the rise of the embankment, the airplane landed for the second time on the runway, skidding forward 1,270 feet. The right wing was torn from the fuselage as the aircraft turned over to an inverted position. Fuel spilled from ruptured gasoline tanks ignited, and the wreckage burst into flames.", "While cruising at low height in poor weather conditions, the seaplane hit the slope of a hill and crashed in Brightstone Down, Isle of Wight. A crew member was killed, three others were injured.", "Enroute from Bel\u00e9m to Manaus, the seaplane crashed in unknown circumstances in the region of Porto de Moz. As the aircraft failed to arrive in Manaus, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. On December 22, 1947, the wreckage and the dead bodies of all 16 occupants were found near the village of Aquiqui, northwest of Porto de Moz.", "The aircraft departed Croydon on a cargo flight to Jersey, carrying a load of newspapers. While flying over the Isle of Wight, the crew encountered poor weather conditions with clouds down to 700 feet. Due to low visibility, the pilot did not realize he was off course and his altitude was too low when the twin engine aircraft hit the pylon of a radar and crashed in a prairie located near Saint Boniface Down. Both occupants, pilot E. G. Snowden and radio operator R. J. Corrie were killed.", "The crew was completing a training sortie over the North Sea when the right engine failed in flight. The captain reduced his altitude and elected to return to Manston for an emergency landing. While descending to an altitude of 800 feet and while flying across the last cloud layer, the aircraft stalled and crashed into the sea, few miles off Birchington-on-Sea. A crew member was killed while three others were rescued.", "Enroute from Bucharest to Prague, the crew encountered poor weather conditions with low clouds. The pilot lost his orientation due to fog and decided to reduce his altitude to establish a visual contact with the ground when the aircraft hit tree tops and crashed in a dense wooded area. Thirteen passengers were rescued, among them Arel Grigoresco, ambassador of Romania in Prague, while thirteen other occupants were killed, among them all five crew members.", "The crew was performing a demo flight to potential clients. Upon landing in Wau Airport, on a relative steep runway, the aircraft failed to stop properly. The aircraft eventually overran and came to rest into a ditch. All five crew members were slightly injured while the aircraft was damaged beyond repair.", "Shortly after takeoff from Ciudad Bolivar Airport, while on a test flight, the aircraft stalled and crashed 150 meters past the runway end. The aircraft was written off while all three crew members were uninjured.", "The aircraft crashed on landing in Port Sudan Airport for unknown reason. While the aircraft was damaged beyond repair, all seven crew members were unhurt.", "The descent to Titograd was started from the south, by night and poor weather conditions. Through freezing fog, the aircraft hit the slope of Mt Rumija located 25 km south of the airport. The wreckage was found few hours later and all 23 occupants were killed. Crew: Cpt Vasa Vracarevic 4.", "\"The flight departed from Anchorage at 0020, November 27, 1947, carrying 11 revenue passengers and 600 gallons of fuel. At 0238 the flight reported that it was over Yakataga, Alaska, at 6,000 feet, and that it was proceeding in accordance with instrument flight rules to Yakutat, estimating arrival there at 0320. Twenty-eight minutes later at 0306 the flight called Yakutat Radio, stating that it was leaving the 6,000-foot altitude and making an approach \"\"straight in.\"\" The CAA communicator acknowledged and transmitted the Yakutat weather \"\"Indefinite ceiling", "Crashed on landing in Gordon Lake and was lost. All three occupants escaped unhurt.", "On final approach to Perpignan Airport, the twin engine aircraft stalled and crashed in a field. All three occupants were injured and the aircraft was damaged beyond repair.", "After his departure from Pisa Airport, the crew encountered very poor weather conditions with alto-cumulus, heavy snow falls and wind from the southeast up to 25 knots. Due to the wind, the aircraft went off course up to 50 km to the west, and due to poor visibility, the crew was unaware of this course deviation. The aircraft hit the slope of a mountain located near Trappa and was destroyed. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. On January 31st, 1948, Italian skiers found the wreckage of the aircraft and 20 dead bodies in an isolated area. According to some US military Officers, at least two passengers survived the crash but died few hours later.", "The aircraft christened 'Tailly 2' left Oran at 1015LT in marginal weather conditions. Enroute, due to sandstorm, the captain decided to reduce his altitude in an attempt to establish a visual contact with the ground. Twice, the crew informed ground that his ETA in Colomb-B\u00e9char was delayed about fifteen minutes. While descending at a too low altitude, the twin engine aircraft hit the ground near a railroad and crashed in a huge explosion about 56 km north of Colomb-B\u00e9char. All thirteen occupants were killed, among them the French General Philippe Leclerc. Thirteen bodies were recovered and evacuated to France, but only twelve of them were identified. A thirteenth occupant, wearing a French Army uniform with the grade of Lieutenant was recovered but unidentified. Crew: Lt Fran\u00e7ois-Ren\u00e9 Delluc, pilot, Lt Andr\u00e9-Ren\u00e9 Pilleboue, navigator, Adj Jean Guillou, mechanic, Sgt Eug\u00e8ne Lamotte, radio operator. Passengers: Gen Philippe Leclerc, Col Th\u00e9odore Fieschi, Col Charles Cl\u00e9mentin, Col Louis du Garreau de la M\u00e9chenie, Col Paul Fouchet, Cpt Georges Frichement, Cdt Michel Meyrrand, S/Lt Robert Miron de L'Espinay.", "Upon landing, the aircraft hit unknown obstacles. On impact, the undercarriage were sheared off and the aircraft skidded for several yards before coming to rest. There were no casualties while the aircraft was written off.", "\"The flight arrived over the Seattle radio range station at 3,000 feet on its initial approach to the Boeing Airport at 1357. Shortly before Captain Farris had reported to Seattle Radio that he had 2 rough engines, but he did not declare an emergency. The condition of engine roughness is discussed below. Weather at Boeing Field, Seattle, Washington, was reported to be ceiling indefinite 500 feet visibility one mile. An instrument approach for landing at Boeing Field was made, but not completed because of the low ceiling and visibility, so the flight returned to an altitude of 1,500 feet on the northwest course of the Seattle radio range. During this time Copilot Whitting remained in the left seat and flew the airplane. The second instrument approach was made for a landing at the Seattle-Tacoma Airport, sometimes referred to as the Bow Lake Airport, which is located 4 miles south of the Seattle radio range station. The airplane was flown inbound on the northwest course of the range. Then, after passing over the range station at 1,500 feet, a heading of 193 degrees toward the airport was flown, and a descent made for landing. The aircraft was first observed at the Seattle-Tacoma Airport when approximately 500 feet above the approach and of Runway 20, 5,611 feet long, at which time it was flying at an angel to the left of the runway. An \"\"S\"\" maneuver and rapid decent were made. A right turn was entered and held until the airplane was again over Runway 20", "The crew was performing a positioning flight from Kimry-Borki to Moscow-Zakharkovo. Few minutes after takeoff, the left engine lost oil pressure and power. The captain elected to make an emergency landing but the aircraft crashed in a wooded area located in Taldom, about 13 km southeast of Borki Airport. The aircraft was destroyed and all five crew members were injured. At the time of the accident, weather conditions were poor with a cloud base at 100 meters and an horizontal visibility limited to two km. It appears that the crew did not receive any permission to complete this positioning flight to Moscow.", "The pilot, sole on board, was performing a training sortie in RAF Moreton-in-Marsh, consisting of stall maneuvers. While conducting an umpteenth stall, he lost control of the airplane that went into a spin. He tried to bail out but the aircraft dove into the ground and crashed in a field near the airbase. The aircraft was destroyed and the pilot was killed. For undetermined reason, the pilot's harness was not properly secured.", "During the takeoff roll, the aircraft skidded, veered off runway and came to rest upside down. All three occupants were rescued, one of the passenger was slightly injured.", "\"While at Lille 6,380 kg (96 bales) of fabric was loaded onto the aircraft, this was described in contemporary newspaper reports as being woolen piece goods. Once this was complete their flight plan was submitted to the Lille controller, it was a direct flight back to Speke, and they received a weather briefing for the planned route. This indicated that there would be dense cloud layers from 1000 feet upwards on the entire route with some rain. The wind as far as the London area was forecast to be from the Southwest at 35 to 40 knots and from the Northwest beyond there at a similar speed. The estimated flight time was 1 hour 30 minutes. The aircraft departed Lille at 14:38 GMT and made contact with the regional control at Uxbridge at 15:06, they reported that they had flown over the French coast in the Dunkerque area at 14:46. At around 15:15 they were over the east coast of England between Ipswich and Colchester, they were already someway off course due to the strong wind and this was confirmed with a position fix at 15:35 which put the aircraft over the fens in the Ely area. Had they not had the strong cross wind their intended track at this point would have taken them over Bedford. Upon confirming how far off course they were the pilot adopted a more westerly course and asked Uxbridge if he should contact the Manchester area control at Ringway, they replied yes. By around 16:00 to 16:05 was more or less back on the right course in the Stafford area. The crew never made contact with Ringway, their call-sign was heard at 15:59 but another aircraft was communicating with Ringway at the time. Once this transmission was completed the Ringway controller attempted to contact G-AIHU twice but failed to get a response, the crew had in fact made contact directly with the approach controller at Speke around the time of the second attempt by Ringway. This was to request a QTE (true bearing) from Speke, this was passed as 1340. At 16:10 the Speke controller asked the crew what their ETA was and they replied 16:20, three minutes later he gave the crew permission to enter the controlled airspace around Speke and circle the airfield. They were instructed to report when they had descended to 2,000 ft and reply by R/T (Radio Telephony) to the Aerodrome Controller, up to this point they had been communicating by morse (Wireless Telegraphy). No communication was received from them by R/T and after dealing with other aircraft the approach controller managed to re-establish contact at 16:28 by W/T. The crew reported in plain language \"\"unable to raise 6440 - landing instructions?\"\"", "Crashed 11 miles northeast of Elgin following an engine failure. Occupant fate unknown.", "One minute after a night takeoff from Goose Bay, while in initial climb, the pilot encountered serious difficulties to gain height, informed ground and elected to return. Shortly later, the four engine aircraft stalled and crashed in flames in a wooded area located 13,5 km north of the airport. Six occupants were seriously injured while 23 others were killed.", "On final approach to Memphis in marginal weather conditions, the aircraft banked right, dove into the ground and crashed in a wooded area located 4 miles short of runway threshold. All 20 occupants were killed.", "Crashed on approach to Zambezi Airport for unknown reason. The aircraft was damaged beyond repair and all six occupants were slightly injured.", "The aircraft left Songkhla, Thailand, bound for Bukittinggi, West Sumatra, to be delivered to the Indonesian Air Force. It was carrying medical supplies as well. While flying along the west coast of Malaysia, the twin engine aircraft crashed in unknown circumstances into the sea, killing both occupants, Lt Col Iswahjudi and Air Vice-Marshal Halim Perdanakusuma.", "Crashed in unknown circumstances while preparing to land in Calcutta Airport. The aircraft was written off and both occupants were injured.", "While descending to RAF Abingdon, while on a local training sortie, the captain was forced to shut down the engine number three due to an excessive temperature. As the aircraft was unstable on approach, the captain decided to make a go around when the engine number four overheat. Simultaneously, the approach light system failed. In dark, the crew decided to land immediately, raised the undercarriage and crash landed in a field short of runway threshold. While all five crew members were unhurt, the aircraft was damaged beyond repair.", "The crew was performing a training sortie in NAS Norfolk. In flight, the seaplane collided with a Chance Vought F4U Corsair. Both aircraft dove into the ground and crashed near the airbase. One crew aboard the Catalina survived the crash while six other occupants and the pilot of the Corsair were killed.", "Fifteen minutes after takeoff from Krasnoyarsk-Severniy Airport, the oil pressure on the left engine dropped. The crew shut down the engine, feathered the propeller and decided to return to Krasnoyarsk for a safe landing. On final approach, the speed was too high and the crew encountered problems to lower the undercarriage so the captain elected to make a go around. Few minutes later, during a second attempt to land, while at a height of some 50 meters, the aircraft stalled and crashed few hundred yards short of the runway threshold. Eighteen occupants were injured while seven others, among them four crew members, were killed.", "The crew was engaged in a test flight following modification on the engines by GVF (Grazhdansky Vozdushnyi Flot). The final approach to Vnukovo Airport was completed in low visibility due to foggy conditions, when the aircraft hit a hill and crashed about 10 km northeast of the airport. The occupant fate remains unknown.", "Crashed in unknown circumstances in Diyarbakir while completing a training sortie. All four crew members were killed.", "The starboard engine blew up about 480 km north of Manila. Flight was maintained on one engine but bad weather and turbulence forced the plane down to below 1,000 feet. At about 200 km from Manila, some personal baggage and mail were jettisoned. The crew eventually realized it was impossible to join Manila so decided to make a wheels up landing near Dinalungan. The aircraft crash landed and was damaged beyond repair while all 12 occupants were unhurt.", "On final approach to Uetersen in poor weather conditions, the left engine failed. The pilot lost control of the aircraft that stalled and crashed in flames in a field short of runway threshold. All occupants were injured, the copilot more seriously. The aircraft was destroyed by fire.", "Suffered a ground accident in Barajas Airport. No casualties.", "The crew left Ladd Army Airfield in the day for a 15 hours training sortie. While flying over the Seward Peninsula at low height, the four engine aircraft christened 'The Clobbered Turkey' hit the slope of Mt Hot Springs. The aircraft was written off but all eight crew members survived. Two of them decided to walk away to find help but were found dead few days later. Six other occupants were rescued later and three rescuers were killed as well during the salvage operations. Crew: Lt Vern H. Arnett, pilot, Lt Donald B. Duesler, copilot, Lt Frederick E. Sheetz, navigator, Lt Lyle B. Larson, flight engineer, Lt Francis Schaack, radar operator, T/Sgt Wilbur E. Decker, electrical mechanic, Sgt Olan R. Samford, radio operator, S/Sgt Leslie R. Warre, photographer. Source: http://vintageairphotos.blogspot.ch/2014/12/the-legacy-of-clobbered-turkey-tragedy_19.html", "The crew was performing a cargo flight from Raleigh to Miami and while reaching Melbourne, Florida, he was informed by ATC that Miami Airport was closed to traffic due to poor weather conditions. For same reason, the alternate airport West Palm Beach was closed and the crew was advised to divert to Key West or Tampa. Few minutes later, the captain informed ATC that he was short of fuel and started the approach to Miami in low visibility. During the last turn to join the approach path, the right engine failed due to fuel exhaustion. The aircraft stalled and crashed. Both crew members were injured while the aircraft was written off.", "Shortly after takeoff from Kunming Airport, while in initial climb, the aircraft stalled and crashed in a field located 3 km from the airport. Five passengers were seriously injured while all 25 other occupants were killed. It appears that three of the four engines failed shortly after rotation. All passengers were Belgian missionaries.", "Shortly after takeoff, while in initial climb, the twin engine aircraft stalled and crashed in a field. All five occupants were killed.", "Few minutes after takeoff from V\u00e9lizy-Villacoublay, an engine caught fire. The captain elected to return but was forced to attempt an emergency landing in a field located near the aerodrome of Chelles-le-Pin. The aircraft belly landed and came to rest in flames. All 15 occupants, most of them women and children flying back to Algeria, were slightly injured while the aircraft was damaged beyond repair.", "While approaching Leeuwarden, the crew encountered poor weather conditions with heavy rain falls and a cloud base at 100 meters. Unable to locate the airport, the captain decided to make a go around and increased engine power. Shortly later, while flying over the city of Leeuwarden, the aircraft hit with its left wing the church of Saint Bonifatius which is 70 meters high. Three meters of the left wing were sheared off. The captain reduced his altitude in an attempt to make an emergency landing and completed a belly landing in a field. The aircraft skidded for several yards and hit three successive ditches before coming to rest with both propellers sheared off. All 15 occupants were unhurt while the aircraft was damaged beyond repair.", "Shortly after takeoff by night, while in initial climb, the aircraft banked right, stalled and crashed by a 30\u00b0 nose down angle in Korangi Creek. All 23 occupants were killed. At the time of the accident, visibility was poor and weather conditions were considered as marginal.", "Shortly after takeoff from Le\u00f3n-Guanajuato-Del Bajio Airport, the crew informed ground that an engine failed and received the authorization to return for an emergency landing. While completing a last turn, the pilot lost control of the aircraft that stalled and crashed in a residential area located near the airport. Both pilots, three passengers and three people on the ground were killed.", "Enroute from Buffalo Narrows to Big River, the pilot encountered poor weather conditions with a snowstorm. He reduced his altitude in an attempt to make an emergency landing when landing on a road, the aircraft ended up in the bush and was destroyed. Both occupants were injured.", "On final approach to Copenhagen-Kastrup Airport, the twin engine aircraft went unstable, rolled left and right, stalled and crashed in a flat position in the \u00d8resund, about 500 meters short of runway threshold. While all 15 occupants were uninjured and quickly rescued, the aircraft christened 'Torulf Viking' was damaged beyond repair.", "The crew left Chelyabinsk Airport at 1215LT, established contact with RDS Koltsovo and was instructed to proceed to the altitude of 1,500 meters, although this was lower than the minimum safe altitude of 2,100 meters on the route Chelyabinsk - Kazan. An hour later, the crew encountered poor weather conditions with a cloud base at 200 meters, heavy snow falls and an estimated horizontal visibility less than 4 km. While cruising at the altitude of 1,145 meters, the twin engine aircraft hit the slope of Mt Taganay located about 20 km north of Zlatoust. The wreckage was found in an isolated and mountainous area a day later, the aircraft was destroyed by impact forces and a post crash fire and all six occupants have been killed. The aircraft was carrying a load of various goods consisting of grinding wheels, boxes and a furnace-type PET-8 for a total of 2,298 kilos.", "Crashed shortly after takeoff from Elmendorf AFB, killing all nine crew members.", "Crashed in unknown circumstances. The exact date remains unknown, somewhere during 1947.", "While descending to Chattanooga Airport by night, the seaplane hit tree tops and crashed in flames in a wooded area located in Signal Mountain, north of Chattanooga. Both crew members were killed. Crew: Ens Roger W. Whale, Amm1 Kristian F. Anderson.", "On touchdown, a landing gear failed. The aircraft was damaged beyond repair while all three crew members were unhurt.", "On landing, an undercarriage collapsed. The aircraft went out of control, veered off runway and hit a drainage ditch. All 15 occupants were unhurt while the aircraft was damaged beyond repair.", "On approach to Northolt Airport, about seven km from the runway threshold, the captain decided to make a go around and informed ATC he was unable to distinguish the runway due to poor weather conditions. A second and a third attempt to land were aborted few minutes later. During the fourth attempt, the aircraft was too low and hit tree tops before crashing in a field located 4 km short of the runway threshold. 17 occupants were injured while a passenger was killed.", "While approaching Paris, the crew was instructed by ATC to stack for about 30 minutes due to an Air Alg\u00e9rie DC-3 landing at the same time. Also, ATC told the crew to divert to Pontoise-Cormeilles en Vexin if they wanted to land immediately. The captain decided to stack for about 30 minutes at an altitude between 700 and 1,000 meters and was later authorized to descent to Le Bourget. On final approach, while at a height of some 150 feet, the aircraft stalled and crashed in a tulip field located 1,500 meters short of runway threshold. Two passengers were seriously injured while all 14 other occupants were killed. Few hours later, both survivors died from their injuries. Crew: Edouard Albin, pilot, Georges Capron, copilot, Pierre Lebeau, radio navigator, Joseph Lacroix, mechanic, Mr. Germ\u00e9, steward.", "After refueling to 600 gallons of gasoline, the flight departed at 0553 on an instrument flight plan to Miami, via Airway Amber 7, at an altitude of 2,000 feet. The crew reported over the Florence, South Carolina, range station at 0643 at an altitude of 2,000 feet. At 0716 they reported over Charleston, South Carolina, at an altitude of 2,000 feet, and estimated their arrival over Savannah at 0744. This was the last communication received from the flight. Between Charleston and Savannah, Co-pilot Eick left the cockpit to obtain navigational charts, during which time he heard one or both of the engines run roughly. By the time he returned to his seat, however, both engines were again operating normally. A few minutes later both engines stopped, and the fuel pressure gauges were observed to be at zero. The wobble pump was used, different positions of the fuel tank selector valves were tried, the cross-feed valves were turned to the \u201con\u201d position, but no fuel pressure could be obtained. When it became apparent that the engines could not be restarted, Captain Antonioli informed the co-pilot that it would be necessary to make a forced landing in a nearby marsh, and instructed him to see that the passengers were secured by safety belts. Co-pilot Eick proceeded immediately to the cabin where he buckled the safety belts of 4 or 5 passengers. Then he felt the airplane turning steeply, and he attempted to return to the cockpit. By the time he reached the radio compartment passageway between the passenger cabin and the cockpit he was forced to the floor by centrifugal force. The aircraft shuddered as though in a stall, and crashed. Witnesses on a nearby barge saw the aircraft approaching from a north-westerly direction at an altitude estimated to be 1,000 feet, descending without audible engine noise. It was observed to enter a gliding turn to the left which was continued for about one and one-half revolutions, until the airplane crashed into a marsh and burst into flames. A pilot and 17 passengers were killed.", "Enroute, the pilot was forced to make an emergency landing for unknown reason. The aircraft crash landed in a field in Chelford and was damaged beyond repair. There were no casualties.", "The crew was performing a training sortie at RAF Waterbeach, consisting of touch and goes. On final approach, the instructor deliberately shut down an engine to simulate a failure. Following this, the pilot in command missed the landing procedure, overshot and landed too far down the runway. After touchdown, the aircraft was unable to stop within the remaining distance, overran, crossed a road and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "While cruising in marginal weather conditions, the radio navigator informed ground that an engine failed and elected to return to Algiers. Shortly later, the aircraft went out of control and crashed in an affluent of the Isser River, about 11 km from Palestro (now Lakhdaria). All nine occupants were killed. Crew: Mr. P\u00e9hu, pilot, Mr. Suhaud, radio navigator.", "On final approach to Madrid AFB, the crew decided to make a go around when the seaplane stalled and crashed short of runway threshold. All three crew members were rescued while the aircraft was destroyed. Engine failure is suspected.", "Enroute, the aircraft hit the slope of Mt dell'Aretino located near Cerbaiola, killing all four crew members.", "Shortly after takeoff from the Qingdao Bay, while climbing, the aircraft caught fire, exploded and crashed into the sea. A crew member was killed while the aircraft was destroyed by fire.", "Enroute, an engine failed. The crew tried several times to restart the engine that fell off shortly later. In such conditions, the crew elected to make an emergency landing in a desert area located about 40 km northwest of Cairo. The aircraft belly landed and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "Few minutes after its departure from Santa Cruz de Barahona Airport, the crew encountered poor weather conditions and decided to modify his route, diverting to Ciudad Trujillo, the capital city. While cruising about 20 km north of Ciudad Trujillo in low visibility, the aircraft hit the slope of a mountain and crashed near Yamas\u00e1. All 32 occupants were killed, among them members of the baseball team of Santiago returning home.", "The aircraft took off from RAF Topcliffe in the mid-afternoon so the pilot could train on instrument flying. Also on board was a second pilot who was acting as an instructor, a radio operator and a passenger. The purpose of the latter was so that he could carry out radar tests during the flight. The aircraft took off in the gusty conditions with the pilot having to use both hands to maintain lateral control, the aircraft climbed normally to 400 feet but after which the nose rose sharply. The pilot pushed the control column forward to try and make the aircraft return to level but this had no effect, full power was applied but the aircraft continued to climb at this rate until it was at about 1000 feet. The speed of it had now dropped to 80 knots so the pilot ordered the crew to bale out before it stalled. Only the second pilot was able to get out before the nose sank and the aircraft entered a dive from which it could not be recovered from. The survivor sustained slight injuries after being dragged by his parachute when on the ground after it caught in the strong wind. The other three had no chance to get out before it crashed and were sadly killed in the crash at 1500LT. Source: http://www.yorkshire-aircraft.co.uk/aircraft/yorkshire/rp555.html", "The aircraft was carrying a passenger and six crew members on a test flight in Rome-Fiumicino Airport. While flying in the vicinity of the airfield, an engine caught fire and the captain elected to make an emergency landing. The aircraft belly landed in a field located in Ponte Galeria, east of the airport, and came to rest in flames. All seven occupants were unhurt while the aircraft was destroyed by fire.", "\"Flight 572 arrived in Atlanta, Georgia, from its point of origin, Houston, Texas, at 2330, January 12, 1948. With a new crew, consisting of Captain Paul J. Saltanis, First Officer Ralph B. Sanborn, Jr., and Flight Attendant Peter L. Philiois, the flight departed from Atlanta at 2355 for Greenville and Winston-Salem, North Carolina, and Washington, D. C. The flight as far as Winston-Salem was routine. At 0306, January 13, 1948, the flight took off from Winston-Salem carrying six passengers, a crew of three, and 600 gallons of fuel. It proceeded at the altitude of 9,000 feet specified in the flight plan, to Washington, via Blackstone and Richmond, Virginia. Shortly after reporting over Blackstone, at 0405, 146 miles southwest of Washington, an airway traffic control clearance was transmitted by company radio to the flight authorizing it to cross the Doncaster fan marker, 27 miles southwest of Washington, at 5,000 feet. Captain Saltanis requested a lower altitude and ten minutes later received another ATC clearance approving 3,000 feet over Doncaster, and permission to descend to 2,500 feet immediately after crossing Doncaster. At 0427, the flight reported its position to the Washington control tower, stating that it was over Doncaster at 3,000 feet. It was instructed by the tower to maintain 2,500 feet, and to report again when it was over Mt. Vernon. 9 miles south of the Washington National Airport. At about this same time another Eastern Air Lines\u2019 flight, No, 454, reported that it was at 4,500 feet over the Arcola range station, which is located 23 miles west-northwest of Washington, D. C. Since the two Eastern Air Lines' flights were converging toward Mt. Vernon, the airport traffic controller thought that flight 454 might fly over Mt. Vernon before it had descended to a safe altitude below Flight 572. To assure that both airplanes would not be over Mt. Vernon at the seine time and altitude, the controller instructed Flight 572 to climb to 3,500 feet Flight 572 acknowledged, advised that it was contact, and asked why it was necessary to climb. Less than a minute later, at approximately 0430, the east bound flight, No. 454, reported that it was \u201ccontact\u201d at 2,000 feet and approaching Mt. Vernon. The controller then knowing that a safe altitude separation existed between the two aircraft, cleared night 572 back to its previous approach altitude of 2,500 feet. At 0433, flight 572 was again cleared to the airport by the Washington Tower, and advised to report when leaving 2,500 feet, when leaving Mt. Vernon, and when \"\"VFR.\"\" 2 Following this transmission flight 572 was asked to give a short count", "The crew was performing a flight from England to India to deliver the aircraft that was brand new. While descending to Rome for a refueling stop, the twin engine aircraft hit the slope of Mt Urbanu located in the region of Viterbo. Both pilots were injured and the aircraft was destroyed.", "On final approach to Andrews AFB, the aircraft was too low, hit a building and crashed. A crew member was killed while three others were injured.", "Enroute to Malakal, the crew was forced to make an emergency landing near Ed Dueim for unknown reason. While both crew members were unhurt, the aircraft was damaged beyond repair.", "Shortly after takeoff from Mukden Airport, while climbing in heavy snow falls to a height of 60 feet, the aircraft stalled and crashed near the runway. Eleven passengers were killed while 43 other occupants were injured. The crew was in charge to evacuate some people fleeing the regime recently introduced in Mukden.", "The aircraft departed Denver at 1602 for Grand Junction. The crew, all employees of the Civil Aeronautics Administration, consisted of Fred L. Snavely, pilot; Warren L. Lungstrum, copilot; and Ross C. Brown, observer. Over the route to Grand Junction a check was to be made by these men of the VHF (very high frequency) airway facilities to determine whether they were operating normally. According to the flight plan, the flight was to proceed over Red Airway 6 at an air speed of 150 mph. Though only 2 hours were required for the trip, 8 hours supply of fuel was carried. Information supplied to Copilot Lungstrum at the Denver United States Weather Bureau Office was to the effect that clear weather conditions existed generally over the intended route. Over Fraser, Colorado, located approximately 50 miles west northwest of Denver, however, broken clouds were reported. Since this layer of clouds was only 2,000 feet in depth, with tops at 13,500 feet above sea level, it appeared that a cruising altitude of 14,000 or 15,000 feet would be high enough for the flight. Winds at that altitude were from the northwest at 50 mph. Weather Bureau personnel advised that these winds would result in considerable turbulence. Take-off was accomplished at 1602. Twenty-two minutes later, at 1624, the CAA communication station at Denver received a position report from the flight that it was at an altitude of 14,500 feet, 500 feet over the top of clouds, and 20 miles west of Denver. The flight also reported that they were experiencing severe turbulence. Since the flight plan specified that the trip would be made in accordance with visual flight rules, and since the position report indicated that the aircraft was being flown over the top of clouds, the flight was requested at the termination of their 1624 position to verify whether they were actually proceeding in accordance with visual flight rules. A response in the affirmative was received. About one minute after the 1624 report the CAA communicator at Cheyenne, Wyoming, called NC206 and asked for a check of his station\u2019s radio transmission. NC206 responded, \u201cRead Cheyenne Radio loud and clear.\u201d The communicator then asked for a position report from NC206, and the flight replied, \u201cWe are approximately. . . .\u201d The remainder of this message, received shortly after 1625, was garbled and faded. The Cheyenne communicator attempted to contact the flight again but was unable to do so. Since interference to radio transmission could have resulted from the mountain ranges between Cheyenne and the aircraft, and since the Cheyenne communicator had overheard the report of severe turbulence, he presumed that the crew was completely occupied in flying the aircraft, and that either they had not heard the last transmission or were too busy at the time to acknowledge. Accordingly, he placed no significance on the failure of the flight to reply. A request had previously been made by the communication station at Eagle, Colorado, for the flight to check the radio transmission of that station. Since Eagle Radio did not receive any calls from NC206, the station called the flight at 1645. No reply was received. Repeated calls were made by the communicator at Eagle on all available frequencies at three-minute intervals until 1735. Then the station requested information concerning the flight from Grand Junction Radio, but neither Grand Junction Radio nor any other radio station on the route had received a call from NC206 since 1625. At 1825, 23 minutes after the estimated arrival time of NC206 at Grand Junction, an emergency was declared.", "\"Flight 604 departed Miami, Florida, at 2301, January 20, 1948, on an instrument flight rules clearance, non-stop to Newark, New Jersey, to cruise at 15,000 feet via Airway Amber 7 to Jacksonville, Florida, and Airway Amber 6 to Alma, Georgia, thence direct to Spartanburg, South Carolina, Winston-Salem, North Carolina, and Washington, D. C., and via Airway Amber 7 to Newark, Boston, Massachusetts, and Providence. Rhode Island, were designated as alternate air ports. In order to remain above the overcast, the flight requested changes of cruising altitude between Winston-Salem and Washington, and at 0232, at which time it reported over Washington, the flight was cruising at 21,000 feet. Shortly after passing Washington, Flight 604 was cleared to descend en route to Newark and to cross Philadelphia at 7,000 feet, and was advised that no traffic was reported above 7,000 feet. A descent was established and at 0253 the flight reported over Philadelphia \"\"at 8", "Belly landed for unknown reason. The aircraft was damaged beyond repair and there were no casualties.", "The crew was performing a night training sortie in RAF Swinderby. On final approach, while at an insufficient altitude, the aircraft hit the ground at a relative high speed and crashed one mile short of runway threshold. The aircraft was destroyed and all three crew members were killed.", "On approach to Lyon-Bron, the pilot encountered poor weather conditions and decided to make an emergency landing. The twin engine aircraft belly landed in a flooded field located 10 km north of the airport and came to rest. All three occupants were unhurt while the aircraft was damaged beyond repair.", "The twin engine aircraft was returning from Newark and was diverted from National Airport due to a severe snowstorm, to Baltimore Municipal Airport. While approaching, the airplane crashed in unknown circumstances, killing all four crew members. The wreckage was located two days later after an extensive search by Army, Navy and Coast Guard aircraft. Crew: Lcdr Charles W. Schuh, Lt Jg William N. Killebrew, Amm1 Charles A. MacArthur, Arm1 Rudolph H. Schoning.", "The aircraft was on its way to Indochina to be delivered to the Soci\u00e9t\u00e9 Indochinoise de Transports A\u00e9riens (SITA) and was carrying two British engineers and three pilots. While cruising between Turkey and Cyprus, the aircraft crashed in unknown circumstances into the Mediterranean Sea, about 100 km north of the Cyprus coast. No trace of the aircraft nor the five occupants was ever found.", "Caught fire and sank off Vancouver Island enroute to Forward Harbour. After it went to a halt, all four occupants were able to evacuate.", "Shortly after takeoff from Paris-Le Bourget Airport, while climbing, the four engine aircraft went out of control and crashed on a factory located in Romainville, in the suburbs of Paris. All nine occupants were killed while two workers in the factory were slightly injured. The crew was performing a local training flight from Paris-Le Bourget Airport and the takeoff was initiated with one engine voluntarily inoperative. Crew: Georges Lemare, pilot, Charles Fouquet, pilot, Fran\u00e7ois Rogale, copilot, Jean Soulard, radio navigator, Pierre Tolosano, mechanic, Hubert Halter, mechanic, Guy Kerespert, mechanic, Roger Deluc, mechanic, Pierre Ledoux, radio navigator by Air Atlas.", "The aircraft left Istres-Le Tub\u00e9 AFB at 1237LT bound for Udine with an intermediate stop in Pisa. While flying over the Alps, the crew encountered poor visibility with snowstorm and strong winds. In such conditions, the captain decided to return to Istres but was unable to locate his position with certainty. Few minutes later, while flying northwest of the village of Ch\u00e2teau Garnier, the aircraft hit the slope of Mt du Cheval Blanc culminating at an altitude of 2,323 meters. The wreckage was spotted by the crew of a USAF B-17 based in Germany two days later. On site, rescuers did not find any survivors and among the passengers were five children aged 5, and women of US soldiers based in Udine. The day after the wreckage was found, the US B-17 crashed in the same region, killing its entire crew of nine.", "The crew was performing a training flight in the vicinity of Lisbon. In flight, the pilot encountered poor weather conditions and lost control of the aircraft that crashed in a huge explosion in Monte da Caparica, south of Lisbon. All three crew members were killed.", "The flight departed from its operating base, Burbank, California, for Oakland, California, at 0646, January, 1948. According to company instructions, the crew consisting of Francis Charles Atkinson, captain; Marion Harlow Ewing, first officer; and Mrs. Francis Charles Atkinson, stewardess, were to fly NC79055, which was certificated to carry 32 passengers, however, the crew made a mistake and departed in NC36480. This airplane was certificated to carry only 26 passengers and was 7 hours overdue for a 100-hour inspection at the time of departure from Burbank. Landing at Oakland was accomplished at 0849. The trip had been routine, and somewhere between Burbank and Oakland the pilot apparently realized that he was flying the wrong airplane for he requested his landing instructions from the Oakland tower with the appropriate airplane call numbers, 480. In Oakland, 28 Mexican Nationals and one United States Immigration official were enplaned for a flight to the Imperial County Airport, Imperial County, California. This flight was to be performed under a contract which the company had with the United States Immigration and Naturalization Service. Since NC36480 had accommodations for only 26 passengers, three of the 28 Mexican Nationals who boarded the aircraft were unable to be seated where they could be secured with safety belts. According to the statement of a United States Immigration official who assisted in the loading, three pieces of unsecured luggage were in the aisle at the time of take-off, and it as probable that the three passengers were seated on this luggage after the aircraft taxied from its parking area at the Oakland Airport for take-off. The remainder of the airplane load consisted of 375 gallons of fuel. Total weight was 67 pounds in excess of the maximum allowable. No flight plan was filed for the southbound trip since clear weather conditions prevailed over the route to the Imperial County Airport. Take-off was accomplished at approximately 0930. Before leaving the Oakland tower frequency Captain Atkinson received a message from his company, relayed through the tower, that he was to return directly to Burbank. His acknowledgment of this message was the last communication received from the flight. One hour and 35 minutes after the aircraft had departed from Oakland, it was observed over the vicinity of Coalinga, California, cruising at an estimated altitude of 5,000 feet above the ground. At this time a trail of white vapor or smoke, 150 to 200 feet long, was observed streaming from the left engine of the aircraft. Ten to 15 seconds later flames were seen flowing from the left engine over the wing and back to the empennage. Seconds later the left wing and the left engine dropped free from the rest of the aircraft; and the airplane fell out of control, crashed to the ground, and burst into flames.", "The aircraft left Istres-Le Tub\u00e9 Airbase in the morning to try to locate an USAF C-47 that disappeared in the region three days earlier. In fact, this C-47 registered 44-76443 crashed on the Cheval Blanc mountain, killing all 11 occupants. Around noon, the crew of the B-17 localized the wreckage of the C-47 on the east slope of the mountain and while flying to close from the terrain, the aircraft went out of control, maybe due to downdraft, and hit the north slope of the same mountain, near the village of Chanolles. The aircraft was destroyed on impact and eight of the ten occupants were killed. Two crew members, among them a pilot, survived. The pilot decided to leave the area to find help but his dead body was found in an isolated area on March 25, 1948. The only survivor, Sgt Angelo La Salle, was rescued few hours later.", "Christened 'Star Tiger', the four engine aircraft left Horta, in the Azores Islands, at 1534LT bound for Hamilton, Bermuda. At 0200LT, about 10,5 hours into the flight, the navigator Cyril Ellison fixed its position and learned that they too had been blown off course and were crabbing away from Bermuda. He informed the pilot McMillan about a new course which turned the aircraft directly into a gale. However, McMillan still expected to reach Bermuda with at least an hour's worth of fuel remaining upon landing. At 0304LT, the radio officer Robert Tuck requested a radio bearing from Bermuda, but the signal was not strong enough to obtain an accurate reading. He repeated the request eleven minutes later, and this time the Bermuda radio operator was able to obtain a bearing of 72 degrees, accurate to within 2 degrees. The Bermuda operator transmitted this information, and Tuck acknowledged receipt at 0317LT. This was the last radio contact with the aircraft and its crew. As the aircraft failed to arrive in Hamilton, SAR operations were conducted but were eventually suspended few days later as no trace of the aircraft nor the 31 occupants was found.", "Damaged beyond repair in a ground accident in Beirut with a Junkers JU.52/3m operated by Compagnie G\u00e9n\u00e9rale Transsaharienne (CGT). There were no casualties.", "Damaged beyond repair in a ground accident in Beirut with a C-47 operated by Middle East Airlines and registered LR-AAA. There were no casualties.", "Shortly after takeoff from Istres-Le Tub\u00e9 Airbase, the captain was forced to feather the propeller on engine number one because it was running roughly. He elected to return to Istres, initiated a turn and started an approach when he realized he was misaligned with the runway centerline. He increased power on the three remaining engines in an attempt to make a go around when the aircraft stalled and crashed on an abandoned hangar located short of the runway threshold. Four crew were injured, five others were unhurt and seven passengers were killed. Crew killed were (115th Squadron): S/L D. T. Moir, pilot, G. Atter, flight engineer, G. G. W. Carter, J. T. Walton, F/Lt P. Smith, F/Sgt S. A. Wallace, AC2 R. A. Knapp.", "While landing on the iced Lake Iv\u00f6sj\u00f6n, the three engine aircraft went through the ice and sank. There were no casualties but the aircraft was lost.", "The three engine aircraft was operated by the manufacturer Northrop in a number of various unimproved and short fields in Southern California (exact place unknown). The crew, consisting of one engineer and two pilots, was performing a test of an experimental dorsal fin. While flying in the vicinity of an airfield, the fin broke loose and damaged the Pioneer\u2019s tail surfaces, making the aircraft uncontrollable. The test pilot Latham A. \u201cSlim\u201d Perrett did what he could to steady the aircraft to allow the copilot and an engineer to parachute to safety. Sadly, there was no time for Perrett to escape. The aircraft was destroyed and the pilot was killed. Source: http://oldmachinepress.com/2014/05/17/northrop-n-23-pioneer-and-n-32-yc-125-raider/", "While cruising at an altitude of 2,000 feet by night on a flight from Wright-Patterson AFB to Little Rock, the twin engine aircraft hit the east slope of Mt Round Top located three miles south of Jasper, in the Ozark Mountains. The aircraft was destroyed by impact forces and a post crash fire and the wreckage was spotted around midnight, four hours after the crash. All five occupants, four USAF officers and one Navy Officer, were killed. Crew: Lt Phillip Novick, pilot, Lt Charles W. Thomas, copilot, M/Sgt George L. Haties, crew chief. Passengers: Lt Felton F. Roberson, GM2 Francis J. Russell.", "On final approach, one of the engine failed. The aircraft stalled and crashed in a field short of the runway threshold. The aircraft was damaged beyond repair and all 19 occupants were injured.", "Enroute, the aircraft hit the east slope of Mt Page located 2 miles southwest of Saluda, North Carolina. The aircraft was destroyed by impact forces and a post crash fire. Four passengers were killed while six other occupants were injured.", "Crashed in unknown circumstances into the Ionian Sea off Locri, Calabria. All occupants were quickly rescued while the aircraft sank and was lost.", "Crashed on approach to Sandoway Airport. The aircraft was written off but there were no casualties.", "On final approach to RAF Hendon, while performing a local training sortie, the aircraft stalled and hit several buildings located 1'100 yards short of the runway threshold. On impact, the aircraft nosed down and crashed on a trolleybus. Both pilots were killed while eight civilians seating in the trolleybus were seriously injured.", "Shortly after takeoff from Bandung-Andir Airport, while climbing in stormy weather, the crew informed ground that an engine failed. While trying to return, the pilot lost control of the aircraft that dove into the ground and crashed in a huge explosion into a wooded ravine located near Padalarang, about 10 km northwest of Bandung Airport. The aircraft disintegrated on impact and all 19 occupants were killed, among them 11 soldiers and four members of a music ensemble.", "The crew was on his way from Brownsville to Ciudad del Carmen to pick up a load of seafood for the US market. While cruising vertical to the Gulf of Mexico, the right engine failed, forcing the crew to ditch the aircraft 24 km off Ciudad del Carmen. While preparing a life raft, the American pilot Neil Womack fell into the water and was drowned. The Mexican copilot Esteban de Le\u00f3n was rescued by the crew of a ship christened 'Roat\u00e1n' nine days later.", "On final approach to Jacksonville-Towers Field NAS, following a maritime patrol flight, the seaplane was too low, hit tree tops and crashed in a wooded area located few hundred yards short of runway. Two crew members were killed while five others were injured.", "Enroute from Brisbane-Archerfield to Roma, while flying in the region of Condamine in poor weather conditions, the right engine failed. The crew reduced his altitude and elected to make an emergency landing when the aircraft hit a tree and crashed in a field. A passenger and a pilot were slightly injured while all other occupants were unarmed. The aircraft was damaged beyond repair.", "While descending to Frankfurt-Main Airport in marginal weather conditions, the crew informed ground that an engine failed and was forced to make an emergency landing as he was unable to maintain a safe altitude. The aircraft crash landed in a field located in Ulrichstein, about 70 km northeast of Frankfurt Airport. On impact , a wing was sheared off, causing a gaping hole in the cabin, allowing some of the passengers to quickly evacuate the aircraft. Nevertheless, all four crew members and eight other passengers were killed in the accident.", "The crew consisting of pilots and engineers from the manufacturer Handley Page Aircraft was completing a test flight in Radlett. Upon landing, an undercarriage collapsed. The aircraft went out of control and veered off runway before coming to rest. All four occupants were unhurt while the aircraft was damaged beyond repair.", "The crew was completing a training sortie in RAF Hullavington. The aircraft landed 200 yards after the runway threshold. On a relatively short runway, the aircraft was unable to stop within the remaining distance, overran and came to rest into a ditch. All four crew members were unhurt while the aircraft was damaged beyond repair.", "The crew (236th OCU) was engaged in a night training sortie from RAF Kinloss. While flying in the vicinity of Tain, the aircraft went out of control and crashed in flames in a prairie. All five crew members were injured while the aircraft was destroyed.", "The aircraft departed Laverton at 1415LT for Amberley. Aeradio position reports were received normally through out the flight, until 1734LT, when clearance was obtained to descend from 8000 feet preparatory to the landing at Amberley. A short time later Amberley Flight Control cleared the aircraft for a straight-in approach RWY 05 at an angle of 45 degrees, turn right to align itself with the runway and commence to lose height on the approach - which appeared to be lower and faster that usual. The aircraft touched down in a tail high attitude, approximately 300 feet after crossing the threshold. After travelling a short distance, the aircraft then left the ground, rising to about five feet. From eyewitness reports, attempts were then made by the crew to force the aircraft onto the runway but this only resulted in three more bounces. When about 600 feet from the upwind end of the runway, engine power was applied to make a go around. It is estimated by ground observers that, by this stage, the airspeed of the Lincoln had decreased to approximately 80-85 knots. The Lincoln was then seen to climb slightly, level out at 100 feet, after which the nose of the aircraft rose sharply to place the aircraft in a climbing attitude of 40 degrees. After a further few seconds, the attitude changed abruptly to a climb of 80 degrees. With all engines roaring presumably under full power, the aircraft attained an altitude of approximately 500 feet AGL when, with no forward speed, the port wing slowly dropped and the aircraft steadily accelerated until the port main plane struck the ground in a vertical position. By this time the fuselage was parallel with the ground. The aircraft caught fire immediately and, although the fire tender arrived shortly after the crash, the fire could not be sufficiently controlled to extricate the crew or passengers. The crash site was 400 yards from the end of RWY 05 and displaced approximately 100 yards left of the runway. Source: http://www.adf-gallery.com.au/", "The aircraft was scheduled to fly from Florence to Rome but few minutes prior to departure, the operator decided to make an unscheduled stop in Pisa Airport to disembark passengers that were blocked in Florence due to a technical failure on the aircraft. Due to low clouds, the crew was forced to fly at low height from Florence to Pisa and apparently, the weather conditions dropped as the aircraft approached Pisa Airport. Descending from the south in poor visibility, the aircraft hit the slope of a mountain and crashed near the village of Collesalvetti, south of the airport. All three crew members and four passengers were killed while three other passengers were seriously injured.", "Few minutes after takeoff from Le Havre, while flying over the Bay of Seine, the crew encountered poor weather conditions with snow falls. The seaplane went out of control and crashed into the sea off the Saint-Marcouf Islands, between Le Havre and Cherbourg. The aircraft was lost and all 19 occupants, pilots and engineers of the manufacturer, were killed.", "On the leg from Maracaibo to C\u00facuta, while starting the descent, the crew encountered technical problems with the engines and elected to make an emergency landing. The aircraft crash landed and was written off. All 17 occupants were injured, nine of them seriously.", "Crashed shortly after takeoff from Mati, killing all 12 occupants.", "Captain De Cicco took over the controls of the aircraft shortly after the flight had passed the Newark fan marker, and started an instrument approach to the Port Columbus Airport. Altitude was reduced to 1,600 feet which was the minimum for that part of the instrument approach to Columbus. However, Captain De Cicco continued his descent below 1,600 feet despite the objections of Mr. Cole. Mr. Cole stated that he immediately engaged himself in a search of the cockpit for an instrument approach chart for Columbus, presumably to show Captain De Cicco that an altitude of 1,600 feet was required until over the Summit Hill fan marker. The descent was continued, and just as the aircraft emerged below the overcast Mr. Cole looked up to see the trees into which the aircraft flew. The first tree struck extended approximately 90 feet above the terrain, the elevation of which was 1,055 feet. The aircraft continued in a straight line, striking a second tree 60 feet away from the first. At this point the right horizontal stabilizer tip and the right elevator were sheared from the empennage A third tree was struck, 265 feet from the first point of contact, and miscellaneous fuselage parts and the right wing were torn from the aircraft. The airplane then made contact with the ground at which time both propellers were broken from the engines. The main body of the wreckage came to rest and burned 1,150 feet from the first point of impact. The pilot was killed, but the co-pilot, although seriously injured has substantially recovered.", "At Benina Airport, the pilot was in a hurry and took off in a rush at 1535LT, with the passenger but without his radio navigator. While flying along the Libyan coast, he encountered poor weather conditions and the twin engine aircraft crashed into the sea around 1600LT. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor both occupants was found. On March 6, 1948, some debris and the dead body of the passenger were found on a beach in Zarzis, Tunisia.", "On final approach to Bel\u00e9m Airport, the aircraft stalled and crashed in a prairie short of runway threshold. Three passengers were seriously injured while 23 other occupants were killed.", "Enroute, the crew encountered unknown technical problems and decided to abandon the aircraft and to bail out. Out of control, the aircraft dove into the ground and crashed. All five crew members were unhurt.", "The approach to London-Heathrow Airport was started in reduced visibility due to the night and foggy conditions. On final, the aircraft hit the ground, exploded and came to rest in flames short of the runway threshold. Only two passengers survived the crash and were seriously injured while 20 other occupants were killed. Crew: Henri Goblet, pilot, Jean Lomba, radio operator, Louis De Geyndt, steward.", "The three engine aircraft departed Oran-Es Senia Airport at 1530LT on a cargo flight to Lyon via Perpignan, carrying a load of vegetables. En route, the airplane crashed in the Gulf of Lion about 90 km east of Perpignan for unknown reason. All four occupants were killed. Crew: Mr. Screka, pilot, Mr. Pelletier, radio operator, Mr. Prado, mechanic. Passenger: Mr. Saada.", "Belly landed in Mombasa and slid for several yards before coming to rest. Both occupants were unhurt while the aircraft was damaged beyond repair.", "While cruising in poor weather conditions, the twin engine aircraft hit the slope of Mt Skalafell located near Hellishei\u00f0i. The aircraft was destroyed by impact forces and all four occupants were killed.", "Crashed in unknown circumstances somewhere in Brazil. Occupant fate unknown.", "While flying by night from Dudinka to Amderma, the crew encountered poor weather conditions and due to low visibility, became lost. The aircraft hit the eastern slope of Mt Netem-Pe (1,338 meters high) located 143 km north of Kharp, in the Iamalo-Nenets okrug. As the aircraft failed to arrive, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. Walkers found the wreckage in an isolated area on September 17, 1950. All 20 occupants were killed. It appears the crew was tired at the time of the accident and did not have a sufficient rest time prior to start the flight.", "The flight departed from Seattle, Washington, at approximately 1300, March 8, 1948, with a crew consisting of George S. Griebel, pilot, and William F. Grund, co-pilot. It carried 800 gallons of fuel, but no passengers or cargo, weighing at the time of take-off 21.963 pounds. At 1615, the flight reported over Red Bluff, California, at 12.000 feet, and requested clearance to descend to and cruise at 10.000 feet. Oakland Airway Traffic Control granted the request, and also cleared the flight to the Moffett radio range station. 25 miles southeast of San Francisco Municipal Airport, San Francisco, California. At 1715, the flight advised San Francisco Approach Control that it as holding northwest of the Moffett radio range station at 10,000 feet. In reply, San Francisco Approach Control directed the flight to hold between the Moffett radio range station and a point 2 minutes northwest of it. At the same time the flight was advised to expect clearance to the San Francisco Municipal Airport at 1745. Between 1717 and 1734 the flight, while flying its holding pattern, received clearance and descended from 10,000 to 6,000 feet. At 1741, it was cleared to make a \u201cstraight in\u201d approach to the San Francisco Airport. It was directed to report when it crossed the Moffett radio range station and 4,000 feet, and to report again when it had descended below the overcast, A minute later, at 1742, the flight reported leaving the Moffett radio range station and 4,000 feet. Though the San Francisco Tower called repeatedly, this was the last communication received from the flight. Between 1755 and 1805 a rancher in the vicinity of Mt. Hamilton heard a noise he thought to be either thunder or blasting. About 1945, after driving to another part of his ranch, he observed fire in the hills and realized then that the noise he had thought to be thunder was that of an aircraft crashing. It was midnight before a searching party reached the wreckage, which was approximately 20 miles east-southeast (on a bearing of 110 degrees) from the Moffett radio range station, and at an elevation of 1,800 feet.", "Crashed into the sea shortly after takeoff from the bay of Poso. All 13 occupants were rescued while the seaplane sank and was lost.", "The takeoff roll and the first part of the climb appeared to be normal until the aircraft and progressed three-quarters of the way down the runway, at which time it had reached an altitude between 150 and 200 feet. Then, while still within the airport boundaries, it assumed a very steep, near vertical, climbing attitude. Airport, tower, and flight personal observing from the ground believed the flight to be in difficulty, and though no distress signal was received from the airplane, the tower promptly telephoned the crash and fire facilities on the field. At an altitude between 500 and 800 feet the airplane appeared to stall, and the nose and right wing dropped. A partial recovery from the stall was made before the aircraft crashed to the ground and burst into flames. A passenger was seriously injured while 12 other occupants were killed.", "During the takeoff roll in Tulsa, the nose gear hit a snowdrift. After departure, during initial climb, the crew was unable to raise the nose gear so the captain decided to divert to Dallas-Love Field for a safe landing. After touchdown, the aircraft slid on its nose and came to rest. There were no casualties but the aircraft was written off.", "Take-off from Anchorage was accomplished at 2012, March 12, 1948, and the flight proceeded en route. 2 At 2028 the flight reported over the Wasilla Intersection, which is the intersection of the north course of the Anchorage radio range and the east course of the Skwentna radio range. This intersection is located 35 miles north 3 of Anchorage. Three minutes later, at 2031, the flight reported that it was at its cruising altitude of 11,000 feet. At 2042 the flight reported over Sheep Mountain, a non-directional radio beacon located 85 miles airways distance, 31 degrees, from Anchorage. At 2103 the flight reported being over the Gulkana radio range station, 159 miles, 34 degrees, from Anchorage, and at this time it estimated that it would be over Northway, Alaska, 283 miles from Anchorage, at 2136. Gulkana did not establish communication with the flight. However, the flight repeated its clearance into the Fairbanks area back to Northway, indicating that the flight could receive on 400 kcs, the frequencies for both the Northway radio range and communication. Shortly before the position report of 2103, the flight was observed flying an easterly heading approximately 4 miles south of the Gulkana radio range station. Approximately 42 miles, 51 degrees, from the Gulkana radio range station is Mt. Sanford, the elevation of which is 16,208 feet. In order to provide a safe lateral distance from Mt. Sanford for aircraft flying the route, the airway from Gulkana east is deflected to the north, its course being 23 degrees. Fifteen minutes after the flight was observed flying easterly from Gulkana a fire was observed on the western slope of Mt. Sanford. Except for a repeat transmission of the flight's Gulkana position report, overheard by Northway Radio 124 miles northeast of Gulkana and approximately one minute before the fire was observed on Mt. Sanford, no communication was received from the flight after 2103. Northwest Airlines, at 2150, requested from Anchorage Radio the reported time of the flight over Northway, at which time Anchorage Radio advised that neither the Northway nor the Gulkana stations had been able to contact the flight, and that a fire had been reported on Mt. Sanford. Radio facilities over the route were immediately alerted. Since all attempts to contact the flight were unsuccessful, it was concluded that the flight had struck Mt. Sanford and burned.", "Shortly after takeoff from Guidonia AFB, while in initial climb, the right engine failed. Unable to gain height, the aircraft hit power cables and crashed in flames in a field located three km southeast of the airport, near Tivoli. The radio navigator was seriously injured while both pilots were killed. Crew: Cpt Gianni Colaprete, pilot, Mar Teodoro Tagliabue, copilot, Mr. Borelli, radio navigator.", "Crashed shortly after takeoff from McGregor Bay following an engine failure. The aircraft was written off and the pilot was injured.", "Hit a rocky peak located in the Sierra Cristais and crashed. All six occupants were killed.", "While descending to Bogota Airport, the aircraft hit the slope of Alto El Arrastradero mountain located about 40 km northeast of the capital city. A 14 years old girl was rescued while 14 other occupants were killed.", "Following the disappearance of a LI-2 registered CCCP-N444 on March 7, rescue operations were conducted and dispatched. Unfortunately, due to poor weather conditions (heavy snow falls), most of the crew were forced to stay on the ground. That day, a crew decided to make a sortie but the runway at Vorkuta Airport has not been cleared of snow. The captain ask three crew members to seat in the rear of the cabin and started the takeoff procedure on a snow covered runway (up to 30 cm of snow). After a course of about 700 meters, the aircraft lifted off but failed to gain height due to an insufficient speed. After passing the runway end, the aircraft hit the roof of a house, lost an engine, stalled and crashed in a field. All six crew members were injured and the aircraft was written off.", "The crew was engaged in a night training sortie at RAF Topcliffe. Shortly after takeoff, while climbing at a height of some 300 feet, the aircraft collided with a second Vickers 619 Wellington X. Registered RP565, it was carrying another crew of four, was also completing a training flight and was attempting to land. Both aircraft went out of control and crashed in a field near the airport. All eight crew members were killed. Crew: F/Lt Franciszek Kula, pilot, Colin Bass, pilot, Sig Walter Ernest Leslie Howell, Sig Arthur Edward Highman, F/Lt William James Jones, F/Lt Robert Sneddon Laird, F/Lt Harry Corelius New, F/Lt John Edge Kerslake.", "The crew was engaged in a night training sortie at RAF Topcliffe. While approaching the airbase at a height of some 300 feet, the aircraft collided with a second Vickers 619 Wellington X. Registered RP499, it was carrying another crew of four and just took off from RAF Topcliffe. Both aircraft went out of control and crashed in a field near the airport. All eight crew members were killed. Crew: F/Lt Franciszek Kula, pilot, Colin Bass, pilot, Sig Walter Ernest Leslie Howell, Sig Arthur Edward Highman, F/Lt William James Jones, F/Lt Robert Sneddon Laird, F/Lt Harry Corelius New, F/Lt John Edge Kerslake.", "Aircraft NC 22077 departed from Providence, Rhode Island, for White Plains, New York, at about 0730 March 19, 1948. The aircraft carried the pilot, Herman F. Burlingame III, his wife Ruth L. Burlingame, their infant daughter Kathleen, and George H. Armitage, as well as four Chow dogs and personal baggage. Arriving at Westchester Airport, White Plains, one hour and 20 minutes later, aircraft NC22077 was serviced with 118 gallons of fuel. At 0935 the aircraft departed from White Plains, the pilot telling airport officials that he intended to fly either to Hadley Field, New Brunswick, New Jersey, or Solberg-Hunterdon Airport, White House, New Jersey. Two hours and 31 minutes later the aircraft returned to White Plains, Mr. Burlingame telling airport officials that he had not landed at either of the alternative destinations. The aircraft was parked for the night, after being serviced with 85 gallons of fuel. The following morning, March 20, 1948, at 0550 the flight departed from White Plains for St. Louis, Missouri. The aircraft carried an additional four persons who had joined the original group at White Plains. The take-off weight could not be precisely determined, but it was close to the maximum allowable. No flight plan was filed with CAA Airways Traffic Control, and though NC22077 was equipped with two-way radio, no transmissions were received from the flight after its departure from White Plains. Consequently the exact route over which the flight proceeded is not known. Shortly after 0800, witnesses in the vicinity of the west portal of the Laurel Hill Tunnel of the Pennsylvania Turnpike, approximately 45 miles southeast of Pittsburgh, Pennsylvania, observed an aircraft flying at a low altitude on a northwesterly heading. It was flying in and out of low-hanging cloud fringes, and therefore, was not continuously visible. However, the aircraft was observed to approach the tunnel, circle in front of the portal, and then disappear into the overcast. After losing sight of the aircraft, some of the witnesses stated that they heard a surge of engine power, followed by the sound of a crash. Others, more distant, noticed that sound from the aircraft ceased abruptly. Since no other aircraft was observed in the vicinity at that time, there is no doubt but what it was NC22077 that these witnesses saw.", "Crashed in unknown circumstances near the Rio Gurupizinho, at the border of Par\u00e1 and Maranh\u00e3o States. The wreckage was found two days later and all four crew members were killed.", "The crew left Travis AFB for a night flight to Hillsboro, in the suburb of Portland, Oregon. During the approach to Hillsboro, the crew encountered poor weather conditions and missed the airport. While flying in dark conditions, the aircraft hit the slope of Mt Davis located about 11 miles northeast of Woodland. Two passengers were seriously injured while eight other occupants were killed.", "On a local flight from G\u00f6teborg, the pilot encountered poor weather conditions and was forced to reduce his altitude when the aircraft hit power cables and crashed in a field. The pilot was injured and the aircraft was written off. The aircraft was owned by Nils Olofsson.", "While flying over the Irish Sea, enroute from Belfast to Liverpool, the pilot was forced to ditch the aircraft off Southport. He was quickly rescued while the aircraft sank and was lost.", "While flying at an altitude of 2,400 meters in poor weather conditions, the twin engine aircraft hit the slope of Mt Cardo located in the center of Corsica. The wreckage was found few hours later and all 19 occupants were killed.", "After touchdown, the four engine aircraft overran and collided with a rocky wall. There were no casualties but the aircraft was written off.", "On final approach to Berlin-Gatow Airport, at an altitude of 1,500 feet, the twin engine aircraft collided with a Soviet Air Force Yakovlev Yak-3. Both aircraft went out of control and crashed. All 14 occupants on board the Viking were killed as well as the fighter pilot. Crew: John Ralph, pilot, Norman Merrington, copilot, Charles Mamser, radio operator, Leonard G. Goodman, steward. Passengers: Sgt Pasquale E. Pintus, Frances Ruth Clough, J. K. Shea, J. E. Roberts, S. J. Stocking, Robert Collier, Waldemar Hald, Cpt Flamings, M. Lewin, H. Read-Jahn.", "Left its base at 0930LT for a training mission over the North Sea. At 1435LT, the crew informed ground about his position and that he was flying at an altitude of 15,000 feet some 192 km from his departure point. Few minutes later, the aircraft crashed into the sea in unknown circumstances. No trace of the aircraft nor the crew was ever found.", "The crew was forced to make an emergency landing for unknown reason. The aircraft came to rest in marsh field and was damaged beyond repair. There were no casualties.", "About half an hour after its departure from Maracaibo Airport, the aircraft crashed in a mountainous region located in the east part of Venezuela. As the aircraft failed to arrive in Cartagena, SAR operations were conducted but eventually suspended few days later as no trace was found. The wreckage was located in June 1959 in an isolated area. All four occupants were killed, among them Hernando Navarro Botero, Director of the company. The registration remains unconfirmed.", "Crashed in unknown circumstances on Mt Baird located in the Cowlitz county, Washington. All three crew members were killed.", "Following the failure of the starter on engine number one, the crew was unable to restart this engine and received the authorization to perform an empty leg back to Paris for maintenance purposes. During the takeoff roll in Kano Airport, the aircraft went out of control and veered off runway before colliding with a BOAC technical hangar. A crew member was killed while five others were injured. The aircraft was destroyed. Pilots : Mr. Salvetat & Marchandise.", "The crew was performing a training flight from Eglin AFB. Enroute, an unexpected situation forced to crew to abandon the aircraft that crashed into the sea two miles off Destin. Two crew members, F/Lt John Kubo and T/Sgt Joseph A. Riley were rescued while the body of T/Sgt John E. Brizendine was never found.", "Shortly after a night takeoff from Gibraltar, while climbing to an altitude of 2,500 to 3,000 feet, the twin engine aircraft hit the slope of a mountain located in Los Barrios, northwest of Algeciras. The aircraft was destroyed and all three crew members were killed. They were performing a cargo flight from Bordeaux to Casablanca with an intermediate stop in Gibraltar. The aircraft was carrying a load of four tons of various goods.", "\"Pan American's Flight 1-10, originating in San Francisco, California, April 10, 1948, was scheduled to fly around the world to New York, New York. In accordance with company practice the flight changed to a different aircraft, NC-88858, at the Pan American Airways' base in Calcutta, India. The flight took off from Calcutta, April 13, 1948, and continued without incident via Damascus, Syria, and Istanbul, Turkey, to Brussels, Belgium. During a night landing approach at Brussels the fluorescent lighting on the left or pilot side of the cockpit went out. Since the only other lighting immediately available was a chart light which was focused on the automatic direction finder indicator, the flight instruments could not be read, and the remainder of the landing approach was accomplished without visual reference to the flight instruments. An examination was made of the fluorescent lights after the landing. They appeared to operate normally, so the flight departed from Brussels, continuing without difficulty until on the final landing approach into London. When the power was reduced the same pilot's fluorescent lights again went out. This time the chart light was focused on the airspeed indicator. The approach was continued, and the landing was accomplished without incident. A faulty rheostat switch was found to be the cause of the fluorescent light failure, but since a spare switch could not be located, it was not changed at London. An entry describing the defect was placed in the aircraft's Form C, the airplane flight log, and the captain and the flight engineer of the new crew were informed by the company's maintenance supervisor of the condition. Though no actual maintenance was accomplished, the lights again appeared to be operating normally, so the captain, F. C. Jakel, decided to take-off, departing from London at 0035, April 15, 1948, for Shannon. At this time available weather forecasts indicated that at the estimated time of the flight's arrival at Shannon the ceiling there would be 700 feet with a higher cloud layer at 1,000 feet, and visibility 4 miles. At 0159, April 15, 1948, the flight reported being at an altitude of 4,500 feet, contact, over the Limerick Junction fan marker, located 25 statute miles southeast from the Shannon Airport, and requested permission to make a practice approach to the field with the use of the instrument landing system. Shannon Tower cleared the flight for this approach. The tower advised that 3 hours previously the instrument landing system equipment on the airport had been reported faulty, but that it had since been serviced and was operating normally according to its monitoring board, though not flight-checked. At 0210, the flight reported that it was proceeding to the outer marker, 5.2 statute miles northeast of the Shannon Airport, and also made a report, routine for Pan American flights, \"\"mechanical condition okay.\"\" In response Shannon Tower advised the flight that the weather over the field was \"\"fog patches", "Shortly after takeoff from Lae-Nadzab Airport, while in initial climb, an engine failed. The pilot lost control of the aircraft that crashed on an island located in the Markham River, south of the airport. All 37 occupants were killed. It was determined that all passengers were local farmers that were seating in the main cabin without seat or seat belt. Worst accident involving a Lockheed Hudson.", "The twin engine aircraft christened 'Kahu' left Auckland Airport at 1435LT bound for Gisborne with an intermediate stop in Tauranga. On final approach, the crew encountered poor weather conditions with thunderstorm activity and strong winds. The aircraft lost height and crashed in the Waipu Bay, less than 200 yards from the runway threshold. All 12 occupants were rescued while the aircraft was damaged beyond repair. Crew: A. C. Harris, pilot, G. E. Bruce, copilot.", "The twin engine aircraft left RAF Northolt at 1809LT bound for Glasgow-Renfrew Airport. At 1946LT, while cruising at an altitude of 4,700 feet, the captain contacted ATC to obtain the permission to descend to Renfrew. Few minutes later, he requested if the outer marker was operative. Shortly later, the aircraft hit the slope of Mt Irish Law and crashed. All 20 occupants were quickly rescued, two of them were slightly injured. The aircraft was destroyed.", "An Aeroflot LI-2 registered CCCP-L4279 made an emergency landing near Tynda on April 20. A day later, a Deputy from the Amur Region decided to conduct a mission to help and forced the crew to takeoff despite the fact that weather conditions were below minima. The aircraft left Takhtamygda Airport at 1550LT. About twenty minutes later, the right engine failed. The crew was forced to feather the propeller and the captain decided to return to his departure point. Shortly later, while losing altitude, the aircraft hit tree tops with its propeller while the left elevator hit a telephone pole. The aircraft stalled and crashed. Three crew members, among them the captain, were killed while three other occupants were injured.", "The crew left Rio de Janeiro-Gale\u00e3o Airport at 1000LT. About half an hour later, the aircraft crashed in unknown circumstances in Praia de Ponte Negra, about 150 km southwest of its departure point. Both pilots were killed.", "On final approach to Quonset Point NAS, both engines failed. The aircraft stalled and crashed into the sea few miles off shore. All eight crew members were rescued while the aircraft sank and was lost.", "Shortly after lift off, the aircraft went out of control and crashed in flames. The copilot was killed while the captain was seriously injured. He died from his injuries few hours later. The crew was on its way from Burbank to Israel to deliver the aircraft to the Israel Air Force. Four other similar aircraft were performing the same trip at the same time. At the time of the accident, the aircraft was still under the Panamanian register by LAPSA - Lineas A\u00e9reas de Panama. Crew: William Guy Gerson, pilot, Ernest Glen King, copilot.", "During the takeoff roll, the aircraft veered off the center line to the right as the rudder trim has not been set to neutral position before takeoff. The crew failed to abort the takeoff procedure and about 30 seconds after liftoff, during initial climb, the right wing hit a telegraph line and collided with the pole of a high voltage power line. Out of control, the aircraft stalled and crashed. The mechanic was killed while 13 other occupants were injured. The aircraft was destroyed.", "Approaching Bodaibo, the crew lost his orientation due to low visibility caused by poor weather conditions (snow falls). The captain decided to reduce his altitude and followed the Vitim River to join Bodaibo Airport at a height of 100 meters. The aircraft hit the water surface and crashed in a huge explosion into the river off Mamakan, about 13 km southwest of Bodaibo. A passenger was injured and rescued while all 28 other occupants were killed.", "On final approach to Corpus Christi NAS, the aircraft hit tree tops and crashed. At least one crew member was killed.", "Crashed in unknown circumstances into the sea some 5 km off Qingdao. All occupants were rescued while the aircraft was recovered nine hours later but written off.", "While taxiing, the twin engine aircraft swung due to heavy winds, lost its undercarriage and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "Prior to departure, the crew was briefed about the poor weather conditions in south of France and that he should avoid this area. While cruising southeast of Avignon, the aircraft went through a low pressure zone with cumulonimbus. It encountered severe turbulences, lost two engines and its tail, went into a dive and crashed in a field in Verqui\u00e8res. All 11 occupants were killed. It appears that few elements of the aircraft broke off due to severe turbulences that exceeded their certification.", "The crew was engaged in a local training flight on this brand new aircraft that was delivered to KLM last April 22. After several touch and goes completed without any issues, the instructor decided to perform a takeoff with the engine number one voluntarily inoperative. Ready for departure on runway 23, the crew increased power on all four engines and started the takeoff procedure. At a speed of 137 km/h, the captain started the rotation and the nose wheel left the ground. At a speed of 169 km/h, the instructor decided to reduce the power on the engine number one and pull the power lever to the back. At this moment, the aircraft was still on the ground and slightly deviated from the runway center line to the left. The captain tried to counteract this with the tail when the right main gear left the ground. Due to the presence of obstacles ahead, the instructor decided to increase power on the engine number one that oversped. The left wing dropped and hit a rocky wall, causing the aircraft to stall and crash into a ditch. All five crew members were injured while the aircraft was destroyed.", "Crashed into the Atlantic Ocean in unclear circumstances. As the aircraft failed to arrive in Shannon, SAR operations were conducted but eventually suspended five days later, on May 10, as no trace of the aircraft nor both crew members was found.", "Crashed one minute after its takeoff from Daly Waters while performing a delivery flight to Alice Springs with two crew and two ladies as passengers on board. After takeoff, during the initial climb, while at an altitude of 150 feet, both engines failed simultaneously. The captain elected to make an emergency landing in a prairie but at the last moment, the left engine regained power. The aircraft went out of control and crashed in flames. All four occupants were injured while the aircraft was destroyed.", "Crashed into the sea off Long Island, Bahamas, while performing a night flight from Roosevelt Roads NAS (Ceiba, Porto Rico) to Key West. No trace of the aircraft nor the crew was ever found.", "The crew started the descent to Shaibah Airbase near Basra when all four engines stopped simultaneously. The captain elected to make an emergency landing in a desert area located 66 km northwest of the airport. The aircraft came to rest and was damaged beyond repair while all three crew members were unhurt. The crew was in charge to deliver the aircraft in Karachi as it was just on the Pakistan register since 4 days.", "Crashed on landing in unknown circumstances. There were no casualties.", "Taking part to the Independence War of Israel, the single engine aircraft was engaged in a bombing mission when it crashed in unknown circumstances in Bait Mahseer, a suburb of Amman. All four occupants were killed, among them pilots Yariv Sheinbaum and Daniel Bukstein.", "Following an engine failure, went out of control and crashed in a desert area located near Nairyah. All nine crew members were killed.", "On May 11, the pilot John Spiers left Lae on a ferry flight to Sydney for the annual CofA renewal. On May 12, he departed Daru for Horn Island. Halfway across Torres Strait, he encountered a severe rain storm and turned back to Daru. At low level over sea, the pilot saw a small low mudflat island, so made a forced landing there, wrecking the Dragon. No radio on the aircraft, so Spiers waited to be found. A search was made by a Mandated Airlines C-47 with pilots Brian Carpenter and Tom Deegan as far south as the Australian Gulf country for 3 days. When returning to Daru from Horn Island, they spotted the Dragon on the mudflat island with Spiers sitting on the roof of the aircraft. He had been unable to find food and at high tide the island was mostly under water, so he stayed in the cabin of the Dragon while the sea gradually broke up the aircraft for 6 days without food, surviving by drinking rainwater. RAAF Catalina from Port Moresby landed off Turnagain Island, sent a crew member ashore in a rubber dinghy to collect Spiers. A storm blew up so Catalina returned to Moresby, leaving the two men on the island. They were rescued by a pearling lugger sent from Thursday Island. Source: http://www.goodall.com.au", "The twin engine aircraft left Croydon in the early afternoon for Paris with eight passengers and a crew of two. Six passengers disembarked in Paris and the aircraft took off around 1530LT bound for Cannes. About two hours into the flight, the crew encountered poor weather conditions with heavy rain, turbulence and strong winds. The aircraft went out of control and crashed in a wooded area located on Mt Le Coran, near Saint-Bauzile, about 9 km southeast of Privas. A local farmer was quickly on the scene but all four occupants were killed. Rescue teams arrived the next morning. Crew: Peter Townsend, pilot, Arthur Frederick Freeman, radio operator. Passengers: Peter Wentworth-Fitzwilliam, Kathleen Kennedy-Cavendish, young sister of John Fitzgerald Kennedy.", "The four engine aircraft left L\u00e9opoldville Airport at 0805LT bound for Libenge. About three hours later, as he started the descent to Libenge, the crew encountered poor weather conditions with heavy rain falls, low clouds and turbulence. While descending at an altitude of 700 feet, the aircraft went out of control and crashed in a wooded area located near the village of Magazini, some 27 km south of Libenge. A passenger was seriously injured while 31 other occupants were killed.", "After landing at RAF Bovingdon, while completing a cargo flight, the four engine aircraft was unable to stop within the remaining distance, overran and came to rest. All three crew members were unhurt while the aircraft was damaged beyond repair.", "The crew was completing a test flight from Mendoza to Buenos Aires-Aeroparque-Jorge Newbury Airport. Enroute, the pilot encountered engine problems and decided to divert to Jun\u00edn Airport. On approach, the twin engine aircraft crashed in a field, lost its undercarriage and came to rest in flames. All five crew members were unhurt while the aircraft was destroyed.", "The aircraft left Durban in the early morning on a flight to London via Johannesburg. While cruising in poor weather conditions, the aircraft hit the slope of Mt Spitzkop located 32 km south of Vrede, in the Witkoppens Mountain Range. All 13 occupants were killed. At the time of the accident, the aircraft was off track by eight miles, probably due to navigational error on part of the crew, caused by the lack of visibility due to poor weather conditions.", "\"The flight departed from Newark, New Jersey, at 1733 May 16, 1948, for Chicago, Illinois, Denver, Colorado, Burbank, and San Francisco, California. In addition to a crew consisting of Captain William R. McCauley and Copilot Jack R. Foote, the flight carried 5,280 pounds of fuel, and 10,263 pounds of cargo. According to the hourly weather reports available to the crew in Newark prior to departure, thunderstorm activity which existed over the vicinity of Goshen and Fort Wayne, Indiana, was moving eastward. Chicago Municipal Airport was reported to have a ceiling of 2,000 feet. The flight plan specified a cruising altitude of 4,000 feet to Chicago, the first intended point of landing. South Bend, Indiana, was designated as the alternate airport. No unusual incident was reported for approximately the first two hours of the trip, then, at 1931 the flight reported over Cleveland, Ohio, at 4,000 feet, stating that there was extreme turbulence approximately five miles east of the Cleveland Airport. At this time the flight acknowledged receipt of a weather report from Toledo, Ohio, to the effect that light thunderstorms with cloud to cloud lightning were moving northeasterly from Toledo. At 2013 the flight reported at 4,000 feet over Mansfield, Ohio, 58 miles south southwest of Cleveland. The crew stated that they had changed course to the south to avoid thunderstorms, and intended to proceed to Columbus, Ohio, in accordance with visual flight rules. A special weather observation taken at Cleveland at 2003 which reported a ceiling of 2,000 feet, visibility 10 miles, light rain, wind from the northwest at 30 miles per hour with strong gusts, and cloud to cloud and cloud to ground lightning was transmitted to the flight Cleveland Radio also transmitted a weather observation taken at Columbus at 1930 which reported an unlimited ceiling, visibility of 15 miles, and wind from the south at 14 miles per hour. After acknowledging receipt of this weather information, the flight stated \"\"For your information advise no one to go through the turbulence we just went through.\"\" The next position report was received at 2032 at which time the flight reported being five miles north of Columbus. Following this report it was cleared by Columbus Tower for landing. In reply the flight stated to the tower", "Shortly after takeoff, while in initial climb, the aircraft stalled and crashed in a field. All 17 occupants were injured and the aircraft was destroyed.", "Upon landing in Rennes, an undercarriage collapsed. The aircraft slid for several yards and came to rest. There were no injuries but the aircraft was damaged beyond repair.", "Crashed shortly after takeoff from Guidonia. A crew member (observer) was killed while four others were injured.", "The aircraft left Valence-Chabeuil Airport at 2232LT on a cargo flight to RAF Bovingdon, carrying a crew of four and a load of fruits. On a night approach, the pilot encountered poor visibility due to a low ceiling. During the last turn, the aircraft stalled and crashed in a wooded area located few dozen yards from the airport. A crew member was rescued while three others were killed.", "The crew was performing a delivery flight from Brussels to Tel Aviv via Rome-Urbe Airport. Shortly after takeoff, while in initial climb, the aircraft suffered an explosion and crashed near the runway end. Both pilots were killed and the aircraft was destroyed. The crew consisted of Leonard Cohen and George Frederick Beurling, a Canadian pilot, hero from WWII.", "The crew was completing a training sortie in L\u00fcbeck, towing a glider. While flying around the airport at low height, the left engine failed. The crew immediately dropped the glider and reduced his altitude in an attempt to make an emergency landing. The aircraft crash landed in a field located near the airport, slid for several yards and came to rest in flames. Both pilots escaped uninjured while the aircraft was partially destroyed by fire.", "Crash landed. No injuries.", "Following an uneventful flight from Petropavlovsk-Kamchatsky-Yelizovo Airport, the crew started the descent to Magadan in poor weather conditions. During the final approach, at a distance of 13 km from the runway threshold, the captain was unable to locate the runway and decided to descend to 500 meters, the decision altitude. Unable to establish a visual contact with the runway, he decided to abandon the approach, started a go around and diverted to the Seymchan Airport located some 350 km north of Magadan. Few minutes later, while cruising in poor visibility, the aircraft hit the slope of Mt Marchekanskaya (707 meters high). A passenger was seriously injured while eight other occupants were killed. It appears the aircraft hit the mountain 70 meters below the summit.", "On approach to RAF Bovingdon, the aircraft became unstable and the captain was forced to attempt an emergency landing. The aircraft crash landed in a field located in Studham, about 11 km north of the airbase. While all five occupants were unhurt, the aircraft was damaged beyond repair. It was completing a cargo flight from Valencia, Spain, with a load of apricots.", "The crew was performing a flight from \u017datec, Czech Republic, to the airbase of Ekron-Tel Nof, carrying a load of bombs and a Czech fighter aircraft. While descending to Ekron, the crew encountered poor weather conditions and the captain decided to divert to Tel Aviv-Sde Dov Airport. On final approach, the aircraft was hit by gun fire. In such conditions, the captain increased power and started a go around to leave the area. Few minutes later, while cruising a low height in reduced visibility, the aircraft hit the slope of a mountain located south of Latrun. Both pilots were rescued while the navigator was killed. It was later confirmed by the authorities that the soldiers in place in Tel Aviv Airport opened fire on the aircraft as they have not been informed that an aircraft would land.", "Enroute, the pilot encountered an unexpected situation and was forced to make an emergency landing in a desert area located about 26 km south of El Alamein. All four occupants were rescued while the aircraft was damaged beyond repair.", "The crew was completing a local training sortie in Madrid AFB. On final approach, the twin engine aircraft collided with a private Luscombe that just took off from the same runway. Both aircraft went out of control and crashed near the runway threshold. All four crew members on board the C-47 and the pilot of the Luscombe were killed.", "The crew was engaged in a local training flight in Albacete. Shortly after takeoff, while in initial climb, the four engine aircraft collided with a small private plane. Both aircraft went out of control and crashed near the runway end. All four crew members on board the Halifax and the pilot of the private plane were killed.", "The crew was involved in a test flight at RAF Boscombe Down, with some propeller blade control. While cruising at low height, the crew informed ground he was encountering difficulties and lost control of the airplane that dove into the ground and crashed in a wooded area located eight miles northeast of the airbase. The aircraft was destroyed and both crew members were killed.", "Crashed on landing for unknown reason, injuring both occupants.", "The twin engine aircraft crashed in unknown circumstances near the \u00c7ubuk dam, killing the pilot, sole on board.", "While cruising in the vicinity of the RAF Boscombe Down, the twin engine aircraft collided in unknown circumstances with a RAF Avro 652 Anson registered NL248. The Dominie went out of control and crashed in a prairie while the pilot of the Anson was able to land safely. All three crew members on board the Dominie were killed. Crew: F/O Ashley James Greer, Peter J. Bartlett, Peter C. Damon.", "During takeoff from Lough Erne off Enniskillen, the seaplane hit several waves in strong winds. The departure was interrupted and the aircraft came to rest. There were no casualties but the airplane was damaged beyond repair.", "The crew was completing a training mission in Lisbon. Shortly after takeoff from Lisbon-Portela de Sacav\u00e9m Airport, while in initial climb, the instructor shut down an engine. The aircraft stalled and crashed near the runway end. While all five crew members were injured, the aircraft was destroyed.", "The crew started the descent to Douglas-Ronaldsway Airport in poor weather conditions. Apparently following a navigational error, the aircraft came from the west at a too low altitude when it hit a cliff located near Peel. The wreckage was found few hours later. Both crew members and four passengers were killed while two others were seriously injured. The crew was unable to locate the airport of Douglas and to know his exact position when the accident occurred. The pilot was completing his first flight to Douglas Airport.", "The crew was performing a charter flight from Blackpool to Douglas with an intermediate stop in RAF Walney Island, Cumbria. On approach to the Isle of Man, the crew encountered poor weather conditions and continued to the west to Ireland without locating the Douglas-Ronaldsway Airport. Few minutes later, the pilot realized that the fuel reserve was insufficient and decided to ditch the aircraft into the Irish Sea, off Port Erin. The aircraft came to rest few miles off shore and floated for a while, allowing the occupants to take refuge on the wings, awaiting for help. The crew of a boat rescued all nine occupants shortly later and the aircraft sank and was lost.", "At approximately 2235, June 11, 1948, the flight departed from Burbank, California, for Fort Worth, Texas, via El Paso, Texas. Prior to takeoff a VFR2 flight plan was filed, the weather being clear. Only cargo was carried the only persons aboard being the crew, which consisted of John Dobson, pilot, and John Leslie, copilot. After departure from Burbank, the flight proceeded en route to El Paso at the specified flight plan altitude of 9,000 feet. Approximately 15 minutes after takeoff, over the vicinity of Palmdale, California, control of the aircraft was given to the copilot, and the pilot went to sleep. No trouble was experienced until 0048, at which time the copilot observed flames, deep orange in color and extending about two feet rearward, coming from under the cowl flaps around the entire circumference of the left engine. The pilot was awakened by a shout, and he immediately assumed control of the aircraft. In an attempt to control the fire the crew discharged the emergency fire bottle, cut the fuel flow to the engine, and feathered the propeller, however, the fire continued to burn intensely and the propeller did not feather. A descent for an emergency landing was started, during which the color of the flame changed to brilliant white. It appeared to the crew that the nacelle skin and the leading edge of the wing were burning. Three emergency radio transmissions from NC-79042 were intercepted by an Air Force airplane which relayed the message to Tucson Radio at 0056. To correct excessive air speed the crew reduced power to the right engine and raised the nose of the aircraft. Then the cockpit filled with smoke to the extent that the crew were unable to see the instruments. The aircraft vibrated violently, then fell into an uncontrolled spin or spiral. At approximately 4,000 feet smoke cleared from the cockpit and control of the aircraft was regained. During the descent the burning engine had fallen from the wing, and after regaining control, the crew could observe no sign of fire. Since the aircraft seemed to fly satisfactorily, a right turn towards Tucson, approximately 47 miles to the southeast, was made. In the turns however, altitude could not be maintained, and the aircraft became increasingly right-wing heavy. Accordingly it was decided to land at Eloy, Arizona, 45 miles northwest of Tucson which was observed straight ahead. Ground witnesses in Eloy saw the aircraft at a low altitude with fire in the left wing. A crash landing was made in a wheat stubble field one-fourth mile northeast of Eloy and the crew escaped through the cockpit hatch from the burning aircraft.", "The pilot, sole on board, was forced to make an emergency landing in a field located in Willowbridge, southeast of Waimate. He was unhurt while the aircraft was considered as damaged beyond repair.", "Crashed in unknown circumstances in Coulommiers. There were no casualties.", "The aircraft was on its way from Redhill, Surrey to France when, approaching Berck-sur-Mer, the pilot was forced to attempt an emergency landing for unknown reason. While both occupants were unarmed, the aircraft was damaged beyond repair.", "On final approach to runway 23, while at a height of 500 meters and with an indicated speed of 160 km/h about 500 meters from the runway threshold, the flight engineer reported to the captain that flaps were selected to 3/4 and that the speed was a bit low. The captain did not react and continued the approach in such configuration. Once the aircraft passed over the perimeter road, the captain ordered full flaps and throttle down. The engineer then selected full flaps and slowly retarded the power lever when the aircraft lost height, hit tree tops and hit the ground 175 meters short of the runway threshold. It rolled for several yards and hit a ditch before coming to rest. While all 27 occupants were evacuated safely, the aircraft was considered as damaged beyond repair due to severe structural damages.", "\"The airplane arrived in Chicago at 0952LT, en route from Los Angeles to New York City. At Chicago, the airplane was given a routine station inspection, serviced, loaded, and the flight departed for New York with a new crew at 1044. Aboard were 39 passengers, a crew of four, 2,568 pounds of cargo and 1,800 gallons of fuel, all properly loaded. The resulting total airplane weight was within the certificated gross weight. The airplane climbed en route to its planned altitude of 17,000 feet, proceeding on course, and at 1155 the captain reported to the company radio at LaGuardia Field, that the airplane was mechanically \"\"okay\u201d for a return trip. A routine report was made over Phillipsburg", "The crew was engaged in a local training flight in Shell-Mera Airport. During the takeoff roll with both engines at full power, the aircraft swung to the right. The pilot in command over corrected so the aircraft veered off runway to the left, hit an earth mount and a tree stump before crashing into a building. While all three crew members were unhurt, an employee in the building was killed.", "The pilot was forced to attempt an emergency landing for unknown reason. Upon landing, the aircraft hit several nutmeg trees and came to rest. The aircraft was damaged beyond repair.", "The crew was performing a training sortie at Whidbey Island NAS when an engine caught fire in flight. The pilot decided to return but was eventually forced to make an emergency landing in a field. The aircraft belly landed and came to rest in flames. There were no casualties but the aircraft was destroyed.", "After landing in Maracaibo Airport, the aircraft went out of control, veered off runway and came to rest in flames. There were no casualties but the aircraft was destroyed by fire.", "While on a test flight, the aircraft crashed in unknown circumstances in Segni, about 40 km southeast of Guidonia airbase. Two crew members were injured while the pilot Antonio Biscardi was killed.", "Crashed in unknown circumstances in Merka, some 70 km southwest of Mogadishu. The pilot was unhurt while the aircraft was damaged beyond repair. The exact date of the occurrence remains uncertain.", "Crashed on landing for unknown reason and came to rest on its nose. All occupants escaped uninjured while the aircraft was damaged beyond repair. The accident occurred somewhere in British Columbia, the exact place remains unknown.", "En route to Damascus, the pilot was forced to make an emergency landing in a desert area located in the southeast of Syria. Both occupants were unhurt while the aircraft was damaged beyond repair.", "On landing, went out of control, veered off runway and came to rest. A crew member was killed while 16 other occupants were injured. The aircraft was written off.", "In flight, the twin engine aircraft collided with a USAF North American P-51D Mustang registered 45-11680. A crew member was able to bail out before the Invader crashed in a field, killing all three other crew members. The fate of the P-51's crew remains unknown.", "Shortly after takeoff from Bogot\u00e1-Techo Airport, while on a cargo flight to Medell\u00edn, the crew encountered engine problems and elected to return. Due to technical issues, the crew was unable to lower the gear so the aircraft belly landed and came to rest. There were no injuries but the aircraft was considered as damaged beyond repair.", "Crashed in unknown circumstances near Erding AFB, killing all four occupants.", "Shortly after takeoff from Cue Airport, while on a local training flight, an engine failed. The aircraft lost height, hit trees and crashed in a wooded area. Both pilots were killed.", "En route, the crew encountered poor weather conditions with heavy rain falls and thunderstorm activity. The airplane hit the slope of Orizaba Peak located northeast of Ciudad Serd\u00e1n. The wreckage was found three days later and all 14 occupants were killed. The aircraft was performing a special flight for the US-Mexico Foot and Mouth Disease Commission.", "On approach to Brussels-Zaventem Airport, the crew encountered poor weather conditions with heavy rain falls, low visibility and a ceiling at 100 meters. In such conditions, the captain overshot the runway in Zaventem and was unable to land. He increased power on all three engines and continued to the northeast. Few minutes later, he decided to land on a makeshift airfield in Keerbergen but during the last turn to the left, the aircraft stalled and crashed in a field. Three passengers and a crew member survived while all eight other occupants were killed.", "The crew was performing a training sortie in RAF Lindholme. On final approach with one engine voluntarily inoperative, the pilot was unable to lower the undercarriage. The crew decided to go around when the aircraft stalled and hit the runway surface, crashing on its belly. There were no injuries but the aircraft was damaged beyond repair.", "Crashed in unknown circumstances 15 miles from Merka. Both crew members survived while the aircraft was damaged beyond repair.", "The crew was performing a test flight from RAF Boscombe Down to RAF Defford on behalf of the A & AEE. Shortly after takeoff, while climbing to a height of 3,500 feet with the propeller of the engine number one feathered and the number two running at low speed, the aircraft stalled, went into a dive and crashed in a field located in Wylye, about 10 miles west of RAF Boscombe Down. All four crew members were killed. Crew: S/L A. Toot, F/Lt A. G. Bradfield, F/O G. W. Williams, P. W. Howes.", "On final approach to Prince George, while completing a local flight, the single engine aircraft stalled and crashed. All three occupants were killed.", "The four engine aircraft left Malta-Luqa Airport bound for RAF Northolt with four passengers and a crew of three on board. While approaching the London area, the crew encountered low visibility due to poor weather conditions. The crew was cleared to descent to 3,000 feet when the aircraft collided with a Scandinavian Airlines System (SAS) DC-6 registered SE-BDA. Inbound from Amsterdam, this second aircraft was carrying 25 passengers and a crew of 7. Following the collision, both aircraft went out of control, dove into the ground and crashed in a wooded area located in Northwood, about 4 miles north of RAF Northolt. Both aircraft were destroyed and all 39 people were killed. Among the passenger of the York was Sir Gerard Edward James, High Commissioner in Malaysia for Her Majesty the Queen of England.", "The four engine aircraft christened 'Agnar Viking' was approaching RAF Northolt when the crew encountered low visibility due to poor weather conditions. After being cleared by ATC to descent to 2,500 feet, the crew was unable to locate the airport and decided to return to Amsterdam-Schiphol Airport. Few minutes later, while climbing to an altitude of 3,000 feet, the aircraft collided with a Royal Air Force Avro 685 York C.1 registered MW248. This second aircraft was completing a flight from Malta-Luqa with four passengers and a crew of three. Following the collision, both aircraft went out of control, dove into the ground and crashed in a wooded area located in Northwood, about 4 miles north of RAF Northolt. Both aircraft were destroyed and all 39 people were killed.", "The left engine caught fire during start up. The crew called the fire brigade and evacuated the aircraft. The fire was extinguished but the aircraft was partially destroyed by fire and considered as damaged beyond economical repair.", "The approach to Wiesbaden-Erbenheim AFB was completed by night and poor weather conditions. On final, the aircraft hit tree tops and crashed in a wooded area located 1,6 km short of runway 25 threshold. Both pilots were injured while the aircraft was damaged beyond repair.", "The crew was completing a training flight from Oslo-Fornebu Airport to Oslo-Gardermoen Airport. The twin engine aircraft crash landed for unknown reason and was damaged beyond repair. All three crew members were unarmed. Crew: Lt Nils Arveschoug, Lt H. Hartmann, Lt F. Eriksrud.", "While flying by night and in poor weather conditions, the aircraft hit the slope of a mountain located near Li Dinh. The wreckage was found a day later and all 16 occupants were killed. Crew: Ottino Sabbadini, pilot, Andr\u00e9 Delfau, radio navigator, Andr\u00e9 Stang, mechanic.", "Crashed 2 miles southwest of Offutt AFB following an engine failure. The crew fate remains unknown.", "During a night approach to Greenville, the aircraft crashed in flames and burned. At least one crew member was killed in the accident.", "Few minutes after takeoff from Wiesbaden-Erbenheim AFB, while climbing by night, the aircraft hit the slope of Mt Steinkopf located near K\u00f6nigstein im Taunus, about 16 km northeast of Wiesbaden Airport. All three crew members were killed. They were involved in the Berlin Airlift.", "While cruising in foggy conditions, the aircraft hit the slope of a mountain located 17 km from Coronel Pringles. The aircraft was destroyed by impact forces and a post crash fire and all five crew members were killed.", "On final approach to Maiquet\u00eda-Sim\u00f3n Bol\u00edvar Airport, while on a cargo flight from Havana, both engines flamed out. The aircraft stalled and crashed into the sea few hundred yards short of the runway threshold. All three crew members were rescued while the aircraft sank and was lost.", "During a training sortie in Laverton AFB, the crew encountered an unexpected situation and made an emergency landing in a field located one mile north of the airbase. Both occupants were rescued while the aircraft was damaged beyond repair.", "For unknown reason, the four engine aircraft crash landed and came to rest in flames. All 12 occupants were rescued while the aircraft was destroyed by fire.", "The crew was engaged in a local training flight in Singapore-Seletar Airport. Just after liftoff, an engine was cut by the instructor. The aircraft stalled and bounced, causing the tail to separate. The seaplane crashed and came to rest. There were no casualties but the aircraft was written off.", "The crew started the approach to Marseille-Marignane Airport in foggy conditions. The aircraft hit a cliff located near Cape Sici\u00e9, south of Toulon. All six occupants were killed.", "Shortly after takeoff from runway 06, while on initial climb, the pilot made a turn to the left when the aircraft stalled and crashed in a huge explosion. The aircraft was destroyed by fire and all five occupants were killed.", "Crashed in unknown circumstances in Cumbica, south of the S\u00e3o Paulo-Guarulhos Airport. All 12 crew members were killed.", "Shortly after takeoff from Smoky Hill AFB (Schilling AFB), while on a local training flight, an engine failed. Four crew members were able to bail out before the aircraft dove into the ground and crashed in a field located two miles southeast of Smolan, about four miles south of the airbase. The aircraft was destroyed by impact forces and nine crew members were killed. The four crew members who were able to bail out were injured, one of them seriously.", "Crashed in unknown circumstances into the Puerto Cabello harbor. The crew fate remains unknown but the aircraft was lost.", "Shortly after takeoff from Macau, a hijacker came into the cockpit and killed the captain with a gun. The copilot lost control of the aircraft christened 'Miss Macau' that crashed into the Zhujiang River Estuary, between Macau and Hong Kong. A passenger was seriously injured while all 25 other occupants were killed. This event was considered as the first official hijacking of a commercial aircraft in the Civil Aviation History. It was later reported that lone survivor, Huang Yu, was the admitted leader of the hijacking plot. He survived by jumping out the emergency exit just before the crash. He was brought to court by the Macau Police, but the Macau court suggested that the prosecution should be brought in Hong Kong instead, since the plane was registered in Hong Kong and most of the passengers were from there. However, the British colonial government in Hong Kong stated that the incident happened over Chinese territory in which the British have no jurisdiction. Since no state claimed authority to try him, Huang was released without trial from Macau prison on 11 June 1951, and was then deported to China.", "Hit the slope of a mountain located near Lumbreras, province of La Rioja. All three occupants flying from White Waltham were killed.", "En route, an engine failed, forcing the crew to attempt an emergency landing south of Tel Aviv. While the aircraft was damaged beyond repair, all five occupants survived. The captain Murray Weissberg was recovered later while the second pilot Spencer Boyd and all three passengers were captured by Palestinians soldiers and later executed.", "The crew was forced to ditch the aircraft into the Mediterranean Sea some 130 km south of Marseille. All twenty occupants were rescued while the aircraft sank and was lost.", "The crew was engaged in a test flight on this first prototype and was completing a short flight from Toussus-le-Noble to his main base in V\u00e9lizy-Villacoublay. On final approach, at an altitude of 250 meters, the four engine aircraft nosed down and crashed in a huge explosion in the wood of Verri\u00e8res located less than two km from the runway threshold. The aircraft was destroyed by impact forces and a post crash fire and all five crew members were killed. Crew: Louis Bertrand, pilot, Abel Nicolle, flight engineer, Robert Facomprez, radio operator, Maurice Itasse, mechanic, Marcel Constum, mechanic.", "On final approach to Lod Airport, the aircraft stalled and crashed short of runway. All three crew members were unhurt while the aircraft was damaged beyond repair. It appears that two engines were inoperative at the time of the accident, maybe following fuel starvation ? Israel authorities reported that the aircraft was on a delivery flight from the UK and that nor the crew nor the operator received any permission to land in Israel.", "This version was an electronic reconnaissance aircraft used in Arctic conditions. It crashed into Lake Mead, during a research flight. The crew of five was able to scramble away before the plane sank. It has been located by sonar in 170 feet of water, largely intact except for 3 missing engines (number two, three and four). The flight was for a secret missile guidance system that allowed navigation by tracking of the Sun. A low pass over calm water with pilot error put it into the lake. The aircraft plummeted from high altitude down to as close to the lake as possible. Unfortunately, Captain Robert M. Madison lost his depth perception and plowed the huge plane into the lake at 230 mph. The impact tore off all but one of the engines and sent the plane skipping along the lake surface. When she eventually stopped, she began to take on water and started to sink. Fortunately, all of the crew was able to escape into life rafts and wait for rescue. Source: http://www.advanceddivermagazine.com/articles/B29/B29.html", "The crew was engaged in a maritime patrol flight over the North Sea. While flying over Scotland, the crew encountered poor visibility when the twin engine aircraft hit the slope of a mountain near Auchenblae. All six crew members were killed.", "After landing, the aircraft failed to stop within the remaining runway, overran and hit some rocks. While there were no casualties, the aircraft was damaged beyond repair. For unknown reason, the aircraft landed too far down the runway.", "En route, the crew encountered an unexpected situation and was forced to attempt an emergency landing in Hinojosa del Duque. The aircraft crash landed in a field and came to rest in flames. All ten occupants were injured while the aircraft was destroyed by fire.", "The aircraft left Port-Menier, Anticosti Island, on a charter flight to Gasp\u00e9, carrying two pilots and 27 people, most of them employees of the Consolidated Paper Company. The approach to Gasp\u00e9 Airport was started from the east in foggy conditions. While flying too low, the aircraft hit some trees, stalled and crashed in a wooded area located near Cap-des-Rosiers, about 20 km east of Gasp\u00e9 Airport. Rescuers arrived on the scene few hours later and all 29 occupants were killed. Crew: Emerson Mills, pilot, Ross Miles, copilot. Passengers: Germain Jean, Elle Godin, Camille Furgesson, Jean Laflamme, Lawrence Travers, Mathias Cote, Henri Tardif, Rolland Denis, Alphonse Veer, Ren\u00e9 Blais, Alfred Desjardins, Rodolphe Gendreau, Roger Gendreau, Hughes Prouix, James Travers, G\u00e9rard Despr\u00e9s, Harris Gleeton, Eddy Bouchard, Julien Fynott, Mr. and Mrs. Berth McCallum and son, Joseph Gauvin, Romuald Dufresne, Clarimond Fournier, Mr. and Mrs. Emmett Maloney.", "On approach to Fassberg AFB, an engine caught fire. On landing, an undercarriage collapsed and the aircraft veered off runway and came to rest in flames. While all three crew members were unhurt, the aircraft was destroyed by fire.", "On final approach to Berlin-Tempelhof Airport, taking part to the Berlin Airlift, the twin engine aircraft hit the roof of a building and crashed in flames in the adjacent street located in the suburb of Friedenau. Both crewmen were killed while three people on the ground were injured. The aircraft was destroyed by impact forces and a post crash fire.", "After takeoff, while climbing in thunderstorm activity, the aircraft went out of control and crashed in to the sea. All six crew members were killed.", "During the takeoff roll, the four engine aircraft went out of control, veered off runway, lost its undercarriage and came to rest. There were no casualties but the aircraft was written off.", "Just after liftoff, the twin engine aircraft stalled and crashed in flames. All 14 occupants were quickly rescued while the aircraft was destroyed by a post crash fire. The crew was completing a flight from Belgian Congo to Brussels via Sudan.", "Shortly after takeoff from Paris-Le Bourget Airport, the four engine aircraft christened 'Keroual' crashed in unknown circumstances in Aubervilliers, south of the airport. All three crew members were slightly injured while the aircraft was damaged beyond repair.", "Crashed shortly after takeoff from Melun-Villaroche Airport while on a test flight. The crew fate remains unknown.", "On landing off Kittigazuit, the seaplane hit rocks and sank rapidly. There were no casualties but the aircraft was lost.", "The approach to Buenos Aires harbor was completed in foggy conditions. The seaplane hit the water surface and crashed in the River Plate. Six passengers were injured while 18 other occupants were killed. Few hours later, two survivors died from their injuries.", "Shortly after takeoff, while climbing to a height of 100 meters, the aircraft went out of control and crashed near the runway end. Five passengers and a crew member were seriously injured while 18 other occupants were killed.", "En route to RAF Northolt, the crew encountered technical problem with the right engine and was forced to shut it down and to feather its propeller. As the aircraft was unable to maintain the prescribed altitude, the crew decided to divert to Sywell. On final approach, the aircraft was misaligned and overflew the runway at low height before colliding with power cables. Out of control, it crashed in a field and came to rest. All 19 occupants were slightly injured while the aircraft was damaged beyond repair.", "Crashed in unknown circumstances. Crew fate unknown.", "On approach to Turukhansk, the wind was gusting to 43 km/h. Waves up to 50 cm were spotted in the Enisey River. On landing, the seaplane hit three successive waves and plunged into the water. The cockpit separated from the rest of the fuselage, the aircraft came to rest and sank. Three passengers, two women and one child, were killed while 17 other occupants were rescued, five of them seriously injured. The aircraft was a total loss.", "The crew was performing a flight from Fort-de-France, Martinique, to Paris, with an intermediate stop in Port-Etienne, Mauritania. While cruising by night over the Atlantic Ocean, about 1,920 km from Port-Etienne (now Nouadhibou), the aircraft crashed into the ocean in unknown circumstances at 2355LT. No message was sent by the crew. SAR operations were jointly conducted by several countries and few debris were found by the crew of USS Campbell three days later, on August 4. Unfortunately, none of the 52 occupants survived the crash of this six-engine aircraft christened 'Henri Guillaumet'. Crew: Corentin Kersual, pilot, Jean Goutay, copilot, Henri Gloux, radio navigator, Gontran Ronat, radio navigator, Henri Cabanes, navigator, Gaston Le Morvan, mechanic, Jean Coustaline, mechanic, Alfred Jaggi, mechanic, Mr. Arbelot, mechanic, Mr. Sgourdeos, steward, Mr. Meunier, steward.", "The crew was completing a cargo flight from Chaklala Airport in Islamabad, carrying a load of military goods. On final approach to Mauripur Airport, while at an altitude of 300 feet, the aircraft pitched up and down and then went into a nose down attitude. Out of control, it plunged into the earth and crashed in a near vertical angle near the runway 22 threshold. The aircraft was destroyed and all four crew members were killed.", "Shortly after takeoff from Berlin-Gatow Airport, the crew reported technical problems and received the permission to return for an emergency landing. On touchdown, the undercarriage collapsed. The aircraft slid for several yards and came to rest. All three crew members were unhurt while the aircraft was considered as damaged beyond repair.", "The crew was descending to Opa Locka Airport when the aircraft collided with a Stearman while 11 miles north of Miami. Both aircraft dove into the ground and crashed. While both occupants of the Stearman were able to bail out and were found alive, all 10 crew members of the R4D-6 inbound from Norfolk NAS were killed. The exact circumstances and causes of the in flight collision remains unknown.", "About 15 minutes after takeoff from Blenheim-Woodbourne Airport, while on a cargo flight to Paraparaumu, the crew encountered poor weather conditions. The aircraft hit the slope of a mountain located in Rununder Point, near Port Underwood, 32 km northeast of Blenheim. Both pilots were killed. Crew: Murdo McLeod, R. J. R. H. Makgill.", "En route, the crew informed ATC that the engine number four failed. He received the permission to divert to RAF Desford to attempt an emergency landing. To lower the risk of fire, the crew decided to shut down the engine number three and feathered the propeller as well. Due to a loss of speed, the aircraft was unable to maintain a safe altitude. During the last segment, the aircraft stalled and hit violently the runway surface. On impact, the aircraft broke in two and came to rest in flames. All four crew members were evacuated safely while the aircraft was destroyed.", "Shortly after a night takeoff from Roswell Airport, while in initial climb, the aircraft went out of control and crashed in a huge explosion six miles south of the airfield. Eight crew members were injured while 13 others were killed. It was reported that the aircraft may have been overloaded. Crew killed were: Maj Joe O. Will Jr., pilot, Cpt Richard W. Hunsicker, M/Sgt James L. Brewer, Sgt Clyde N. Vanderslice, Sgt Earl P. Boley, Cpl Richard L. Lighthall, Cpl Gordon E. McNeill, Cpl Wayne O. Werkchiser, Pfc John J. Capitan, Pfc Maurice Harris, Pvt Kenneth Ruohonen, Sgt Charles R. Jackson, Pfc Norman J. Remy.", "On final approach to Sydney, the aircraft was too low and hit an earth mound short of the runway threshold. On impact, an undercarriage punctured a fuel tank and a fire erupted. The aircraft landed safely but came to rest in flames and was damaged beyond repair. All 17 occupants were unhurt.", "The crew was completing a short flight from Agana NAS to Rota Island. On final approach to runway 27, in poor weather conditions, the aircraft was too low and hit a cliff located about 2 miles from the runway threshold. All 12 crew members were killed. Crew: Lt Thomas C. O'Connor, Russell G. Delany, Walter R. Delaney, Charles D. Rudolph, Trafton R. Lee, John A. Beland, Carl H. Christensen, Charles G. Degarimore, Clarence Pinkerton, Paul D. McDonald, Lt William L. Wise, Frederick A. Earle Chaero.", "After touchdown on runway 27R at Tempelhof Airport, the aircraft was unable to stop within the remaining distance, overran, hit a wooded fence and came to rest in flames. All four crew members were unhurt while the aircraft was partially destroyed by fire. The crew was taking part to the Berlin Airlift.", "On landing, the aircraft overturned and came to rest upside down. The pilot, sole on board, was unhurt while the aircraft was damaged beyond repair.", "Shortly after takeoff from Ellsworth AFB, while in initial climb, the aircraft went out of control and crashed in a huge explosion in a prairie located 5 miles north of the airfield. All 17 occupants were killed.", "The crew was involved in a training mission and was in charge to locate an appropriate dropping zone for paratroopers. While flying at an estimated height of few hundred yards, the crew realized that smoke was coming out from the right engine. Few seconds later, the aircraft banked right, dove into the ground and crashed in a prairie. All five crew members were killed.", "The aircraft left Prague-Kbely Airport in the early morning with a crew of three and three engineers on board, bound for Liberec where they should take part to a meeting. While descending to Liberec in poor weather conditions (heavy rain falls), the twin engine aircraft hit the slope of Mt Je\u0161ted few meters below the top and came to rest in flames. Two passengers were seriously injured and evacuated to a local hospital while four other occupants were killed. Six days later, one of the survivor died from his injuries. The visibility was very limited due to heavy rain falls and low ceiling. Crew: V\u00e1clav Barborka, pilot, Jan Padouch, radio operator, Josef Kroul\u00edk, navigator. Passengers: Anton\u00edn Husn\u00edk (survived but died 6 days later), Vladim\u00edr Karmaz\u00edn, killed, V\u00e1clav Brabec, survived.", "On the leg from Maiquet\u00eda to Las Piedras, while on a cargo flight to Maracaibo, the aircraft crashed in unknown circumstances into the Caribbean Sea, off the Venezuelan coast. No trace of the aircraft nor the crew was found.", "The crew was completing a training sortie in RAF Kinloss. The final approach was completed in heavy cross winds (up to 50 knots) and during the last segment, the captain decided to abandon the landing procedure and started a go around maneuver. During initial climb, while at a height of 250 feet, the four engine aircraft went out of control and crashed in a huge explosion. All eight crew members were killed.", "Shortly after takeoff from Barbers Point NAS, bound for Kadena via Kwajalein, the pilot informed ground that an engine failed and elected to return. ATC guided the crew to Hickam Field in Honolulu and eight minutes later, while on approach, the airplane overshot so the pilot-in-command decided to make a go around when control was lost. The airplane crashed in flames and skidded for about 600 yards before coming to rest in flames. Sixteen crew members were killed while four others were injured.", "The crew was performing a cargo flight from Berlin-Tempelhof to the airbase of Wiesbaden-Erbenheim, taking part to the Berlin Airlift. While cruising in a reduced visibility due to foggy conditions, the aircraft collided with a USAF Douglas C-47A-90-DL registered 43-16036 and carrying also a crew of two and conducting the same operation from Berlin to Wiesbaden. Following the collision, both aircraft dove into the ground. The first crashed about 100 yards south of the city of Ravolzhausen while the second crashed about one km northwest of the same city. All four crew members on both aircraft were killed."], "data": [1, 10, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Circumstances", "count": 486, "min": "\"After takeoff from Lae-Nadzab Airport, while climbing vertical to the Huon Gulf, the right engine failed, followed shortly later by the left engine. The pilot reduced his altitude and ditched the aircraft off Lae. All three occupants were quickly rescued by a fisherman while the aircraft was lost. Testimony from the passenger: \"\"I had the day off and Johnny Rose was doing a trip to Kokoda and Popondetta. I'd never been there and when he offered me a seat I jumped at it. He had another passenger on board", "max": "While taxiing, the twin engine aircraft swung due to heavy winds, lost its undercarriage and came to rest. There were no casualties but the aircraft was damaged beyond repair."}, {"values": {"label": ["Technical failure", "Unknown", "Weather", "Human factor", "Other causes", "Terrorism act, Hijacking, Sabotage"], "data": [126, 296, 26, 47, 4, 1]}, "label": "Crash cause", "count": 6, "min": "Human factor", "max": "Weather"}, {"values": {"label": ["305.0"], "data": [500]}, "label": "Date_stringindexer_transform", "count": 1, "min": "0.0", "max": "304.0"}, {"values": {"label": ["0.0 - 12.4", "12.4 - 24.8", "24.8 - 37.2", "37.2 - 49.6", "49.6 - 62.0", "62.0 - 74.4", "74.4 - 86.8", "86.8 - 99.2", "99.2 - 111.6", "111.6 - 124.0"], "data": [458, 5, 2, 0, 4, 5, 0, 1, 4, 1]}, "label": "Time_stringindexer_transform", "count": 10, "min": 0.0, "max": 124.0}, {"values": {"label": ["71.0 - 71.0"], "data": [500]}, "label": "Aircraft_stringindexer_transform", "count": 1, "min": 71.0, "max": 71.0}, {"values": {"label": ["2.0 - 14.1", "14.1 - 26.2", "26.2 - 38.3", "38.3 - 50.4", "50.4 - 62.5", "62.5 - 74.6", "74.6 - 86.7", "86.7 - 98.8", "98.8 - 110.9", "110.9 - 123.0"], "data": [71, 1, 3, 1, 2, 2, 3, 1, 0, 416]}, "label": "Operator_stringindexer_transform", "count": 10, "min": 2.0, "max": 123.0}, {"values": {"label": ["0.0 - 46.8", "46.8 - 93.6", "93.6 - 140.4", "140.4 - 187.2", "187.2 - 234.0", "234.0 - 280.8", "280.8 - 327.6", "327.6 - 374.4", "374.4 - 421.2", "421.2 - 468.0"], "data": [43, 0, 0, 1, 0, 0, 0, 0, 0, 0]}, "label": "Registration_stringindexer_transform", "count": 10, "min": 0.0, "max": 468.0}, {"values": {"label": ["2", "0", "1", "3"], "data": [114, 264, 95, 27]}, "label": "Flight phase_stringindexer_transform", "count": 4, "min": "0", "max": "3"}, {"values": {"label": ["0.0 - 1.8", "1.8 - 3.6", "3.6 - 5.4", "5.4 - 7.2", "7.2 - 9.0", "9.0 - 10.8", "10.8 - 12.6", "12.6 - 14.4", "14.4 - 16.2", "16.2 - 18.0"], "data": [258, 132, 58, 23, 7, 8, 5, 4, 4, 1]}, "label": "Flight type_stringindexer_transform", "count": 10, "min": 0.0, "max": 18.0}, {"values": {"label": ["0", "2", "1"], "data": [306, 28, 166]}, "label": "Survivors_stringindexer_transform", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["0.0", "1.0", "4.0", "2.0", "3.0", "6.0", "5.0"], "data": [246, 168, 8, 58, 12, 3, 5]}, "label": "Crash site_stringindexer_transform", "count": 7, "min": "0.0", "max": "6.0"}, {"values": {"label": ["0.0 - 31.0", "31.0 - 62.0", "62.0 - 93.0", "93.0 - 124.0", "124.0 - 155.0", "155.0 - 186.0", "186.0 - 217.0", "217.0 - 248.0", "248.0 - 279.0", "279.0 - 310.0"], "data": [220, 31, 31, 31, 31, 31, 31, 31, 31, 32]}, "label": "Schedule_stringindexer_transform", "count": 10, "min": 0.0, "max": 310.0}, {"values": {"label": ["160.0", "0.0", "94.0", "134.0", "22.0", "1.0", "65.0"], "data": [377, 117, 1, 2, 1, 1, 1]}, "label": "MSN_stringindexer_transform", "count": 7, "min": "0.0", "max": "160.0"}, {"values": {"label": ["0.0", "5.0", "1.0", "2.0", "3.0", "6.0", "4.0"], "data": [330, 4, 68, 56, 24, 2, 16]}, "label": "YOM_stringindexer_transform", "count": 7, "min": "0.0", "max": "7.0"}, {"values": {"label": ["0"], "data": [500]}, "label": "Flight number_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["4.0 - 48.2", "48.2 - 92.4", "92.4 - 136.6", "136.6 - 180.8", "180.8 - 225.0", "225.0 - 269.2", "269.2 - 313.4", "313.4 - 357.6", "357.6 - 401.8", "401.8 - 446.0"], "data": [16, 2, 0, 9, 3, 1, 0, 3, 2, 464]}, "label": "Crash location_stringindexer_transform", "count": 10, "min": 4.0, "max": 446.0}, {"values": {"label": ["0.0 - 4.2", "4.2 - 8.4", "8.4 - 12.6", "12.6 - 16.8", "16.8 - 21.0", "21.0 - 25.2", "25.2 - 29.4", "29.4 - 33.6", "33.6 - 37.8", "37.8 - 42.0"], "data": [209, 21, 9, 43, 23, 32, 7, 14, 8, 134]}, "label": "Country_stringindexer_transform", "count": 10, "min": 0.0, "max": 42.0}, {"values": {"label": ["0.0", "1.0", "3.0", "6.0", "2.0", "7.0", "4.0", "5.0"], "data": [237, 210, 13, 4, 20, 1, 9, 6]}, "label": "Region_stringindexer_transform", "count": 8, "min": "0.0", "max": "7.0"}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [103, 188, 2, 196, 1, 1, 0, 0, 0, 9]}, "label": "Crew on board_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0", "3.0", "1.0", "4.0", "7.0", "2.0", "5.0"], "data": [241, 50, 37, 46, 46, 60, 20]}, "label": "Crew fatalities_stringindexer_transform", "count": 7, "min": "0.0", "max": "7.0"}, {"values": {"label": ["0.0 - 3.9", "3.9 - 7.8", "7.8 - 11.7", "11.7 - 15.6", "15.6 - 19.5", "19.5 - 23.4", "23.4 - 27.3", "27.3 - 31.2", "31.2 - 35.1", "35.1 - 39.0"], "data": [356, 39, 30, 22, 17, 14, 8, 6, 4, 4]}, "label": "Pax on board_stringindexer_transform", "count": 10, "min": 0.0, "max": 39.0}, {"values": {"label": ["0.0", "16.0", "3.0", "2.0", "13.0", "1.0", "10.0", "5.0"], "data": [460, 2, 5, 18, 2, 9, 1, 3]}, "label": "PAX fatalities_stringindexer_transform", "count": 8, "min": "0.0", "max": "16.0"}, {"values": {"label": ["0", "1"], "data": [499, 1]}, "label": "Other fatalities_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["486.0", "344.0", "0.0", "198.0"], "data": [455, 16, 24, 5]}, "label": "Circumstances_stringindexer_transform", "count": 4, "min": "0.0", "max": "485.0"}, {"values": {"label": ["0.0 - 1.9", "1.9 - 3.8", "3.8 - 5.7", "5.7 - 7.6", "7.6 - 9.5", "9.5 - 11.4", "11.4 - 13.3", "13.3 - 15.2", "15.2 - 17.1", "17.1 - 19.0"], "data": [324, 141, 21, 2, 2, 2, 2, 2, 2, 2]}, "label": "Crash cause_stringindexer_transform", "count": 10, "min": 0.0, "max": 19.0}], "stageId": "665e04f9a0338a49680b1522", "FESamplePath": "/FileStore/platform/sampleData/665e04f9a0338a49680b1522_AutoFE/part-00000-3d07d240-c9c4-40f3-b09d-09f7d5afacd0-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/665e04f9a0338a49680b1522_AutoFE/part-00000-3d07d240-c9c4-40f3-b09d-09f7d5afacd0-c000.csv", "originalcount": 28536, "graphdata": {"Date": {"label": ["4/9/1947", "4/10/1947", "4/13/1947", "4/15/1947", "4/17/1947", "4/18/1947", "4/19/1947", "4/22/1947", "4/24/1947", "4/25/1947", "4/27/1947", "4/28/1947", "4/29/1947", "4/30/1947", "5/2/1947", "5/4/1947", "5/6/1947", "5/7/1947", "5/9/1947", "5/10/1947", "5/11/1947", "5/12/1947", "5/14/1947", "5/15/1947", "5/16/1947", "5/17/1947", "5/18/1947", "5/19/1947", "5/22/1947", "5/24/1947", "5/28/1947", "5/29/1947", "5/30/1947", "5/31/1947", "6/3/1947", "6/4/1947", "6/5/1947", "6/6/1947", "6/7/1947", "6/10/1947", "6/11/1947", "6/12/1947", "6/13/1947", "6/14/1947", "6/15/1947", "6/16/1947", "6/19/1947", "6/20/1947", "6/21/1947", "6/22/1947", "6/23/1947", "6/25/1947", "6/26/1947", "6/27/1947", "6/28/1947", "7/1/1947", "7/2/1947", "7/3/1947", "7/5/1947", "7/7/1947", "7/8/1947", "7/11/1947", "7/12/1947", "7/13/1947", "7/14/1947", "7/15/1947", "7/16/1947", "7/17/1947", "7/18/1947", "7/21/1947", "7/22/1947", "7/25/1947", "7/26/1947", "7/29/1947", "7/31/1947", "8/1/1947", "8/2/1947", "8/4/1947", "8/5/1947", "8/6/1947", "8/8/1947", "8/9/1947", "8/11/1947", "8/12/1947", "8/13/1947", "8/14/1947", "8/15/1947", "8/16/1947", "8/18/1947", "8/20/1947", "8/21/1947", "8/22/1947", "8/23/1947", "8/25/1947", "8/28/1947", "8/29/1947", "8/30/1947", "8/31/1947", "9/2/1947", "9/3/1947", "9/5/1947", "9/6/1947", "9/9/1947", "9/15/1947", "9/17/1947", "9/18/1947", "9/19/1947", "9/20/1947", "9/21/1947", "9/24/1947", "9/28/1947", "10/1/1947", "10/3/1947", "10/4/1947", "10/7/1947", "10/9/1947", "10/10/1947", "10/14/1947", "10/16/1947", "10/17/1947", "10/21/1947", "10/23/1947", "10/24/1947", "10/25/1947", "10/26/1947", "10/27/1947", "10/30/1947", "10/31/1947", "11/2/1947", "11/3/1947", "11/5/1947", "11/10/1947", "11/11/1947", "11/13/1947", "11/14/1947", "11/15/1947", "11/16/1947", "11/17/1947", "11/18/1947", "11/19/1947", "11/20/1947", "11/21/1947", "11/23/1947", "11/25/1947", "11/27/1947", "11/28/1947", "11/30/1947", "12/1/1947", "12/5/1947", "12/9/1947", "12/10/1947", "12/11/1947", "12/13/1947", "12/14/1947", "12/15/1947", "12/16/1947", "12/18/1947", "12/19/1947", "12/20/1947", "12/22/1947", "12/23/1947", "12/24/1947", "12/27/1947", "12/28/1947", "12/29/1947", "12/30/1947", "12/31/1947", "1/2/1948", "1/5/1948", "1/6/1948", "1/7/1948", "1/8/1948", "1/10/1948", "1/11/1948", "1/13/1948", "1/17/1948", "1/18/1948", "1/20/1948", "1/21/1948", "1/24/1948", "1/25/1948", "1/26/1948", "1/27/1948", "1/28/1948", "1/30/1948", "1/31/1948", "2/1/1948", "2/2/1948", "2/6/1948", "2/7/1948", "2/9/1948", "2/10/1948", "2/11/1948", "2/13/1948", "2/16/1948", "2/17/1948", "2/19/1948", "2/20/1948", "2/21/1948", "2/23/1948", "2/25/1948", "2/27/1948", "3/1/1948", "3/2/1948", "3/4/1948", "3/7/1948", "3/8/1948", "3/10/1948", "3/12/1948", "3/13/1948", "3/15/1948", "3/16/1948", "3/17/1948", "3/20/1948", "3/21/1948", "3/25/1948", "3/27/1948", "4/1/1948", "4/5/1948", "4/7/1948", "4/9/1948", "4/10/1948", "4/11/1948", "4/15/1948", "4/18/1948", "4/19/1948", "4/20/1948", "4/21/1948", "4/23/1948", "4/24/1948", "4/25/1948", "4/30/1948", "5/1/1948", "5/5/1948", "5/6/1948", "5/9/1948", "5/10/1948", "5/11/1948", "5/12/1948", "5/13/1948", "5/14/1948", "5/15/1948", "5/16/1948", "5/17/1948", "5/18/1948", "5/20/1948", "5/22/1948", "5/23/1948", "5/24/1948", "5/25/1948", "5/26/1948", "5/28/1948", "5/31/1948", "6/8/1948", "6/10/1948", "6/11/1948", "6/12/1948", "6/13/1948", "6/14/1948", "6/16/1948", "6/17/1948", "6/18/1948", "6/21/1948", "6/23/1948", "6/24/1948", "6/25/1948", "6/26/1948", "6/27/1948", "6/29/1948", "7/1/1948", "7/2/1948", "7/3/1948", "7/4/1948", "7/5/1948", "7/6/1948", "7/7/1948", "7/8/1948", "7/10/1948", "7/11/1948", "7/12/1948", "7/14/1948", "7/15/1948", "7/17/1948", "7/20/1948", "7/21/1948", "7/22/1948", "7/23/1948", "7/24/1948", "7/25/1948", "7/27/1948", "7/28/1948", "7/29/1948", "7/30/1948", "7/31/1948", "8/1/1948", "8/5/1948", "8/9/1948", "8/11/1948", "8/12/1948", "8/13/1948", "8/15/1948", "8/19/1948", "8/20/1948", "8/23/1948", "8/24/1948"], "data": [1, 2, 3, 1, 1, 1, 2, 3, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 2, 3, 2, 3, 5, 3, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 3, 1, 1, 2, 1, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 3, 3, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 4, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 3, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 1, 4, 1, 4, 1, 1, 2, 4, 2, 2, 1, 2, 1, 4, 1, 1, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 4, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 3, 1, 2, 2, 1, 1, 1, 1, 1, 3, 3, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 1, 4, 1, 2, 1, 2, 1, 3, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 3, 4, 1, 1, 3, 1, 1, 3, 2, 1, 1, 1, 3, 3, 3, 3, 2, 1, 1, 2, 1, 4, 2, 2, 2, 1, 3, 1, 1, 1, 3, 1, 1, 2, 2, 1, 2]}, "Time": {"label": ["NA", "19H 30M 0S", "9H 19M 0S", "21H 30M 0S", "10H 40M 0S", "23H 13M 0S", "19H 55M 0S", "18H 26M 0S", "15H 15M 0S", "9H 39M 0S", "13H 35M 0S", "16H 25M 0S", "22H 45M 0S", "19H 5M 0S", "12H 48M 0S", "17H 41M 0S", "12H 0M 0S", "4H 0M 0S", "22H 0M 0S", "23H 7M 0S", "18H 16M 0S", "14M 0S", "18H 20M 0S", "1H 40M 0S", "9H 12M 0S", "18H 7M 0S", "9H 28M 0S", "4H 30M 0S", "22H 40M 0S", "10H 15M 0S", "13H 30M 0S", "2H 30M 0S", "14H 41M 0S", "15H 0M 0S", "10H 20M 0S", "20H 40M 0S", "18H 49M 0S", "11H 30M 0S", "23H 27M 0S", "23H 45M 0S", "6H 11M 0S", "9H 5M 0S", "15H 21M 0S", "15H 10M 0S", "11H 12M 0S", "8H 55M 0S", "18H 23M 0S", "8H 35M 0S", "10H 4M 0S", "14H 50M 0S", "12H 29M 0S", "13H 45M 0S", "13H 0M 0S", "8H 5M 0S", "18H 0M 0S", "4H 20M 0S", "3H 17M 0S", "14H 10M 0S", "12H 15M 0S", "14H 25M 0S", "16H 36M 0S", "20M 0S", "18H 10M 0S", "9H 30M 0S", "12H 40M 0S", "19H 0M 0S", "20H 5M 0S", "21H 0M 0S", "19H 37M 0S", "7H 45M 0S", "13H 40M 0S", "4H 36M 0S", "16H 30M 0S", "4H 17M 0S", "14H 40M 0S", "15H 50M 0S", "15H 30M 0S", "10H 50M 0S", "12H 54M 0S", "20H 0M 0S", "13H 25M 0S", "17H 40M 0S", "17H 45M 0S", "14H 0M 0S", "6H 0M 0S", "16H 0M 0S", "21H 14M 0S", "22H 58M 0S", "10H 0M 0S", "9H 47M 0S", "8H 12M 0S", "1H 7M 0S", "7H 30M 0S", "14H 30M 0S", "8H 33M 0S", "2H 34M 0S", "15H 20M 0S", "20H 1M 0S", "16H 20M 0S", "10H 30M 0S", "10H 46M 0S", "13H 21M 0S", "3H 0M 0S", "17H 30M 0S", "11H 0M 0S", "7H 20M 0S", "20H 42M 0S", "23H 30M 0S", "18H 40M 0S", "15H 42M 0S", "13H 29M 0S", "1H 5M 0S", "12H 41M 0S", "12H 20M 0S", "15H 3M 0S", "23H 59M 0S", "1H 50M 0S", "9H 18M 0S", "8H 45M 0S", "1H 0M 0S", "9H 15M 0S", "23H 55M 0S", "9H 40M 0S", "19H 38M 0S", "7H 31M 0S"], "data": [343, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1]}, "Aircraft": {"label": ["Douglas C-47 Skytrain (DC-3)", "Noorduyn Norseman", "Lockheed C-60 LodeStar", "Avro 685 York", "Vickers 440 Wellington X", "De Havilland DH.89 Dragon Rapide", "Lockheed PV-1 Ventura", "Handley Page H.P.63 Halifax VI", "Boeing B-29 Superfortress", "Douglas DC-3", "Avro 652 Anson", "De Havilland DH.83 Fox Moth", "Lockheed 18 LodeStar", "Airspeed AS.65 Consul", "AAC.1 Toucan", "Fiat G.12", "Siebel Si-204", "Vickers 619 Wellington X", "Beechcraft C-45 Expeditor", "Lockheed L-049 Constellation", "Fairchild C-82 Packet", "Avro 691 Lancastrian", "Ford 4", "Savoia-Marchetti SM.79 Sparviero", "Caudron C.440 Go\u00e9land", "Handley Page H.P.63 Halifax VII", "Boeing C-97 Stratofreighter", "Avro 683 Lancaster", "Douglas C-54 Skymaster", "Douglas DC-4", "Handley Page H.P.70 Halifax VIII", "Grumman G-21A Goose", "Petlyakov Pe-8", "Miles M.57 Aerovan", "Lisunov LI-2", "Beechcraft AT-7 Navigator", "De Havilland DH.60 Moth", "SNCAC NC.701/702 Martinet", "Ilyushin II-12", "Short S.25 Sunderland", "De Havilland DH.84 Dragon", "Ford 5", "Martin 187 Baltimore", "Consolidated PB4Y-2 Privateer", "North American B-25 Mitchell", "Lockheed 10 Electra", "Douglas A-20 Havoc", "Consolidated PBY-5A Catalina", "Junkers JU.52", "Vought-Sikorsky VS-44", "Boeing B-17 Flying Fortress", "Curtiss C-46 Commando", "Short S.25 Sandringham", "Avro 689 Tudor", "Canadian Vickers PBV-1 Canso (OA-10 Canso)", "De Havilland DH.80 Puss Moth", "Vickers Viking", "Boeing 247", "Avro 694 Lincoln", "SNCASE SE.161 Languedoc", "Boeing 314 Clipper", "Bristol 170 Freighter", "Douglas DC-6", "Lockheed L-414 Hudson", "Vickers 458 Wellington XI", "Douglas C-53 Skytrooper (DC-3)", "Beechcraft D18", "Lockheed 9 Orion", "Airspeed AS.10 Oxford", "De Havilland DH.90 Dragonfly", "Short S.29 Stirling", "Douglas A-26 Invader", "Douglas C-48 (DC-3)", "Avro 19", "Grumman G-44 Widgeon", "Martin PBM Mariner", "De Havilland DH.104 Dove", "Lockheed L-649 Constellation", "Canadian Vickers Stranraer", "Fokker F7", "Northrop N-23 Pioneer", "Lat\u00e9co\u00e8re 631", "Messerschmitt M.20", "Consolidated Canso", "Vultee V-1", "Lockheed P-2 Neptune", "Douglas DC-2", "Douglas C-49 (DC-3)", "Miles M.60 Marathon", "Avro 616 Avian IVM", "Junkers W.34", "Fiat G.212", "SNCAC NC.211 Cormoran", "Naval Aircraft Factory PBN-1 Nomad", "Canadair C-4 North Star", "Aero C-3A"], "data": [90, 10, 5, 15, 2, 10, 2, 1, 13, 27, 27, 7, 5, 11, 11, 1, 3, 10, 5, 4, 4, 8, 1, 3, 2, 1, 1, 7, 13, 9, 16, 1, 1, 6, 12, 2, 2, 4, 3, 6, 3, 1, 5, 3, 9, 3, 1, 8, 3, 1, 3, 11, 2, 2, 2, 3, 9, 1, 4, 3, 1, 5, 5, 2, 1, 3, 1, 1, 2, 1, 1, 6, 1, 3, 2, 2, 3, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Operator": {"label": ["United States Army Air Forces - USAAF", "Indian Overseas Airlines - IOA", "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Compa\u00f1ia Transandina de Aviaci\u00f3n", "British South American Airways - BSAA", "Royal Air Force - RAF", "British European Airways - BEA", "South African Air Force", "Mercury Aviation", "Aeroflot - Russian International Airlines", "Delta Airlines", "Guinea Air Traders", "China National Aviation Corporation - CNAC", "McAvoy Diamond Drilling %26 Development Company Ltd", "Trans-Canada Air Lines - TCAL", "Milburn Air", "Anglo-Iranian Oil Company", "Aerovias Latino Americanas", "Air France", "Italian Air Force - Aeronautica Militare Italiana", "Union Southern Airlines", "TACA International Airlines - Transportes A\u00e9reos Centro Americanos", "Polyarnaya Aviatsiya", "Trans World Airlines - TWA", "Skyways of London", "Negociaci\u00f3n A\u00e9rea Mexicana", "Corrieri Aerei Militari - CAM", "Secr\u00e9tariat G\u00e9n\u00e9ral de l'Aviation Civile - SGAC", "Strato Freight", "Philippine Air Force - Hukbong Himpapawid NG Pilipinas", "Aerovias Brasil", "Royal Netherlands Air Force - Koninklijke Luchtmacht", "United Airlines", "Flugf\u00e9lag \u00cdslands", "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Eastern Airlines", "Bond Air Services", "Services Fran\u00e7ais de T\u00e9l\u00e9communications et de Signalisation", "Ellis Airlines", "Butler Air Transport", "Lancashire Aircraft Corporation - LAC", "Air Gagnon", "LOT Polish Airlines - Polskie Linie Lotnicze", "Flota Aerea Mercante Argentina - FAMA", "Pays Plat Outfitters", "Pennsylvania Central Air Lines", "French Air Force - Arm\u00e9e de l'Air", "North Sea Air Transport", "Philippine Airlines - PAL", "Lineas A\u00e9reas de Transporte Nacional - LATN", "Pan American World Airways - PAA", "Buchan's Mining Company", "Ontario Provincial Air Service", "Private Canadian", "Colombian Air Force - Fuerza A\u00e9rea Colombiana", "Soci\u00e9t\u00e9 A\u00e9rienne de Transports Internationaux - SATI", "Ulster Aviation", "Transportes A\u00e9reos Nacionales - TAN Costa Rica", "French Navy", "Air Transport Association", "Air Azur", "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Burke Air Transport", "Qantas Airways - Queensland and Northern Territory Aerial Services", "Aros-Flyg", "Miles Aircraft", "A\u00e9ro Cargo", "British Overseas Airways Corporation - BOAC", "Shell Company of Ecuador", "Turkish Air Force - T\u00fcrk Hava Kuvvetleri", "Southern Aerowork", "Argentinian Air Force - Fuerza A\u00e9rea Argentina", "United States Navy - USN", "Indonesian Government", "Chinese Air Force - AFPLA - Chung-Kuo Shan Min Taie Fang Tsun Pu-Tai", "London Aero %26 Motor Services - LAMS", "LAN Chile - Linea A\u00e9rea Nacional de Chile", "SATA Air A\u00e7ores", "Gidrometeosluzhba", "Vingtor Luftveier", "American Airlines", "New England Airways", "Aktiebolaget Aerotransport - ABA", "Photographic Survey Company", "TARS - Transporturile Aeriene Rom\u00e2no-Sovietice", "Transporte A\u00e9reo de Carga Internacional", "Mandated Airlines", "Slick Airways", "Minister of Supply %26 Aircraft Production", "Charter Airways", "Det Norske Luftfartselskap - DNL", "Royal New Zealand Air Force - RNZAF", "Royal Canadian Air Force - RCAF", "Transportes A\u00e9reos Peruanas - TAPSA", "Air Atlas", "Nayler Air Services", "Hellenic Airlines", "Payloads Charter Company", "Servicio A\u00e9reo Panini", "Hellenic Air Force - Elleniki Polemiki Aeroporia", "Compania Anonima Vuelos Express - CAVE", "Tata Airlines", "Franco-British Commercial %26 Industrial Company", "United States Air Force - USAF", "The Uganda Company", "Indian Air Force - Bharatiya Vayu Sena", "Malayan Airways", "American International Airlines", "Soci\u00e9t\u00e9 A\u00e9rienne du Littoral - SAL", "Central Air Transport - China", "Institut G\u00e9ographique National", "John Fairfax %26 Sons", "Philippines Air Express", "Air India", "Private British", "Soci\u00e9t\u00e9 Auxiliaire de Navigation A\u00e9rienne - SANA", "Rijksluchtvaartschool - RLS", "Airspan Travel", "Private American", "Trafik-Turist-Transportflyg", "British Air Transport - BAT", "Bristol Aeroplane Company", "Linea Aeropostal Venezolana - LAV", "Jugoslovenske Sovjet Transport Aviacija - JUSTA", "Columbia Air Cargo", "GLAM - Groupe de Liaisons A\u00e9riennes Minist\u00e9rielles", "Alaska Airlines", "Airlines WA", "Central African Airways - CAA", "Indonesian Air Force - TNI-AU Tentara Nasional Indonesia - Angkatan Udara", "Alfred Wegener Institute", "Iberia - Lineas A\u00e9reas de Espana", "Coastal Air Lines", "Air Transport - Belgium", "SABENA - Soci\u00e9t\u00e9 Anonyme Belge d'Exploitation de la Navigation A\u00e9rienne", "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Waite Fisheries", "Det Danske Luftfartselskab - DDL", "Bharat Airways", "United States Coast Guard - USCG", "SOCOTRA - Soci\u00e9t\u00e9 Coop\u00e9rative de Tramping A\u00e9rien", "South African Airways -SAA - Suid Afrikaanse Lugdiens - SAL", "Sivewright Airways", "Compagnie Alg\u00e9rienne des Transports A\u00e9riens - CATA", "VIARCO - Vias A\u00e9reas Colombianas", "Dominicana de Aviaci\u00f3n", "Mexicana de Aviaci\u00f3n", "Airways India", "African Air Cars", "Federal Aviation Administration - FAA", "Chartair - UK", "Soci\u00e9t\u00e9 Indochinoise de Transports A\u00e9riens - SITA", "Queen Charlotte Airlines", "Air Portugal - Transportes A\u00e9reos Portugueses", "Airline Transport Carriers", "Middle East Airlines - MEA", "Compagnie G\u00e9n\u00e9rale TransSaharienne - CGT France", "Skane Flyg", "Northrop Aircraft", "Cathay Pacific Airways", "Gulf Transportation Company", "Handley Page Aircraft Company Ltd", "Royal Australian Air Force - RAAF", "Aerea Teseo", "Lat\u00e9co\u00e8re Industries", "Commercial Airways - Philippines", "Bruning Aviation", "Pullman Airways", "Soci\u00e9t\u00e9 de Transports A\u00e9riens - STA", "United Air Services - Tanzania", "Loftleidir Icelandic Airlines", "VARIG - Via\u00e7\u00e3o A\u00e9rea Rio Grandense", "Eagle Air Freight", "Northwest Airlines", "Great Northern Skyways", "Cruzeiro do Sul", "Agencia Interamericana de Aviaci\u00f3n - AIDA Colombia", "Private Swedish", "Indian National Airways - INA", "Portuguese Air Force - Aeron\u00e1utica Militar", "United States Marine Corps", "Air Congo", "SCOLTA - Sociedad Colombiana de Transportes A\u00e9reos", "Compagnie Air Transport - CAT", "New Zealand National Airways", "Israeli Air Force - Heyl Ha'avir", "Superior Oil Corporation", "Connellan Airways", "Pakistan Airways - Pak Air", "New Holland Airways", "British American Air Services - BAAS", "Air Transport Charter", "SOMACO", "Morton Air Services", "Alpha Airways", "Aeroplane %26 Armament Experimental Establishment - A%26AEE", "Karachi Aero Club", "Royal Navy", "Hargreaves Airways", "Southern Cross Aviation Service", "Ecuadorian Air Force - Fuerza A\u00e9rea Ecuatoriana", "Compa\u00f1\u00eda Auxiliar de Navegaci\u00f3n A\u00e9rea", "Transporte A\u00e9reo Transandino", "Clairways", "Central BC Airways", "Iraq Petroleum Transport Company", "Private Mexican", "Avio Linee Italiane - ALI", "Scandinavian Airlines System - SAS", "Royal Norwegian Air Force - Kongelige Norske Luftforsvaret", "Aigle Azur", "Argentinian Navy - Armada Argentina", "Expreso A\u00e9reo Interamericano", "Private Venezuelan", "Extractors Hull", "SNCAC - Soci\u00e9t\u00e9 Nationale de Constructions A\u00e9ronautiques du Centre", "Mayflower Air Services", "Ethiopian Airlines", "Rimouski Airlines", "SNECMA - Soci\u00e9t\u00e9 Nationale d'Etude et de Construction de Moteurs d'Aviation", "Aviaci\u00f3n del Litoral Fluvial Argentino - ALFA", "Civil Air Transport", "OnzeAir", "Czech Air Force - Cesk\u00e9 Vojensk\u00e9 Letectvo", "AVENSA - Aerovias Venezolanas"], "data": [19, 2, 1, 2, 6, 55, 6, 1, 2, 14, 2, 3, 3, 2, 2, 1, 1, 1, 11, 4, 1, 1, 5, 2, 4, 1, 2, 1, 2, 1, 2, 3, 3, 1, 1, 3, 2, 1, 1, 1, 3, 1, 2, 5, 1, 1, 9, 1, 4, 1, 4, 1, 2, 1, 2, 1, 3, 1, 2, 1, 1, 8, 1, 2, 1, 1, 3, 5, 1, 4, 1, 3, 11, 1, 1, 2, 1, 1, 2, 1, 3, 1, 2, 1, 2, 1, 2, 3, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 35, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 2, 3, 1, 1, 2, 1, 2, 1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 3, 5, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Registration": {"label": ["AS-32084", "E4104", "A8544", "AS-32098", "AS-4130", "N2851", "B3087", "D4593", "5", "B9976", "D1745", "B927", "F2633", "AS-23130", "NA", "SC-39168", "D9327", "6", "AS-39406", "AS-22846", "97", "E9362", "B9983", "F7136", "A-31615", "AS-29071", "AS-62447", "D8340", "8", "3", "F3748", "68", "G-EAAA", "AS-22853", "11495", "AS-30985", "H5894", "69", "D5439", "C7829", "C6861", "61", "B9982", "AS-43626", "G-EAAR", "78", "AS-30865", "B9981", "84", "E5557", "82", "110", "G-EACL", "86", "G-EAAO", "N123", "G-EAET", "AS-30992", "G-EAGO", "SC-829", "G-EAHO", "G-EAAN", "G-EACG", "G-EAGM", "AS-30931", "G-EAAQ", "AS-30963", "AS-24271", "AS-32390", "SC-24269", "AS-24198", "G-EAEW", "AS-24150", "G-EAFG", "AS-24006", "32", "87", "AS-30547", "G-EADO", "G-EAHG", "AS-32333", "90", "AS-514", "AS-24263", "77", "G-EACW", "G-EACD", "G-EACY", "G-EAOW", "G-EAAP", "G-EAMR", "G-EAHF", "G-EAOV", "G-EAGJ", "G-EAHM", "AS-31079", "108", "G-EADL", "203", "G-UABA", "AS-39408", "G-EANV", "G-EAMC", "AS-32466", "G-EAAV", "AS-32404", "SC-23961", "F8615", "CH-16", "F-ALAO", "65", "G-EACT", "105", "E9744", "72", "G-EAHW", "F302", "49", "44", "G-EADS", "G-EAMI", "91", "98", "AS-32562", "F-CGTY", "Cartagena", "N4044", "G-EACV", "95", "79", "103", "AS-63123", "AS-63385", "CH-4", "88", "AS-24158", "60", "204", "AS-62973", "AS-63169", "G-EARU", "AS-63173", "80", "G-EADR", "G-EAKE", "A-25", "G-EAGI", "AS-63501", "AS-23405", "G-EALO", "F.38", "F1646", "AS-22856", "Santa Marta", "G-EAGW", "G-EAPV", "G-EAGV", "G-EARZ", "SC-30913", "G-EAMY", "AS-23587", "G-CYAL", "G-EARI", "G-EALW", "31704", "G-EAJH", "AS-63244", "G-EAGX", "G-CYAD", "106", "G-CAAR", "CH-18", "305", "73", "G-CADB", "G-EANN", "308", "AS-63454", "AS-63019", "G-CABU", "G-EAJQ", "N.11", "G-EAPC", "31679", "G-EANS", "G-CYAZ", "F-ALAI", "F-ALTA", "H9853", "G-CYCF", "76", "G-EATP", "178", "G-EAQN", "F9745", "AS-68024", "AS-68154", "AS-63233", "G-CYBN", "31", "AS-68150", "AS-63130", "G-EAMA", "G-EAQA", "F-ALBO", "AS-40043", "AS-22998", "G-CABP", "G-CABM", "153", "AS-68176", "AS-63670", "N.19", "O-BAIN", "AS-63972", "AS-27969", "130", "AS-63417", "AS-63709", "A-26", "301", "179", "F-ALBA", "D-128", "42", "124", "G-CYCI", "E9691", "AS-63456", "67", "3605", "F8751", "O-BABI", "F8423", "G-CYCH", "D9383", "G-CYBD", "AS-44864", "G-CYBS", "H3021", "G-EAVL", "H81", "O-BATE", "G-CYCA", "160", "AS-63182", "196", "AS-62994", "176", "F-ALHE", "AS-62980", "AS-63566", "AS-38126", "G-EAUF", "H-NABL", "AS-62451", "AS-64243", "G-CADG", "G-CYBZ", "G-CYBW", "AS-63676", "F-CMAV", "G-CAAH", "AS-63145", "AS-63916", "F-CMAY", "D-18", "AS-38323", "AS-63915", "222", "G-CACN", "992", "AS-63690", "AS-63525", "AS-62965", "AS-63868", "AS-63891", "AS-63131", "AS-23190", "G-CYBV", "AS-64594", "G-CABA", "AS-63129", "AS-63502", "AS-63880", "F-ALBI", "AS-63082", "C4297", "AS-63967", "G-CADQ", "G-CAAU", "O-BLAN", "G-CYAW", "AS-63910", "H-NABP", "AS-64212", "F-ADCD", "G-EAWI", "AS-63452", "AS-64511", "AS-63595", "F-ADBN", "CH-71", "AS-63678", "AS-63567", "AS-68462", "G-EAEB", "AS-64521", "G-EACA", "F9157", "G-CADJ", "AS-64114", "T-DOBC", "G-CYBG", "AS-63865", "AS-24174", "H-116", "AS-63455", "F-ALQA", "G-EAFQ", "G-EAZF", "AS-63604", "AS-63033", "G-EAAB", "G-EANQ", "G-AUDI", "AS-63770", "E3440", "G-CYCB", "AS-68204", "E3446", "H2446", "229", "AS-63791", "AS-62989", "AS-30708", "AS-63249", "G-EATM", "D6243", "E5450", "H102", "E8474", "G-EATN", "AS-68036", "AS-63801", "H9829", "AS-63382", "AS-63366", "AS-64536", "E3568", "AS-63944", "D4542", "AS-64522", "N125", "AS-63989", "G-CACO", "G-EAPK", "E5497", "E967", "CH-77", "G-EAWU", "G-EAWO", "F-GEAD", "G-EBBZ", "AS-62990", "G-EASA", "AS-64138", "F-ALGU", "G-EBCL", "AS-63601", "F-ALFU", "AS-63395", "H-NABT", "AS-68180", "AS-24131", "G-EBDE", "CH-39", "F-ACMH", "75", "G-EAHU", "AS-68678", "G-EAOE", "B-2", "AS-68653", "AS-64556", "F8747", "H2364", "F-FREI", "N.21", "F-ALVE", "AS-68669", "AS-64535", "G-EBDH", "AS-68647", "G-EABX", "G-EAJG", "G-EBAV", "AS-64544", "E9910", "G-EBDI", "G-EALD", "43", "AS-64332", "AS-63548", "AS-64256", "227", "N4639", "AS-68648", "46", "E899", "D-27", "G-EAYT", "G-EAWK", "AS-63620", "AS-68673", "F-FRAV", "AS-63480", "AS-65045", "H-111", "G-EBBU", "AS-64634", "AS-63626", "AS-64537", "F-ESAB", "H-NABO", "AS-63408", "AS-63481", "F-ALNA", "AS-22365", "AS-42125", "249", "AS-63404", "AS-64461", "247", "F-AEIB", "Columbus", "F-ALJU", "223", "A-3359", "G-AUBL", "V-201", "A-2", "D-22", "G-AUCF", "291", "D-201", "D-217", "O-23", "F-AEEK", "AS-64205", "1970", "F-AFCP", "H-MACC", "Elisabeth"], "data": [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 43, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Flight phase": {"label": ["Takeoff (climb)", "Flight", "Landing (descent or approach)", "NA", "Taxiing", "Parking"], "data": [88, 196, 194, 15, 5, 2]}, "Flight type": {"label": ["Military", "Scheduled Revenue Flight", "Cargo", "Training", "Survey / Patrol / Reconnaissance", "Executive/Corporate/Business", "Private", "Charter/Taxi (Non Scheduled Revenue Flight)", "Positioning", "Topographic", "Government", "Postal (mail)", "NA", "Test", "Humanitarian", "Aerial photography", "Delivery", "Geographical / Geophysical / Scientific", "Ferry", "Demonstration", "Calibration", "Bombing"], "data": [101, 136, 77, 80, 8, 6, 15, 28, 6, 1, 4, 1, 1, 15, 2, 1, 10, 1, 4, 1, 1, 1]}, "Survivors": {"label": ["Yes", "NA", "No"], "data": [306, 28, 166]}, "Crash site": {"label": ["Airport (less than 10 km from airport)", "NA", "Mountains", "Plain, Valley", "Desert", "Lake, Sea, Ocean, River", "City"], "data": [250, 7, 77, 86, 10, 65, 5]}, "Schedule": {"label": ["Dayton - Dayton", "Cricklewood - Cricklewood", "Abukir - Abukir", "Wright Patterson AFB-Wright Patterson AFB", "NA", "Isle of Grain - Usworth - Glasgow", "Seaton Carew - Seaton Carew", "Castle Bromwich - Castle Bromwich", "Seaton Carew AFB - Seaton Carew AFB", "Old Sarum - Old Sarum", "Bicester - Bicester", "Thessaloniki - Athens", "Villacoublay - Rome", "Andover - Andover", "Hendon - Bournemouth", "Udine - Bratislava", "Ellington AFB - Ellington AFB", "London - Paris", "London \u2013 Paris \u2013 Pisa \u2013 Rome \u2013 Cairo", "Aldeburgh - Aldeburgh", "Cleveland \u2013 Chicago", "Saint John's - Clifden", "Hendon - Hendon", "Bellefonte \u2013 Cleveland", "College Park - College Park", "Venice - Milan", "Hounslow Heath \u2013 Sandhurst", "Felixstowe - Felixstowe", "Manston- Hounslow Heath", "Weston-super-Mare - Weston-super-Mare", "Croydon \u2013 Newcastle", "Washington DC \u2013 New York", "Interlaken - Paris - Croydon", "Fort Sill AFB - Fort Sill AFB", "College Park \u2013 Belmont Park", "Hounslow Heath - Chania", "Paris-Le Bourget - Hounslow Heath", "Brooklands - Paris", "Paris - London", "Dessau - Dessau", "Brooklands - Derna - Wadi Halfa - Bulawayo - Cape Town", "Aswan - Khartoum", "Brooklands \u2013 Cairo \u2013 Gebelein \u2013 Kisumu \u2013 Mwanza \u2013 Tabora \u2013 Cape Town", "Wadi Halfa \u2013 Bulawayo \u2013 Cape Town", "Porrentruy - Porrentruy", "Chicago \u2013 Cleveland", "Paris - Hounslow Heath", "Roosevelt Field - Roosevelt Field", "Bellefonte - Heller Field", "Cricklewood - Biggin Hill", "Khartoum - Cairo", "Bustleton \u2013 Washington DC", "Barranquilla - Barranquilla", "Joyce Green - Brooklands", "Omaha \u2013 Iowa City \u2013 Chicago", "Romanshorn - Romanshorn", "Paris - Croydon", "Bournemouth - Peterborough", "Kjeller \u2013 Karlstad \u2013 Stockholm - Copenhagen", "Kalijati - Kalijati", "Twickenham \u2013 Northolt", "Havana \u2013 Jag\u00fcey Grande", "Salisbury - Salisbury", "Eastbourne - London", "Horten - Oslo", "Kenley - Kenley", "Cartagena - Barranquilla", "Brough - Scarborough", "Bournemouth - Bournemouth", "Camp Borden - Camp Borden", "Croydon - Paris", "Brighton - Eastbourne", "Hazlehurst \u2013 Cleveland", "Mineola \u2013 Northfield", "Alert Bay \u2013 Prince Rupert", "Hazlehurst \u2013 Bellefonte", "Toulouse - Barcelona", "Grantham - Grantham", "Chicago - Omaha", "Stockholm \u2013 Kristiania", "Salt Lake City \u2013 Cheyenne", "New Plymouth - New Plymouth", "Cricklewood - Paris", "Hounslow Heath - Paris", "Marina - Sacramento", "Croydon - Brussels", "Minneapolis \u2013 Chicago", "Lone Rock \u2013 La Crosse", "Cheyenne \u2013 Salt Lake City", "Gdansk \u2013 Berlin", "Rio de Janeiro - Rio de Janeiro", "Camp Borden - Toronto", "Baghdad - Baghdad", "Elko \u2013 Salt Lake City", "Farnborough - Farnborough", "Lake Maggiore - Lake Maggiore", "Martlesham Heath - Martlesham Heath", "Biggin Hill - Biggin Hill", "Fort Sill - Fort Sill", "Point Cook - Point Cook", "Basra - Baghdad", "Brussels - Paris", "Mitchel Field - Cleveland", "Barcelone \u2013 Alicante", "Carlstrom AFB - Carlstrom AFB", "Paris \u2013 Croydon", "Croydon \u2013 Rotterdam", "Langley \u2013 Bolling", "Calgary - Calgary", "Dortmund \u2013 Braunschweig", "San Francisco \u2013 Sacramento", "Malmen AFB - Malmen AFB", "Moundsville - Langley", "Luke AFB - Luke AFB", "High River - High River", "Edmonton \u2013 Peace River \u2013 Fort Vermilion \u2013 Hay River \u2013 Fort Providence \u2013 Fort Simpson \u2013 Norman Wells", "Charleston \u2013 Langley", "Warsaw - Prague - Strasbourg - Paris", "Croydon - Croydon", "Solothurn - Lausanne", "Stag Lane - Norwich", "Manston - Manston", "Croydon - Rotterdam", "Bandung - Batavia", "Penshurst - Ashford", "Geraldton \u2013 Kalbarri \u2013 Carnarvon \u2013 Karratha \u2013 Port Hedland \u2013 Broome \u2013 Derby", "Abu Sueir - Abu Sueir", "Cranwell - Cranwell", "Paris \u2013 London", "Kaikoura \u2013 Christchurch", "Hinaidi - Hinaidi", "El Bosque - El Bosque", "Sealand - Sealand", "Cowes - Isle of Grain", "Spitalgate - Spitalgate", "Baoding - Baoding", "Brooklands - Brooklands", "Alicante - Casablanca", "Perpignan \u2013 Barcelona", "Amsterdam - Rotterdam - Croydon", "Lyon - Marseille", "Lausanne - Lausanne", "Asch - Asch", "Batavia \u2013 Semarang", "Casablanca - Toulouse", "Hounslow Heath - Hounslow Heath", "Tours - Tours", "Izmir - Naxos - Tatoi AFB", "Bournemouth - Ashford", "Indianapolis \u2013 Cleveland", "Rutland - Rutland", "Hinaidi - Shaibah", "Goetsenhoven AFB - Goetsenhoven AFB", "Venice - London", "Wheeler AFB - Wheeler AFB", "Prague - Warsaw", "Kalijati - Bandung", "Paris - Paris", "Selfridge NAS - Selfridge NAS", "Toulouse - Barcelona - Valencia - Alicante - M\u00e1laga - Rabat", "Pearl Harbour - Pearl Harbour", "Salt Lake City \u2013 Rock Springs", "Toulouse \u2013 Barcelona \u2013 Valencia \u2013 Alicante \u2013 M\u00e1laga \u2013 Tanger \u2013 Rabat", "Luke Field - Luke Field", "Rock Springs \u2013 Salt Lake City", "Ajaccio - Antibes", "Key West - Havana", "Alicante \u2013 Barcelona", "Cheyenne - Cheyenne", "Bandung - Kalijati", "Girardot \u2013 Puerto Berr\u00edo", "Munich - Augsburg", "Albina - Macap\u00e1", "Oran \u2013 Casablanca", "Dayton - Langley", "Curitiba - Curitiba", "Paris \u2013 Strasbourg \u2013 Budapest \u2013 Bucharest", "Budapest - Budapest", "Wainwright - Wainwright"], "data": [1, 1, 1, 1, 262, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 2, 3, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 7, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 7, 1, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 2, 4, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "MSN": {"label": ["NA", "B9976", "B9983", "C6054", "B9982", "C105", "B9981", "D9298", "ATC.4", "1", "D5150", "D9343", "H1959", "E4225", "ATC.9", "K-161", "ATC.2", "G7/67", "ATC.13", "F8706", "F2694", "77", "E1663", "E4224", "C7175", "B9970", "ATC.3", "E4/500", "F2699", "C746", "E1707", "E4348", "539", "538", "HP.7", "HP.27", "K-107", "3437", "4570.56", "DH.16/1", "536", "E3364", "H2507", "PL.6146", "6526", "E4233", "544", "P.59", "D6245", "HP.22", "E4234", "E428", "E3", "H6599", "F302", "H6598", "H6551", "F.246", "H1917", "DH.18/1", "F7484", "E2", "H9255", "D9076", "2503", "H2514", "560", "C1293", "H2587", "970", "102", "E4", "E997", "31", "20", "F333", "H4600", "P.37E", "HP.25", "P.36E", "57", "P45", "AB.16", "AB.13", "H5915", "5220/8220.2", "610", "H9736", "3605", "H5925", "H5905", "103", "3", "1508", "15/2", "H9742", "1252", "M3100", "1254", "5097", "1161", "F2710", "AB.1", "22", "3752", "558", "17/7248", "H9196", "160", "E3672", "1913", "13", "B8774", "E6765", "1533", "17", "E4180", "H7426", "K100", "J755", "6116", "HP.42", "HP.43", "2", "FK.26/32", "F3439", "DH.18/04", "23", "15", "F9809", "127", "E9227", "3641/126", "1532", "H5738", "555", "E1611", "E3505", "25", "7", "117", "E4230", "H1956", "F9783", "F.330", "H1925", "14", "E3671", "133", "C74/1", "55889", "4", "6083.13", "557", "H4561", "565", "633", "1970", "5366.1", "628"], "data": [334, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "YOM": {"label": ["1944", "1945", "NA", "1946", "1941", "1943", "1942", "28", "26", "0", "13", "19", "1947", "1928", "3", "1930", "27", "1951", "1932", "1933", "1937", "1940", "1948", "1935", "30", "31", "1934", "8", "21"], "data": [64, 57, 193, 53, 12, 39, 17, 1, 1, 2, 2, 1, 34, 1, 1, 4, 1, 1, 1, 1, 2, 1, 5, 1, 1, 1, 1, 1, 1]}, "Flight number": {"label": ["NA"], "data": [500]}, "Crash location": {"label": ["Kelly AFB (ex Brooks Field, San Antonio) Texas", "Tiruppur Tamil Nadu", "Dalry Ayrshire", "Medell\u00edn Antioquia", "Dakar Dakar Region", "Bovingdon AFB Hertfordshire", "Greeba Isle of Man", "Aljammalab White Nile (<U+0627><U+0644><U+0646><U+064A><U+0644> <U+0627><U+0644><U+0623><U+0628><U+064A><U+0636>)", "Atlantic Ocean All World", "Kwajalein All Marshall Islands", "Malakal Upper Nile (<U+0623><U+0639><U+0627><U+0644><U+064A> <U+0627><U+0644><U+0646><U+064A><U+0644>)", "Volochanka Krasnoyarsk Krai", "Columbus Georgia", "Karlovy Vary Karlovy Vary Region (Karlovarsk\u00fd kraj)", "Port Moresby National Capital District", "Shanghai-Longhua Shanghai", "Coffey Lake Alberta", "Vancouver British Columbia", "Tatsfield Surrey", "Abadan Khuzestan", "San Salvador-Ilopango San Salvador", "Niamey Niamey City District", "Torino-Mirafiori Piedmont", "Newark New Jersey", "Nicoya Guanacaste (North Pacific)", "Beryozovo Tula oblast", "Driffield AFB East Yorkshire", "Songea Ruvuma Region", "Cartagena Bol\u00edvar", "Cape May Point New Jersey", "Austin-Bergstrom Texas", "H3 Oil Station Al-Anbar (<U+0627><U+0644><U+0623><U+0646><U+0628><U+0627><U+0631>)", "Nal (Bikaner) Rajasthan", "Ometepec Guerrero", "Rome-Centocelle Lazio", "Ch\u00e2tillon-sur-Colmont Mayenne", "Khabarovsk Khabarovsk Krai", "Gainesville-Lee Gilmer Georgia", "North Luffenham AFB Rutland", "Malaybalay Bukidnon", "Windsor Ontario", "Livingston Montana", "Finningley AFB South Yorkshire", "Rio de Janeiro-Santos Dumont Rio de Janeiro", "Wright-Patterson AFB (Dayton) Ohio", "Luqa All Malta", "Bulolo Morobe", "Gilze-Rijen AFB North Brabant", "Nairobi-Eastleigh (Moi Air Base) Nairobi City District", "Atsugi NAS Kanto", "New York-LaGuardia New York", "Mt Hestfjall Northeastern Region (Nor\u00f0urland eystra)", "Fort Wainwright AFB (Ladd Field) Alaska", "Trinidad Beni", "Bainbridge Maryland", "Barcelona Catalonia", "Algiers Algiers", "Ketchikan Alaska", "Schofields New South Wales", "G\u00e9menos Bouches-du-Rh\u00f4ne", "London-Heathrow London Metropolis", "Cottesmore AFB Rutland", "Mistassini Lake Quebec", "Mys Kosistyy Krasnoyarsk Krai", "Stockholm-Bromma Uppland", "Natal Rio Grande do Norte", "Oakington Cambridgeshire", "Cirrus Lake Ontario", "Lookout Rock West Virginia", "Vietnam All Vietnam", "Croydon Surrey", "Perkinsville Vermont", "Fort Knox Kentucky", "Leninabad Sughd Province", "Cebu City Cebu", "Quyquyh\u00f3 Paraguar\u00ed", "Al Mayadin Deir ez-Zor Governorate (<U+0645><U+064F><U+062D><U+0627><U+0641><U+0638><U+0629> <U+062F><U+064A><U+0631> <U+0627><U+0644><U+0632><U+0648><U+0631><U+200E>)", "Hall's Bay Newfoundland & Labrador", "Poshkakagan Lake Ontario", "Karkinyts\u2019ka Gulf Autonomous Republic of Crimea", "Grey Trout Lake Ontario", "Roncesvalles Tolima", "Kwagama Lake Ontario", "Hamlin Saskatchewan", "Mt Makiling Laguna", "Calcutta West Bengal", "Cloughey Down", "Isiolo Rift Valley", "Antananarivo Antananarivo Province", "Moscow-Vnukovo Moscow oblast", "Pacific Ocean All World", "Es\u00e9ka Centre", "Oran-Tafraoui Oran", "Newtownards Down", "Niton Isle of Wight", "Sargasso Sea All World", "Inishtrahull Island Ulster", "Saigon Th\u00e0nh ph<U+1ED1> H<U+1ED3> Ch\u00ed Minh City District", "Mt Meenard Londonderry", "Bizerte Bizerte Governorate (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+0628><U+0646><U+0632><U+0631><U+062A><U+200E>)", "Campo de Marte AFB (S\u00e3o Paulo) S\u00e3o Paulo", "Oberr\u00f6blingen Saxony-Anhalt", "Melbourne Florida", "Zenag Morobe", "Tumlehed V\u00e4sterg\u00f6tland", "Woodley Berkshire", "Vichy Allier", "Shaibah AFB (Basrah) Al-Basrah (<U+0627><U+0644><U+0628><U+0635><U+0631><U+0629>)", "Ecuador All Ecuador", "Diyarbakir Southeastern Anatolia Region (G\u00fcneydogu Anadolu B\u00f6lgesi)", "El Palomar AFB Buenos Aires province", "Eskisehir Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "Whidbey Island NAS (Ault Field) Washington", "Mor\u00f3n AFB Buenos Aires province", "Recife Pernambuco", "Yogyakarta Special Region of Yogyakarta", "Wuwei Gansu", "Bergamo Lombardy", "Kelso Washington", "Mt Tupungato Mendoza", "Antofagasta Regi\u00f3n de Antofagasta", "Ponta Delgada Azores Islands", "Naberezhnaya Moscow oblast", "Svolvaer (Lofoten Islands) Nordland", "Banke Aran", "Barra Hebrides Islands", "Kempsey New South Wales", "Malm\u00f6 Sk\u00e5ne", "Quebec Quebec", "Pendotiba Rio de Janeiro", "Itapemirim Esp\u00edrito Santo", "Orl\u00e9ans-Bricy Loiret", "Bucharest-Baneasa Bucure<U+0219>ti", "Ballykelly AFB Londonderry", "Montevideo Montevideo City District", "Maridi Western Equatoria (<U+063A><U+0631><U+0628> <U+0627><U+0644><U+0627><U+0633><U+062A><U+0648><U+0627><U+0626><U+064A><U+0629>)", "Lae Morobe", "Mt Blue Bell Knoll Utah", "Bahrain All Bahrain", "Woodford Cheshire", "Allen Lake Northwest Territories", "Harstad Troms", "Paraparaumu-Kapiti Coast Greater Wellington Regional Council", "Westgate-on-Sea Kent", "Cambridge Bay Nunavut", "Saposoa San Mart\u00edn", "El Hajeb Mekn\u00e8s-Tafilalet", "Eaton Bray Bedfordshire", "Dishforth AFB North Yorkshire", "Aberdeen-Dyce Aberdeenshire", "Athens-Hassani Attica / <U+0391>tt<U+03B9><U+03BA><U+03AE>", "Hamilton All Bermuda", "Klyazma Moscow oblast", "Ciudad Obreg\u00f3n Sonora", "Saint-Girons Landes", "Burbank California", "Farsala Thessaly / Tessa<U+03BB><U+03AF>a", "Buenos Aires-Aeroparque-Jorge Newbery Buenos Aires City", "La Carlota-General Francisco de Miranda AFB (Caracas) Caracas Federal District", "Junagarh Odisha (Orissa)", "Tunis Tunis Governorate (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+062A><U+0648><U+0646><U+0633><U+200E>)", "San Juan de Marcona Ica", "Floyd Bennett Field New York", "Zanzibar Unguja North Region", "Mautby Norfolk", "New Delhi-Palam National Capital Territory of Delhi", "Gulf of Aden All Yemen", "Belfast-Nutts Corner Antrim", "Ambavalao Fianarantsoa Province", "Annaba Annaba", "Cao B<U+1EB1>ng Cao B<U+1EB1>ng Province", "Borja Loreto", "Ipoh Perak", "Cabo de Palos Region of Murcia", "Sylva North Carolina", "Shijiazhuang Hebei", "Southend Essex", "Bryce Canyon Utah", "Saint-Etienne Loire", "Mt Hymettus Attica / <U+0391>tt<U+03B9><U+03BA><U+03AE>", "Annette Island Alaska", "Guilin Guangxi", "Balmoral New South Wales", "Pir Panjal Mountain Range Jammu and Kashmir", "Manila Metro Manila", "Marrakech Marrakech-Tensift-El Haouz", "Lyneham AFB Wiltshire", "Gallup New Mexico", "Buckenham Norfolk", "Spokane Washington", "Jammu Jammu and Kashmir", "La Rochelle Charente-Maritime", "Les Bouchoux Jura", "Soesterberg AFB Utrecht", "Ch\u00e2lons-en-Champagne Marne", "Los Angeles California", "Mumbai Maharashtra", "Mt Magazine Arkansas", "Ravello Campania", "Wilmington-New Castle County Delaware", "Brightstone Down Isle of Wight", "Porto de Moz Par\u00e1", "Saint Boniface Down Isle of Wight", "Birchington-on-Sea Kent", "Plouznice Liberec Region (Libereck\u00fd kraj)", "Wau Morobe", "Ciudad Bol\u00edvar Bol\u00edvar", "Port Sudan Red Sea (<U+0627><U+0644><U+0628><U+062D><U+0631> <U+0627><U+0644><U+0623><U+062D><U+0645><U+0631>)", "Mt Rumija Coastal Region", "Yakutat Alaska", "Gordon Lake Northwest Territories", "Perpignan Pyr\u00e9n\u00e9es-Orientales", "Trappa Piedmont", "B\u00e9char B\u00e9char", "Bah\u00eda Blanca Buenos Aires province", "Tacoma Washington", "Taldom Moscow oblast", "Moreton-in-Marsh AFB Gloucestershire", "Guildford Western Australia", "Saint Asaph Denbighshire", "Elgin Texas", "Goose Bay Newfoundland & Labrador", "Memphis Tennessee", "Zambezi North-Western", "Bukit Tanjung Hantu Perak", "Abingdon AFB Oxfordshire", "Norfolk Virginia", "Krasnoyarsk Krasnoyarsk Krai", "Dinalungan Aurora", "Uetersen Schleswig-Holstein", "Madrid-Barajas Madrid", "Nome Alaska", "Miami Florida", "Kunming Yunnan", "Mitwaba Katanga", "Chelles-le-Pin Seine-et-Marne", "Leeuwarden Friesland", "Karachi Sindh (<U+0633><U+0646><U+068C> <U+0633><U+0646><U+062F><U+06BE>)", "Le\u00f3n Guanajuato", "Saskatchewan Saskatchewan", "Copenhagen Hovedstaden", "Zlatoust Chelyabinsk oblast", "Elmendorf-Richardson AFB (JBER) Alaska", "Srinagar Jammu and Kashmir", "Signal Mountain Tennessee", "Casablanca Grand Casablanca", "Johannesburg Gauteng", "Northolt AFB London Metropolis", "Paris-Le Bourget Seine-Saint-Denis", "Levy South Carolina", "Chelford Cheshire", "Waterbeach AFB Cambridgeshire", "Lakhdaria Bouira", "Madrid AFB Cundinamarca", "Cerbaiola Friuli-Venezia Giulia", "Qingdao Shandong", "Cairo Cairo", "Yamas\u00e1 Monte Plata", "Topcliffe AFB North Yorkshire", "Rome-Fiumicino-Leonardo da Vinci Lazio", "Oxon Hill Maryland", "Guaymas Sonora", "Viterbo Lazio", "Andrews AFB Maryland", "Ed Dueim White Nile (<U+0627><U+0644><U+0646><U+064A><U+0644> <U+0627><U+0644><U+0623><U+0628><U+064A><U+0636>)", "Mukden Liaoning", "Ward Colorado", "Boston Massachusetts", "Iloilo City Iloilo", "Swinderby AFB Lincolnshire", "Lyon-Bron Rh\u00f4ne", "Baltimore Maryland", "Mediterranean Sea All World", "Vancouver Island British Columbia", "Paris Paris", "Ch\u00e2teau Garnier Alpes-de-Haute-Provence", "Monte da Caparica Estremadura - Lisbon District", "Coalinga California", "Chanolles Alpes-de-Haute-Provence", "Beirut Beirut Governorate", "Istres-Le Tub\u00e9 Bouches-du-Rh\u00f4ne", "Lake Iv\u00f6sj\u00f6n Sk\u00e5ne", "California California", "Jasper Arkansas", "Saluda North Carolina", "Locri Calabria", "Sandoway Rakhine State", "Hendon Middlesex", "Bandung West Java", "Ciudad del Carmen Campeche", "Jacksonville-Towers Field NAS Florida", "Condamine Queensland", "Ulrichstein Hesse", "Radlett Hertfordshire", "Hullavington AFB Wiltshire", "Tain AFB Ross and Cromarty", "Amberley Queensland", "Pisa Tuscany", "Saint-Marcouf Islands Manche", "La Grita T\u00e1chira", "Mati Davao Oriental", "Columbus-John Glenn (Port Columbus) Ohio", "Bel\u00e9m Par\u00e1", "Mobile Alabama", "Mombasa Coast", "Hellishei\u00f0i Southern Region (Su\u00f0urland)", "Brazil All Brazil", "Mt Netem-Pe Republic of Yamalia", "Mt Hamilton California", "Poso Central Sulawesi", "Chicago-Midway Illinois", "Dallas-Love Field Texas", "Mt Sanford Alaska", "Guidonia AFB Lazio", "McGregor Bay Ontario", "Sierra Cristais Minas Gerais", "Alto El Arrastradero Cundinamarca", "Vorkuta Republic of Komi", "Somerset Pennsylvania", "Rio Gurupizinho Par\u00e1", "Woodland Washington", "Dorotea V\u00e4sterbotten", "Southport Merseyside", "Mt Cardo Haute-Corse", "Lajes Azores Islands", "Berlin-Gatow Berlin", "North Sea All World", "China All China", "Kindu Maniema", "Venezuela All Venezuela", "Mt Baird Washington", "Kano Kano", "Destin Florida", "Algeciras Andalusia", "Shannon Munster", "Tauranga Bay of Plenty Regional Council", "Jolo Island Sulu", "Glasgow Strathclyde", "Tynda Amur oblast", "Praia de Ponte Negra Rio de Janeiro", "Quonset Point NAS Rhode Island", "Mexico City Federal District of Mexico City", "Bodaibo Irkutsk oblast", "Corpus Christi NAS Texas", "Vienna Vienna", "Verqui\u00e8res Bouches-du-Rh\u00f4ne", "Amsterdam-Schiphol North Holland", "Daly Waters Northern Territory", "Long Island Long Island", "Darwin Northern Territory", "Amman Amman City District", "Nairyah ash-Sharqiyah (<U+0627><U+0644><U+0634><U+0631><U+0642><U+064A><U+0629><U+200E>)", "Turnagain Island Queensland", "Saint-Bauzile Ard\u00e8che", "NA", "Jun\u00edn Mendoza", "Vrede Free State", "Columbus-Rickenbacker (Lockbourne AFB) Ohio", "Rennes Ille-et-Vilaine", "Rome-Urbe Lazio", "L\u00fcbeck-Blankensee Schleswig-Holstein", "Magadan Magadan oblast", "Studham Hertfordshire", "Latrun Jerusalem District", "El Alamein Matruh", "Albacete Castile-La Mancha", "Popowice Masovian Voivodeship (Mazowieckie)", "Boscombe Down AFB Wiltshire", "\u00c7ubuk Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "Enniskillen Fermanagh", "Lisbon Estremadura - Lisbon District", "Peel Isle of Man", "Port Erin Isle of Man", "Eloy Arizona", "Waimate Canterbury Regional Council", "Coulommiers Seine-et-Marne", "Berck-sur-Mer Pas-de-Calais", "Mount Carmel Pennsylvania", "Shell Pastaza", "Reus Catalonia", "Maracaibo Zulia", "Segni Lazio", "Merka Shabeellaha Hoose (<U+0634><U+0628><U+064A><U+0644><U+064A> <U+0627><U+0644><U+0633><U+0641><U+0644><U+0649>)", "British Columbia British Columbia", "Syria All Syria", "Caracas Caracas Federal District", "Blythe California", "Bogot\u00e1-Techo Bogot\u00e1 Capital District", "Erding AFB Bavaria", "Cue Western Australia", "Ciudad Serd\u00e1n Puebla", "Keerbergen Flemish Brabant", "Lindholme AFB South Yorkshire", "Wylye Wiltshire", "Prince George British Columbia", "Northwood London Metropolis", "Ekron-Tel Nof AFB Central District", "Wiesbaden-Erbenheim AFB Hesse", "Oslo-Gardermoen Akershus", "Di Linh L\u00e2m \u00d0<U+1ED3>ng Province", "Offutt AFB (Bellevue) Nebraska", "Greenville North Carolina", "K\u00f6nigstein im Taunus Hesse", "Coronel Pringles Buenos Aires province", "Caracas-Maiquet\u00eda-Sim\u00f3n Bol\u00edvar Vargas", "Laverton AFB (Melbourne) Victoria", "Paris-Orly Val-de-Marne", "Singapore-Seletar All Singapore", "Toulon Var", "Bel\u00e9m-Val de Cans-J\u00falio Cezar Ribeiro Par\u00e1", "S\u00e3o Paulo-Guarulhos S\u00e3o Paulo", "Schilling AFB (Smoky Hill AFB), Salina Kansas", "Puerto Cabello Carabobo", "Macau Macau", "Lumbreras La Rioja", "Tel Aviv (<U+05EA><U+05DC> <U+05D0><U+05D1><U+05D9><U+05D1>-<U+05D9><U+05E4><U+05D5>) Tel Aviv District", "V\u00e9lizy-Villacoublay Yvelines", "Lod (<U+05DC><U+05D5><U+05B9><U+05D3>) Central District", "Lake Mead Nevada", "Auchenblae Aberdeenshire", "Gore Oromia", "Hinojosa del Duque Andalusia", "Cap-des-Rosiers Quebec", "Fassberg AFB Lower Saxony", "Berlin-Tempelhof Berlin", "Aden-Khormaksar 'Adan (<U+0639><U+062F><U+0646>)", "Wadi Halfa Northern (<U+0627><U+0644><U+0634><U+0645><U+0627><U+0644><U+064A><U+0629>)", "Melun-Villaroche Seine-et-Marne", "Kittigazuit Northwest Territories", "Buenos Aires Buenos Aires City", "Sywell Northamptonshire", "Turukhansk Krasnoyarsk Krai", "Mauripur AFB (Karachi) Sindh (<U+0633><U+0646><U+068C> <U+0633><U+0646><U+062F><U+06BE>)", "Port Underwood Marlborough District Council", "Desford Leicestershire", "Roswell New Mexico", "Sydney Nova Scotia", "Rota Island Northern Marianna Islands", "Thruxton Hampshire", "Ellsworth AFB South Dakota", "Batu Melintang Negeri Sembilan", "Liberec Liberec Region (Libereck\u00fd kraj)", "Caribbean Sea All World", "Kinloss Moray (Elginshire)", "Hickam AFB Hawaii", "Ravolzhausen Hesse"], "data": [1, 1, 1, 1, 1, 4, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Country": {"label": ["United States of America", "United Kingdom", "Egypt", "France", "Portugal", "Greece", "Slovakia", "Italy", "Belgium", "Ireland", "Czech Republic", "Mexico", "Germany", "Sudan", "South Africa", "Malaysia", "Tanzania", "Zimbabwe", "Switzerland", "Spain", "World", "Colombia", "Sweden", "Indonesia", "Cuba", "Norway", "Philippines", "Canada", "New Zealand", "Brazil", "Poland", "Iraq", "Australia", "Netherlands", "Denmark", "Pakistan", "Chile", "China", "Turkey", "India", "Morocco", "Hungary"], "data": [209, 113, 4, 31, 2, 4, 1, 4, 5, 1, 2, 2, 6, 3, 1, 1, 1, 1, 9, 14, 1, 3, 7, 6, 2, 4, 3, 28, 2, 4, 1, 5, 4, 4, 1, 1, 2, 2, 1, 1, 3, 1]}, "Region": {"label": ["North America", "Europe", "Africa", "Central America", "Asia", "World", "South America", "Oceania"], "data": [237, 210, 13, 4, 20, 1, 9, 6]}, "Crew on board": {"label": ["2", "0", "3", "6", "4", "9", "16", "5", "1", "7", "8", "12", "10", "13", "11", "20"], "data": [91, 78, 81, 27, 81, 5, 2, 59, 39, 12, 11, 6, 5, 1, 1, 1]}, "Crew fatalities": {"label": ["0", "3", "1", "4", "9", "16", "2", "5", "7", "6", "8", "12", "10", "11"], "data": [241, 50, 37, 46, 6, 3, 60, 20, 7, 16, 6, 4, 3, 1]}, "Pax on board": {"label": ["0", "NA", "5", "3", "4", "1", "2", "12", "8", "6", "7"], "data": [397, 9, 4, 12, 5, 38, 26, 2, 4, 2, 1]}, "PAX fatalities": {"label": ["0", "5", "3", "1", "12", "2", "6", "4"], "data": [460, 2, 5, 18, 2, 9, 1, 3]}, "Other fatalities": {"label": ["0", "5"], "data": [499, 1]}, "Total fatalities": {"label": ["0.0 - 5.3", "5.3 - 10.6", "10.6 - 15.9", "15.9 - 21.2", "21.2 - 26.5", "26.5 - 31.8", "31.8 - 37.1", "37.1 - 42.4", "42.4 - 47.7", "47.7 - 53"], "data": [367, 52, 29, 22, 10, 6, 5, 2, 3, 4]}, "Circumstances": {"label": ["Shortly after takeoff from Kelly AFB, an engine failed. The aircraft passed over few houses, stalled and crashed in a cotton field. A passenger was killed while all other occupants were rescued, some of them injured. The aircraft was written off. The crew was enroute to Davis Monthan carrying the members of a baseball team taking part to a tournament.", "Crashed in unknown circumstances.", "While cruising in poor weather conditions, the aircraft hit the slope of a mountain located in the region of Dalry. All six occupants were killed.", "Few minutes after takeoff from Medell\u00edn-Las Playas Airport, the crew decided to return for an emergency landing. On final, the twin engine aircraft crashed in flames in a field and was destroyed. Both occupants were uninjured.", "On final approach to Dakar-Yoff Airport, the captain decided to go around due to low visibility causes by poor weather conditions. A second and a third attempt to land were aborted few minutes later. During the fourth attempt, while short of fuel, the aircraft landed hard and the undercarriage were sheared off. The aircraft slid on its belly for several yards and came to rest, broken in two. Six passengers were killed while nine other occupants were injured.", "The crew was performing a training sortie from RAF Bovingdon. Enroute, the pilot encountered poor visibility due to foggy conditions and was unable to locate the destination airfield. Eventually, he ordered his crew to bail out and attempted to make a solo approach to RAF Bovingdon. Due to fog, he decided to reduce his altitude in an attempt to establish a visual contact with the ground when the airplane hit tree tops and crashed in Garston, east of the airfield. The pilot was killed while all five other crew members were later rescued.", "On approach to Douglas, the crew encountered poor visibility with mist. The captain decided to divert to RAF Jurby when the aircraft hit a hill, overturned and came to rest upside down. The aircraft was damaged beyond repair and all seven occupants were injured.", "Enroute to Khartoum, the twin engine aircraft crashed in unknown circumstances near Aljammalab, about 100 km southwest of Khartoum. The aircraft was destroyed and all 15 occupants were killed. All of them were pilots flying to UK to take deliver of Spitfire for the SAAF. Crew: Maj Frederick Welgemoed, pilot, Lt Hermanus Gerhardus van Rooyen, copilot, Petrus Andries Burger, flight engineer, Cpl Leslie Donovan Case, wireless operator. Passengers: Maj Andrew Christian Bosman, pilot, Cpt Hendrik Christoffel Weideman Liebenberg, pilot, Lt Ronald Leslie Crisp, pilot, Lt Jacobus Stephanus Gericke, pilot, Lt Robert Cecil Hirst, pilot, Lt Hermanus Johannes Kritzinger, pilot, Lt John Jurie Landman, pilot, Lt Peter David Nelson, pilot, Lt Peter Nicolay, pilot, Lt Norman Peter Prinsloo, pilot.", "\"Some 80 minutes after its departure from Belfast-Aldergrove Airport, the aircraft crashed in unknown circumstances into the Atlantic Ocean, about 150 km northwest of the Irish coast, at approximately 55\u00b000'00.0\"\"N 12\u00b000'00.0\"\"W. All nine crewmen were lost in the crash. It is believed that the crew encountered technical problems with some instruments. Crew (202nd Squadron): S/L D. L. Bisgood", "Crashed into the sea shortly after takeoff from the Kwajalein Atoll Airport. All 16 occupants were killed.", "Enroute, the crew was forced to attempt an emergency landing following an engine failure. The aircraft crash landed 10 km south of Malakal and came to rest. Two passengers were slightly injured while all other occupants were unhurt. The aircraft was damaged beyond repair.", "Enroute from Mys Kosistyy to Khatanga, the pilot was forced to attempt an emergency landing in the Taymyr Peninsula after the left engine failed. The aircraft crash landed in the tundra about 180 km northwest of Volochanka. The aircraft was damaged beyond repair but all 33 occupants survived the accident. Four days later, as the rescue teams were unable to locate the wreckage, the captain and eight passengers decided to leave the crash site to search for help. On May 11, 1947, the wreckage was eventually spotted and the rescuers arrived on site to evacuate the remaining 24 occupants. Unfortunately, no trace of the pilot and the eight other passengers was ever found. Officially registered CCCP-L1204 in the Soviet Register, the aircraft still have the 42-32892 registration on tail. The wreckage was recovered in 2016 and transferred to as delivered to the Museum of Northern development in Krasnoyarsk.", "On final approach to runway 05, while at a height of 10 feet, the DC-3 was hit by a private Vultee BT-13 registered NC55312 and carrying one pilot. Following the collision, both aircraft climbed to a height of 150 feet and then stalled and crashed in a huge explosion. Both aircraft were destroyed and all nine occupants were killed.", "In flight, all crew members decided to bail out and abandoned the aircraft that dove into the ground and crashed in a pasture. The aircraft was destroyed but all occupants were safe.", "While descending to Port Moresby Airport, the twin engine aircraft crashed in unknown circumstances 20 miles east of the city. Both crewmen were rescued while the aircraft was damaged beyond repair.", "Shortly after takeoff from Shanghai-Longhua Airport, while in initial climb, an engine failed. The aircraft stalled and crashed in an industrial area located near the airport. While both pilots were seriously injured, three people on the ground were killed.", "While on a flight from Yellowknife, the pilot was forced to attempt an emergency landing following an engine failure. The aircraft crash landed near Coffey Lake and was written off. All three occupants were rescued.", "While approaching Vancouver from the North, the crew did not realized that his altitude was insufficient due to the low visibility caused by night. The twin engine aircraft hit the east slope of a mountain located near Mt Elsay, some 16 km north of Vancouver. SAR operations were conducted in a large area but eventually suspended few days later as no trace of the aircraft nor the crew was found. Walkers found the wreckage of the aircraft in a remote area on September 27, 1994.", "While approaching Croydon Airport on a flight from Paris-Le Bourget, the twin engine aircraft crashed in unknown circumstances in a field located in Tatsfield, about 7 miles southeast of Croydon. The aircraft was destroyed and both occupants were killed, among them R. A. Milburn, pilot, co-owner and founder of this company.", "Crashed on landing for unknown reasons. All three occupants were rescued and the aircraft was destroyed.", "On final approach, the aircraft was too low and hit a train. On impact, the aircraft stalled and crashed in flames short of runway threshold. All four occupants were injured while the aircraft was destroyed by impact forces and a post crash fire. No one was hurt in the train.", "On final approach to Torino-Mirafiori Airport, the three engine crashed in flames on the Aeritalia hangar located near the airport. Both pilots were killed while three other occupants plus three people in the hangar were injured. Crew: Cpt Giulio Barattolo, pilot, \u2020 Cpt Bruno Gazzi, copilot, \u2020 Mar Pasquale Girometti, Mot Marco Ferrando, mechanic, Sgt Maj Genesio Saccucci, radio operator.", "The aircraft was approaching Newark Airport for landing. The airplane was too far to the right for an approach to runway 06 and the tower controller radioed that he was in line for an approach to runway 28. The approach was then made to runway 28 which is 7,100 feet long with an additional usable 500 feet at the end. The approach was fast, however and contact was not made with the runway until within the last 2,000 feet. The aircraft continued off the runway and ran into a drainage ditch where a fire broke out, which was quickly extinguished. Source: https://aviation-safety.net/database/record.php?id=19470504-0", "Shortly after takeoff, while in initial climb, an engine failed. The aircraft stalled and crashed in flames 5 km from the airport. The aircraft was destroyed and all 11 occupants were killed.", "While cruising at an altitude of 1,300 meters en route to Kramatorsk, Ukraine, the left engine failed. Shortly later, the right engine overheated and lost power. In such situation, the pilot attempted to make an emergency landing when the aircraft crash landed onto a hillside. All five occupants were unhurt while the aircraft was damaged beyond repair.", "On final approach to RAF Drieffield, the crew encountered control problems and informed ground that he was attempting an emergency landing. Few seconds later, the aircraft nosed down and crashed in a huge explosion few hundred yards short of runway threshold. The aircraft was destroyed by impact forces and a post crash fire and both pilots were killed.", "Crashed on landing in unknown circumstances. The aircraft was damaged beyond repair and all four occupants were rescued.", "During initial climb, while at a height of some 300 meters, the twin engine aircraft went out of control and crashed into the sea few hundred yards off shore. Both crew members were killed.", "The crew was conducting a training mission (pilot transition program). While cruising at an altitude of 2,500 feet and completing a turn to the left, the four engine aircraft christened 'Star of Athens' went into a dive and crashed into the Delaware Bay, some 7 miles west off Cape May Pount. The aircraft was destroyed on impact and all four crew members were killed.", "The crew was forced to make an emergency belly landing southeast of Bergstrom AFB, near Austin. There were no casualties but the aircraft was damaged beyond repair.", "Enroute from Cairo to Basra on a cargo flight, the crew encountered an unexpected situation and decided to divert to the H3 Oil Station Airfield for an emergency landing. The four engine aircraft crash landed and came to rest. All four occupants were unhurt while the aircraft was damaged beyond repair.", "Crashed on landing. Occupant fate unknown.", "During the takeoff roll, the three engine aircraft was caught by strong crosswinds, went out of control and veered off runway before coming to rest, broken in two. Both pilots were injured and the aircraft was written off.", "Crashed in flames during takeoff for unknown reason. The aircraft that was carrying mail and few passengers and crew was destroyed by a post crash fire but there were no casualties.", "The twin engine aircraft was returning to Paris-Le Bourget following a cartographic mission. After sunset, while flying at low height, the aircraft hit a tree and crashed in a field in Ch\u00e2tillon-sur-Colmont. All four occupants, two photographs and two pilots, among them Robert Leriche, were killed. The accident occurred in May (the exact date remains unclear).", "On final approach, the visibility was poor due to severe weather and as the aircraft was too low, it hit with its right wing a radio antenna located 2,600 meters short of the runway threshold. The aircraft stalled and crashed in a huge explosion, killing all 22 occupants.", "The DC-3 cargo plane landed on a runway which was 4,200 feet long but the pilot made his approach too fast. Brakes were not used until within 300 feet of the end of the runway. The aircraft continued off the runway, down a rough incline and across a dirt road. It was considered as damaged beyond repair. Source: https://aviation-safety.net/database/record.php?id=19470516-1", "During the takeoff roll, clear for rotation, the pilot lost directional control of the aircraft that overran and came to rest. There were no casualties but the aircraft was written off.", "While cruising in marginal weather conditions, the aircraft hit the slope of Mt Katanglad located about 24 km northwest of Malaybalay. All 18 occupants were killed. At the time of the accident, the visibility was poor due to weather and it appears that Mt Katanglad was showed with an elevation of 7,900 feet on maps while its real altitude was 9,300 feet.", "While approaching the Selfridge Air National Guard Base from the south, the twin engine aircraft crashed in unknown circumstances two miles south of Windsor, Ontario. All six occupants were killed.", "Enroute, the crew encountered an unexpected situation and decided to abandon the aircraft and to bail out. The aircraft dove into the ground and crashed in a mountainous are located 5 miles southeast of Livingston. Both pilots were found unharmed.", "The aircraft lost power during takeoff roll. The captain decided to abandon the takeoff procedure and raised the undercarriage. The aircraft sank on its belly and skidded for several yards before coming to rest. There were no casualties.", "Crashed in unknown circumstances in Santos Dumont Airport.", "On final approach to Wright-Patterson AFB, the aircraft went out of control and crashed in flames in a field located 5 miles short of runway. Five crew members were killed while two others were seriously injured.", "On final approach to Luqa Airport, the four engine aircraft was too low and hit a stone pile located in a stone-pit. The undercarriage were partially sheared off and the aircraft belly landed and came to rest. There were no casualties but the aircraft was damaged beyond repair. For unknown reason, the crew continued the final approach at an insufficient altitude.", "While on a cargo flight from Lae, the crew encountered an unexpected situation and was forced to make an emergency landing. The twin engine aircraft came to rest in a field located near Bulolo and was damaged beyond repair. Both crewmen were unhurt.", "The crew was engaged in a combined exercise with another RNAF Anson registered D-21 and carrying a crew of six as well. After takeoff from the Gilze-Rijen AFB, while in initial climb, both aircraft collided and crashed in a field. They were totally destroyed and all 12 crew members were killed.", "During the takeoff roll, the aircraft skidded and went out of control. The undercarriage collapsed and the airplane came to rest. There were no casualties among the crew of five from the 82nd Squadron.", "The crew was engaged in a combined exercise with another RNAF Anson registered D-22 and carrying a crew of six as well. After takeoff from the Gilze-Rijen AFB, while in initial climb, both aircraft collided and crashed in a field. They were totally destroyed and all 12 crew members were killed.", "The aircraft was performing a flight from Seoul-Kimpo to Tachikawa AFB with several US officers and five civilians on board. While approaching the Tokyo area by night and from the southwest, the crew completed a turn at an altitude of 1,500 meters in marginal weather conditions when the aircraft hit the slope of a mountain located west of the city of Atsugi, about 30 km southwest of Tachikawa AFB. The aircraft was destroyed by impact forces and burned completely. All 41 occupants were killed. At the time of the accident, the visibility was 10 km with cumulus and altostratus between 1,000 and 2,500 meters.", "\"Flight 521 taxied from its parked position, rolled onto Runway 18, and without pause or hesitation accelerated for take-off. The throttles were advanced. Air speed increased to above 90 miles per hour. Captain Baldwin applied back pressure to the control column, but the \"\"feel\"\" of the controls was \"\"heavy", "Enroute from Reykjavik to Akureyri, while flying in marginal weather conditions east of the city of Siglufj\u00f6r\u00f0ur, the aircraft hit the slope of Mt Hestfjall located on the west coast of the H\u00e9\u00f0insfj\u00f6r\u00f0ur Bay. The aircraft was totally destroyed and all 25 occupants were killed. Up to date, worst airplane crash in Iceland History.", "Shortly after takeoff from Fort Wainwright AFB (Ladd Field), while in initial climb, the aircraft stalled and crashed in flames 3 miles east of the airfield. Nine crew members were rescued while three others were killed.", "Crashed in unknown circumstances in a swampy area. Occupant fate remains unknown.", "The four engine aircraft left Newark Airport at 1704LT on a flight to Miami. While climbing to an altitude of 4,000 feet, the aircraft went out of control, dove into the ground and crashed in a huge explosion in a field located 2 miles east of Bainbridge. The aircraft was totally destroyed and all 53 occupants were killed.", "The crew was performing a cargo flight from London-Gatwick to Barcelona. After touchdown, the four engine aircraft was unable to stop within the remaining distance. It overran, lost its undercarriage, went through a fence, slid for several yards and lost its both left engines before coming to rest. All four crew members were unhurt while the aircraft was damaged beyond repair. It is believed that the landing was completed with an excessive speed.", "Just after lift off, while in initial climb, the three engine aircraft stalled and crashed in flames. All three crew members were killed. Crew: Georges Pascaud, pilot, Jean-Louis Coquerel, radio navigator, Pierre Besson, mechanic.", "Crashed while landing on a lake near Ketchikan. Occupant fate remains unknown. It is reported that the crew forgot to raise the landing gear.", "The crew was completing touch and goes at Schofields Airport. On final approach, the airplane failed to land, overshot and eventually crashed in a wooded area past the runway end. The aircraft was destroyed while both pilots were injured.", "On the leg from Nice to Marseille, the crew started the descent to Marignane Airport when the three engine aircraft hit the slope of a mountain located in the Sainte-Beaume Mountain Range, near G\u00e9menos. A crew member was seriously injured while both other occupants were killed. Two days later, the only survivor died from his injuries. Delivered in September 5, 1945, the aircraft entered in service in June 8, 1946 only. Crew: Gabriel Cahouet, pilot, Henri Decoudray, radio navigator, Robert Salles, mechanic.", "Following a wrong approach configuration, the aircraft landed very hard. After being parked on apron, the technician proceeded to a complete inspection which revealed that the fuselage was buckled. The aircraft was declared as damaged beyond economical repair.", "The crew was performing a training sortie when the aircraft went out of control, nosed down, lost several pieces and partially disintegrated in the air before crashing in a field located 6 miles east of RAF Cottesmore. All three crew members were killed.", "While landing on Mistassini Lake, the single engine aircraft went out of control, came to rest upside down and sank. There were no casualties but the aircraft was lost.", "On landing at Mys Kosistyy, near the Khatanga Bay, when had to go around due to strong cross winds. Engines # 3 and 4 flamed out shortly afterwards so the aircraft stalled and crashed in the tundra some 1,500 meters from the runway. While the aircraft was damaged beyond repair, all six occupants escaped unhurt.", "Crashed on landing for unknown reason. There were no casualties.", "On touchdown by night at Natal Airport, the aircraft went out of control, veered off runway, collided with airport facilities and came to rest in flames. Three crew members and two passengers were killed while 13 other occupants were injured. The aircraft was destroyed by fire.", "While on a training sortie in RAF Oakington, the aircraft belly landed and slid for several yards before coming to rest. All four crew members were unhurt while the aircraft was damaged beyond repair.", "Shortly after takeoff from Cirrus Lake, while climbing, the single engine aircraft hit trees and crashed in flames in a wooded area. The pilot was injured and the aircraft was destroyed by fire.", "\"The flight departed Pittsburgh at 1724 and at 1753, 29 minutes later, reported over the Flintstone Intersection, 88 miles southeast of Pittsburgh at 7,000 feet. At 1754 the flight received a message from Washington Airway Traffic Control clearing it to the Herndon Fan Marker to maintain 7,000 feet until further advised The flight was also instructed that there would be an indefinite delay at Herndon but that approach clearance could be expected no later than 1920, which was approximately one hour and 10 minutes later than its estimated time of arrival Immediately after receiving this message the flight was given the 1730 hourly weather sequence report for Washington After acknowledging receipt of the Washington weather report, Flight 410 instructed the company station at Washington to request from Airway Traffic Control a clearance to approach Washington in accordance with contact flight rules on the right side of the west leg of the Arcola radio range This request was approved by Airway Traffic Control and at 1803 the flight received a message clearing it to the Washington tower to cross the Arcola radio range station at or below 2,500 feet and in accordance with contact flight rules. The flight was advised that if this were not possible it was to hold at 2,500 feet and to inform Airway Traffic Control. Prior to establishing its descent the flight was instructed to report when leaving each 1,000-foot level In accordance with these instructions Flight 410 reported leaving the 7,000-foot level at 1805 and two minutes later another report was received from the flight indicating it was leaving 6,000 feet. The flight reported its position as \"\"south of Martinsburg\"\" at 1808 and immediately thereafter reported that it was leaving 5", "Crashed in unknown circumstances in a mountainous area located some 70 km north of \u00d0\u00e0 L<U+1EA1>t. All 12 occupants were killed.", "Shortly after takeoff, while in initial climb, the aircraft stalled and crashed. The passenger and the pilot were injured while the captain was killed. The crew was performing a cargo flight with a load of 604 racing pigeons.", "The flight had originated the previous morning when the plane took off from Davis-Monthan Air Force Base in Tucson, Arizona, for a navigational training mission to the east coast. The plane was scheduled to land at Andrews Field (Later known as Andrews Air Force Base) in Washington, D.C., but due to bad weather was diverted to Pittsburgh Airport where it arrived at 1507LT. After refueling, the aircraft proceeded towards Hanscom Air Force Base in Bedford, Massachusetts, where it was to remain overnight before flying back to Arizona the following day. However, the weather grew worse, and with poor visibility and darkness falling the crew became lost, ending up over Vermont instead of Massachusetts. Shortly after midnight on June 15, the bomber crashed into the southeast side of Hawks Mountain and exploded. All twelve men aboard were killed, and to this day the incident remains the worst aviation accident to ever occur in Vermont. Crew: 1st Lt Robert G. Fessler, pilot, 2nd Lt Wilfred E. Gassett, copilot, 2nd Lt Ceasare P. Fontana, observer, M/Sgt D. D. Jack, crew chief, T/Sgt Paul H. Fetterhoff, T/Sgt Clayton K. Knight, S/Sgt Oliver W. Hartwell, S/Sgt Sylvester S. Machalac, S/Sgt John J. O\u2019Toole, Cpl Harry C. Humphrey, Cpl Robert Clark, Pfc Robert M. Stewart. Source: http://www.newenglandaviationhistory.com/tag/b-29-44-62228/", "Crashed on landing. Crew fate unknown.", "The aircraft lifted off from Leninabad after a takeoff roll of 1,200 meters only. After rotation, while in initial climb at a height of 2-3 meters, the aircraft hit a telephone pole and power cables, stalled and crashed in flames. Three occupants were killed while four others were injured, among them the copilot. The aircraft was partially destroyed by fire. The crew was performing a cargo flight to Alma Ata, carrying a load consisting of apricots and silk.", "For unknown reason, the crew was forced to make an emergency landing on a beach in Cebu City. The aircraft was written off but there were no casualties.", "The twin engine aircraft left Asunci\u00f3n Airport at 1750LT with two officers and two pilots on board. About thirty minutes into the flight, the crew encountered poor weather conditions with thunderstorm activity. The aircraft went out of control and crashed in an uninhabited area located near Quyquyh\u00f3. The pilot was killed and his body was found in the wreckage. However, no trace of the three other occupants was found. It is believed that they may have abandon the aircraft and bail out, but as their bodies were never found, they were considered as deceased.", "\"Flight 121 departed from Karachi at 1537 June 18, 1947, for a return trip to the United States. The climb to the cruising altitude of' 18,500 feet was routine, and the flight was proceeding \u201cdirect\u201d to Istanbul, the first intended point of landing, estimating its arrival there to be 0208 the next day. Five hours after take-off trouble developed in the No. 1 engine, and the No. 1 propeller was feathered. The captain, J H. Hart, decided to continue to Istanbul with the use of three engines, however, it soon became evident that at an altitude of 18,500 feet the airspeed obtainable was not sufficient to provide adequate cooling for the engines. even though climb power was applied. Power was accordingly reduced and altitude was gradually lost. At 17,500 feet the engines still overheated and the descent was continued to 10,000 feet. At 2140, approximately one hour after the failure of engine No 1, the flight advised its company radio in Karachi of the engine trouble, following which it reported its 2200 position. This report placed the aircraft at 14,000 feet, 50 miles east of Baghdad, Iraq, and 90 miles east of the Royal Air Force Field at Habbaniya, Iraq Shortly after this report Habbaniya Tower was advised by the flight that its approximate position was over Baghdad. at an altitude of 10,000 feet, and the flight requested Habbaniya Tower to inform the civilian airfields in their area that the aircraft was proceeding with the use of only three engines to Istanbul Habbaniya Tower replied, stating that no airfields would be open until dawn, and suggested that an emergency landing be made at Habbaniya Flight 121, however, affirmed Its intention to continue, and added that if it were impossible to reach Istanbul, a landing would be made at Damascus, Syria Habbaniya Tower answered, at 2225, that all airfields in the Damascus area were closed until 0400 and again suggested that the flight land at Habbaniya. The flight again stated that It would continue to Istanbul, but that it would turn back to Habbaniya if it experienced any more trouble. Contemporaneous with this communication to Habbaniya Tower the flight sent a message, received in Karachi, and relayed to Damascus, requesting that Damascus Radio be alerted to stand by, and that the airport be opened. At 2308, June 18, Damascus Radio was on the air, and the field was opened as had been re quested. At approximately 2300 the flight reported its position to be 75 miles north west of Habbaniya at 10,000 feet Fifteen to thirty minutes later the purser seated in the passenger cabin noticed that the \"\"fasten seat belt-no smoking\u201d sign had come on", "On final approach to Poshkakagan Lake, the engine failed. The aircraft stalled and crashed on the shore. All four occupants were uninjured while the aircraft was written off.", "An engine failed in flight, forcing the crew to ditch the aircraft into the Karkinyts\u2019ka Gulf, some two km off shore. The aircraft sank fifteen minutes later and the crew of a trawler was able to evacuate 21 wounded people while 8 others, among them two crew members, were killed.", "Crashed in unknown circumstances shortly after takeoff from Grey Trout Lake, Ontario. All occupants survived while the aircraft owned by J. A. Mathieu was damaged beyond repair.", "The twin engine aircraft left Cali at 0827LT on a routine flight to Bogot\u00e1-Techo Airport. Some 45 minutes into the flight, the crew encountered icing conditions and the aircraft went out of control and crashed in a mountainous area located near the village of Roncesvalles, about 50 km southwest of Ibagu\u00e9. All eight occupants were killed.", "Shortly after takeoff from Kwagama Lake, while in initial climb, the single engine aircraft encountered downdraft, stalled and crashed into the lake. Both occupants were rescued while the aircraft sank and was lost.", "Crashed on landing. There were no casualties.", "While flying in marginal weather conditions, the twin engine aircraft hit the slope of Mt Makiling (1,090 meters high) located southeast of Calamba. The wreckage was founded three days later about 50 meters below the summit. All six occupants were killed.", "Crashed in unknown circumstances in Calcutta. The operator SATI may be Soci\u00e9t\u00e9 d'Avions Taxis d'Indochine.", "While approaching the Irish coast, the left engine failed. The crew was unable to maintain the assigned altitude so the captain decided to ditch the aircraft near the South Rock Lighthouse, about 3 km from Coughley (Coghly). The aircraft hit the water surface with the base of its tail, overturned and came to rest upside down. Both crewmen escaped uninjured and found refuge on one wing. They were eventually rescued by the crew of a vessel two hours later. The aircraft was lost.", "Enroute, the right engine failed and caught fire. The captain reduced his altitude and attempted an emergency landing in a swampy area located near Isiolo. The aircraft crash landed and was damaged beyond repair while all 15 occupants were able to evacuate safely. Crew from the 216th Squadron.", "On final approach, the aircraft was too low and hit the ground short of runway, lost its undercarriage and came to rest. There were no casualties but the aircraft was written off.", "One minute after takeoff, while in initial climb at a height of some 50 meters, the aircraft banked left to an angle of 30\u00b0, lost speed and altitude, then hit tree tops and crashed in a wooded area located 3 km from the airport. Four crew members were killed while a fifth crew and the passenger were seriously injured.", "While performing a cargo flight from Guayaquil to San Jos\u00e9, the aircraft failed to arrive in Costa Rica. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor the crew was found. It is possible the aircraft crashed into the Pacific Ocean off the Costa Rican coast.", "While cruising in marginal weather conditions, the three engine aircraft hit the slope of a mountain near Es\u00e9ka. All thirteen occupants were killed. Crew: Louis Coupvent, pilot, Robert Ferrisse, radio navigator, Frank Malaret, mechanic.", "While performing a solo training mission at Oran-Tafraoui Airfield (called BAN Lartigue in the 40's), the pilot lost control of the aircraft that crashed in Ouardia, about 2 km from the airport. The pilot Robert Georges Gosselin was killed.", "Crashed on final approach to Newtownards Airfield. The aircraft was damaged beyond repair and both crewmen were injured.", "Enroute, the twin engine aircraft went out of control and crashed into The Channel, about 24 km southwest of Isle of Wight. Both crew members were killed.", "The four engine aircraft left Hamilton, Bermuda, bound for Morrison AFB located in Palm Beach, Florida. While cruising about 294 miles northeast of the Florida coast, the crew encountered severe weather conditions with thunderstorm activity and turbulence. The aircraft went out of control and crashed into the sea. Some debris were found but no trace of the six occupants that were considered as deceased.", "The crew was engaged in an anti-submarine attack simulation of the HMS Sentinal. While cruising at low height, the seaplane hit the water surface, exploded and crashed about 32 km north of the Inishtrahull Island, off Donegal County. Five crew members were rescued while seven others were killed. For unknown reason, the pilot was flying at a too low altitude to complete the exercise. Crew from the 201st Squadron.", "While flying in a valley in marginal weather conditions, the twin engine aircraft hit tree tops and crashed in a wooded area located on Mt Meenard. Four crew members were injured while a pilot was killed.", "While approaching Bizerta Airport from the east, the twin engine aircraft crashed in unknown circumstances into the Mediterranean Sea, few km off shore. Both occupants were quickly rescued while the aircraft sank and was lost.", "Shortly after takeoff from Campo de Marte Airbase, while in initial climb, the twin engine aircraft went out of control and crashed. All occupants escaped injured while two people on the ground were killed.", "An engine failed enroute, forcing the crew to attempt an emergency landing. The aircraft crash landed in a field in Oberr\u00f6blingen. There were no casualties but the aircraft was damaged beyond repair.", "At 0134LT, the flight departed Augusta bound for Miami. The last communication from the crew was at 0303LT, the morning of July 13, at which time they reported to the Jacksonville Airway radio that they were at 2,000 feet. One and one-half hours later, the aircraft was observed approximately 2 1/2 miles west of Melbourne, Florida, flying southeast at an altitude of from 300 to 500 feet. The engines were heard to sputter and misfire as the aircraft proceeded ahead on a straight course. Altitude was gradually lost, the landing lights were turned on, and seconds later the aircraft struck the ground and crashed 4 miles southwest of Melbourne. Both pilots and twelve passengers were killed while all other occupants were injured, some of them seriously.", "Forced landing in trees in rugged terrain near the head of the Wampit River. Captain Ross K. Crabbe was en route from Lae to Wau with cases of supplies and two Australian passengers. Became trapped in a narrowing valley with low cloud base, deliberately put the aircraft into the spreading top branches of a tree. Crabb was hurled out of the cockpit through the nose and down to a ravine 36 meters below, injuring his back. The Dragon remained wedged in the top of the tree and his calls to the passengers were unanswered. A group of native hunters heard the crash and reported it to a nearby Government station. Two medical assistants were led to the scene, climbed the tree in the dark and administered morphine to the injured passengers and stayed with them for the night. The aircraft fabric was tearing as it moved and settled in the tree. Next day a team with a doctor arrived and the passengers were lowered in baskets. One seriously injured passenger was flown to Sydney by QEA DC-3 for plastic surgery for facial injuries. Source and photo: http://www.goodall.com.au/australian-aviation/dh84-pt2/dh84-dragon-pt2.htm", "The crew was performing a training flight from V\u00e4ster\u00e5s to G\u00f6teborg. On approach to Torslanda Airport from the northwest, the single engine aircraft went out of control, crashed into the sea off Tumlehed and came to rest upside down. Both occupants were rescued while the aircraft was damaged beyond repair.", "The crew (pilots and engineers) was involved in a ground test of the brakes systems. During taxiing, while practicing fast stop, the nose gear collapsed and punctured the cockpit floor. There were no injuries but the aircraft was written off.", "On touchdown, the three engine aircraft skidded and then went out of control. It veered off runway and came to rest in flames in a field. A passenger was killed.", "Crashed in unknown circumstances. Crew fate remains unknown.", "Enroute from Cairo to Basra, the crew was informed by ATC about poor weather in Basra and was instructed to divert to the Shaibah AFB located east of Basra. On approach by night, the pilot was unable to locate the runway and was forced to abandon the landing procedure for a go around. A second attempt to land and a third approach few minutes later were abandoned as well. During the fourth trial, the captain reduced his altitude in an attempt to establish a visual contact with the ground when the four engine aircraft hit the ground and bounced. It gain few meters, flew over a wooded area and eventually stalled and crashed 740 yards further, in a desert area. All six crew members were killed while 12 passengers were injured.", "Crashed somewhere in Ecuador. Occupant fate remains unknown.", "The pilot Sadettin Toker was killed when his Baltimore crashed in unknown circumstances near the Diyarbakir Airport while performing a training sortie.", "Crashed on takeoff from Croydon Airport for unknown reason. Both crew members were injured and the aircraft was written off.", "During the takeoff roll, the captain elected to rotate but the aircraft failed to respond. The crew attempted to make an emergency braking procedure but the aircraft failed to stop within the remaining runway, overran, hit several people who came to the airport to assist to the departure of the aircraft, crossed a road and came to rest in flames. Fourteen occupants plus three people on the ground were killed. Five other occupants plus eight people on the ground were seriously injured. The aircraft was destroyed by fire. The crew was on a flight to the nearby airbase of Mor\u00f3n to take part to the commemoration of the death of the Argentinian General Jos\u00e9 de San Martin in 1850. About 200 aircraft from the Argentinian Air Force were taking part to this event.", "Crashed while performing a training sortie in Eskisehir AFB. Both crew members were killed.", "On final approach to Whidbey Island-Ault Field NAS, the aircraft was too low, hit tree tops and crashed in flames. All five crew members were killed.", "The crew consisting of pilots and engineers was completing a test flight in Mor\u00f3n AFB following engine maintenance. After touchdown, the aircraft collided with a tank-truck that was mistakenly on the runway. The truck and the airplane exploded. Two crew members and the truck driver were killed while four other occupants were injured.", "After landing, the four engine aircraft encountered brakes problem and was unable to stop within the remaining distance. It overran and came across a river 250 yards further on. All 24 occupants were evacuated safely, four of them were slightly injured. The aircraft was written off.", "Crashed in unknown circumstances into the Rio Capibaribe in Recife. All six crew members were killed.", "The crew was performing a humanitarian flight from Singapore on behalf of the Indonesian Red Cross with drugs on board. On final approach to Yogyakarta-Maguwo Airport, the Dakota was shot down by the pilots of two NEIAF (Netherlands East Indies Air Force) fighters and crashed in an open field located few km from the airport. All five occupants were killed. Indonesian authorities confirmed that the aircraft was flying under civilian color scheme but did not have any Red Cross painted on its fuselage. So it is most probable that the fighters' pilots mistook the aircraft and thought it was a military plane carrying soldiers. Both pilots were Australian citizens as all three passengers were high ranking Indonesian Army Officers. Still registered in India, the aircraft was offered few days ago to the Indonesian government by Jawaharlal Nehru, future Indian Prime Minister. Following this tragedy, Indonesian Authorities will rename the airport of Yogyakarta that became Adisutjipto instead of Maguwo. Crew: A. N. Constantine, pilot, R. Hazlehurst, copilot, B. Ram, flight engineer, A. Q. Wirjokoesoemo, radio navigator. Passengers: Agustinus Adisutjipto, Abdulrahman Saleh, Adisumarmo Wirjokusumo.", "While on a flight from Urumqi to Lanzhou, the aircraft crashed in a mountainous area located in the region of Wuwei. The wreckage was found few days later and all 26 occupants were killed, among them one US and one British citizen.", "During the takeoff roll, the aircraft went out of control, veered off runway and came to rest. All five crew members were unhurt while the aircraft christened 'Port of Marseilles' was damaged beyond repair.", "The twin engine aircraft left McChord AFB at 0212LT bound for Hamilton AFB located in Novato, California. About fifteen minutes into the flight, the left engine caught fire and smoke spread into the cabin. Two crew members bailed out when the left wing broke off. Out of control, the aircraft dove into the ground and crashed in a pasture located 15 miles east of Kelso. Both crew who bailed out were able to walk away and to find help while both pilots were killed in the crash.", "After passing over Mendoza, enroute to Santiago de Chile, the crew encountered poor weather conditions with strong winds (up to 180 km/h) and heavy snow falls. While cruising at an altitude of 15,000 feet, the four engine aircraft christened 'Star Dust' hit the slope of Mt Tupungaro located in the Argentinian Andes. As the airplane failed to arrive, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor the crew was found. About 53 years later, in 2000, an official mission conducted by Argentinian Army Officers and Scientists was organized to find the aircraft. Few debris and three bodies were found and repatriated down to the valley.", "While cruising in marginal weather conditions, the twin engine aircraft christened 'Pedro de Valdivia' hit the slope of Mt Coloso located in the region of Antofagasta. All three occupants were killed. Crew: Roberto Reed Merino, pilot, Enrique \u00c1lmos Ojeda, copilot.", "Shortly after takeoff from Ponta Delgada Airport, while in initial climb, the twin engine aircraft went out of control and crashed into the sea few km off shore. Few debris were found on water surface but all six occupants were killed.", "The crew was engaged in a local training flight in Moscow. While flying at an altitude of 400-450 meters, the crew initiated an engine failure when the aircraft lost speed while performing a steep turn to the left. The aircraft went upside down and crashed in Naberezhnaya, in the suburb of Moscow. All five occupants were killed. It was reported that both passengers were illegal.", "While landing in the Svolv\u00e6r Bay, the seaplane went out of control and plunged into the water before coming to rest. There were no casualties among the 12 occupants while the aircraft was damaged beyond repair.", "The aircraft and its crew were dispatched from Baku-Zabrat Airport to the south (125 km south of Baku) to complete a night training program. While approaching Banke Airstrip, at a height of 100 meters, the pilot in command made a turn to the left when the aircraft stalled and crashed. Four crew members were killed while two others were seriously injured.", "Crashed shortly after takeoff from Barra Airport, Barra Island. The aircraft was written off and all seven occupants were rescued.", "The aircraft was on its way from Kodiak to Unalaska, carrying a crew of five and fifteen members of a Navy football team. While cruising some 250 km from the destination, the crew informed ground he encountered strong head winds. Shortly later, the seaplane crashed in unknown circumstances into the sea. All 20 occupants were killed.", "The aircraft took off on runway 13 of La Guardia Airport at 1843LT, having been cleared on an instrument flight plan to Rochester, New York, with Toronto, Ontario, as an alternate. Approximately 2 minutes after take-off the flight called La Guardia Tower and reported that it was in the vicinity of the south end of Whitestone Bridge, approximately 2 1/2 miles northeast of La Guardia Airport. The flight advised that the oil pressure was low on one engine, and requested clearance to land on runway 22. The request was approved, and the tower informed the crew that the wind was calm. When asked if emergency equipment was desired to stand by, the flight replied in the negative. Shortly thereafter, NX88787 reported that it was on the final approach, and that it was over the sand barges, located approximately one-half mile off the approach end of runway 22. In reply the flight was again given clearance to land. The aircraft was first seen at an altitude of approximately 800 feet, and about 1,300 feet off the approach end of runway 22 with the landing gear extended. The flaps were lowered, and the aircraft started a steep descent to runway 22,but it passed over the approach end of the runway at an altitude of approximately 300 feet. The flight then requested and was granted permission by the tower to make a right turn, however, the aircraft continued straight ahead over the runway, gradually losing altitude. When one-third of the way down the runway, the right propeller was feathered. When over the intersection of runways 22 and 18 and at an altitude of 200 feet the flaps were raised, which resulted in an additional loss of altitude. During or directly after raising the flaps, a right turn was initiated, and the landing gear was observed to retract slowly. Competent witnesses stated that the right turn was made at a very slow speed, at a high angle of attack, and at an altitude appearing never to have exceeded 200 feet. Over Bowery Bay the aircraft on two occasions almost settled into the water. When in a flat right turn toward runway 13 it lost altitude to about 50 feet. Approximately 2,000 feet from the end of the runway, the landing gear started to extend, and became fully extended when the aircraft was aligned with runway 13. At this time the airplane attitude appeared to be that of a steep climb. The wings were seen to wobble slightly, then the left wing and nose dropped, and the airplane struck the water at an angle of approximately 20 degrees. The forward movement of the aircraft continued on the surface of the water for 40 to 50 feet, throwing up a great spray as the tail rose to a vertical position, after which the aircraft continued over on its back and sank in about 5 minutes.", "The crew was completing a cargo flight from Sydney-Mascot. On touchdown in Kempsey, the undercarriage collapsed. The aircraft skidded on runway, came to rest and was damaged beyond repair. Both pilots were unarmed.", "On approach to Malm\u00f6-Bulltofta Airport, the aircraft was too high on the glide. Instead of making a go around, the captain decided to nose down, increase engine power and landed at high speed. Unable to stop within the remaining distance, the aircraft overran and hit an embankment before coming to rest. The aircraft was destroyed, a crew member was killed while four others were seriously injured.", "Ready for departure, the single engine aircraft was taxiing on a lake located in eastern Quebec, about 160 km south of Goose Bay, when it collided with an unknown obstacle and sank. Both occupants were unhurt.", "The crew was completing a training sortie from Rio de Janeiro-Gale\u00e3o Airport. While flying at low altitude in marginal weather conditions, the twin engine aircraft hit tree tops and crashed in a huge explosion in a wooded area located near Pendotiba, east of Rio de Janeiro. All seven crew members were killed.", "The four engine aircraft was completing a flight from Buenos Aires to Rio de Janeiro, carrying an Argentinian delegation to the Inter-American Conference in Rio de Janeiro. Due to poor visibility caused by thick fog, the crew failed to establish a visual contact with the airport of Rio and continued to the northeast. Eventually, the captain elected to make an emergency landing, maybe due to fuel shortage. The aircraft crash landed on a beach located in Itapemirim, about 330 km northeast of Rio. The aircraft was written off while all occupants were unhurt.", "Six minutes after takeoff from Orl\u00e9ans-Bricy Airbase, while in initial climb, the three engine aircraft went out of control and crashed in flames in a wooded area located 2 km north of Cercottes. All eight crew members were killed. Crew (Escadron de Transport 3/61 Poitou): Lt Andr\u00e9 Brisset, Lt Yves Fouques, Lt Bernard Couturier, Lt Charles Nguyen Than, Lt Pierre Bourdet, Lt Lucien Turina, Lt C\u00e9sar Serbassi, Sgt Charles Guinet.", "Crashed on final approach to Bucharest-Baneasa Airport. Three passengers were killed while five other occupants were injured.", "Crashed in a garden in New Germany while on approach to Wright-Patterson AFB. All four crew members were injured and the aircraft was written off.", "Crashed on takeoff when all four engines failed simultaneously. All five crew members were injured and the aircraft was written off.", "While landing by night off Montevideo, the seaplane crashed, overturned and sank. Four crew members were killed while both passengers and a fifth crewman were injured. The aircraft was lost. Source: http://1000aircraftphotos.com/Contributions/HornDavid/9343.htm", "While approaching the Hawaiian coast of Oahu Island on a flight from Tokyo, the crew encountered a fuel exhaustion and was forced to ditch the aircraft about 60 miles west of Hickam Field where it should land. Ten people were rescued while three others were killed, among them George Acheson, personal advisor of General McArthur and President of the Allied Council in Japan.", "While cruising by night in good weather conditions, a short-circuit on the electrical system caused the failure of several instruments. As the crew decided to fly without a navigator (which was considered against RAF procedures), the captain decided to reduce his altitude in an attempt to make an emergency landing. The aircraft belly landed in a prairie, skidded for several yards and eventually came to rest with its left engine in flames. Both crewmen were able to leave the aircraft that was destroyed by fire.", "\"After takeoff from Lae-Nadzab Airport, while climbing vertical to the Huon Gulf, the right engine failed, followed shortly later by the left engine. The pilot reduced his altitude and ditched the aircraft off Lae. All three occupants were quickly rescued by a fisherman while the aircraft was lost. Testimony from the passenger: \"\"I had the day off and Johnny Rose was doing a trip to Kokoda and Popondetta. I'd never been there and when he offered me a seat I jumped at it. He had another passenger on board", "While flying at an altitude of 10,000 feet in marginal weather conditions, the aircraft hit the slope of Mt Blue Bell Knoll located north of Boulder, Utah. The aircraft was destroyed by impact forces and all three occupants were killed.", "The approach to Bahrain was completed by night and the crew landed in the Marine Base at an indicated speed of 85 to 90 knots. Upon landing, the seaplane had a tendency to nose down so the captain counteracted with the control column and increased power simultaneously. The aircraft bounced, left water for about one to two seconds and then veered sharply to the left. Out of control, it plunged into water and came to rest. Three crew members and seven passengers were killed.", "Shortly after takeoff from Woodford Airport, while climbing to a height of some 60-80 feet, the four engine aircraft banked right, stalled and crashed in a wooded area. Four occupants were killed while two others were rescued. Crew: Bill Thorn, pilot, \u2020 David Wilson, copilot, \u2020 John Webster, flight engineer and radio operator, \u2020 Roy Chadwick, technician and designer, \u2020 Eddie Talbot, flight engineer, Stuart Davies, chief designer.", "While preparing for landing in Allen Lake, the single engine aircraft was caught by strong winds, landed hard, overturned and came to rest. The aircraft was lost and all five occupants were rescued.", "While cruising at an altitude of 13,000 feet in poor weather conditions, the four engine seaplane hit the slope of a mountain located 31 km northeast of Harstad. The wreckage was found in a rocky are some 290 meters from the summit and all 35 occupants were killed. It is believed that the aircraft was slightly off course at the time of the accident. Crew: John Buer, pilot, Karl Bengtsen, copilot, Johannes Daae Risnes, navigator, Paul Idland, radio operator, Gunnar Michaelsen, mechanic, Atle Fedje, steward, Ester Mildrid L\u00f8snes, stewardess.", "Crashed on landing. No casualties.", "The crew was completing a training sortie and while cruising at low height with an engine inoperative, the aircraft went out of control, dove into the ground and crashed in a huge explosion in a field located in Westgate-on-Sea. Both pilots were killed.", "Crashed on landing and broke in two. There were no casualties.", "Crashed in unknown circumstances. Occupant fate unknown.", "Hit a mountain near El Hajeb, killing at least one occupant.", "On approach to Eaton Bray aerodrome, the single engine aircraft stalled and crashed in flames. Both occupants, among them the pilot and owner Joan Nayler, were quickly rescued and uninjured. The aircraft was destroyed by fire. Source & photos: http://www.onthewire.co.uk/bray4.htm", "The crew was completing a training sortie in RAF Dishforth. Upon landing, while decelerating, the engine number two caught fire. The captain applied full brakes and stopped the aircraft. All five crew members were able to leave the cabin before the aircraft was destroyed by fire.", "Shortly after takeoff, while in initial climb, an engine failed. The captain decided to make an emergency landing and the aircraft crash landed in a field located 3 km from the airport. All 11 occupants escaped with minor injuries while the aircraft was damaged beyond repair.", "The crew consisting of eight pilots was completing a training exercise in Athens-Hassani Airport. On final approach, the aircraft encountered downdraft, lost height and crashed on a beach located in Voula, south of the airport. The three pilots that were seating in the cockpit were killed as the cockpit crashed on rocks. Five others occupants were seriously injured.", "While approaching Bermuda on a flight from London to Havana, the crew was instructed by ATC to stack due to poor weather conditions (thunderstorm). After 90 minutes, the crew was cleared to land at Hamilton-Kindley Field and started the approach that was completed in marginal weather conditions and poor visibility. Too low, the four engine aircraft christened 'Star Trail' hit a radio mast, stalled and crashed few hundred yards short of runway. All 20 occupants were rescued while the aircraft was written off.", "Crashed on landing for unknown reason. There were no casualties but the aircraft was written off.", "The airplane was on a delivery flight from Moscow to Leningrad-Koltushi Airport and has to be transferred from the Soviet Air Force to the Russian Hydro and Meteo Services (Gidrometeosluzhba). Shortly after takeoff, while climbing, the left engine caught fire. The pilot in command elected to make an emergency landing but smoke spread in the cockpit and the crew lost control of the aircraft that crashed in Klyazma. Three crew members, one passenger and one person on the ground were killed while three others were injured (one crew, one passenger and one person on the ground). The aircraft was destroyed.", "The crew departed Cazaux AFB bound to the south. Enroute, the right engine failed. The captain reduced his altitude and completed an emergency landing on a beach located in Saint-Girons. All three crew members were unhurt and with locals, were able to bring the aircraft out of water. Unfortunately, three hours later, the airplane was stuck by tide and written off. The accident occurred in September 1947 (exact date remains unknown).", "Just before reaching Las Vegas, however, a distance of 268 miles from Burbank, Captain Clark stated that his fuel quantity gauges indicated that he had 360 gallons of fuel remaining. Since he believed this to be sufficient to reach destination, he did not land at Las Vegas which was generally used as a fueling stop for Slick Airways. From Las Vegas to Palmdale, lighter winds were encountered resulting in a ground speed averaging 180 miles per hour. Palmdale was flown over at 1025, at which time the aircraft had been in the air a total of 5 hours and 18 minutes. Three minutes after passing over Palmdale, which was clear, the left engine fuel pressure dropped to 3 pounds, the red fuel warning light came on, and the left engine stopped. Fuel selector valves were changed, and as a result power was restored to the left engine. Captain Clark suspected a fuel leak. He inspected the aircraft for visible loss of fuel or fire, found none, and continued on to Burbank. As the flight approached Newhall California, Burbank reported a ceiling of 1,600 feet with visibility of two and one-half miles. The flight was instructed by the Los Angeles Airways Traffic Control Center to hold on the northwest course of the Burbank range, and advised that the approach clearance Into Burbank could be expected at approximately 1052. Captain Clerk informed the Burbank control tower that he was losing fuel and wanted to land as soon as possible, however, he declined to declare an emergency. Shortly after this, the left engine stopped for the second time, but power was again restored by changing the positions of the fuel selector valves. At 1056, approach clearance into Burbank was given, and at 1058, the flight reported inbound over the Chatsworth fan marker, approximately 14 miles from the Lockheed Air Terminal. The ceiling over Burbank had by this time lowered to 1,000 feet, and rain showers had reduced visibility to about one mile. As the flight descended below 1,600 feet only intermittent bursts of power could be secured from the left engine. The \u201cletdown\u201d was continued, the Burbank radio range station and the Lockheed Air Terminal were passed. Upon completion of a right turn to return to the range station the right engine stopped, and the propeller was immediately feathered. At an altitude of 200 to 400 feet, Captain Clark recognized almost immediately underneath him a hangar on the Lockheed Air Terminal. He executed a sharp right turn of approximately 270 degrees, and landed on the north-south taxi way about 400 feet before crossing Runway 7, a distance of approximately 1,900 feet from the south boundary of the airport. Brakes were applied, but the aircraft could not be brought to a stop within the airport boundaries. It came to rest only after skidding across a highway and railroad line adjacent to the south boundary of the airport.", "Crashed in unknown circumstances in Farsala, killing all six occupants, two crew members, a captain and three soldiers.", "Crashed on landing for unknown reason. Both crew members were slightly injured while the aircraft was written off.", "Crashed shortly after takeoff from Tunis while on a delivery flight to Antananarivo. The aircraft was destroyed and both crew members were injured. The airplane christened 'Tamatave' was on its way from Croydon to Antananarivo to be delivered to Air Madagascar.", "Enroute to Lima, it is believed that an engine caught fire. Most probably, the crew decided to divert to the Marcona Naval Station but the aircraft went out of control and crashed in a desert area located near San Juan de Marcona. The aircraft was destroyed by impact forces and a post crash fire and all 14 occupants were killed.", "\"Pan American's Flight 131 departed from Bermuda at 1358, September 20, 1947, with 36 passengers and a crew of 5. The take-off and climb to the cruising altitude of 8,000 feet were normal, and the flight proceeded on course to La Guardia Field, New York, for a period of 3 hours without incident Between 1650 and 1655, about 225 statute miles from destination, Warren Robinson, the first officer, noticed a fluctuation in fuel pressure for engines 1 and 2 Seconds later, the left auxiliary fuel tank quantity gauge dropped to zero, the fuel pressure warning light flashed on, and the No 1 engine faltered To insure a positive fuel supply for all engines Mr Robinson immediately turned the fuel selector valves for all engines to their respective main tanks, 2 following which all engines operated normally. Mr Robinson then transferred fuel from the right auxiliary tank to the left auxiliary tank so that they would contain equal amounts, which was 40 gallons each according to the fuel quantity gauges after completion of the operation A few minutes later Mr Robinson noticed that the right auxiliary fuel gauge indicated not 40 gallons, but 100, and that it was visibly increasing even though no fuel was at that time being transferred The No. 3 main fuel tank gauge then dropped to zero, and the fuel pressure for the No 4 engine started to fluctuate. Alarmed by what now appeared to be a serious malfunction in the right side of the fuel system, Mr Robinson operated all engines from the left main tanks (1 and 2), turning on all the cross feed valves, and the booster pumps for main tanks 1 and 2. The flight had by this time reached position \"\"Baker", "On start-up, the right engine caught fire. Both occupants were able to leave the aircraft that was partially destroyed by fire.", "The crew was completing a night training sortie from RAF Hemswell, Lincolnshire. While cruising northwest of Great Yarmouth, the crew encountered very poor weather conditions with thunderstorm activity and heavy turbulence. The aircraft went out of control, dove into the ground and crashed in a field located in Mautby. All nine crew members were killed. Crew (97th Squadron): F/Lt Stanley Frederick Whitlock, pilot, F/Lt Jack Anthony Guest, pilot, F/Lt John George Cook, navigator, F/Lt Ronald Vernon Havard, navigator and bomb aimer, Albert Wattleworth, signaler, Vincent Orville Woods, air gunner, William Allison, flight engineer, Roy Andrew Trundle, air gunner, LAC Denis Frederick Cummings.", "Crashed on landing in New Delhi-Palam Airport, killing all 5 crew members. The fifteen passengers were injured.", "The crew was performing a cargo flight from Aden-Khormaksar Airport. Enroute, the airplane went out of control, went into a dive by an angle of 30\u00b0 and finally crashed into the Gulf of Aden, about 352 km east of Aden. Few debris were found but no trace of the ten occupants who were considered as deceased. The aircraft sank in relatively deep. It is believed that an engine failed in flight and that the crew mistakenly shot down the wrong engine. It is possible that the engine failure was caused by a lack of electric power due to the failure of a battery. Also, it appears that the cargo loading was completed against the published procedures and that the CofG was affected, which may contribute to the loss of control.", "The takeoff was attempted in poor weather conditions. During takeoff roll started in visual reference, the visibility was insufficient and the captain decided to swap to instrument references. Control was lost and the airplane skidded and then swerved before coming to rest in the Cromlin river. All three crew members were injured while the aircraft was damaged beyond repair.", "After takeoff from Ambavalao Airport, while on a reconnaissance mission, the crew was forced to circle vertical to the city to gain sufficient height to clear the mountain. After passing the first mountainous terrain, the twin engine aircraft hit a rocky ridge and crashed. A crew member was seriously injured while six other occupants were killed. Crew: Sgt Anizet, Lt Col Pierre Lequesne, \u2020 Cpt Guillot, \u2020 S/Lt de Tournadre, \u2020 Adj Gourcerol, \u2020 Sgt Allard, \u2020 Sgt Katsia. \u2020", "During the takeoff roll, it appears that an undercarriage failed. The aircraft skidded, overran, lost its landing gear and came to rest with the engine number one on fire. All occupants were evacuated safely while the aircraft was damaged beyond repair.", "The aircraft was involved in a supply mission and was carrying paratroopers. While cruising at low height, the aircraft was hit by enemy fire and crashed in a wooded area located near Cao B<U+1EB1>ng. Adjutant Commercon was the only survivor while 15 other occupants were killed, among them Commander Lambert, Deputy Chief of Staff of the French troops in Indochina", "Crashed in unknown circumstances in a mountainous and uninhabited area located some 60 km southwest of Borja, Peru. The wreckage was found ten days later and all five occupants were killed, among them Colonel John R. Hawkins, Chief of the USAF in Peru.", "Take-off from Foynes was accomplished at 1540, the afternoon of October 13th. The flight climbed to its cruising altitude of 8,000 feet, proceeded on course for five hours and 50 minutes over the tops of clouds, and then, at 2130, instrument weather conditions were encountered. Since celestial navigation was no longer possible, Mr. Thompson, the only qualified celestial navigator aboard, retired. Before he had retired, however, he informed Captain Martin that the estimated time of arrival over the United States Coast Guard weather ship, Bibb, located on course and approximately 961 miles west of Foynes, was 0200. This was 45 minutes later than was originally estimated. Icing conditions were encountered shortly after midnight. At 0134, October 14th, the flight requested and was granted permission from the Moncton Ocean Air Traffic Control to descend to 6,000 feet. About this time the flight received from tie Gander radio station a weather forecast which included wind information at the original cruising altitude of 8,000 feet. According to the data received, the average headwind component had d velocity of 12 knots greater than that which was used in the computation of the flight plan. No further icing conditions were encountered at 6,000 feet, but instrument weather continued. The flight proceeded without the benefit of any navigational fix until 0205 when a radar fix from the Bibb placed the aircraft 68 miles from the vessel on a bearing of 80 degrees. At this time the flight had flown approximately 892 miles from Foynes, was slightly over half way to Gander, and had used 10 hours and 25 minutes of the estimated 22 fuel hours carried at the time of take off. They informed the Bibb that their estimated arrival time at Gander was 0930, which was 32 minutes later than was originally estimated. The crew anticipated no possibility of fuel exhaustion, and one hour and 11 minutes remained before they were to reach the point-of-no-return as computed in their flight plan. The Bibb reported the wind at its location at 6,000 feet to be 40 to 45 knots from the west. a headwind component of about 17 knots greater than that used in the flight plan. The captain estimated at 0232 that they were on course and 13 to 20 miles south of the Bibb. This was one hour and 17 minutes later than the original estimate and 32 minutes later than the amended estimate. Altitude was reduced to 4,000 feet after approval had been given by Moncton Ocean Air Traffic Control, and shortly thereafter, at 0327, eleven minutes after the flight passed its point-of-no-return, another weather forecast was received from Gander which showed the average headwind for the remainder of the route to be from 250 to 260 degrees at 38 knots, a headwind component 12 knots greater than that received in Shannon. Still no difficulty was anticipated, nor was the navigator consulted at this time. By 0500 clear weather was encountered. The navigator was then awakened in order that he might fix the aircraft's position by celestial observation, and according to the fixes that were plotted, headwinds in excess of 60 knots had existed en route, the average ground speed being only 59 knots. The crew immediately be came concerned as to whether or not the fuel remaining was sufficient. Approximately 550 miles remained to destination Captain Martin and First Officer Thompson believed that it was impossible to accomplish the remaining portion of the flight with the fuel remaining, so decided to return to the Bibb where rescue facilities would be immediately available. However, the flight continued westward and a position report was made to Gander at 0600. The turn around was actually made at 0758, at which time the aircraft was still 60 miles east of the previously reported 0600 position and approximately 460 miles east of Gander and 300 miles west of the Bibb Gander was advised of the decision, and at 0840 was Informed that the flight had two hours and 45 minutes of fuel remaining. The aircraft's position was reported at 0914 to be 100 miles west of the Bibb. The flight arrived over the Bibb at 0940, made four low passes, and then landed. All passengers had been fitted with life jackets and had been provided with seats and safety belts. Though the aircraft encountered waves six to eight feet high, no injury to any person or damage to the aircraft occurred. However, in taxying toward the Bibb the aircraft and Bibb drifted together with substantial damage to the aircraft. Rescue operations were slow and hazardous because of high seas, out by the next day all of the passengers and crew had been successfully transferred to the Bibb.", "While flying along the Spanish coast, the radio operator informed ground by radio: 'one engine stopped, are forced to ditch the aircraft'. Shortly later, the aircraft crashed into the sea some 25 km southeast off Cabo de Palos. The first rescuers arrived on site 24 hours later and were able to evacuate two survivors, the mechanic and a passenger. All 42 other occupants were killed. Crew: Mr. Galindo, pilot, Mr. Remy, mechanic, Mr. Chase, mechanic, Mr. Chanel, radio navigator, Anne-Marie Rouannet, stewardess.", "The aircraft departed Charlotte in a hurry because the pilot was afraid the cargo of baby chicks might suffocate due to high temperatures on the ground. Weather condition were not carefully checked. The crew were not able to locate their destination because of weather conditions and other station interference with their ADF. The DC-3 was found to have crashed into a mountain. Source: https://aviation-safety.net/database/record.php?id=19471016-1", "Crashed in a field few minutes after takeoff from Shijiazhuang Airport while on a cargo flight to Beijing. All three crew members were killed.", "During a training sortie, the engine number three failed. The captain decided to reduce his altitude in an attempt to ditch the aircraft when the same engine caught fire. Shortly later, the engine detached and the seaplane hit the water surface at high speed, overturned and came to rest off Southend. Six crew members were injured while the captain and all three passengers were killed.", "The crew was completing a night training mission in London-Heathrow Airport. On touchdown, the aircraft went out of control, ground looped and came to rest. All four crew members were unhurt while the aircraft christened 'Star Watch' was damaged beyond repair.", "Flight 608 departed Los Angeles, California, at 1023 with its destination Chicago, Illinois, to cruise at 19,000 feet according to visual flight rules. Routine position reports were made over Fontana, Daggett and Silver Lake, California; Las Vegas, Nevada; and Saint George, Utah. During the latter report, the flight indicated that it estimated passing over Bryce Canyon, Utah, at 1222. At 1221 Flight 608 reported that a fire had been detected in the baggage compartment which the crew was unable to extinguish. The report added that the cabin was filled with smoke and that the flight was attempting to make an emergency-landing at Bryce Canyon Airport. Shortly thereafter the flight again reported that the \u201ctail is going out--we may get down and we may not.\u201d At 1226 another transmission was received from the flight indicating that it was going into the \u201cbest place\u201d available. One minute later the flight reported \u201cwe may make it--approaching a strip.\u201d No further contact was had from the flight. Witnesses who observed the aircraft as it was approaching Bryce Canyon from approximately 20 miles southwest first observed what appeared to be white smoke streaming from the aircraft, followed later by dense black smoke. The first witnesses who observed fire in the bottom of the aircraft at approximately the center-section were located approximately 15 miles south of Bryce Canyon. Until shortly before the moment of impact, the aircraft appeared to be under normal control; however, no witnesses were located who observed the crash.", "While approaching Saint Etienne, an engine failed. The pilot attempted to make an emergency landing but the aircraft stalled and crashed in a prairie. All six occupants were killed. Crew: Robert Millet, pilot, Pierre-Claude Belmont, mechanic, Alain Le Bras, radio navigator, Roger Panenc, radio navigator. Passengers: Casimir Corniglion, photographer, Andr\u00e9 Lesure, chief of Photography by IGN.", "While descending to Athens-Hassani Airport, the crew was contacted by ATC and instructed to stack for a while due to poor weather conditions (thunderstorm activity) at destination. Few minutes later, the four engine aircraft christened 'Sunnan' hit the slope of Mt Hymettus located northeast of the airport. The airplane was destroyed by impact forces and all 44 occupants were killed. The crew was unable to distinguish the mountain due to poor visibility caused by low clouds. It is believed that the crew was not aware of his exact position at the time of the accident.", "Flight 923 departed at 1030 October 26, 1947, from Seattle, Washington, for Juneau, Alaska, with an intermediate stop scheduled at Annette Island Captain Alf N. Monsen flew as pilot and First Officer Laurence A Foster as copilot. The airplane carried 13 passengers including an infant, a crew of five, 2,500 gallons of fuel, and 822 pounds of cargo. This load was within the allowable airplane weight and was properly distributed in respect to the center of gravity. Company weather information given to Captain Monsen before departure was to the effect that there would be unlimited ceiling from Seattle to Comox, British Columbia. Then at the cruising altitude of 9,000 feet, instrument conditions, light icing, and light to moderate turbulence was expected over the route. Winds were forecasted to be from 200 to 230 degrees at 30 to 40 knots. It was also forecasted that at the time of the flight's arrival over Annette there would be an 800-foot overcast, lower broken clouds, visibility of 2 miles, light rain, and a surface wind from the south-southeast at 18 knots. A cold type occlusion or front which was moving toward Annette Island from a point about 375 miles west of there was expected to pass Annette Island before the flight arrived. Proceeding en route in accordance with an instrument clearance to fly at 9,000 feet, the flight arrived over Annette Island at 1338 after a routine trip. Earlier, at 1326, the company radio at Annette Island had transmitted a weather observation which reported an indefinite 1,400-foot ceiling, overcast, lower broken clouds, visibility of 3 miles, rain, wind southeast at 28 miles per hour, with gusts to 40 miles per hour. The flight acknowledged receipt of this information. Airway Traffic Control cleared the flight to pass over the radio range station located 1 5 mile northwest of the airport at 7,000 feet and then to proceed with a normal instrument letdown and approach to the field. The flight acknowledged this clearance, and reported its position over the radio range station at 7,000 feet at 1338. The normal instrument procedure for Annette Island was established with regard to the mountainous terrain east and northeast of the airport, which rises to an elevation of 3,596 feet on Tamgas Mountain. This procedure required the flight, after approaching from the south at 7,000 feet and reporting over the radio station, to remain west of the south course of the range while on instruments. Five minutes after the flight reported over the range station, at 1343 it advised Annette Radio that it was proceeding to Juneau, approximately 250 miles north-northwest of Annette Island, because of extreme turbulence. This was the first indication that the flight was encountering any difficulty in accomplishing a normal letdown and approach to the airport. In response, Annette Radio asked the flight to report its altitude, but there was no reply. After repeated calls to the flight Annette Radio issued an alert at 1401. It was estimated that the flight at the time of its last radio contact had aboard 9 hours and 16 minutes of fuel. At approximately 1430 the Civil Aeronautics Board was notified, and a search by air, land, and sea was immediately begun. However, adverse weather conditions retarded the search to such a degree that the wreckage was not located until 5 days after the accident October 31, 1947. It was found that the airplane had crashed on the north slope of Tamgas Mountain, approximately 8 miles east of Annette Island Airport and 8 miles east of the south course of the Annette radio range.", "Shot down by anti-aircraft fire and crashed in a field. A pilot survived while both other occupants were killed.", "Crashed and burned on Balmoral Station south of Muswellbrook, while on a trial newspaper dropping flight. The aircraft was preparing to drop newspapers in an open area when it appeared to dive almost vertically into the ground. Both crew members were killed. Crew: Geoff Hoskins, pilot, Edward Conner, copilot. Source: http://www.adastron.com/lockheed/hudson/vh-smj.htm", "Enroute from Jammu to Srinagar, the aircraft crashed in a mountainous area located in the Pir Panjal Mountain Range. As the aircraft failed to arrive, SAR operations were conducted but eventually suspended after few days as no trace of the aircraft nor the 25 occupants was found. Walkers found the wreckage in June 1980 in an isolated area. The crew was from the 12th Squadron.", "Crashed in unknown circumstances into the Laguna de Bay, off Barangay Rizal, a suburb located south of Manila. All five occupants were killed.", "For undetermined reason, the twin engine aircraft failed to rotate, overran and hit a concrete wall. Lieutenant Billaud, pilot, and Lieutenant Grandjean, radio navigator, were killed. The aircraft was destroyed.", "After landing, the brakes failed. The aircraft was unable to stop within the remaining distance, overran and collided with an embankment. All six occupants were unhurt while the aircraft was damaged beyond repair.", "The crew was engaged in a test flight at RAF Finningley. Enroute, both engines failed simultaneously. The captain elected to return to the airbase but on approach, the aircraft stalled and crashed in a field located five miles from the runway threshold. On ground, the aircraft hit an embankment located near a railway, sheared off some road signs and came to rest in flames. The pilot was killed while both other occupants were injured.", "Enroute from San Francisco to Chicago, the crew informed ATC that a fire erupted in the rear compartment of the aircraft and decided to divert to Gallup Airport for an emergency landing. The aircraft was difficult to maneuver and landed in flames. After it came to a halt, all 25 occupants were quickly disembarked and helped by local rescuers before the aircraft being totally destroyed by fire.", "The crew was performing a training sortie with other similar aircraft and De Havilland DH.103 Hornet as well. Enroute, the aircraft collided with a Hornet and both aircraft dove into the ground. During the dive, the captain of the Lancaster was able to bail out before the aircraft crashed in a field, killing all seven other occupants from the 35th and 115th Squadron. The Hornet's pilot was killed as well.", "Crashed in a mountainous area located some 30 miles northeast of Spokane. Five crew members were killed and five others were injured.", "After takeoff from Hamilton bound for Havana, while climbing to a height of 9,000 feet, the engine number four caught fire. The crew elected to return to Hamilton-Kindley Field for an emergency landing. On final approach, the aircraft stalled and crashed few hundred yards short of runway threshold. All 16 occupants were uninjured while the aircraft was damaged beyond repair.", "After landing at Jammu Airport, the aircraft failed to stop within the remaining distance. It overran and came to rest. There were no casualties while the aircraft was written off.", "The pilot was forced to make an emergency landing for unknown reason. There were no casualties but the aircraft owned by D. L. Steiner was damaged beyond repair.", "While flying over the Jura Mountain Range at a too low altitude, the three engine aircraft hit tree tops and crashed in flames in a wooded area called La Joux. The radio navigator Henri Glaise was slightly injured, the mechanic Leroy was seriously injured and the pilot Alain Bamayeux was killed.", "While performing a training flight in the area of Soesterberg AFB, the aircraft suffered a double engine failure. The crew attempted to make an emergency landing when the aircraft crashed in a field and was destroyed. All three crew members were slightly injured.", "In flight, the pilot was forced to reduce his altitude and to make an emergency landing in a field. There were no casualties but the aircraft was written off.", "Crashed in unknown circumstances. No casualties. The accident occurred in November 1947 (exact date unknown). The aircraft was owned by F. H. Stewart and T. M. Gibson.", "The crew was completing a training flight in Bombay-Santa Cruz Airport, consisting of touch and goes. On final approach, the instructor voluntarily shut down one engine. During the last segment, the aircraft banked left and right and the control became difficult. In such conditions, the instructor decided to raise the undercarriage, increased power on the three remaining engines and started a go around. The aircraft stalled and hit the runway surface, slid on its belly for several yards and came to rest. All three crew members were unhurt while the aircraft was damaged beyond repair.", "While cruising in a thunderstorm area, the aircraft went out of control and crashed in Mt Magazine, about five miles northwest of Havana, Arkansas. All six crew members were killed.", "Three student pilots and one instructor were completing a training sortie consisting of touch and goes. For unknown reason, the pilot in command failed to complete the flare properly, causing the aircraft to hit the runway surface. The aircraft bounced and the instructor decided to make a go around. At that time, the aircraft stalled and hit again the runway, swerved and came to rest in flames. All four crew members were uninjured while the aircraft was written off.", "The aircraft was returning to Stockholm with a crew of four and 21 Swedish pilots who delivered Saab B-17 to the Ethiopian Army in Addis-Ababa. It left Catania Airport at 1428LT bound for Rome. After passing over the Island of Stromboli, the crew encountered poor weather conditions with thick clouds. To avoid this area, the crew modified his route but few minutes later, while flying at an insufficient altitude of 1,040 meters in poor visibility, the aircraft hit tree tops located on the Mt Cerro near Ravello. The captain tried to avoid a ground collision so he increased engine power and attempted a 180 turn when the left wing hit the Santa Maria del Monte Peak. The aircraft crashed in flames and was destroyed. Four occupants were rescued while 21 others were killed.", "At 1210 the flight called the Wilmington-New Castle Tower and asked to be cleared for an instrument approach to runway one. The flight advised that they would fly law over the field on their first approach, and that they would then circle and land The approach was made, and the aircraft flew low over the field to the immediate right of runway one. After passing the north end of the runway. a climbing left turn was made to an altitude of 400 to 500 feet. The aircraft circled at that altitude until approximately one mile west of the south end of runway one, then it started a gliding left turn, toward the field. One-half mile south of the airport the turn was completed, and the aircraft flew a straight course on final approach toward runway one for landing. This last turn onto final approach was completed at an altitude of 200 to 300 feet. The landing gear was down, but the flaps were not extended. The descent on final approach continued normally until the aircraft had reached an altitude of approximately 50 feet above the ground, at which time it was 500 to 1,000 feet from the approach end of runway one. Then, the aircraft was observed to assume a nose-high attitude and to descend more rapidly. First contact with the ground was made 130 feet Prom the approach end of runway one, and 22 feet in front of a 5-foot embankment. The top of this embankment was level with the runway. Since the embankment was uniformly covered with sod, it was not discernible from the air. The extreme loads which were imposed upon the aircraft structure as it rolled into and over the rising embankment immediately after it had settled to the ground caused considerable damage to the landing gear, fuselage, and wings. Forced back into the air by the rise of the embankment, the airplane landed for the second time on the runway, skidding forward 1,270 feet. The right wing was torn from the fuselage as the aircraft turned over to an inverted position. Fuel spilled from ruptured gasoline tanks ignited, and the wreckage burst into flames.", "While cruising at low height in poor weather conditions, the seaplane hit the slope of a hill and crashed in Brightstone Down, Isle of Wight. A crew member was killed, three others were injured.", "Enroute from Bel\u00e9m to Manaus, the seaplane crashed in unknown circumstances in the region of Porto de Moz. As the aircraft failed to arrive in Manaus, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. On December 22, 1947, the wreckage and the dead bodies of all 16 occupants were found near the village of Aquiqui, northwest of Porto de Moz.", "The aircraft departed Croydon on a cargo flight to Jersey, carrying a load of newspapers. While flying over the Isle of Wight, the crew encountered poor weather conditions with clouds down to 700 feet. Due to low visibility, the pilot did not realize he was off course and his altitude was too low when the twin engine aircraft hit the pylon of a radar and crashed in a prairie located near Saint Boniface Down. Both occupants, pilot E. G. Snowden and radio operator R. J. Corrie were killed.", "The crew was completing a training sortie over the North Sea when the right engine failed in flight. The captain reduced his altitude and elected to return to Manston for an emergency landing. While descending to an altitude of 800 feet and while flying across the last cloud layer, the aircraft stalled and crashed into the sea, few miles off Birchington-on-Sea. A crew member was killed while three others were rescued.", "Enroute from Bucharest to Prague, the crew encountered poor weather conditions with low clouds. The pilot lost his orientation due to fog and decided to reduce his altitude to establish a visual contact with the ground when the aircraft hit tree tops and crashed in a dense wooded area. Thirteen passengers were rescued, among them Arel Grigoresco, ambassador of Romania in Prague, while thirteen other occupants were killed, among them all five crew members.", "The crew was performing a demo flight to potential clients. Upon landing in Wau Airport, on a relative steep runway, the aircraft failed to stop properly. The aircraft eventually overran and came to rest into a ditch. All five crew members were slightly injured while the aircraft was damaged beyond repair.", "Shortly after takeoff from Ciudad Bolivar Airport, while on a test flight, the aircraft stalled and crashed 150 meters past the runway end. The aircraft was written off while all three crew members were uninjured.", "The aircraft crashed on landing in Port Sudan Airport for unknown reason. While the aircraft was damaged beyond repair, all seven crew members were unhurt.", "The descent to Titograd was started from the south, by night and poor weather conditions. Through freezing fog, the aircraft hit the slope of Mt Rumija located 25 km south of the airport. The wreckage was found few hours later and all 23 occupants were killed. Crew: Cpt Vasa Vracarevic 4.", "\"The flight departed from Anchorage at 0020, November 27, 1947, carrying 11 revenue passengers and 600 gallons of fuel. At 0238 the flight reported that it was over Yakataga, Alaska, at 6,000 feet, and that it was proceeding in accordance with instrument flight rules to Yakutat, estimating arrival there at 0320. Twenty-eight minutes later at 0306 the flight called Yakutat Radio, stating that it was leaving the 6,000-foot altitude and making an approach \"\"straight in.\"\" The CAA communicator acknowledged and transmitted the Yakutat weather \"\"Indefinite ceiling", "Crashed on landing in Gordon Lake and was lost. All three occupants escaped unhurt.", "On final approach to Perpignan Airport, the twin engine aircraft stalled and crashed in a field. All three occupants were injured and the aircraft was damaged beyond repair.", "After his departure from Pisa Airport, the crew encountered very poor weather conditions with alto-cumulus, heavy snow falls and wind from the southeast up to 25 knots. Due to the wind, the aircraft went off course up to 50 km to the west, and due to poor visibility, the crew was unaware of this course deviation. The aircraft hit the slope of a mountain located near Trappa and was destroyed. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. On January 31st, 1948, Italian skiers found the wreckage of the aircraft and 20 dead bodies in an isolated area. According to some US military Officers, at least two passengers survived the crash but died few hours later.", "The aircraft christened 'Tailly 2' left Oran at 1015LT in marginal weather conditions. Enroute, due to sandstorm, the captain decided to reduce his altitude in an attempt to establish a visual contact with the ground. Twice, the crew informed ground that his ETA in Colomb-B\u00e9char was delayed about fifteen minutes. While descending at a too low altitude, the twin engine aircraft hit the ground near a railroad and crashed in a huge explosion about 56 km north of Colomb-B\u00e9char. All thirteen occupants were killed, among them the French General Philippe Leclerc. Thirteen bodies were recovered and evacuated to France, but only twelve of them were identified. A thirteenth occupant, wearing a French Army uniform with the grade of Lieutenant was recovered but unidentified. Crew: Lt Fran\u00e7ois-Ren\u00e9 Delluc, pilot, Lt Andr\u00e9-Ren\u00e9 Pilleboue, navigator, Adj Jean Guillou, mechanic, Sgt Eug\u00e8ne Lamotte, radio operator. Passengers: Gen Philippe Leclerc, Col Th\u00e9odore Fieschi, Col Charles Cl\u00e9mentin, Col Louis du Garreau de la M\u00e9chenie, Col Paul Fouchet, Cpt Georges Frichement, Cdt Michel Meyrrand, S/Lt Robert Miron de L'Espinay.", "Upon landing, the aircraft hit unknown obstacles. On impact, the undercarriage were sheared off and the aircraft skidded for several yards before coming to rest. There were no casualties while the aircraft was written off.", "\"The flight arrived over the Seattle radio range station at 3,000 feet on its initial approach to the Boeing Airport at 1357. Shortly before Captain Farris had reported to Seattle Radio that he had 2 rough engines, but he did not declare an emergency. The condition of engine roughness is discussed below. Weather at Boeing Field, Seattle, Washington, was reported to be ceiling indefinite 500 feet visibility one mile. An instrument approach for landing at Boeing Field was made, but not completed because of the low ceiling and visibility, so the flight returned to an altitude of 1,500 feet on the northwest course of the Seattle radio range. During this time Copilot Whitting remained in the left seat and flew the airplane. The second instrument approach was made for a landing at the Seattle-Tacoma Airport, sometimes referred to as the Bow Lake Airport, which is located 4 miles south of the Seattle radio range station. The airplane was flown inbound on the northwest course of the range. Then, after passing over the range station at 1,500 feet, a heading of 193 degrees toward the airport was flown, and a descent made for landing. The aircraft was first observed at the Seattle-Tacoma Airport when approximately 500 feet above the approach and of Runway 20, 5,611 feet long, at which time it was flying at an angel to the left of the runway. An \"\"S\"\" maneuver and rapid decent were made. A right turn was entered and held until the airplane was again over Runway 20", "The crew was performing a positioning flight from Kimry-Borki to Moscow-Zakharkovo. Few minutes after takeoff, the left engine lost oil pressure and power. The captain elected to make an emergency landing but the aircraft crashed in a wooded area located in Taldom, about 13 km southeast of Borki Airport. The aircraft was destroyed and all five crew members were injured. At the time of the accident, weather conditions were poor with a cloud base at 100 meters and an horizontal visibility limited to two km. It appears that the crew did not receive any permission to complete this positioning flight to Moscow.", "The pilot, sole on board, was performing a training sortie in RAF Moreton-in-Marsh, consisting of stall maneuvers. While conducting an umpteenth stall, he lost control of the airplane that went into a spin. He tried to bail out but the aircraft dove into the ground and crashed in a field near the airbase. The aircraft was destroyed and the pilot was killed. For undetermined reason, the pilot's harness was not properly secured.", "During the takeoff roll, the aircraft skidded, veered off runway and came to rest upside down. All three occupants were rescued, one of the passenger was slightly injured.", "\"While at Lille 6,380 kg (96 bales) of fabric was loaded onto the aircraft, this was described in contemporary newspaper reports as being woolen piece goods. Once this was complete their flight plan was submitted to the Lille controller, it was a direct flight back to Speke, and they received a weather briefing for the planned route. This indicated that there would be dense cloud layers from 1000 feet upwards on the entire route with some rain. The wind as far as the London area was forecast to be from the Southwest at 35 to 40 knots and from the Northwest beyond there at a similar speed. The estimated flight time was 1 hour 30 minutes. The aircraft departed Lille at 14:38 GMT and made contact with the regional control at Uxbridge at 15:06, they reported that they had flown over the French coast in the Dunkerque area at 14:46. At around 15:15 they were over the east coast of England between Ipswich and Colchester, they were already someway off course due to the strong wind and this was confirmed with a position fix at 15:35 which put the aircraft over the fens in the Ely area. Had they not had the strong cross wind their intended track at this point would have taken them over Bedford. Upon confirming how far off course they were the pilot adopted a more westerly course and asked Uxbridge if he should contact the Manchester area control at Ringway, they replied yes. By around 16:00 to 16:05 was more or less back on the right course in the Stafford area. The crew never made contact with Ringway, their call-sign was heard at 15:59 but another aircraft was communicating with Ringway at the time. Once this transmission was completed the Ringway controller attempted to contact G-AIHU twice but failed to get a response, the crew had in fact made contact directly with the approach controller at Speke around the time of the second attempt by Ringway. This was to request a QTE (true bearing) from Speke, this was passed as 1340. At 16:10 the Speke controller asked the crew what their ETA was and they replied 16:20, three minutes later he gave the crew permission to enter the controlled airspace around Speke and circle the airfield. They were instructed to report when they had descended to 2,000 ft and reply by R/T (Radio Telephony) to the Aerodrome Controller, up to this point they had been communicating by morse (Wireless Telegraphy). No communication was received from them by R/T and after dealing with other aircraft the approach controller managed to re-establish contact at 16:28 by W/T. The crew reported in plain language \"\"unable to raise 6440 - landing instructions?\"\"", "Crashed 11 miles northeast of Elgin following an engine failure. Occupant fate unknown.", "One minute after a night takeoff from Goose Bay, while in initial climb, the pilot encountered serious difficulties to gain height, informed ground and elected to return. Shortly later, the four engine aircraft stalled and crashed in flames in a wooded area located 13,5 km north of the airport. Six occupants were seriously injured while 23 others were killed.", "On final approach to Memphis in marginal weather conditions, the aircraft banked right, dove into the ground and crashed in a wooded area located 4 miles short of runway threshold. All 20 occupants were killed.", "Crashed on approach to Zambezi Airport for unknown reason. The aircraft was damaged beyond repair and all six occupants were slightly injured.", "The aircraft left Songkhla, Thailand, bound for Bukittinggi, West Sumatra, to be delivered to the Indonesian Air Force. It was carrying medical supplies as well. While flying along the west coast of Malaysia, the twin engine aircraft crashed in unknown circumstances into the sea, killing both occupants, Lt Col Iswahjudi and Air Vice-Marshal Halim Perdanakusuma.", "Crashed in unknown circumstances while preparing to land in Calcutta Airport. The aircraft was written off and both occupants were injured.", "While descending to RAF Abingdon, while on a local training sortie, the captain was forced to shut down the engine number three due to an excessive temperature. As the aircraft was unstable on approach, the captain decided to make a go around when the engine number four overheat. Simultaneously, the approach light system failed. In dark, the crew decided to land immediately, raised the undercarriage and crash landed in a field short of runway threshold. While all five crew members were unhurt, the aircraft was damaged beyond repair.", "The crew was performing a training sortie in NAS Norfolk. In flight, the seaplane collided with a Chance Vought F4U Corsair. Both aircraft dove into the ground and crashed near the airbase. One crew aboard the Catalina survived the crash while six other occupants and the pilot of the Corsair were killed.", "Fifteen minutes after takeoff from Krasnoyarsk-Severniy Airport, the oil pressure on the left engine dropped. The crew shut down the engine, feathered the propeller and decided to return to Krasnoyarsk for a safe landing. On final approach, the speed was too high and the crew encountered problems to lower the undercarriage so the captain elected to make a go around. Few minutes later, during a second attempt to land, while at a height of some 50 meters, the aircraft stalled and crashed few hundred yards short of the runway threshold. Eighteen occupants were injured while seven others, among them four crew members, were killed.", "The crew was engaged in a test flight following modification on the engines by GVF (Grazhdansky Vozdushnyi Flot). The final approach to Vnukovo Airport was completed in low visibility due to foggy conditions, when the aircraft hit a hill and crashed about 10 km northeast of the airport. The occupant fate remains unknown.", "Crashed in unknown circumstances in Diyarbakir while completing a training sortie. All four crew members were killed.", "The starboard engine blew up about 480 km north of Manila. Flight was maintained on one engine but bad weather and turbulence forced the plane down to below 1,000 feet. At about 200 km from Manila, some personal baggage and mail were jettisoned. The crew eventually realized it was impossible to join Manila so decided to make a wheels up landing near Dinalungan. The aircraft crash landed and was damaged beyond repair while all 12 occupants were unhurt.", "On final approach to Uetersen in poor weather conditions, the left engine failed. The pilot lost control of the aircraft that stalled and crashed in flames in a field short of runway threshold. All occupants were injured, the copilot more seriously. The aircraft was destroyed by fire.", "Suffered a ground accident in Barajas Airport. No casualties.", "The crew left Ladd Army Airfield in the day for a 15 hours training sortie. While flying over the Seward Peninsula at low height, the four engine aircraft christened 'The Clobbered Turkey' hit the slope of Mt Hot Springs. The aircraft was written off but all eight crew members survived. Two of them decided to walk away to find help but were found dead few days later. Six other occupants were rescued later and three rescuers were killed as well during the salvage operations. Crew: Lt Vern H. Arnett, pilot, Lt Donald B. Duesler, copilot, Lt Frederick E. Sheetz, navigator, Lt Lyle B. Larson, flight engineer, Lt Francis Schaack, radar operator, T/Sgt Wilbur E. Decker, electrical mechanic, Sgt Olan R. Samford, radio operator, S/Sgt Leslie R. Warre, photographer. Source: http://vintageairphotos.blogspot.ch/2014/12/the-legacy-of-clobbered-turkey-tragedy_19.html", "The crew was performing a cargo flight from Raleigh to Miami and while reaching Melbourne, Florida, he was informed by ATC that Miami Airport was closed to traffic due to poor weather conditions. For same reason, the alternate airport West Palm Beach was closed and the crew was advised to divert to Key West or Tampa. Few minutes later, the captain informed ATC that he was short of fuel and started the approach to Miami in low visibility. During the last turn to join the approach path, the right engine failed due to fuel exhaustion. The aircraft stalled and crashed. Both crew members were injured while the aircraft was written off.", "Shortly after takeoff from Kunming Airport, while in initial climb, the aircraft stalled and crashed in a field located 3 km from the airport. Five passengers were seriously injured while all 25 other occupants were killed. It appears that three of the four engines failed shortly after rotation. All passengers were Belgian missionaries.", "Shortly after takeoff, while in initial climb, the twin engine aircraft stalled and crashed in a field. All five occupants were killed.", "Few minutes after takeoff from V\u00e9lizy-Villacoublay, an engine caught fire. The captain elected to return but was forced to attempt an emergency landing in a field located near the aerodrome of Chelles-le-Pin. The aircraft belly landed and came to rest in flames. All 15 occupants, most of them women and children flying back to Algeria, were slightly injured while the aircraft was damaged beyond repair.", "While approaching Leeuwarden, the crew encountered poor weather conditions with heavy rain falls and a cloud base at 100 meters. Unable to locate the airport, the captain decided to make a go around and increased engine power. Shortly later, while flying over the city of Leeuwarden, the aircraft hit with its left wing the church of Saint Bonifatius which is 70 meters high. Three meters of the left wing were sheared off. The captain reduced his altitude in an attempt to make an emergency landing and completed a belly landing in a field. The aircraft skidded for several yards and hit three successive ditches before coming to rest with both propellers sheared off. All 15 occupants were unhurt while the aircraft was damaged beyond repair.", "Shortly after takeoff by night, while in initial climb, the aircraft banked right, stalled and crashed by a 30\u00b0 nose down angle in Korangi Creek. All 23 occupants were killed. At the time of the accident, visibility was poor and weather conditions were considered as marginal.", "Shortly after takeoff from Le\u00f3n-Guanajuato-Del Bajio Airport, the crew informed ground that an engine failed and received the authorization to return for an emergency landing. While completing a last turn, the pilot lost control of the aircraft that stalled and crashed in a residential area located near the airport. Both pilots, three passengers and three people on the ground were killed.", "Enroute from Buffalo Narrows to Big River, the pilot encountered poor weather conditions with a snowstorm. He reduced his altitude in an attempt to make an emergency landing when landing on a road, the aircraft ended up in the bush and was destroyed. Both occupants were injured.", "On final approach to Copenhagen-Kastrup Airport, the twin engine aircraft went unstable, rolled left and right, stalled and crashed in a flat position in the \u00d8resund, about 500 meters short of runway threshold. While all 15 occupants were uninjured and quickly rescued, the aircraft christened 'Torulf Viking' was damaged beyond repair.", "The crew left Chelyabinsk Airport at 1215LT, established contact with RDS Koltsovo and was instructed to proceed to the altitude of 1,500 meters, although this was lower than the minimum safe altitude of 2,100 meters on the route Chelyabinsk - Kazan. An hour later, the crew encountered poor weather conditions with a cloud base at 200 meters, heavy snow falls and an estimated horizontal visibility less than 4 km. While cruising at the altitude of 1,145 meters, the twin engine aircraft hit the slope of Mt Taganay located about 20 km north of Zlatoust. The wreckage was found in an isolated and mountainous area a day later, the aircraft was destroyed by impact forces and a post crash fire and all six occupants have been killed. The aircraft was carrying a load of various goods consisting of grinding wheels, boxes and a furnace-type PET-8 for a total of 2,298 kilos.", "Crashed shortly after takeoff from Elmendorf AFB, killing all nine crew members.", "Crashed in unknown circumstances. The exact date remains unknown, somewhere during 1947.", "While descending to Chattanooga Airport by night, the seaplane hit tree tops and crashed in flames in a wooded area located in Signal Mountain, north of Chattanooga. Both crew members were killed. Crew: Ens Roger W. Whale, Amm1 Kristian F. Anderson.", "On touchdown, a landing gear failed. The aircraft was damaged beyond repair while all three crew members were unhurt.", "On landing, an undercarriage collapsed. The aircraft went out of control, veered off runway and hit a drainage ditch. All 15 occupants were unhurt while the aircraft was damaged beyond repair.", "On approach to Northolt Airport, about seven km from the runway threshold, the captain decided to make a go around and informed ATC he was unable to distinguish the runway due to poor weather conditions. A second and a third attempt to land were aborted few minutes later. During the fourth attempt, the aircraft was too low and hit tree tops before crashing in a field located 4 km short of the runway threshold. 17 occupants were injured while a passenger was killed.", "While approaching Paris, the crew was instructed by ATC to stack for about 30 minutes due to an Air Alg\u00e9rie DC-3 landing at the same time. Also, ATC told the crew to divert to Pontoise-Cormeilles en Vexin if they wanted to land immediately. The captain decided to stack for about 30 minutes at an altitude between 700 and 1,000 meters and was later authorized to descent to Le Bourget. On final approach, while at a height of some 150 feet, the aircraft stalled and crashed in a tulip field located 1,500 meters short of runway threshold. Two passengers were seriously injured while all 14 other occupants were killed. Few hours later, both survivors died from their injuries. Crew: Edouard Albin, pilot, Georges Capron, copilot, Pierre Lebeau, radio navigator, Joseph Lacroix, mechanic, Mr. Germ\u00e9, steward.", "After refueling to 600 gallons of gasoline, the flight departed at 0553 on an instrument flight plan to Miami, via Airway Amber 7, at an altitude of 2,000 feet. The crew reported over the Florence, South Carolina, range station at 0643 at an altitude of 2,000 feet. At 0716 they reported over Charleston, South Carolina, at an altitude of 2,000 feet, and estimated their arrival over Savannah at 0744. This was the last communication received from the flight. Between Charleston and Savannah, Co-pilot Eick left the cockpit to obtain navigational charts, during which time he heard one or both of the engines run roughly. By the time he returned to his seat, however, both engines were again operating normally. A few minutes later both engines stopped, and the fuel pressure gauges were observed to be at zero. The wobble pump was used, different positions of the fuel tank selector valves were tried, the cross-feed valves were turned to the \u201con\u201d position, but no fuel pressure could be obtained. When it became apparent that the engines could not be restarted, Captain Antonioli informed the co-pilot that it would be necessary to make a forced landing in a nearby marsh, and instructed him to see that the passengers were secured by safety belts. Co-pilot Eick proceeded immediately to the cabin where he buckled the safety belts of 4 or 5 passengers. Then he felt the airplane turning steeply, and he attempted to return to the cockpit. By the time he reached the radio compartment passageway between the passenger cabin and the cockpit he was forced to the floor by centrifugal force. The aircraft shuddered as though in a stall, and crashed. Witnesses on a nearby barge saw the aircraft approaching from a north-westerly direction at an altitude estimated to be 1,000 feet, descending without audible engine noise. It was observed to enter a gliding turn to the left which was continued for about one and one-half revolutions, until the airplane crashed into a marsh and burst into flames. A pilot and 17 passengers were killed.", "Enroute, the pilot was forced to make an emergency landing for unknown reason. The aircraft crash landed in a field in Chelford and was damaged beyond repair. There were no casualties.", "The crew was performing a training sortie at RAF Waterbeach, consisting of touch and goes. On final approach, the instructor deliberately shut down an engine to simulate a failure. Following this, the pilot in command missed the landing procedure, overshot and landed too far down the runway. After touchdown, the aircraft was unable to stop within the remaining distance, overran, crossed a road and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "While cruising in marginal weather conditions, the radio navigator informed ground that an engine failed and elected to return to Algiers. Shortly later, the aircraft went out of control and crashed in an affluent of the Isser River, about 11 km from Palestro (now Lakhdaria). All nine occupants were killed. Crew: Mr. P\u00e9hu, pilot, Mr. Suhaud, radio navigator.", "On final approach to Madrid AFB, the crew decided to make a go around when the seaplane stalled and crashed short of runway threshold. All three crew members were rescued while the aircraft was destroyed. Engine failure is suspected.", "Enroute, the aircraft hit the slope of Mt dell'Aretino located near Cerbaiola, killing all four crew members.", "Shortly after takeoff from the Qingdao Bay, while climbing, the aircraft caught fire, exploded and crashed into the sea. A crew member was killed while the aircraft was destroyed by fire.", "Enroute, an engine failed. The crew tried several times to restart the engine that fell off shortly later. In such conditions, the crew elected to make an emergency landing in a desert area located about 40 km northwest of Cairo. The aircraft belly landed and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "Few minutes after its departure from Santa Cruz de Barahona Airport, the crew encountered poor weather conditions and decided to modify his route, diverting to Ciudad Trujillo, the capital city. While cruising about 20 km north of Ciudad Trujillo in low visibility, the aircraft hit the slope of a mountain and crashed near Yamas\u00e1. All 32 occupants were killed, among them members of the baseball team of Santiago returning home.", "The aircraft took off from RAF Topcliffe in the mid-afternoon so the pilot could train on instrument flying. Also on board was a second pilot who was acting as an instructor, a radio operator and a passenger. The purpose of the latter was so that he could carry out radar tests during the flight. The aircraft took off in the gusty conditions with the pilot having to use both hands to maintain lateral control, the aircraft climbed normally to 400 feet but after which the nose rose sharply. The pilot pushed the control column forward to try and make the aircraft return to level but this had no effect, full power was applied but the aircraft continued to climb at this rate until it was at about 1000 feet. The speed of it had now dropped to 80 knots so the pilot ordered the crew to bale out before it stalled. Only the second pilot was able to get out before the nose sank and the aircraft entered a dive from which it could not be recovered from. The survivor sustained slight injuries after being dragged by his parachute when on the ground after it caught in the strong wind. The other three had no chance to get out before it crashed and were sadly killed in the crash at 1500LT. Source: http://www.yorkshire-aircraft.co.uk/aircraft/yorkshire/rp555.html", "The aircraft was carrying a passenger and six crew members on a test flight in Rome-Fiumicino Airport. While flying in the vicinity of the airfield, an engine caught fire and the captain elected to make an emergency landing. The aircraft belly landed in a field located in Ponte Galeria, east of the airport, and came to rest in flames. All seven occupants were unhurt while the aircraft was destroyed by fire.", "\"Flight 572 arrived in Atlanta, Georgia, from its point of origin, Houston, Texas, at 2330, January 12, 1948. With a new crew, consisting of Captain Paul J. Saltanis, First Officer Ralph B. Sanborn, Jr., and Flight Attendant Peter L. Philiois, the flight departed from Atlanta at 2355 for Greenville and Winston-Salem, North Carolina, and Washington, D. C. The flight as far as Winston-Salem was routine. At 0306, January 13, 1948, the flight took off from Winston-Salem carrying six passengers, a crew of three, and 600 gallons of fuel. It proceeded at the altitude of 9,000 feet specified in the flight plan, to Washington, via Blackstone and Richmond, Virginia. Shortly after reporting over Blackstone, at 0405, 146 miles southwest of Washington, an airway traffic control clearance was transmitted by company radio to the flight authorizing it to cross the Doncaster fan marker, 27 miles southwest of Washington, at 5,000 feet. Captain Saltanis requested a lower altitude and ten minutes later received another ATC clearance approving 3,000 feet over Doncaster, and permission to descend to 2,500 feet immediately after crossing Doncaster. At 0427, the flight reported its position to the Washington control tower, stating that it was over Doncaster at 3,000 feet. It was instructed by the tower to maintain 2,500 feet, and to report again when it was over Mt. Vernon. 9 miles south of the Washington National Airport. At about this same time another Eastern Air Lines\u2019 flight, No, 454, reported that it was at 4,500 feet over the Arcola range station, which is located 23 miles west-northwest of Washington, D. C. Since the two Eastern Air Lines' flights were converging toward Mt. Vernon, the airport traffic controller thought that flight 454 might fly over Mt. Vernon before it had descended to a safe altitude below Flight 572. To assure that both airplanes would not be over Mt. Vernon at the seine time and altitude, the controller instructed Flight 572 to climb to 3,500 feet Flight 572 acknowledged, advised that it was contact, and asked why it was necessary to climb. Less than a minute later, at approximately 0430, the east bound flight, No. 454, reported that it was \u201ccontact\u201d at 2,000 feet and approaching Mt. Vernon. The controller then knowing that a safe altitude separation existed between the two aircraft, cleared night 572 back to its previous approach altitude of 2,500 feet. At 0433, flight 572 was again cleared to the airport by the Washington Tower, and advised to report when leaving 2,500 feet, when leaving Mt. Vernon, and when \"\"VFR.\"\" 2 Following this transmission flight 572 was asked to give a short count", "The crew was performing a flight from England to India to deliver the aircraft that was brand new. While descending to Rome for a refueling stop, the twin engine aircraft hit the slope of Mt Urbanu located in the region of Viterbo. Both pilots were injured and the aircraft was destroyed.", "On final approach to Andrews AFB, the aircraft was too low, hit a building and crashed. A crew member was killed while three others were injured.", "Enroute to Malakal, the crew was forced to make an emergency landing near Ed Dueim for unknown reason. While both crew members were unhurt, the aircraft was damaged beyond repair.", "Shortly after takeoff from Mukden Airport, while climbing in heavy snow falls to a height of 60 feet, the aircraft stalled and crashed near the runway. Eleven passengers were killed while 43 other occupants were injured. The crew was in charge to evacuate some people fleeing the regime recently introduced in Mukden.", "The aircraft departed Denver at 1602 for Grand Junction. The crew, all employees of the Civil Aeronautics Administration, consisted of Fred L. Snavely, pilot; Warren L. Lungstrum, copilot; and Ross C. Brown, observer. Over the route to Grand Junction a check was to be made by these men of the VHF (very high frequency) airway facilities to determine whether they were operating normally. According to the flight plan, the flight was to proceed over Red Airway 6 at an air speed of 150 mph. Though only 2 hours were required for the trip, 8 hours supply of fuel was carried. Information supplied to Copilot Lungstrum at the Denver United States Weather Bureau Office was to the effect that clear weather conditions existed generally over the intended route. Over Fraser, Colorado, located approximately 50 miles west northwest of Denver, however, broken clouds were reported. Since this layer of clouds was only 2,000 feet in depth, with tops at 13,500 feet above sea level, it appeared that a cruising altitude of 14,000 or 15,000 feet would be high enough for the flight. Winds at that altitude were from the northwest at 50 mph. Weather Bureau personnel advised that these winds would result in considerable turbulence. Take-off was accomplished at 1602. Twenty-two minutes later, at 1624, the CAA communication station at Denver received a position report from the flight that it was at an altitude of 14,500 feet, 500 feet over the top of clouds, and 20 miles west of Denver. The flight also reported that they were experiencing severe turbulence. Since the flight plan specified that the trip would be made in accordance with visual flight rules, and since the position report indicated that the aircraft was being flown over the top of clouds, the flight was requested at the termination of their 1624 position to verify whether they were actually proceeding in accordance with visual flight rules. A response in the affirmative was received. About one minute after the 1624 report the CAA communicator at Cheyenne, Wyoming, called NC206 and asked for a check of his station\u2019s radio transmission. NC206 responded, \u201cRead Cheyenne Radio loud and clear.\u201d The communicator then asked for a position report from NC206, and the flight replied, \u201cWe are approximately. . . .\u201d The remainder of this message, received shortly after 1625, was garbled and faded. The Cheyenne communicator attempted to contact the flight again but was unable to do so. Since interference to radio transmission could have resulted from the mountain ranges between Cheyenne and the aircraft, and since the Cheyenne communicator had overheard the report of severe turbulence, he presumed that the crew was completely occupied in flying the aircraft, and that either they had not heard the last transmission or were too busy at the time to acknowledge. Accordingly, he placed no significance on the failure of the flight to reply. A request had previously been made by the communication station at Eagle, Colorado, for the flight to check the radio transmission of that station. Since Eagle Radio did not receive any calls from NC206, the station called the flight at 1645. No reply was received. Repeated calls were made by the communicator at Eagle on all available frequencies at three-minute intervals until 1735. Then the station requested information concerning the flight from Grand Junction Radio, but neither Grand Junction Radio nor any other radio station on the route had received a call from NC206 since 1625. At 1825, 23 minutes after the estimated arrival time of NC206 at Grand Junction, an emergency was declared.", "\"Flight 604 departed Miami, Florida, at 2301, January 20, 1948, on an instrument flight rules clearance, non-stop to Newark, New Jersey, to cruise at 15,000 feet via Airway Amber 7 to Jacksonville, Florida, and Airway Amber 6 to Alma, Georgia, thence direct to Spartanburg, South Carolina, Winston-Salem, North Carolina, and Washington, D. C., and via Airway Amber 7 to Newark, Boston, Massachusetts, and Providence. Rhode Island, were designated as alternate air ports. In order to remain above the overcast, the flight requested changes of cruising altitude between Winston-Salem and Washington, and at 0232, at which time it reported over Washington, the flight was cruising at 21,000 feet. Shortly after passing Washington, Flight 604 was cleared to descend en route to Newark and to cross Philadelphia at 7,000 feet, and was advised that no traffic was reported above 7,000 feet. A descent was established and at 0253 the flight reported over Philadelphia \"\"at 8", "Belly landed for unknown reason. The aircraft was damaged beyond repair and there were no casualties.", "The crew was performing a night training sortie in RAF Swinderby. On final approach, while at an insufficient altitude, the aircraft hit the ground at a relative high speed and crashed one mile short of runway threshold. The aircraft was destroyed and all three crew members were killed.", "On approach to Lyon-Bron, the pilot encountered poor weather conditions and decided to make an emergency landing. The twin engine aircraft belly landed in a flooded field located 10 km north of the airport and came to rest. All three occupants were unhurt while the aircraft was damaged beyond repair.", "The twin engine aircraft was returning from Newark and was diverted from National Airport due to a severe snowstorm, to Baltimore Municipal Airport. While approaching, the airplane crashed in unknown circumstances, killing all four crew members. The wreckage was located two days later after an extensive search by Army, Navy and Coast Guard aircraft. Crew: Lcdr Charles W. Schuh, Lt Jg William N. Killebrew, Amm1 Charles A. MacArthur, Arm1 Rudolph H. Schoning.", "The aircraft was on its way to Indochina to be delivered to the Soci\u00e9t\u00e9 Indochinoise de Transports A\u00e9riens (SITA) and was carrying two British engineers and three pilots. While cruising between Turkey and Cyprus, the aircraft crashed in unknown circumstances into the Mediterranean Sea, about 100 km north of the Cyprus coast. No trace of the aircraft nor the five occupants was ever found.", "Caught fire and sank off Vancouver Island enroute to Forward Harbour. After it went to a halt, all four occupants were able to evacuate.", "Shortly after takeoff from Paris-Le Bourget Airport, while climbing, the four engine aircraft went out of control and crashed on a factory located in Romainville, in the suburbs of Paris. All nine occupants were killed while two workers in the factory were slightly injured. The crew was performing a local training flight from Paris-Le Bourget Airport and the takeoff was initiated with one engine voluntarily inoperative. Crew: Georges Lemare, pilot, Charles Fouquet, pilot, Fran\u00e7ois Rogale, copilot, Jean Soulard, radio navigator, Pierre Tolosano, mechanic, Hubert Halter, mechanic, Guy Kerespert, mechanic, Roger Deluc, mechanic, Pierre Ledoux, radio navigator by Air Atlas.", "The aircraft left Istres-Le Tub\u00e9 AFB at 1237LT bound for Udine with an intermediate stop in Pisa. While flying over the Alps, the crew encountered poor visibility with snowstorm and strong winds. In such conditions, the captain decided to return to Istres but was unable to locate his position with certainty. Few minutes later, while flying northwest of the village of Ch\u00e2teau Garnier, the aircraft hit the slope of Mt du Cheval Blanc culminating at an altitude of 2,323 meters. The wreckage was spotted by the crew of a USAF B-17 based in Germany two days later. On site, rescuers did not find any survivors and among the passengers were five children aged 5, and women of US soldiers based in Udine. The day after the wreckage was found, the US B-17 crashed in the same region, killing its entire crew of nine.", "The crew was performing a training flight in the vicinity of Lisbon. In flight, the pilot encountered poor weather conditions and lost control of the aircraft that crashed in a huge explosion in Monte da Caparica, south of Lisbon. All three crew members were killed.", "The flight departed from its operating base, Burbank, California, for Oakland, California, at 0646, January, 1948. According to company instructions, the crew consisting of Francis Charles Atkinson, captain; Marion Harlow Ewing, first officer; and Mrs. Francis Charles Atkinson, stewardess, were to fly NC79055, which was certificated to carry 32 passengers, however, the crew made a mistake and departed in NC36480. This airplane was certificated to carry only 26 passengers and was 7 hours overdue for a 100-hour inspection at the time of departure from Burbank. Landing at Oakland was accomplished at 0849. The trip had been routine, and somewhere between Burbank and Oakland the pilot apparently realized that he was flying the wrong airplane for he requested his landing instructions from the Oakland tower with the appropriate airplane call numbers, 480. In Oakland, 28 Mexican Nationals and one United States Immigration official were enplaned for a flight to the Imperial County Airport, Imperial County, California. This flight was to be performed under a contract which the company had with the United States Immigration and Naturalization Service. Since NC36480 had accommodations for only 26 passengers, three of the 28 Mexican Nationals who boarded the aircraft were unable to be seated where they could be secured with safety belts. According to the statement of a United States Immigration official who assisted in the loading, three pieces of unsecured luggage were in the aisle at the time of take-off, and it as probable that the three passengers were seated on this luggage after the aircraft taxied from its parking area at the Oakland Airport for take-off. The remainder of the airplane load consisted of 375 gallons of fuel. Total weight was 67 pounds in excess of the maximum allowable. No flight plan was filed for the southbound trip since clear weather conditions prevailed over the route to the Imperial County Airport. Take-off was accomplished at approximately 0930. Before leaving the Oakland tower frequency Captain Atkinson received a message from his company, relayed through the tower, that he was to return directly to Burbank. His acknowledgment of this message was the last communication received from the flight. One hour and 35 minutes after the aircraft had departed from Oakland, it was observed over the vicinity of Coalinga, California, cruising at an estimated altitude of 5,000 feet above the ground. At this time a trail of white vapor or smoke, 150 to 200 feet long, was observed streaming from the left engine of the aircraft. Ten to 15 seconds later flames were seen flowing from the left engine over the wing and back to the empennage. Seconds later the left wing and the left engine dropped free from the rest of the aircraft; and the airplane fell out of control, crashed to the ground, and burst into flames.", "The aircraft left Istres-Le Tub\u00e9 Airbase in the morning to try to locate an USAF C-47 that disappeared in the region three days earlier. In fact, this C-47 registered 44-76443 crashed on the Cheval Blanc mountain, killing all 11 occupants. Around noon, the crew of the B-17 localized the wreckage of the C-47 on the east slope of the mountain and while flying to close from the terrain, the aircraft went out of control, maybe due to downdraft, and hit the north slope of the same mountain, near the village of Chanolles. The aircraft was destroyed on impact and eight of the ten occupants were killed. Two crew members, among them a pilot, survived. The pilot decided to leave the area to find help but his dead body was found in an isolated area on March 25, 1948. The only survivor, Sgt Angelo La Salle, was rescued few hours later.", "Christened 'Star Tiger', the four engine aircraft left Horta, in the Azores Islands, at 1534LT bound for Hamilton, Bermuda. At 0200LT, about 10,5 hours into the flight, the navigator Cyril Ellison fixed its position and learned that they too had been blown off course and were crabbing away from Bermuda. He informed the pilot McMillan about a new course which turned the aircraft directly into a gale. However, McMillan still expected to reach Bermuda with at least an hour's worth of fuel remaining upon landing. At 0304LT, the radio officer Robert Tuck requested a radio bearing from Bermuda, but the signal was not strong enough to obtain an accurate reading. He repeated the request eleven minutes later, and this time the Bermuda radio operator was able to obtain a bearing of 72 degrees, accurate to within 2 degrees. The Bermuda operator transmitted this information, and Tuck acknowledged receipt at 0317LT. This was the last radio contact with the aircraft and its crew. As the aircraft failed to arrive in Hamilton, SAR operations were conducted but were eventually suspended few days later as no trace of the aircraft nor the 31 occupants was found.", "Damaged beyond repair in a ground accident in Beirut with a Junkers JU.52/3m operated by Compagnie G\u00e9n\u00e9rale Transsaharienne (CGT). There were no casualties.", "Damaged beyond repair in a ground accident in Beirut with a C-47 operated by Middle East Airlines and registered LR-AAA. There were no casualties.", "Shortly after takeoff from Istres-Le Tub\u00e9 Airbase, the captain was forced to feather the propeller on engine number one because it was running roughly. He elected to return to Istres, initiated a turn and started an approach when he realized he was misaligned with the runway centerline. He increased power on the three remaining engines in an attempt to make a go around when the aircraft stalled and crashed on an abandoned hangar located short of the runway threshold. Four crew were injured, five others were unhurt and seven passengers were killed. Crew killed were (115th Squadron): S/L D. T. Moir, pilot, G. Atter, flight engineer, G. G. W. Carter, J. T. Walton, F/Lt P. Smith, F/Sgt S. A. Wallace, AC2 R. A. Knapp.", "While landing on the iced Lake Iv\u00f6sj\u00f6n, the three engine aircraft went through the ice and sank. There were no casualties but the aircraft was lost.", "The three engine aircraft was operated by the manufacturer Northrop in a number of various unimproved and short fields in Southern California (exact place unknown). The crew, consisting of one engineer and two pilots, was performing a test of an experimental dorsal fin. While flying in the vicinity of an airfield, the fin broke loose and damaged the Pioneer\u2019s tail surfaces, making the aircraft uncontrollable. The test pilot Latham A. \u201cSlim\u201d Perrett did what he could to steady the aircraft to allow the copilot and an engineer to parachute to safety. Sadly, there was no time for Perrett to escape. The aircraft was destroyed and the pilot was killed. Source: http://oldmachinepress.com/2014/05/17/northrop-n-23-pioneer-and-n-32-yc-125-raider/", "While cruising at an altitude of 2,000 feet by night on a flight from Wright-Patterson AFB to Little Rock, the twin engine aircraft hit the east slope of Mt Round Top located three miles south of Jasper, in the Ozark Mountains. The aircraft was destroyed by impact forces and a post crash fire and the wreckage was spotted around midnight, four hours after the crash. All five occupants, four USAF officers and one Navy Officer, were killed. Crew: Lt Phillip Novick, pilot, Lt Charles W. Thomas, copilot, M/Sgt George L. Haties, crew chief. Passengers: Lt Felton F. Roberson, GM2 Francis J. Russell.", "On final approach, one of the engine failed. The aircraft stalled and crashed in a field short of the runway threshold. The aircraft was damaged beyond repair and all 19 occupants were injured.", "Enroute, the aircraft hit the east slope of Mt Page located 2 miles southwest of Saluda, North Carolina. The aircraft was destroyed by impact forces and a post crash fire. Four passengers were killed while six other occupants were injured.", "Crashed in unknown circumstances into the Ionian Sea off Locri, Calabria. All occupants were quickly rescued while the aircraft sank and was lost.", "Crashed on approach to Sandoway Airport. The aircraft was written off but there were no casualties.", "On final approach to RAF Hendon, while performing a local training sortie, the aircraft stalled and hit several buildings located 1'100 yards short of the runway threshold. On impact, the aircraft nosed down and crashed on a trolleybus. Both pilots were killed while eight civilians seating in the trolleybus were seriously injured.", "Shortly after takeoff from Bandung-Andir Airport, while climbing in stormy weather, the crew informed ground that an engine failed. While trying to return, the pilot lost control of the aircraft that dove into the ground and crashed in a huge explosion into a wooded ravine located near Padalarang, about 10 km northwest of Bandung Airport. The aircraft disintegrated on impact and all 19 occupants were killed, among them 11 soldiers and four members of a music ensemble.", "The crew was on his way from Brownsville to Ciudad del Carmen to pick up a load of seafood for the US market. While cruising vertical to the Gulf of Mexico, the right engine failed, forcing the crew to ditch the aircraft 24 km off Ciudad del Carmen. While preparing a life raft, the American pilot Neil Womack fell into the water and was drowned. The Mexican copilot Esteban de Le\u00f3n was rescued by the crew of a ship christened 'Roat\u00e1n' nine days later.", "On final approach to Jacksonville-Towers Field NAS, following a maritime patrol flight, the seaplane was too low, hit tree tops and crashed in a wooded area located few hundred yards short of runway. Two crew members were killed while five others were injured.", "Enroute from Brisbane-Archerfield to Roma, while flying in the region of Condamine in poor weather conditions, the right engine failed. The crew reduced his altitude and elected to make an emergency landing when the aircraft hit a tree and crashed in a field. A passenger and a pilot were slightly injured while all other occupants were unarmed. The aircraft was damaged beyond repair.", "While descending to Frankfurt-Main Airport in marginal weather conditions, the crew informed ground that an engine failed and was forced to make an emergency landing as he was unable to maintain a safe altitude. The aircraft crash landed in a field located in Ulrichstein, about 70 km northeast of Frankfurt Airport. On impact , a wing was sheared off, causing a gaping hole in the cabin, allowing some of the passengers to quickly evacuate the aircraft. Nevertheless, all four crew members and eight other passengers were killed in the accident.", "The crew consisting of pilots and engineers from the manufacturer Handley Page Aircraft was completing a test flight in Radlett. Upon landing, an undercarriage collapsed. The aircraft went out of control and veered off runway before coming to rest. All four occupants were unhurt while the aircraft was damaged beyond repair.", "The crew was completing a training sortie in RAF Hullavington. The aircraft landed 200 yards after the runway threshold. On a relatively short runway, the aircraft was unable to stop within the remaining distance, overran and came to rest into a ditch. All four crew members were unhurt while the aircraft was damaged beyond repair.", "The crew (236th OCU) was engaged in a night training sortie from RAF Kinloss. While flying in the vicinity of Tain, the aircraft went out of control and crashed in flames in a prairie. All five crew members were injured while the aircraft was destroyed.", "The aircraft departed Laverton at 1415LT for Amberley. Aeradio position reports were received normally through out the flight, until 1734LT, when clearance was obtained to descend from 8000 feet preparatory to the landing at Amberley. A short time later Amberley Flight Control cleared the aircraft for a straight-in approach RWY 05 at an angle of 45 degrees, turn right to align itself with the runway and commence to lose height on the approach - which appeared to be lower and faster that usual. The aircraft touched down in a tail high attitude, approximately 300 feet after crossing the threshold. After travelling a short distance, the aircraft then left the ground, rising to about five feet. From eyewitness reports, attempts were then made by the crew to force the aircraft onto the runway but this only resulted in three more bounces. When about 600 feet from the upwind end of the runway, engine power was applied to make a go around. It is estimated by ground observers that, by this stage, the airspeed of the Lincoln had decreased to approximately 80-85 knots. The Lincoln was then seen to climb slightly, level out at 100 feet, after which the nose of the aircraft rose sharply to place the aircraft in a climbing attitude of 40 degrees. After a further few seconds, the attitude changed abruptly to a climb of 80 degrees. With all engines roaring presumably under full power, the aircraft attained an altitude of approximately 500 feet AGL when, with no forward speed, the port wing slowly dropped and the aircraft steadily accelerated until the port main plane struck the ground in a vertical position. By this time the fuselage was parallel with the ground. The aircraft caught fire immediately and, although the fire tender arrived shortly after the crash, the fire could not be sufficiently controlled to extricate the crew or passengers. The crash site was 400 yards from the end of RWY 05 and displaced approximately 100 yards left of the runway. Source: http://www.adf-gallery.com.au/", "The aircraft was scheduled to fly from Florence to Rome but few minutes prior to departure, the operator decided to make an unscheduled stop in Pisa Airport to disembark passengers that were blocked in Florence due to a technical failure on the aircraft. Due to low clouds, the crew was forced to fly at low height from Florence to Pisa and apparently, the weather conditions dropped as the aircraft approached Pisa Airport. Descending from the south in poor visibility, the aircraft hit the slope of a mountain and crashed near the village of Collesalvetti, south of the airport. All three crew members and four passengers were killed while three other passengers were seriously injured.", "Few minutes after takeoff from Le Havre, while flying over the Bay of Seine, the crew encountered poor weather conditions with snow falls. The seaplane went out of control and crashed into the sea off the Saint-Marcouf Islands, between Le Havre and Cherbourg. The aircraft was lost and all 19 occupants, pilots and engineers of the manufacturer, were killed.", "On the leg from Maracaibo to C\u00facuta, while starting the descent, the crew encountered technical problems with the engines and elected to make an emergency landing. The aircraft crash landed and was written off. All 17 occupants were injured, nine of them seriously.", "Crashed shortly after takeoff from Mati, killing all 12 occupants.", "Captain De Cicco took over the controls of the aircraft shortly after the flight had passed the Newark fan marker, and started an instrument approach to the Port Columbus Airport. Altitude was reduced to 1,600 feet which was the minimum for that part of the instrument approach to Columbus. However, Captain De Cicco continued his descent below 1,600 feet despite the objections of Mr. Cole. Mr. Cole stated that he immediately engaged himself in a search of the cockpit for an instrument approach chart for Columbus, presumably to show Captain De Cicco that an altitude of 1,600 feet was required until over the Summit Hill fan marker. The descent was continued, and just as the aircraft emerged below the overcast Mr. Cole looked up to see the trees into which the aircraft flew. The first tree struck extended approximately 90 feet above the terrain, the elevation of which was 1,055 feet. The aircraft continued in a straight line, striking a second tree 60 feet away from the first. At this point the right horizontal stabilizer tip and the right elevator were sheared from the empennage A third tree was struck, 265 feet from the first point of contact, and miscellaneous fuselage parts and the right wing were torn from the aircraft. The airplane then made contact with the ground at which time both propellers were broken from the engines. The main body of the wreckage came to rest and burned 1,150 feet from the first point of impact. The pilot was killed, but the co-pilot, although seriously injured has substantially recovered.", "At Benina Airport, the pilot was in a hurry and took off in a rush at 1535LT, with the passenger but without his radio navigator. While flying along the Libyan coast, he encountered poor weather conditions and the twin engine aircraft crashed into the sea around 1600LT. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor both occupants was found. On March 6, 1948, some debris and the dead body of the passenger were found on a beach in Zarzis, Tunisia.", "On final approach to Bel\u00e9m Airport, the aircraft stalled and crashed in a prairie short of runway threshold. Three passengers were seriously injured while 23 other occupants were killed.", "Enroute, the crew encountered unknown technical problems and decided to abandon the aircraft and to bail out. Out of control, the aircraft dove into the ground and crashed. All five crew members were unhurt.", "The approach to London-Heathrow Airport was started in reduced visibility due to the night and foggy conditions. On final, the aircraft hit the ground, exploded and came to rest in flames short of the runway threshold. Only two passengers survived the crash and were seriously injured while 20 other occupants were killed. Crew: Henri Goblet, pilot, Jean Lomba, radio operator, Louis De Geyndt, steward.", "The three engine aircraft departed Oran-Es Senia Airport at 1530LT on a cargo flight to Lyon via Perpignan, carrying a load of vegetables. En route, the airplane crashed in the Gulf of Lion about 90 km east of Perpignan for unknown reason. All four occupants were killed. Crew: Mr. Screka, pilot, Mr. Pelletier, radio operator, Mr. Prado, mechanic. Passenger: Mr. Saada.", "Belly landed in Mombasa and slid for several yards before coming to rest. Both occupants were unhurt while the aircraft was damaged beyond repair.", "While cruising in poor weather conditions, the twin engine aircraft hit the slope of Mt Skalafell located near Hellishei\u00f0i. The aircraft was destroyed by impact forces and all four occupants were killed.", "Crashed in unknown circumstances somewhere in Brazil. Occupant fate unknown.", "While flying by night from Dudinka to Amderma, the crew encountered poor weather conditions and due to low visibility, became lost. The aircraft hit the eastern slope of Mt Netem-Pe (1,338 meters high) located 143 km north of Kharp, in the Iamalo-Nenets okrug. As the aircraft failed to arrive, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. Walkers found the wreckage in an isolated area on September 17, 1950. All 20 occupants were killed. It appears the crew was tired at the time of the accident and did not have a sufficient rest time prior to start the flight.", "The flight departed from Seattle, Washington, at approximately 1300, March 8, 1948, with a crew consisting of George S. Griebel, pilot, and William F. Grund, co-pilot. It carried 800 gallons of fuel, but no passengers or cargo, weighing at the time of take-off 21.963 pounds. At 1615, the flight reported over Red Bluff, California, at 12.000 feet, and requested clearance to descend to and cruise at 10.000 feet. Oakland Airway Traffic Control granted the request, and also cleared the flight to the Moffett radio range station. 25 miles southeast of San Francisco Municipal Airport, San Francisco, California. At 1715, the flight advised San Francisco Approach Control that it as holding northwest of the Moffett radio range station at 10,000 feet. In reply, San Francisco Approach Control directed the flight to hold between the Moffett radio range station and a point 2 minutes northwest of it. At the same time the flight was advised to expect clearance to the San Francisco Municipal Airport at 1745. Between 1717 and 1734 the flight, while flying its holding pattern, received clearance and descended from 10,000 to 6,000 feet. At 1741, it was cleared to make a \u201cstraight in\u201d approach to the San Francisco Airport. It was directed to report when it crossed the Moffett radio range station and 4,000 feet, and to report again when it had descended below the overcast, A minute later, at 1742, the flight reported leaving the Moffett radio range station and 4,000 feet. Though the San Francisco Tower called repeatedly, this was the last communication received from the flight. Between 1755 and 1805 a rancher in the vicinity of Mt. Hamilton heard a noise he thought to be either thunder or blasting. About 1945, after driving to another part of his ranch, he observed fire in the hills and realized then that the noise he had thought to be thunder was that of an aircraft crashing. It was midnight before a searching party reached the wreckage, which was approximately 20 miles east-southeast (on a bearing of 110 degrees) from the Moffett radio range station, and at an elevation of 1,800 feet.", "Crashed into the sea shortly after takeoff from the bay of Poso. All 13 occupants were rescued while the seaplane sank and was lost.", "The takeoff roll and the first part of the climb appeared to be normal until the aircraft and progressed three-quarters of the way down the runway, at which time it had reached an altitude between 150 and 200 feet. Then, while still within the airport boundaries, it assumed a very steep, near vertical, climbing attitude. Airport, tower, and flight personal observing from the ground believed the flight to be in difficulty, and though no distress signal was received from the airplane, the tower promptly telephoned the crash and fire facilities on the field. At an altitude between 500 and 800 feet the airplane appeared to stall, and the nose and right wing dropped. A partial recovery from the stall was made before the aircraft crashed to the ground and burst into flames. A passenger was seriously injured while 12 other occupants were killed.", "During the takeoff roll in Tulsa, the nose gear hit a snowdrift. After departure, during initial climb, the crew was unable to raise the nose gear so the captain decided to divert to Dallas-Love Field for a safe landing. After touchdown, the aircraft slid on its nose and came to rest. There were no casualties but the aircraft was written off.", "Take-off from Anchorage was accomplished at 2012, March 12, 1948, and the flight proceeded en route. 2 At 2028 the flight reported over the Wasilla Intersection, which is the intersection of the north course of the Anchorage radio range and the east course of the Skwentna radio range. This intersection is located 35 miles north 3 of Anchorage. Three minutes later, at 2031, the flight reported that it was at its cruising altitude of 11,000 feet. At 2042 the flight reported over Sheep Mountain, a non-directional radio beacon located 85 miles airways distance, 31 degrees, from Anchorage. At 2103 the flight reported being over the Gulkana radio range station, 159 miles, 34 degrees, from Anchorage, and at this time it estimated that it would be over Northway, Alaska, 283 miles from Anchorage, at 2136. Gulkana did not establish communication with the flight. However, the flight repeated its clearance into the Fairbanks area back to Northway, indicating that the flight could receive on 400 kcs, the frequencies for both the Northway radio range and communication. Shortly before the position report of 2103, the flight was observed flying an easterly heading approximately 4 miles south of the Gulkana radio range station. Approximately 42 miles, 51 degrees, from the Gulkana radio range station is Mt. Sanford, the elevation of which is 16,208 feet. In order to provide a safe lateral distance from Mt. Sanford for aircraft flying the route, the airway from Gulkana east is deflected to the north, its course being 23 degrees. Fifteen minutes after the flight was observed flying easterly from Gulkana a fire was observed on the western slope of Mt. Sanford. Except for a repeat transmission of the flight's Gulkana position report, overheard by Northway Radio 124 miles northeast of Gulkana and approximately one minute before the fire was observed on Mt. Sanford, no communication was received from the flight after 2103. Northwest Airlines, at 2150, requested from Anchorage Radio the reported time of the flight over Northway, at which time Anchorage Radio advised that neither the Northway nor the Gulkana stations had been able to contact the flight, and that a fire had been reported on Mt. Sanford. Radio facilities over the route were immediately alerted. Since all attempts to contact the flight were unsuccessful, it was concluded that the flight had struck Mt. Sanford and burned.", "Shortly after takeoff from Guidonia AFB, while in initial climb, the right engine failed. Unable to gain height, the aircraft hit power cables and crashed in flames in a field located three km southeast of the airport, near Tivoli. The radio navigator was seriously injured while both pilots were killed. Crew: Cpt Gianni Colaprete, pilot, Mar Teodoro Tagliabue, copilot, Mr. Borelli, radio navigator.", "Crashed shortly after takeoff from McGregor Bay following an engine failure. The aircraft was written off and the pilot was injured.", "Hit a rocky peak located in the Sierra Cristais and crashed. All six occupants were killed.", "While descending to Bogota Airport, the aircraft hit the slope of Alto El Arrastradero mountain located about 40 km northeast of the capital city. A 14 years old girl was rescued while 14 other occupants were killed.", "Following the disappearance of a LI-2 registered CCCP-N444 on March 7, rescue operations were conducted and dispatched. Unfortunately, due to poor weather conditions (heavy snow falls), most of the crew were forced to stay on the ground. That day, a crew decided to make a sortie but the runway at Vorkuta Airport has not been cleared of snow. The captain ask three crew members to seat in the rear of the cabin and started the takeoff procedure on a snow covered runway (up to 30 cm of snow). After a course of about 700 meters, the aircraft lifted off but failed to gain height due to an insufficient speed. After passing the runway end, the aircraft hit the roof of a house, lost an engine, stalled and crashed in a field. All six crew members were injured and the aircraft was written off.", "The crew was engaged in a night training sortie at RAF Topcliffe. Shortly after takeoff, while climbing at a height of some 300 feet, the aircraft collided with a second Vickers 619 Wellington X. Registered RP565, it was carrying another crew of four, was also completing a training flight and was attempting to land. Both aircraft went out of control and crashed in a field near the airport. All eight crew members were killed. Crew: F/Lt Franciszek Kula, pilot, Colin Bass, pilot, Sig Walter Ernest Leslie Howell, Sig Arthur Edward Highman, F/Lt William James Jones, F/Lt Robert Sneddon Laird, F/Lt Harry Corelius New, F/Lt John Edge Kerslake.", "The crew was engaged in a night training sortie at RAF Topcliffe. While approaching the airbase at a height of some 300 feet, the aircraft collided with a second Vickers 619 Wellington X. Registered RP499, it was carrying another crew of four and just took off from RAF Topcliffe. Both aircraft went out of control and crashed in a field near the airport. All eight crew members were killed. Crew: F/Lt Franciszek Kula, pilot, Colin Bass, pilot, Sig Walter Ernest Leslie Howell, Sig Arthur Edward Highman, F/Lt William James Jones, F/Lt Robert Sneddon Laird, F/Lt Harry Corelius New, F/Lt John Edge Kerslake.", "Aircraft NC 22077 departed from Providence, Rhode Island, for White Plains, New York, at about 0730 March 19, 1948. The aircraft carried the pilot, Herman F. Burlingame III, his wife Ruth L. Burlingame, their infant daughter Kathleen, and George H. Armitage, as well as four Chow dogs and personal baggage. Arriving at Westchester Airport, White Plains, one hour and 20 minutes later, aircraft NC22077 was serviced with 118 gallons of fuel. At 0935 the aircraft departed from White Plains, the pilot telling airport officials that he intended to fly either to Hadley Field, New Brunswick, New Jersey, or Solberg-Hunterdon Airport, White House, New Jersey. Two hours and 31 minutes later the aircraft returned to White Plains, Mr. Burlingame telling airport officials that he had not landed at either of the alternative destinations. The aircraft was parked for the night, after being serviced with 85 gallons of fuel. The following morning, March 20, 1948, at 0550 the flight departed from White Plains for St. Louis, Missouri. The aircraft carried an additional four persons who had joined the original group at White Plains. The take-off weight could not be precisely determined, but it was close to the maximum allowable. No flight plan was filed with CAA Airways Traffic Control, and though NC22077 was equipped with two-way radio, no transmissions were received from the flight after its departure from White Plains. Consequently the exact route over which the flight proceeded is not known. Shortly after 0800, witnesses in the vicinity of the west portal of the Laurel Hill Tunnel of the Pennsylvania Turnpike, approximately 45 miles southeast of Pittsburgh, Pennsylvania, observed an aircraft flying at a low altitude on a northwesterly heading. It was flying in and out of low-hanging cloud fringes, and therefore, was not continuously visible. However, the aircraft was observed to approach the tunnel, circle in front of the portal, and then disappear into the overcast. After losing sight of the aircraft, some of the witnesses stated that they heard a surge of engine power, followed by the sound of a crash. Others, more distant, noticed that sound from the aircraft ceased abruptly. Since no other aircraft was observed in the vicinity at that time, there is no doubt but what it was NC22077 that these witnesses saw.", "Crashed in unknown circumstances near the Rio Gurupizinho, at the border of Par\u00e1 and Maranh\u00e3o States. The wreckage was found two days later and all four crew members were killed.", "The crew left Travis AFB for a night flight to Hillsboro, in the suburb of Portland, Oregon. During the approach to Hillsboro, the crew encountered poor weather conditions and missed the airport. While flying in dark conditions, the aircraft hit the slope of Mt Davis located about 11 miles northeast of Woodland. Two passengers were seriously injured while eight other occupants were killed.", "On a local flight from G\u00f6teborg, the pilot encountered poor weather conditions and was forced to reduce his altitude when the aircraft hit power cables and crashed in a field. The pilot was injured and the aircraft was written off. The aircraft was owned by Nils Olofsson.", "While flying over the Irish Sea, enroute from Belfast to Liverpool, the pilot was forced to ditch the aircraft off Southport. He was quickly rescued while the aircraft sank and was lost.", "While flying at an altitude of 2,400 meters in poor weather conditions, the twin engine aircraft hit the slope of Mt Cardo located in the center of Corsica. The wreckage was found few hours later and all 19 occupants were killed.", "After touchdown, the four engine aircraft overran and collided with a rocky wall. There were no casualties but the aircraft was written off.", "On final approach to Berlin-Gatow Airport, at an altitude of 1,500 feet, the twin engine aircraft collided with a Soviet Air Force Yakovlev Yak-3. Both aircraft went out of control and crashed. All 14 occupants on board the Viking were killed as well as the fighter pilot. Crew: John Ralph, pilot, Norman Merrington, copilot, Charles Mamser, radio operator, Leonard G. Goodman, steward. Passengers: Sgt Pasquale E. Pintus, Frances Ruth Clough, J. K. Shea, J. E. Roberts, S. J. Stocking, Robert Collier, Waldemar Hald, Cpt Flamings, M. Lewin, H. Read-Jahn.", "Left its base at 0930LT for a training mission over the North Sea. At 1435LT, the crew informed ground about his position and that he was flying at an altitude of 15,000 feet some 192 km from his departure point. Few minutes later, the aircraft crashed into the sea in unknown circumstances. No trace of the aircraft nor the crew was ever found.", "The crew was forced to make an emergency landing for unknown reason. The aircraft came to rest in marsh field and was damaged beyond repair. There were no casualties.", "About half an hour after its departure from Maracaibo Airport, the aircraft crashed in a mountainous region located in the east part of Venezuela. As the aircraft failed to arrive in Cartagena, SAR operations were conducted but eventually suspended few days later as no trace was found. The wreckage was located in June 1959 in an isolated area. All four occupants were killed, among them Hernando Navarro Botero, Director of the company. The registration remains unconfirmed.", "Crashed in unknown circumstances on Mt Baird located in the Cowlitz county, Washington. All three crew members were killed.", "Following the failure of the starter on engine number one, the crew was unable to restart this engine and received the authorization to perform an empty leg back to Paris for maintenance purposes. During the takeoff roll in Kano Airport, the aircraft went out of control and veered off runway before colliding with a BOAC technical hangar. A crew member was killed while five others were injured. The aircraft was destroyed. Pilots : Mr. Salvetat & Marchandise.", "The crew was performing a training flight from Eglin AFB. Enroute, an unexpected situation forced to crew to abandon the aircraft that crashed into the sea two miles off Destin. Two crew members, F/Lt John Kubo and T/Sgt Joseph A. Riley were rescued while the body of T/Sgt John E. Brizendine was never found.", "Shortly after a night takeoff from Gibraltar, while climbing to an altitude of 2,500 to 3,000 feet, the twin engine aircraft hit the slope of a mountain located in Los Barrios, northwest of Algeciras. The aircraft was destroyed and all three crew members were killed. They were performing a cargo flight from Bordeaux to Casablanca with an intermediate stop in Gibraltar. The aircraft was carrying a load of four tons of various goods.", "\"Pan American's Flight 1-10, originating in San Francisco, California, April 10, 1948, was scheduled to fly around the world to New York, New York. In accordance with company practice the flight changed to a different aircraft, NC-88858, at the Pan American Airways' base in Calcutta, India. The flight took off from Calcutta, April 13, 1948, and continued without incident via Damascus, Syria, and Istanbul, Turkey, to Brussels, Belgium. During a night landing approach at Brussels the fluorescent lighting on the left or pilot side of the cockpit went out. Since the only other lighting immediately available was a chart light which was focused on the automatic direction finder indicator, the flight instruments could not be read, and the remainder of the landing approach was accomplished without visual reference to the flight instruments. An examination was made of the fluorescent lights after the landing. They appeared to operate normally, so the flight departed from Brussels, continuing without difficulty until on the final landing approach into London. When the power was reduced the same pilot's fluorescent lights again went out. This time the chart light was focused on the airspeed indicator. The approach was continued, and the landing was accomplished without incident. A faulty rheostat switch was found to be the cause of the fluorescent light failure, but since a spare switch could not be located, it was not changed at London. An entry describing the defect was placed in the aircraft's Form C, the airplane flight log, and the captain and the flight engineer of the new crew were informed by the company's maintenance supervisor of the condition. Though no actual maintenance was accomplished, the lights again appeared to be operating normally, so the captain, F. C. Jakel, decided to take-off, departing from London at 0035, April 15, 1948, for Shannon. At this time available weather forecasts indicated that at the estimated time of the flight's arrival at Shannon the ceiling there would be 700 feet with a higher cloud layer at 1,000 feet, and visibility 4 miles. At 0159, April 15, 1948, the flight reported being at an altitude of 4,500 feet, contact, over the Limerick Junction fan marker, located 25 statute miles southeast from the Shannon Airport, and requested permission to make a practice approach to the field with the use of the instrument landing system. Shannon Tower cleared the flight for this approach. The tower advised that 3 hours previously the instrument landing system equipment on the airport had been reported faulty, but that it had since been serviced and was operating normally according to its monitoring board, though not flight-checked. At 0210, the flight reported that it was proceeding to the outer marker, 5.2 statute miles northeast of the Shannon Airport, and also made a report, routine for Pan American flights, \"\"mechanical condition okay.\"\" In response Shannon Tower advised the flight that the weather over the field was \"\"fog patches", "Shortly after takeoff from Lae-Nadzab Airport, while in initial climb, an engine failed. The pilot lost control of the aircraft that crashed on an island located in the Markham River, south of the airport. All 37 occupants were killed. It was determined that all passengers were local farmers that were seating in the main cabin without seat or seat belt. Worst accident involving a Lockheed Hudson.", "The twin engine aircraft christened 'Kahu' left Auckland Airport at 1435LT bound for Gisborne with an intermediate stop in Tauranga. On final approach, the crew encountered poor weather conditions with thunderstorm activity and strong winds. The aircraft lost height and crashed in the Waipu Bay, less than 200 yards from the runway threshold. All 12 occupants were rescued while the aircraft was damaged beyond repair. Crew: A. C. Harris, pilot, G. E. Bruce, copilot.", "The twin engine aircraft left RAF Northolt at 1809LT bound for Glasgow-Renfrew Airport. At 1946LT, while cruising at an altitude of 4,700 feet, the captain contacted ATC to obtain the permission to descend to Renfrew. Few minutes later, he requested if the outer marker was operative. Shortly later, the aircraft hit the slope of Mt Irish Law and crashed. All 20 occupants were quickly rescued, two of them were slightly injured. The aircraft was destroyed.", "An Aeroflot LI-2 registered CCCP-L4279 made an emergency landing near Tynda on April 20. A day later, a Deputy from the Amur Region decided to conduct a mission to help and forced the crew to takeoff despite the fact that weather conditions were below minima. The aircraft left Takhtamygda Airport at 1550LT. About twenty minutes later, the right engine failed. The crew was forced to feather the propeller and the captain decided to return to his departure point. Shortly later, while losing altitude, the aircraft hit tree tops with its propeller while the left elevator hit a telephone pole. The aircraft stalled and crashed. Three crew members, among them the captain, were killed while three other occupants were injured.", "The crew left Rio de Janeiro-Gale\u00e3o Airport at 1000LT. About half an hour later, the aircraft crashed in unknown circumstances in Praia de Ponte Negra, about 150 km southwest of its departure point. Both pilots were killed.", "On final approach to Quonset Point NAS, both engines failed. The aircraft stalled and crashed into the sea few miles off shore. All eight crew members were rescued while the aircraft sank and was lost.", "Shortly after lift off, the aircraft went out of control and crashed in flames. The copilot was killed while the captain was seriously injured. He died from his injuries few hours later. The crew was on its way from Burbank to Israel to deliver the aircraft to the Israel Air Force. Four other similar aircraft were performing the same trip at the same time. At the time of the accident, the aircraft was still under the Panamanian register by LAPSA - Lineas A\u00e9reas de Panama. Crew: William Guy Gerson, pilot, Ernest Glen King, copilot.", "During the takeoff roll, the aircraft veered off the center line to the right as the rudder trim has not been set to neutral position before takeoff. The crew failed to abort the takeoff procedure and about 30 seconds after liftoff, during initial climb, the right wing hit a telegraph line and collided with the pole of a high voltage power line. Out of control, the aircraft stalled and crashed. The mechanic was killed while 13 other occupants were injured. The aircraft was destroyed.", "Approaching Bodaibo, the crew lost his orientation due to low visibility caused by poor weather conditions (snow falls). The captain decided to reduce his altitude and followed the Vitim River to join Bodaibo Airport at a height of 100 meters. The aircraft hit the water surface and crashed in a huge explosion into the river off Mamakan, about 13 km southwest of Bodaibo. A passenger was injured and rescued while all 28 other occupants were killed.", "On final approach to Corpus Christi NAS, the aircraft hit tree tops and crashed. At least one crew member was killed.", "Crashed in unknown circumstances into the sea some 5 km off Qingdao. All occupants were rescued while the aircraft was recovered nine hours later but written off.", "While taxiing, the twin engine aircraft swung due to heavy winds, lost its undercarriage and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "Prior to departure, the crew was briefed about the poor weather conditions in south of France and that he should avoid this area. While cruising southeast of Avignon, the aircraft went through a low pressure zone with cumulonimbus. It encountered severe turbulences, lost two engines and its tail, went into a dive and crashed in a field in Verqui\u00e8res. All 11 occupants were killed. It appears that few elements of the aircraft broke off due to severe turbulences that exceeded their certification.", "The crew was engaged in a local training flight on this brand new aircraft that was delivered to KLM last April 22. After several touch and goes completed without any issues, the instructor decided to perform a takeoff with the engine number one voluntarily inoperative. Ready for departure on runway 23, the crew increased power on all four engines and started the takeoff procedure. At a speed of 137 km/h, the captain started the rotation and the nose wheel left the ground. At a speed of 169 km/h, the instructor decided to reduce the power on the engine number one and pull the power lever to the back. At this moment, the aircraft was still on the ground and slightly deviated from the runway center line to the left. The captain tried to counteract this with the tail when the right main gear left the ground. Due to the presence of obstacles ahead, the instructor decided to increase power on the engine number one that oversped. The left wing dropped and hit a rocky wall, causing the aircraft to stall and crash into a ditch. All five crew members were injured while the aircraft was destroyed.", "Crashed into the Atlantic Ocean in unclear circumstances. As the aircraft failed to arrive in Shannon, SAR operations were conducted but eventually suspended five days later, on May 10, as no trace of the aircraft nor both crew members was found.", "Crashed one minute after its takeoff from Daly Waters while performing a delivery flight to Alice Springs with two crew and two ladies as passengers on board. After takeoff, during the initial climb, while at an altitude of 150 feet, both engines failed simultaneously. The captain elected to make an emergency landing in a prairie but at the last moment, the left engine regained power. The aircraft went out of control and crashed in flames. All four occupants were injured while the aircraft was destroyed.", "Crashed into the sea off Long Island, Bahamas, while performing a night flight from Roosevelt Roads NAS (Ceiba, Porto Rico) to Key West. No trace of the aircraft nor the crew was ever found.", "The crew started the descent to Shaibah Airbase near Basra when all four engines stopped simultaneously. The captain elected to make an emergency landing in a desert area located 66 km northwest of the airport. The aircraft came to rest and was damaged beyond repair while all three crew members were unhurt. The crew was in charge to deliver the aircraft in Karachi as it was just on the Pakistan register since 4 days.", "Crashed on landing in unknown circumstances. There were no casualties.", "Taking part to the Independence War of Israel, the single engine aircraft was engaged in a bombing mission when it crashed in unknown circumstances in Bait Mahseer, a suburb of Amman. All four occupants were killed, among them pilots Yariv Sheinbaum and Daniel Bukstein.", "Following an engine failure, went out of control and crashed in a desert area located near Nairyah. All nine crew members were killed.", "On May 11, the pilot John Spiers left Lae on a ferry flight to Sydney for the annual CofA renewal. On May 12, he departed Daru for Horn Island. Halfway across Torres Strait, he encountered a severe rain storm and turned back to Daru. At low level over sea, the pilot saw a small low mudflat island, so made a forced landing there, wrecking the Dragon. No radio on the aircraft, so Spiers waited to be found. A search was made by a Mandated Airlines C-47 with pilots Brian Carpenter and Tom Deegan as far south as the Australian Gulf country for 3 days. When returning to Daru from Horn Island, they spotted the Dragon on the mudflat island with Spiers sitting on the roof of the aircraft. He had been unable to find food and at high tide the island was mostly under water, so he stayed in the cabin of the Dragon while the sea gradually broke up the aircraft for 6 days without food, surviving by drinking rainwater. RAAF Catalina from Port Moresby landed off Turnagain Island, sent a crew member ashore in a rubber dinghy to collect Spiers. A storm blew up so Catalina returned to Moresby, leaving the two men on the island. They were rescued by a pearling lugger sent from Thursday Island. Source: http://www.goodall.com.au", "The twin engine aircraft left Croydon in the early afternoon for Paris with eight passengers and a crew of two. Six passengers disembarked in Paris and the aircraft took off around 1530LT bound for Cannes. About two hours into the flight, the crew encountered poor weather conditions with heavy rain, turbulence and strong winds. The aircraft went out of control and crashed in a wooded area located on Mt Le Coran, near Saint-Bauzile, about 9 km southeast of Privas. A local farmer was quickly on the scene but all four occupants were killed. Rescue teams arrived the next morning. Crew: Peter Townsend, pilot, Arthur Frederick Freeman, radio operator. Passengers: Peter Wentworth-Fitzwilliam, Kathleen Kennedy-Cavendish, young sister of John Fitzgerald Kennedy.", "The four engine aircraft left L\u00e9opoldville Airport at 0805LT bound for Libenge. About three hours later, as he started the descent to Libenge, the crew encountered poor weather conditions with heavy rain falls, low clouds and turbulence. While descending at an altitude of 700 feet, the aircraft went out of control and crashed in a wooded area located near the village of Magazini, some 27 km south of Libenge. A passenger was seriously injured while 31 other occupants were killed.", "After landing at RAF Bovingdon, while completing a cargo flight, the four engine aircraft was unable to stop within the remaining distance, overran and came to rest. All three crew members were unhurt while the aircraft was damaged beyond repair.", "The crew was completing a test flight from Mendoza to Buenos Aires-Aeroparque-Jorge Newbury Airport. Enroute, the pilot encountered engine problems and decided to divert to Jun\u00edn Airport. On approach, the twin engine aircraft crashed in a field, lost its undercarriage and came to rest in flames. All five crew members were unhurt while the aircraft was destroyed.", "The aircraft left Durban in the early morning on a flight to London via Johannesburg. While cruising in poor weather conditions, the aircraft hit the slope of Mt Spitzkop located 32 km south of Vrede, in the Witkoppens Mountain Range. All 13 occupants were killed. At the time of the accident, the aircraft was off track by eight miles, probably due to navigational error on part of the crew, caused by the lack of visibility due to poor weather conditions.", "\"The flight departed from Newark, New Jersey, at 1733 May 16, 1948, for Chicago, Illinois, Denver, Colorado, Burbank, and San Francisco, California. In addition to a crew consisting of Captain William R. McCauley and Copilot Jack R. Foote, the flight carried 5,280 pounds of fuel, and 10,263 pounds of cargo. According to the hourly weather reports available to the crew in Newark prior to departure, thunderstorm activity which existed over the vicinity of Goshen and Fort Wayne, Indiana, was moving eastward. Chicago Municipal Airport was reported to have a ceiling of 2,000 feet. The flight plan specified a cruising altitude of 4,000 feet to Chicago, the first intended point of landing. South Bend, Indiana, was designated as the alternate airport. No unusual incident was reported for approximately the first two hours of the trip, then, at 1931 the flight reported over Cleveland, Ohio, at 4,000 feet, stating that there was extreme turbulence approximately five miles east of the Cleveland Airport. At this time the flight acknowledged receipt of a weather report from Toledo, Ohio, to the effect that light thunderstorms with cloud to cloud lightning were moving northeasterly from Toledo. At 2013 the flight reported at 4,000 feet over Mansfield, Ohio, 58 miles south southwest of Cleveland. The crew stated that they had changed course to the south to avoid thunderstorms, and intended to proceed to Columbus, Ohio, in accordance with visual flight rules. A special weather observation taken at Cleveland at 2003 which reported a ceiling of 2,000 feet, visibility 10 miles, light rain, wind from the northwest at 30 miles per hour with strong gusts, and cloud to cloud and cloud to ground lightning was transmitted to the flight Cleveland Radio also transmitted a weather observation taken at Columbus at 1930 which reported an unlimited ceiling, visibility of 15 miles, and wind from the south at 14 miles per hour. After acknowledging receipt of this weather information, the flight stated \"\"For your information advise no one to go through the turbulence we just went through.\"\" The next position report was received at 2032 at which time the flight reported being five miles north of Columbus. Following this report it was cleared by Columbus Tower for landing. In reply the flight stated to the tower", "Shortly after takeoff, while in initial climb, the aircraft stalled and crashed in a field. All 17 occupants were injured and the aircraft was destroyed.", "Upon landing in Rennes, an undercarriage collapsed. The aircraft slid for several yards and came to rest. There were no injuries but the aircraft was damaged beyond repair.", "Crashed shortly after takeoff from Guidonia. A crew member (observer) was killed while four others were injured.", "The aircraft left Valence-Chabeuil Airport at 2232LT on a cargo flight to RAF Bovingdon, carrying a crew of four and a load of fruits. On a night approach, the pilot encountered poor visibility due to a low ceiling. During the last turn, the aircraft stalled and crashed in a wooded area located few dozen yards from the airport. A crew member was rescued while three others were killed.", "The crew was performing a delivery flight from Brussels to Tel Aviv via Rome-Urbe Airport. Shortly after takeoff, while in initial climb, the aircraft suffered an explosion and crashed near the runway end. Both pilots were killed and the aircraft was destroyed. The crew consisted of Leonard Cohen and George Frederick Beurling, a Canadian pilot, hero from WWII.", "The crew was completing a training sortie in L\u00fcbeck, towing a glider. While flying around the airport at low height, the left engine failed. The crew immediately dropped the glider and reduced his altitude in an attempt to make an emergency landing. The aircraft crash landed in a field located near the airport, slid for several yards and came to rest in flames. Both pilots escaped uninjured while the aircraft was partially destroyed by fire.", "Crash landed. No injuries.", "Following an uneventful flight from Petropavlovsk-Kamchatsky-Yelizovo Airport, the crew started the descent to Magadan in poor weather conditions. During the final approach, at a distance of 13 km from the runway threshold, the captain was unable to locate the runway and decided to descend to 500 meters, the decision altitude. Unable to establish a visual contact with the runway, he decided to abandon the approach, started a go around and diverted to the Seymchan Airport located some 350 km north of Magadan. Few minutes later, while cruising in poor visibility, the aircraft hit the slope of Mt Marchekanskaya (707 meters high). A passenger was seriously injured while eight other occupants were killed. It appears the aircraft hit the mountain 70 meters below the summit.", "On approach to RAF Bovingdon, the aircraft became unstable and the captain was forced to attempt an emergency landing. The aircraft crash landed in a field located in Studham, about 11 km north of the airbase. While all five occupants were unhurt, the aircraft was damaged beyond repair. It was completing a cargo flight from Valencia, Spain, with a load of apricots.", "The crew was performing a flight from \u017datec, Czech Republic, to the airbase of Ekron-Tel Nof, carrying a load of bombs and a Czech fighter aircraft. While descending to Ekron, the crew encountered poor weather conditions and the captain decided to divert to Tel Aviv-Sde Dov Airport. On final approach, the aircraft was hit by gun fire. In such conditions, the captain increased power and started a go around to leave the area. Few minutes later, while cruising a low height in reduced visibility, the aircraft hit the slope of a mountain located south of Latrun. Both pilots were rescued while the navigator was killed. It was later confirmed by the authorities that the soldiers in place in Tel Aviv Airport opened fire on the aircraft as they have not been informed that an aircraft would land.", "Enroute, the pilot encountered an unexpected situation and was forced to make an emergency landing in a desert area located about 26 km south of El Alamein. All four occupants were rescued while the aircraft was damaged beyond repair.", "The crew was completing a local training sortie in Madrid AFB. On final approach, the twin engine aircraft collided with a private Luscombe that just took off from the same runway. Both aircraft went out of control and crashed near the runway threshold. All four crew members on board the C-47 and the pilot of the Luscombe were killed.", "The crew was engaged in a local training flight in Albacete. Shortly after takeoff, while in initial climb, the four engine aircraft collided with a small private plane. Both aircraft went out of control and crashed near the runway end. All four crew members on board the Halifax and the pilot of the private plane were killed.", "The crew was involved in a test flight at RAF Boscombe Down, with some propeller blade control. While cruising at low height, the crew informed ground he was encountering difficulties and lost control of the airplane that dove into the ground and crashed in a wooded area located eight miles northeast of the airbase. The aircraft was destroyed and both crew members were killed.", "Crashed on landing for unknown reason, injuring both occupants.", "The twin engine aircraft crashed in unknown circumstances near the \u00c7ubuk dam, killing the pilot, sole on board.", "While cruising in the vicinity of the RAF Boscombe Down, the twin engine aircraft collided in unknown circumstances with a RAF Avro 652 Anson registered NL248. The Dominie went out of control and crashed in a prairie while the pilot of the Anson was able to land safely. All three crew members on board the Dominie were killed. Crew: F/O Ashley James Greer, Peter J. Bartlett, Peter C. Damon.", "During takeoff from Lough Erne off Enniskillen, the seaplane hit several waves in strong winds. The departure was interrupted and the aircraft came to rest. There were no casualties but the airplane was damaged beyond repair.", "The crew was completing a training mission in Lisbon. Shortly after takeoff from Lisbon-Portela de Sacav\u00e9m Airport, while in initial climb, the instructor shut down an engine. The aircraft stalled and crashed near the runway end. While all five crew members were injured, the aircraft was destroyed.", "The crew started the descent to Douglas-Ronaldsway Airport in poor weather conditions. Apparently following a navigational error, the aircraft came from the west at a too low altitude when it hit a cliff located near Peel. The wreckage was found few hours later. Both crew members and four passengers were killed while two others were seriously injured. The crew was unable to locate the airport of Douglas and to know his exact position when the accident occurred. The pilot was completing his first flight to Douglas Airport.", "The crew was performing a charter flight from Blackpool to Douglas with an intermediate stop in RAF Walney Island, Cumbria. On approach to the Isle of Man, the crew encountered poor weather conditions and continued to the west to Ireland without locating the Douglas-Ronaldsway Airport. Few minutes later, the pilot realized that the fuel reserve was insufficient and decided to ditch the aircraft into the Irish Sea, off Port Erin. The aircraft came to rest few miles off shore and floated for a while, allowing the occupants to take refuge on the wings, awaiting for help. The crew of a boat rescued all nine occupants shortly later and the aircraft sank and was lost.", "At approximately 2235, June 11, 1948, the flight departed from Burbank, California, for Fort Worth, Texas, via El Paso, Texas. Prior to takeoff a VFR2 flight plan was filed, the weather being clear. Only cargo was carried the only persons aboard being the crew, which consisted of John Dobson, pilot, and John Leslie, copilot. After departure from Burbank, the flight proceeded en route to El Paso at the specified flight plan altitude of 9,000 feet. Approximately 15 minutes after takeoff, over the vicinity of Palmdale, California, control of the aircraft was given to the copilot, and the pilot went to sleep. No trouble was experienced until 0048, at which time the copilot observed flames, deep orange in color and extending about two feet rearward, coming from under the cowl flaps around the entire circumference of the left engine. The pilot was awakened by a shout, and he immediately assumed control of the aircraft. In an attempt to control the fire the crew discharged the emergency fire bottle, cut the fuel flow to the engine, and feathered the propeller, however, the fire continued to burn intensely and the propeller did not feather. A descent for an emergency landing was started, during which the color of the flame changed to brilliant white. It appeared to the crew that the nacelle skin and the leading edge of the wing were burning. Three emergency radio transmissions from NC-79042 were intercepted by an Air Force airplane which relayed the message to Tucson Radio at 0056. To correct excessive air speed the crew reduced power to the right engine and raised the nose of the aircraft. Then the cockpit filled with smoke to the extent that the crew were unable to see the instruments. The aircraft vibrated violently, then fell into an uncontrolled spin or spiral. At approximately 4,000 feet smoke cleared from the cockpit and control of the aircraft was regained. During the descent the burning engine had fallen from the wing, and after regaining control, the crew could observe no sign of fire. Since the aircraft seemed to fly satisfactorily, a right turn towards Tucson, approximately 47 miles to the southeast, was made. In the turns however, altitude could not be maintained, and the aircraft became increasingly right-wing heavy. Accordingly it was decided to land at Eloy, Arizona, 45 miles northwest of Tucson which was observed straight ahead. Ground witnesses in Eloy saw the aircraft at a low altitude with fire in the left wing. A crash landing was made in a wheat stubble field one-fourth mile northeast of Eloy and the crew escaped through the cockpit hatch from the burning aircraft.", "The pilot, sole on board, was forced to make an emergency landing in a field located in Willowbridge, southeast of Waimate. He was unhurt while the aircraft was considered as damaged beyond repair.", "Crashed in unknown circumstances in Coulommiers. There were no casualties.", "The aircraft was on its way from Redhill, Surrey to France when, approaching Berck-sur-Mer, the pilot was forced to attempt an emergency landing for unknown reason. While both occupants were unarmed, the aircraft was damaged beyond repair.", "On final approach to runway 23, while at a height of 500 meters and with an indicated speed of 160 km/h about 500 meters from the runway threshold, the flight engineer reported to the captain that flaps were selected to 3/4 and that the speed was a bit low. The captain did not react and continued the approach in such configuration. Once the aircraft passed over the perimeter road, the captain ordered full flaps and throttle down. The engineer then selected full flaps and slowly retarded the power lever when the aircraft lost height, hit tree tops and hit the ground 175 meters short of the runway threshold. It rolled for several yards and hit a ditch before coming to rest. While all 27 occupants were evacuated safely, the aircraft was considered as damaged beyond repair due to severe structural damages.", "\"The airplane arrived in Chicago at 0952LT, en route from Los Angeles to New York City. At Chicago, the airplane was given a routine station inspection, serviced, loaded, and the flight departed for New York with a new crew at 1044. Aboard were 39 passengers, a crew of four, 2,568 pounds of cargo and 1,800 gallons of fuel, all properly loaded. The resulting total airplane weight was within the certificated gross weight. The airplane climbed en route to its planned altitude of 17,000 feet, proceeding on course, and at 1155 the captain reported to the company radio at LaGuardia Field, that the airplane was mechanically \"\"okay\u201d for a return trip. A routine report was made over Phillipsburg", "The crew was engaged in a local training flight in Shell-Mera Airport. During the takeoff roll with both engines at full power, the aircraft swung to the right. The pilot in command over corrected so the aircraft veered off runway to the left, hit an earth mount and a tree stump before crashing into a building. While all three crew members were unhurt, an employee in the building was killed.", "The pilot was forced to attempt an emergency landing for unknown reason. Upon landing, the aircraft hit several nutmeg trees and came to rest. The aircraft was damaged beyond repair.", "The crew was performing a training sortie at Whidbey Island NAS when an engine caught fire in flight. The pilot decided to return but was eventually forced to make an emergency landing in a field. The aircraft belly landed and came to rest in flames. There were no casualties but the aircraft was destroyed.", "After landing in Maracaibo Airport, the aircraft went out of control, veered off runway and came to rest in flames. There were no casualties but the aircraft was destroyed by fire.", "While on a test flight, the aircraft crashed in unknown circumstances in Segni, about 40 km southeast of Guidonia airbase. Two crew members were injured while the pilot Antonio Biscardi was killed.", "Crashed in unknown circumstances in Merka, some 70 km southwest of Mogadishu. The pilot was unhurt while the aircraft was damaged beyond repair. The exact date of the occurrence remains uncertain.", "Crashed on landing for unknown reason and came to rest on its nose. All occupants escaped uninjured while the aircraft was damaged beyond repair. The accident occurred somewhere in British Columbia, the exact place remains unknown.", "En route to Damascus, the pilot was forced to make an emergency landing in a desert area located in the southeast of Syria. Both occupants were unhurt while the aircraft was damaged beyond repair.", "On landing, went out of control, veered off runway and came to rest. A crew member was killed while 16 other occupants were injured. The aircraft was written off.", "In flight, the twin engine aircraft collided with a USAF North American P-51D Mustang registered 45-11680. A crew member was able to bail out before the Invader crashed in a field, killing all three other crew members. The fate of the P-51's crew remains unknown.", "Shortly after takeoff from Bogot\u00e1-Techo Airport, while on a cargo flight to Medell\u00edn, the crew encountered engine problems and elected to return. Due to technical issues, the crew was unable to lower the gear so the aircraft belly landed and came to rest. There were no injuries but the aircraft was considered as damaged beyond repair.", "Crashed in unknown circumstances near Erding AFB, killing all four occupants.", "Shortly after takeoff from Cue Airport, while on a local training flight, an engine failed. The aircraft lost height, hit trees and crashed in a wooded area. Both pilots were killed.", "En route, the crew encountered poor weather conditions with heavy rain falls and thunderstorm activity. The airplane hit the slope of Orizaba Peak located northeast of Ciudad Serd\u00e1n. The wreckage was found three days later and all 14 occupants were killed. The aircraft was performing a special flight for the US-Mexico Foot and Mouth Disease Commission.", "On approach to Brussels-Zaventem Airport, the crew encountered poor weather conditions with heavy rain falls, low visibility and a ceiling at 100 meters. In such conditions, the captain overshot the runway in Zaventem and was unable to land. He increased power on all three engines and continued to the northeast. Few minutes later, he decided to land on a makeshift airfield in Keerbergen but during the last turn to the left, the aircraft stalled and crashed in a field. Three passengers and a crew member survived while all eight other occupants were killed.", "The crew was performing a training sortie in RAF Lindholme. On final approach with one engine voluntarily inoperative, the pilot was unable to lower the undercarriage. The crew decided to go around when the aircraft stalled and hit the runway surface, crashing on its belly. There were no injuries but the aircraft was damaged beyond repair.", "Crashed in unknown circumstances 15 miles from Merka. Both crew members survived while the aircraft was damaged beyond repair.", "The crew was performing a test flight from RAF Boscombe Down to RAF Defford on behalf of the A & AEE. Shortly after takeoff, while climbing to a height of 3,500 feet with the propeller of the engine number one feathered and the number two running at low speed, the aircraft stalled, went into a dive and crashed in a field located in Wylye, about 10 miles west of RAF Boscombe Down. All four crew members were killed. Crew: S/L A. Toot, F/Lt A. G. Bradfield, F/O G. W. Williams, P. W. Howes.", "On final approach to Prince George, while completing a local flight, the single engine aircraft stalled and crashed. All three occupants were killed.", "The four engine aircraft left Malta-Luqa Airport bound for RAF Northolt with four passengers and a crew of three on board. While approaching the London area, the crew encountered low visibility due to poor weather conditions. The crew was cleared to descent to 3,000 feet when the aircraft collided with a Scandinavian Airlines System (SAS) DC-6 registered SE-BDA. Inbound from Amsterdam, this second aircraft was carrying 25 passengers and a crew of 7. Following the collision, both aircraft went out of control, dove into the ground and crashed in a wooded area located in Northwood, about 4 miles north of RAF Northolt. Both aircraft were destroyed and all 39 people were killed. Among the passenger of the York was Sir Gerard Edward James, High Commissioner in Malaysia for Her Majesty the Queen of England.", "The four engine aircraft christened 'Agnar Viking' was approaching RAF Northolt when the crew encountered low visibility due to poor weather conditions. After being cleared by ATC to descent to 2,500 feet, the crew was unable to locate the airport and decided to return to Amsterdam-Schiphol Airport. Few minutes later, while climbing to an altitude of 3,000 feet, the aircraft collided with a Royal Air Force Avro 685 York C.1 registered MW248. This second aircraft was completing a flight from Malta-Luqa with four passengers and a crew of three. Following the collision, both aircraft went out of control, dove into the ground and crashed in a wooded area located in Northwood, about 4 miles north of RAF Northolt. Both aircraft were destroyed and all 39 people were killed.", "The left engine caught fire during start up. The crew called the fire brigade and evacuated the aircraft. The fire was extinguished but the aircraft was partially destroyed by fire and considered as damaged beyond economical repair.", "The approach to Wiesbaden-Erbenheim AFB was completed by night and poor weather conditions. On final, the aircraft hit tree tops and crashed in a wooded area located 1,6 km short of runway 25 threshold. Both pilots were injured while the aircraft was damaged beyond repair.", "The crew was completing a training flight from Oslo-Fornebu Airport to Oslo-Gardermoen Airport. The twin engine aircraft crash landed for unknown reason and was damaged beyond repair. All three crew members were unarmed. Crew: Lt Nils Arveschoug, Lt H. Hartmann, Lt F. Eriksrud.", "While flying by night and in poor weather conditions, the aircraft hit the slope of a mountain located near Li Dinh. The wreckage was found a day later and all 16 occupants were killed. Crew: Ottino Sabbadini, pilot, Andr\u00e9 Delfau, radio navigator, Andr\u00e9 Stang, mechanic.", "Crashed 2 miles southwest of Offutt AFB following an engine failure. The crew fate remains unknown.", "During a night approach to Greenville, the aircraft crashed in flames and burned. At least one crew member was killed in the accident.", "Few minutes after takeoff from Wiesbaden-Erbenheim AFB, while climbing by night, the aircraft hit the slope of Mt Steinkopf located near K\u00f6nigstein im Taunus, about 16 km northeast of Wiesbaden Airport. All three crew members were killed. They were involved in the Berlin Airlift.", "While cruising in foggy conditions, the aircraft hit the slope of a mountain located 17 km from Coronel Pringles. The aircraft was destroyed by impact forces and a post crash fire and all five crew members were killed.", "On final approach to Maiquet\u00eda-Sim\u00f3n Bol\u00edvar Airport, while on a cargo flight from Havana, both engines flamed out. The aircraft stalled and crashed into the sea few hundred yards short of the runway threshold. All three crew members were rescued while the aircraft sank and was lost.", "During a training sortie in Laverton AFB, the crew encountered an unexpected situation and made an emergency landing in a field located one mile north of the airbase. Both occupants were rescued while the aircraft was damaged beyond repair.", "For unknown reason, the four engine aircraft crash landed and came to rest in flames. All 12 occupants were rescued while the aircraft was destroyed by fire.", "The crew was engaged in a local training flight in Singapore-Seletar Airport. Just after liftoff, an engine was cut by the instructor. The aircraft stalled and bounced, causing the tail to separate. The seaplane crashed and came to rest. There were no casualties but the aircraft was written off.", "The crew started the approach to Marseille-Marignane Airport in foggy conditions. The aircraft hit a cliff located near Cape Sici\u00e9, south of Toulon. All six occupants were killed.", "Shortly after takeoff from runway 06, while on initial climb, the pilot made a turn to the left when the aircraft stalled and crashed in a huge explosion. The aircraft was destroyed by fire and all five occupants were killed.", "Crashed in unknown circumstances in Cumbica, south of the S\u00e3o Paulo-Guarulhos Airport. All 12 crew members were killed.", "Shortly after takeoff from Smoky Hill AFB (Schilling AFB), while on a local training flight, an engine failed. Four crew members were able to bail out before the aircraft dove into the ground and crashed in a field located two miles southeast of Smolan, about four miles south of the airbase. The aircraft was destroyed by impact forces and nine crew members were killed. The four crew members who were able to bail out were injured, one of them seriously.", "Crashed in unknown circumstances into the Puerto Cabello harbor. The crew fate remains unknown but the aircraft was lost.", "Shortly after takeoff from Macau, a hijacker came into the cockpit and killed the captain with a gun. The copilot lost control of the aircraft christened 'Miss Macau' that crashed into the Zhujiang River Estuary, between Macau and Hong Kong. A passenger was seriously injured while all 25 other occupants were killed. This event was considered as the first official hijacking of a commercial aircraft in the Civil Aviation History. It was later reported that lone survivor, Huang Yu, was the admitted leader of the hijacking plot. He survived by jumping out the emergency exit just before the crash. He was brought to court by the Macau Police, but the Macau court suggested that the prosecution should be brought in Hong Kong instead, since the plane was registered in Hong Kong and most of the passengers were from there. However, the British colonial government in Hong Kong stated that the incident happened over Chinese territory in which the British have no jurisdiction. Since no state claimed authority to try him, Huang was released without trial from Macau prison on 11 June 1951, and was then deported to China.", "Hit the slope of a mountain located near Lumbreras, province of La Rioja. All three occupants flying from White Waltham were killed.", "En route, an engine failed, forcing the crew to attempt an emergency landing south of Tel Aviv. While the aircraft was damaged beyond repair, all five occupants survived. The captain Murray Weissberg was recovered later while the second pilot Spencer Boyd and all three passengers were captured by Palestinians soldiers and later executed.", "The crew was forced to ditch the aircraft into the Mediterranean Sea some 130 km south of Marseille. All twenty occupants were rescued while the aircraft sank and was lost.", "The crew was engaged in a test flight on this first prototype and was completing a short flight from Toussus-le-Noble to his main base in V\u00e9lizy-Villacoublay. On final approach, at an altitude of 250 meters, the four engine aircraft nosed down and crashed in a huge explosion in the wood of Verri\u00e8res located less than two km from the runway threshold. The aircraft was destroyed by impact forces and a post crash fire and all five crew members were killed. Crew: Louis Bertrand, pilot, Abel Nicolle, flight engineer, Robert Facomprez, radio operator, Maurice Itasse, mechanic, Marcel Constum, mechanic.", "On final approach to Lod Airport, the aircraft stalled and crashed short of runway. All three crew members were unhurt while the aircraft was damaged beyond repair. It appears that two engines were inoperative at the time of the accident, maybe following fuel starvation ? Israel authorities reported that the aircraft was on a delivery flight from the UK and that nor the crew nor the operator received any permission to land in Israel.", "This version was an electronic reconnaissance aircraft used in Arctic conditions. It crashed into Lake Mead, during a research flight. The crew of five was able to scramble away before the plane sank. It has been located by sonar in 170 feet of water, largely intact except for 3 missing engines (number two, three and four). The flight was for a secret missile guidance system that allowed navigation by tracking of the Sun. A low pass over calm water with pilot error put it into the lake. The aircraft plummeted from high altitude down to as close to the lake as possible. Unfortunately, Captain Robert M. Madison lost his depth perception and plowed the huge plane into the lake at 230 mph. The impact tore off all but one of the engines and sent the plane skipping along the lake surface. When she eventually stopped, she began to take on water and started to sink. Fortunately, all of the crew was able to escape into life rafts and wait for rescue. Source: http://www.advanceddivermagazine.com/articles/B29/B29.html", "The crew was engaged in a maritime patrol flight over the North Sea. While flying over Scotland, the crew encountered poor visibility when the twin engine aircraft hit the slope of a mountain near Auchenblae. All six crew members were killed.", "After landing, the aircraft failed to stop within the remaining runway, overran and hit some rocks. While there were no casualties, the aircraft was damaged beyond repair. For unknown reason, the aircraft landed too far down the runway.", "En route, the crew encountered an unexpected situation and was forced to attempt an emergency landing in Hinojosa del Duque. The aircraft crash landed in a field and came to rest in flames. All ten occupants were injured while the aircraft was destroyed by fire.", "The aircraft left Port-Menier, Anticosti Island, on a charter flight to Gasp\u00e9, carrying two pilots and 27 people, most of them employees of the Consolidated Paper Company. The approach to Gasp\u00e9 Airport was started from the east in foggy conditions. While flying too low, the aircraft hit some trees, stalled and crashed in a wooded area located near Cap-des-Rosiers, about 20 km east of Gasp\u00e9 Airport. Rescuers arrived on the scene few hours later and all 29 occupants were killed. Crew: Emerson Mills, pilot, Ross Miles, copilot. Passengers: Germain Jean, Elle Godin, Camille Furgesson, Jean Laflamme, Lawrence Travers, Mathias Cote, Henri Tardif, Rolland Denis, Alphonse Veer, Ren\u00e9 Blais, Alfred Desjardins, Rodolphe Gendreau, Roger Gendreau, Hughes Prouix, James Travers, G\u00e9rard Despr\u00e9s, Harris Gleeton, Eddy Bouchard, Julien Fynott, Mr. and Mrs. Berth McCallum and son, Joseph Gauvin, Romuald Dufresne, Clarimond Fournier, Mr. and Mrs. Emmett Maloney.", "On approach to Fassberg AFB, an engine caught fire. On landing, an undercarriage collapsed and the aircraft veered off runway and came to rest in flames. While all three crew members were unhurt, the aircraft was destroyed by fire.", "On final approach to Berlin-Tempelhof Airport, taking part to the Berlin Airlift, the twin engine aircraft hit the roof of a building and crashed in flames in the adjacent street located in the suburb of Friedenau. Both crewmen were killed while three people on the ground were injured. The aircraft was destroyed by impact forces and a post crash fire.", "After takeoff, while climbing in thunderstorm activity, the aircraft went out of control and crashed in to the sea. All six crew members were killed.", "During the takeoff roll, the four engine aircraft went out of control, veered off runway, lost its undercarriage and came to rest. There were no casualties but the aircraft was written off.", "Just after liftoff, the twin engine aircraft stalled and crashed in flames. All 14 occupants were quickly rescued while the aircraft was destroyed by a post crash fire. The crew was completing a flight from Belgian Congo to Brussels via Sudan.", "Shortly after takeoff from Paris-Le Bourget Airport, the four engine aircraft christened 'Keroual' crashed in unknown circumstances in Aubervilliers, south of the airport. All three crew members were slightly injured while the aircraft was damaged beyond repair.", "Crashed shortly after takeoff from Melun-Villaroche Airport while on a test flight. The crew fate remains unknown.", "On landing off Kittigazuit, the seaplane hit rocks and sank rapidly. There were no casualties but the aircraft was lost.", "The approach to Buenos Aires harbor was completed in foggy conditions. The seaplane hit the water surface and crashed in the River Plate. Six passengers were injured while 18 other occupants were killed. Few hours later, two survivors died from their injuries.", "Shortly after takeoff, while climbing to a height of 100 meters, the aircraft went out of control and crashed near the runway end. Five passengers and a crew member were seriously injured while 18 other occupants were killed.", "En route to RAF Northolt, the crew encountered technical problem with the right engine and was forced to shut it down and to feather its propeller. As the aircraft was unable to maintain the prescribed altitude, the crew decided to divert to Sywell. On final approach, the aircraft was misaligned and overflew the runway at low height before colliding with power cables. Out of control, it crashed in a field and came to rest. All 19 occupants were slightly injured while the aircraft was damaged beyond repair.", "Crashed in unknown circumstances. Crew fate unknown.", "On approach to Turukhansk, the wind was gusting to 43 km/h. Waves up to 50 cm were spotted in the Enisey River. On landing, the seaplane hit three successive waves and plunged into the water. The cockpit separated from the rest of the fuselage, the aircraft came to rest and sank. Three passengers, two women and one child, were killed while 17 other occupants were rescued, five of them seriously injured. The aircraft was a total loss.", "The crew was performing a flight from Fort-de-France, Martinique, to Paris, with an intermediate stop in Port-Etienne, Mauritania. While cruising by night over the Atlantic Ocean, about 1,920 km from Port-Etienne (now Nouadhibou), the aircraft crashed into the ocean in unknown circumstances at 2355LT. No message was sent by the crew. SAR operations were jointly conducted by several countries and few debris were found by the crew of USS Campbell three days later, on August 4. Unfortunately, none of the 52 occupants survived the crash of this six-engine aircraft christened 'Henri Guillaumet'. Crew: Corentin Kersual, pilot, Jean Goutay, copilot, Henri Gloux, radio navigator, Gontran Ronat, radio navigator, Henri Cabanes, navigator, Gaston Le Morvan, mechanic, Jean Coustaline, mechanic, Alfred Jaggi, mechanic, Mr. Arbelot, mechanic, Mr. Sgourdeos, steward, Mr. Meunier, steward.", "The crew was completing a cargo flight from Chaklala Airport in Islamabad, carrying a load of military goods. On final approach to Mauripur Airport, while at an altitude of 300 feet, the aircraft pitched up and down and then went into a nose down attitude. Out of control, it plunged into the earth and crashed in a near vertical angle near the runway 22 threshold. The aircraft was destroyed and all four crew members were killed.", "Shortly after takeoff from Berlin-Gatow Airport, the crew reported technical problems and received the permission to return for an emergency landing. On touchdown, the undercarriage collapsed. The aircraft slid for several yards and came to rest. All three crew members were unhurt while the aircraft was considered as damaged beyond repair.", "The crew was descending to Opa Locka Airport when the aircraft collided with a Stearman while 11 miles north of Miami. Both aircraft dove into the ground and crashed. While both occupants of the Stearman were able to bail out and were found alive, all 10 crew members of the R4D-6 inbound from Norfolk NAS were killed. The exact circumstances and causes of the in flight collision remains unknown.", "About 15 minutes after takeoff from Blenheim-Woodbourne Airport, while on a cargo flight to Paraparaumu, the crew encountered poor weather conditions. The aircraft hit the slope of a mountain located in Rununder Point, near Port Underwood, 32 km northeast of Blenheim. Both pilots were killed. Crew: Murdo McLeod, R. J. R. H. Makgill.", "En route, the crew informed ATC that the engine number four failed. He received the permission to divert to RAF Desford to attempt an emergency landing. To lower the risk of fire, the crew decided to shut down the engine number three and feathered the propeller as well. Due to a loss of speed, the aircraft was unable to maintain a safe altitude. During the last segment, the aircraft stalled and hit violently the runway surface. On impact, the aircraft broke in two and came to rest in flames. All four crew members were evacuated safely while the aircraft was destroyed.", "Shortly after a night takeoff from Roswell Airport, while in initial climb, the aircraft went out of control and crashed in a huge explosion six miles south of the airfield. Eight crew members were injured while 13 others were killed. It was reported that the aircraft may have been overloaded. Crew killed were: Maj Joe O. Will Jr., pilot, Cpt Richard W. Hunsicker, M/Sgt James L. Brewer, Sgt Clyde N. Vanderslice, Sgt Earl P. Boley, Cpl Richard L. Lighthall, Cpl Gordon E. McNeill, Cpl Wayne O. Werkchiser, Pfc John J. Capitan, Pfc Maurice Harris, Pvt Kenneth Ruohonen, Sgt Charles R. Jackson, Pfc Norman J. Remy.", "On final approach to Sydney, the aircraft was too low and hit an earth mound short of the runway threshold. On impact, an undercarriage punctured a fuel tank and a fire erupted. The aircraft landed safely but came to rest in flames and was damaged beyond repair. All 17 occupants were unhurt.", "The crew was completing a short flight from Agana NAS to Rota Island. On final approach to runway 27, in poor weather conditions, the aircraft was too low and hit a cliff located about 2 miles from the runway threshold. All 12 crew members were killed. Crew: Lt Thomas C. O'Connor, Russell G. Delany, Walter R. Delaney, Charles D. Rudolph, Trafton R. Lee, John A. Beland, Carl H. Christensen, Charles G. Degarimore, Clarence Pinkerton, Paul D. McDonald, Lt William L. Wise, Frederick A. Earle Chaero.", "After touchdown on runway 27R at Tempelhof Airport, the aircraft was unable to stop within the remaining distance, overran, hit a wooded fence and came to rest in flames. All four crew members were unhurt while the aircraft was partially destroyed by fire. The crew was taking part to the Berlin Airlift.", "On landing, the aircraft overturned and came to rest upside down. The pilot, sole on board, was unhurt while the aircraft was damaged beyond repair.", "Shortly after takeoff from Ellsworth AFB, while in initial climb, the aircraft went out of control and crashed in a huge explosion in a prairie located 5 miles north of the airfield. All 17 occupants were killed.", "The crew was involved in a training mission and was in charge to locate an appropriate dropping zone for paratroopers. While flying at an estimated height of few hundred yards, the crew realized that smoke was coming out from the right engine. Few seconds later, the aircraft banked right, dove into the ground and crashed in a prairie. All five crew members were killed.", "The aircraft left Prague-Kbely Airport in the early morning with a crew of three and three engineers on board, bound for Liberec where they should take part to a meeting. While descending to Liberec in poor weather conditions (heavy rain falls), the twin engine aircraft hit the slope of Mt Je\u0161ted few meters below the top and came to rest in flames. Two passengers were seriously injured and evacuated to a local hospital while four other occupants were killed. Six days later, one of the survivor died from his injuries. The visibility was very limited due to heavy rain falls and low ceiling. Crew: V\u00e1clav Barborka, pilot, Jan Padouch, radio operator, Josef Kroul\u00edk, navigator. Passengers: Anton\u00edn Husn\u00edk (survived but died 6 days later), Vladim\u00edr Karmaz\u00edn, killed, V\u00e1clav Brabec, survived.", "On the leg from Maiquet\u00eda to Las Piedras, while on a cargo flight to Maracaibo, the aircraft crashed in unknown circumstances into the Caribbean Sea, off the Venezuelan coast. No trace of the aircraft nor the crew was found.", "The crew was completing a training sortie in RAF Kinloss. The final approach was completed in heavy cross winds (up to 50 knots) and during the last segment, the captain decided to abandon the landing procedure and started a go around maneuver. During initial climb, while at a height of 250 feet, the four engine aircraft went out of control and crashed in a huge explosion. All eight crew members were killed.", "Shortly after takeoff from Barbers Point NAS, bound for Kadena via Kwajalein, the pilot informed ground that an engine failed and elected to return. ATC guided the crew to Hickam Field in Honolulu and eight minutes later, while on approach, the airplane overshot so the pilot-in-command decided to make a go around when control was lost. The airplane crashed in flames and skidded for about 600 yards before coming to rest in flames. Sixteen crew members were killed while four others were injured.", "The crew was performing a cargo flight from Berlin-Tempelhof to the airbase of Wiesbaden-Erbenheim, taking part to the Berlin Airlift. While cruising in a reduced visibility due to foggy conditions, the aircraft collided with a USAF Douglas C-47A-90-DL registered 43-16036 and carrying also a crew of two and conducting the same operation from Berlin to Wiesbaden. Following the collision, both aircraft dove into the ground. The first crashed about 100 yards south of the city of Ravolzhausen while the second crashed about one km northwest of the same city. All four crew members on both aircraft were killed."], "data": [1, 10, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Crash cause": {"label": ["Technical failure", "Unknown", "Weather", "Human factor", "Other causes", "Terrorism act, Hijacking, Sabotage"], "data": [126, 296, 26, 47, 4, 1]}, "Date_stringindexer_transform": {"label": ["305.0"], "data": [500]}, "Time_stringindexer_transform": {"label": ["0.0 - 12.4", "12.4 - 24.8", "24.8 - 37.2", "37.2 - 49.6", "49.6 - 62.0", "62.0 - 74.4", "74.4 - 86.8", "86.8 - 99.2", "99.2 - 111.6", "111.6 - 124.0"], "data": [458, 5, 2, 0, 4, 5, 0, 1, 4, 1]}, "Aircraft_stringindexer_transform": {"label": ["71.0 - 71.0"], "data": [500]}, "Operator_stringindexer_transform": {"label": ["2.0 - 14.1", "14.1 - 26.2", "26.2 - 38.3", "38.3 - 50.4", "50.4 - 62.5", "62.5 - 74.6", "74.6 - 86.7", "86.7 - 98.8", "98.8 - 110.9", "110.9 - 123.0"], "data": [71, 1, 3, 1, 2, 2, 3, 1, 0, 416]}, "Registration_stringindexer_transform": {"label": ["0.0 - 46.8", "46.8 - 93.6", "93.6 - 140.4", "140.4 - 187.2", "187.2 - 234.0", "234.0 - 280.8", "280.8 - 327.6", "327.6 - 374.4", "374.4 - 421.2", "421.2 - 468.0"], "data": [43, 0, 0, 1, 0, 0, 0, 0, 0, 0]}, "Flight phase_stringindexer_transform": {"label": ["2", "0", "1", "3"], "data": [114, 264, 95, 27]}, "Flight type_stringindexer_transform": {"label": ["0.0 - 1.8", "1.8 - 3.6", "3.6 - 5.4", "5.4 - 7.2", "7.2 - 9.0", "9.0 - 10.8", "10.8 - 12.6", "12.6 - 14.4", "14.4 - 16.2", "16.2 - 18.0"], "data": [258, 132, 58, 23, 7, 8, 5, 4, 4, 1]}, "Survivors_stringindexer_transform": {"label": ["0", "2", "1"], "data": [306, 28, 166]}, "Crash site_stringindexer_transform": {"label": ["0.0", "1.0", "4.0", "2.0", "3.0", "6.0", "5.0"], "data": [246, 168, 8, 58, 12, 3, 5]}, "Schedule_stringindexer_transform": {"label": ["0.0 - 31.0", "31.0 - 62.0", "62.0 - 93.0", "93.0 - 124.0", "124.0 - 155.0", "155.0 - 186.0", "186.0 - 217.0", "217.0 - 248.0", "248.0 - 279.0", "279.0 - 310.0"], "data": [220, 31, 31, 31, 31, 31, 31, 31, 31, 32]}, "MSN_stringindexer_transform": {"label": ["160.0", "0.0", "94.0", "134.0", "22.0", "1.0", "65.0"], "data": [377, 117, 1, 2, 1, 1, 1]}, "YOM_stringindexer_transform": {"label": ["0.0", "5.0", "1.0", "2.0", "3.0", "6.0", "4.0"], "data": [330, 4, 68, 56, 24, 2, 16]}, "Flight number_stringindexer_transform": {"label": ["0"], "data": [500]}, "Crash location_stringindexer_transform": {"label": ["4.0 - 48.2", "48.2 - 92.4", "92.4 - 136.6", "136.6 - 180.8", "180.8 - 225.0", "225.0 - 269.2", "269.2 - 313.4", "313.4 - 357.6", "357.6 - 401.8", "401.8 - 446.0"], "data": [16, 2, 0, 9, 3, 1, 0, 3, 2, 464]}, "Country_stringindexer_transform": {"label": ["0.0 - 4.2", "4.2 - 8.4", "8.4 - 12.6", "12.6 - 16.8", "16.8 - 21.0", "21.0 - 25.2", "25.2 - 29.4", "29.4 - 33.6", "33.6 - 37.8", "37.8 - 42.0"], "data": [209, 21, 9, 43, 23, 32, 7, 14, 8, 134]}, "Region_stringindexer_transform": {"label": ["0.0", "1.0", "3.0", "6.0", "2.0", "7.0", "4.0", "5.0"], "data": [237, 210, 13, 4, 20, 1, 9, 6]}, "Crew on board_stringindexer_transform": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [103, 188, 2, 196, 1, 1, 0, 0, 0, 9]}, "Crew fatalities_stringindexer_transform": {"label": ["0.0", "3.0", "1.0", "4.0", "7.0", "2.0", "5.0"], "data": [241, 50, 37, 46, 46, 60, 20]}, "Pax on board_stringindexer_transform": {"label": ["0.0 - 3.9", "3.9 - 7.8", "7.8 - 11.7", "11.7 - 15.6", "15.6 - 19.5", "19.5 - 23.4", "23.4 - 27.3", "27.3 - 31.2", "31.2 - 35.1", "35.1 - 39.0"], "data": [356, 39, 30, 22, 17, 14, 8, 6, 4, 4]}, "PAX fatalities_stringindexer_transform": {"label": ["0.0", "16.0", "3.0", "2.0", "13.0", "1.0", "10.0", "5.0"], "data": [460, 2, 5, 18, 2, 9, 1, 3]}, "Other fatalities_stringindexer_transform": {"label": ["0", "1"], "data": [499, 1]}, "Circumstances_stringindexer_transform": {"label": ["486.0", "344.0", "0.0", "198.0"], "data": [455, 16, 24, 5]}, "Crash cause_stringindexer_transform": {"label": ["0.0 - 1.9", "1.9 - 3.8", "3.8 - 5.7", "5.7 - 7.6", "7.6 - 9.5", "9.5 - 11.4", "11.4 - 13.3", "13.3 - 15.2", "15.2 - 17.1", "17.1 - 19.0"], "data": [324, 141, 21, 2, 2, 2, 2, 2, 2, 2]}}}, "ManualFE": {"FE": [{"transformationsData": [{"feature_label": "Date", "transformation_label": "String Indexer"}], "feature": "Date", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "1/10/1923", "max": "9/9/1921", "missing": "0", "distinct": "305"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Date"}, {"transformationsData": [{"feature_label": "Time", "transformation_label": "String Indexer"}], "feature": "Time", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "10H 0M 0S", "max": "NA", "missing": "0", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Time"}, {"transformationsData": [{"feature_label": "Aircraft", "transformation_label": "String Indexer"}], "feature": "Aircraft", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Aeromarine 40", "max": "Wild WT-S", "missing": "0", "distinct": "96"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Aircraft"}, {"transformationsData": [{"feature_label": "Operator", "transformation_label": "String Indexer"}], "feature": "Operator", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "AVENSA - Aerovias Venezolanas", "max": "Waite Fisheries", "missing": "0", "distinct": "123"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Operator"}, {"transformationsData": [{"feature_label": "Registration", "transformation_label": "String Indexer"}], "feature": "Registration", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "1302.53", "stddev": "5524.09", "min": "103", "max": "V-201", "missing": "0", "distinct": "454"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Registration"}, {"transformationsData": [{"feature_label": "Flight phase", "transformation_label": "String Indexer"}], "feature": "Flight phase", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Flight", "max": "Taxiing", "missing": "0", "distinct": "6"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Flight phase"}, {"transformationsData": [{"feature_label": "Flight type", "transformation_label": "String Indexer"}], "feature": "Flight type", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Aerial photography", "max": "Training", "missing": "0", "distinct": "18"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Flight type"}, {"transformationsData": [{"feature_label": "Survivors", "transformation_label": "String Indexer"}], "feature": "Survivors", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "NA", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Survivors"}, {"transformationsData": [{"feature_label": "Crash site", "transformation_label": "String Indexer"}], "feature": "Crash site", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Airport (less than 10 km from airport)", "max": "Plain, Valley", "missing": "0", "distinct": "7"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crash site"}, {"transformationsData": [{"feature_label": "Schedule", "transformation_label": "String Indexer"}], "feature": "Schedule", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Abu Sueir - Abu Sueir", "max": "Wright Patterson AFB-Wright Patterson AFB", "missing": "0", "distinct": "311"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Schedule"}, {"transformationsData": [{"feature_label": "MSN", "transformation_label": "String Indexer"}], "feature": "MSN", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "81024.0", "stddev": "1084425.62", "min": "1", "max": "SH.915", "missing": "0", "distinct": "160"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "MSN"}, {"transformationsData": [{"feature_label": "YOM", "transformation_label": "String Indexer"}], "feature": "YOM", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "1919.92", "stddev": "1.06", "min": "1918", "max": "NA", "missing": "0", "distinct": "29"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "YOM"}, {"transformationsData": [{"feature_label": "Flight number", "transformation_label": "String Indexer"}], "feature": "Flight number", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "NA", "max": "NA", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Flight number"}, {"transformationsData": [{"feature_label": "Crash location", "transformation_label": "String Indexer"}], "feature": "Crash location", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Abadan Khuzestan", "max": "\u00c7ubuk Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "missing": "0", "distinct": "362"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crash location"}, {"transformationsData": [{"feature_label": "Country", "transformation_label": "String Indexer"}], "feature": "Country", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Australia", "max": "Zimbabwe", "missing": "0", "distinct": "42"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Country"}, {"transformationsData": [{"feature_label": "Region", "transformation_label": "String Indexer"}], "feature": "Region", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Africa", "max": "World", "missing": "0", "distinct": "8"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Region"}, {"transformationsData": [{"feature_label": "Crew on board", "transformation_label": "String Indexer"}], "feature": "Crew on board", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "1.02", "stddev": "1.29", "min": "0", "max": "NA", "missing": "0", "distinct": "16"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crew on board"}, {"transformationsData": [{"feature_label": "Crew fatalities", "transformation_label": "String Indexer"}], "feature": "Crew fatalities", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "0.51", "stddev": "1.11", "min": "0", "max": "5", "missing": "0", "distinct": "7"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crew fatalities"}, {"transformationsData": [{"feature_label": "Pax on board", "transformation_label": "String Indexer"}], "feature": "Pax on board", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "5.08", "stddev": "9.45", "min": "0", "max": "9", "missing": "0", "distinct": "11"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Pax on board"}, {"transformationsData": [{"feature_label": "PAX fatalities", "transformation_label": "String Indexer"}], "feature": "PAX fatalities", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "3.09", "stddev": "7.66", "min": "0", "max": "9", "missing": "0", "distinct": "35"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "PAX fatalities"}, {"transformationsData": [{"feature_label": "Other fatalities", "transformation_label": "String Indexer"}], "feature": "Other fatalities", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "0.01", "stddev": "0.22", "min": "0", "max": "5", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Other fatalities"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total fatalities", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "5.1", "stddev": "8.95", "min": "0", "max": "53", "missing": "0"}, "updatedLabel": "Total fatalities"}, {"transformationsData": [{"feature_label": "Circumstances", "transformation_label": "String Indexer"}], "feature": "Circumstances", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "\"After takeoff from Lae-Nadzab Airport, while climbing vertical to the Huon Gulf, the right engine failed, followed shortly later by the left engine. The pilot reduced his altitude and ditched the aircraft off Lae. All three occupants were quickly rescued by a fisherman while the aircraft was lost. Testimony from the passenger: \"\"I had the day off and Johnny Rose was doing a trip to Kokoda and Popondetta. I'd never been there and when he offered me a seat I jumped at it. He had another passenger on board", "max": "While taxiing, the twin engine aircraft swung due to heavy winds, lost its undercarriage and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "missing": "0", "distinct": "433"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Circumstances"}, {"transformationsData": [{"feature_label": "Crash cause", "transformation_label": "String Indexer"}], "feature": "Crash cause", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Human factor", "max": "Weather", "missing": "0", "distinct": "20"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crash cause"}, {"feature": "Date_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "112.27", "stddev": "88.4", "min": "0.0", "max": "304.0", "missing": "0"}, "updatedLabel": "Date_stringindexer_transf..."}, {"feature": "Time_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "16.13", "stddev": "32.22", "min": "0.0", "max": "124.0", "missing": "0"}, "updatedLabel": "Time_stringindexer_transf..."}, {"feature": "Aircraft_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "71.0", "stddev": "0.0", "min": "71.0", "max": "71.0", "missing": "0"}, "updatedLabel": "Aircraft_stringindexer_tr..."}, {"feature": "Operator_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "18.86", "stddev": "30.8", "min": "0.0", "max": "122.0", "missing": "0"}, "updatedLabel": "Operator_stringindexer_tr..."}, {"feature": "Registration_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "219.5", "stddev": "142.88", "min": "0.0", "max": "468.0", "missing": "0"}, "updatedLabel": "Registration_stringindexe..."}, {"feature": "Flight phase_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.97", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "Flight phase_stringindexe..."}, {"feature": "Flight type_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.25", "stddev": "2.89", "min": "0.0", "max": "17.0", "missing": "0"}, "updatedLabel": "Flight type_stringindexer..."}, {"feature": "Survivors_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.44", "stddev": "0.6", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "Survivors_stringindexer_t..."}, {"feature": "Crash site_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.12", "stddev": "1.42", "min": "0.0", "max": "6.0", "missing": "0"}, "updatedLabel": "Crash site_stringindexer_..."}, {"feature": "Schedule_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "96.66", "stddev": "103.14", "min": "0.0", "max": "310.0", "missing": "0"}, "updatedLabel": "Schedule_stringindexer_tr..."}, {"feature": "MSN_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "121.54", "stddev": "68.11", "min": "0.0", "max": "160.0", "missing": "0"}, "updatedLabel": "MSN_stringindexer_transfo..."}, {"feature": "YOM_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "4.3", "stddev": "3.41", "min": "0.0", "max": "7.0", "missing": "0"}, "updatedLabel": "YOM_stringindexer_transfo..."}, {"feature": "Flight number_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Flight number_stringindex..."}, {"feature": "Crash location_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "422.7", "stddev": "88.16", "min": "4.0", "max": "446.0", "missing": "0"}, "updatedLabel": "Crash location_stringinde..."}, {"feature": "Country_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "17.47", "stddev": "17.04", "min": "0.0", "max": "42.0", "missing": "0"}, "updatedLabel": "Country_stringindexer_tra..."}, {"feature": "Region_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.77", "stddev": "1.09", "min": "0.0", "max": "7.0", "missing": "0"}, "updatedLabel": "Region_stringindexer_tran..."}, {"feature": "Crew on board_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "3.42", "stddev": "2.52", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "Crew on board_stringindex..."}, {"feature": "Crew fatalities_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.83", "stddev": "2.26", "min": "0.0", "max": "7.0", "missing": "0"}, "updatedLabel": "Crew fatalities_stringind..."}, {"feature": "Pax on board_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.48", "stddev": "5.79", "min": "0.0", "max": "40.0", "missing": "0"}, "updatedLabel": "Pax on board_stringindexe..."}, {"feature": "PAX fatalities_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.29", "stddev": "1.49", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "PAX fatalities_stringinde..."}, {"feature": "Other fatalities_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.04", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Other fatalities_stringin..."}, {"feature": "Circumstances_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "235.74", "stddev": "144.08", "min": "0.0", "max": "485.0", "missing": "0"}, "updatedLabel": "Circumstances_stringindex..."}, {"feature": "Crash cause_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.42", "stddev": "2.31", "min": "0.0", "max": "19.0", "missing": "0"}, "updatedLabel": "Crash cause_stringindexer..."}], "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "autoFE_flag": true, "stageId": "665e04f9a0338a49680b1522", "FESamplePath": "/FileStore/platform/sampleData/665e04f9a0338a49680b1522_AutoFE/part-00000-3d07d240-c9c4-40f3-b09d-09f7d5afacd0-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/665e04f9a0338a49680b1522_AutoFE/part-00000-3d07d240-c9c4-40f3-b09d-09f7d5afacd0-c000.csv", "samplecount": 500, "originalcount": 28536, "dataPercentage": "10", "FEGraph": [{"values": {"label": ["4/9/1947", "4/10/1947", "4/13/1947", "4/15/1947", "4/17/1947", "4/18/1947", "4/19/1947", "4/22/1947", "4/24/1947", "4/25/1947", "4/27/1947", "4/28/1947", "4/29/1947", "4/30/1947", "5/2/1947", "5/4/1947", "5/6/1947", "5/7/1947", "5/9/1947", "5/10/1947", "5/11/1947", "5/12/1947", "5/14/1947", "5/15/1947", "5/16/1947", "5/17/1947", "5/18/1947", "5/19/1947", "5/22/1947", "5/24/1947", "5/28/1947", "5/29/1947", "5/30/1947", "5/31/1947", "6/3/1947", "6/4/1947", "6/5/1947", "6/6/1947", "6/7/1947", "6/10/1947", "6/11/1947", "6/12/1947", "6/13/1947", "6/14/1947", "6/15/1947", "6/16/1947", "6/19/1947", "6/20/1947", "6/21/1947", "6/22/1947", "6/23/1947", "6/25/1947", "6/26/1947", "6/27/1947", "6/28/1947", "7/1/1947", "7/2/1947", "7/3/1947", "7/5/1947", "7/7/1947", "7/8/1947", "7/11/1947", "7/12/1947", "7/13/1947", "7/14/1947", "7/15/1947", "7/16/1947", "7/17/1947", "7/18/1947", "7/21/1947", "7/22/1947", "7/25/1947", "7/26/1947", "7/29/1947", "7/31/1947", "8/1/1947", "8/2/1947", "8/4/1947", "8/5/1947", "8/6/1947", "8/8/1947", "8/9/1947", "8/11/1947", "8/12/1947", "8/13/1947", "8/14/1947", "8/15/1947", "8/16/1947", "8/18/1947", "8/20/1947", "8/21/1947", "8/22/1947", "8/23/1947", "8/25/1947", "8/28/1947", "8/29/1947", "8/30/1947", "8/31/1947", "9/2/1947", "9/3/1947", "9/5/1947", "9/6/1947", "9/9/1947", "9/15/1947", "9/17/1947", "9/18/1947", "9/19/1947", "9/20/1947", "9/21/1947", "9/24/1947", "9/28/1947", "10/1/1947", "10/3/1947", "10/4/1947", "10/7/1947", "10/9/1947", "10/10/1947", "10/14/1947", "10/16/1947", "10/17/1947", "10/21/1947", "10/23/1947", "10/24/1947", "10/25/1947", "10/26/1947", "10/27/1947", "10/30/1947", "10/31/1947", "11/2/1947", "11/3/1947", "11/5/1947", "11/10/1947", "11/11/1947", "11/13/1947", "11/14/1947", "11/15/1947", "11/16/1947", "11/17/1947", "11/18/1947", "11/19/1947", "11/20/1947", "11/21/1947", "11/23/1947", "11/25/1947", "11/27/1947", "11/28/1947", "11/30/1947", "12/1/1947", "12/5/1947", "12/9/1947", "12/10/1947", "12/11/1947", "12/13/1947", "12/14/1947", "12/15/1947", "12/16/1947", "12/18/1947", "12/19/1947", "12/20/1947", "12/22/1947", "12/23/1947", "12/24/1947", "12/27/1947", "12/28/1947", "12/29/1947", "12/30/1947", "12/31/1947", "1/2/1948", "1/5/1948", "1/6/1948", "1/7/1948", "1/8/1948", "1/10/1948", "1/11/1948", "1/13/1948", "1/17/1948", "1/18/1948", "1/20/1948", "1/21/1948", "1/24/1948", "1/25/1948", "1/26/1948", "1/27/1948", "1/28/1948", "1/30/1948", "1/31/1948", "2/1/1948", "2/2/1948", "2/6/1948", "2/7/1948", "2/9/1948", "2/10/1948", "2/11/1948", "2/13/1948", "2/16/1948", "2/17/1948", "2/19/1948", "2/20/1948", "2/21/1948", "2/23/1948", "2/25/1948", "2/27/1948", "3/1/1948", "3/2/1948", "3/4/1948", "3/7/1948", "3/8/1948", "3/10/1948", "3/12/1948", "3/13/1948", "3/15/1948", "3/16/1948", "3/17/1948", "3/20/1948", "3/21/1948", "3/25/1948", "3/27/1948", "4/1/1948", "4/5/1948", "4/7/1948", "4/9/1948", "4/10/1948", "4/11/1948", "4/15/1948", "4/18/1948", "4/19/1948", "4/20/1948", "4/21/1948", "4/23/1948", "4/24/1948", "4/25/1948", "4/30/1948", "5/1/1948", "5/5/1948", "5/6/1948", "5/9/1948", "5/10/1948", "5/11/1948", "5/12/1948", "5/13/1948", "5/14/1948", "5/15/1948", "5/16/1948", "5/17/1948", "5/18/1948", "5/20/1948", "5/22/1948", "5/23/1948", "5/24/1948", "5/25/1948", "5/26/1948", "5/28/1948", "5/31/1948", "6/8/1948", "6/10/1948", "6/11/1948", "6/12/1948", "6/13/1948", "6/14/1948", "6/16/1948", "6/17/1948", "6/18/1948", "6/21/1948", "6/23/1948", "6/24/1948", "6/25/1948", "6/26/1948", "6/27/1948", "6/29/1948", "7/1/1948", "7/2/1948", "7/3/1948", "7/4/1948", "7/5/1948", "7/6/1948", "7/7/1948", "7/8/1948", "7/10/1948", "7/11/1948", "7/12/1948", "7/14/1948", "7/15/1948", "7/17/1948", "7/20/1948", "7/21/1948", "7/22/1948", "7/23/1948", "7/24/1948", "7/25/1948", "7/27/1948", "7/28/1948", "7/29/1948", "7/30/1948", "7/31/1948", "8/1/1948", "8/5/1948", "8/9/1948", "8/11/1948", "8/12/1948", "8/13/1948", "8/15/1948", "8/19/1948", "8/20/1948", "8/23/1948", "8/24/1948"], "data": [1, 2, 3, 1, 1, 1, 2, 3, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 2, 3, 2, 3, 5, 3, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 3, 1, 1, 2, 1, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 3, 3, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 1, 2, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 4, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 3, 2, 2, 2, 1, 1, 2, 2, 1, 2, 3, 1, 4, 1, 4, 1, 1, 2, 4, 2, 2, 1, 2, 1, 4, 1, 1, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 4, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 3, 1, 2, 2, 1, 1, 1, 1, 1, 3, 3, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 2, 1, 4, 1, 2, 1, 2, 1, 3, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 3, 4, 1, 1, 3, 1, 1, 3, 2, 1, 1, 1, 3, 3, 3, 3, 2, 1, 1, 2, 1, 4, 2, 2, 2, 1, 3, 1, 1, 1, 3, 1, 1, 2, 2, 1, 2]}, "label": "Date", "count": 305, "min": "1/10/1923", "max": "9/9/1921"}, {"values": {"label": ["NA", "19H 30M 0S", "9H 19M 0S", "21H 30M 0S", "10H 40M 0S", "23H 13M 0S", "19H 55M 0S", "18H 26M 0S", "15H 15M 0S", "9H 39M 0S", "13H 35M 0S", "16H 25M 0S", "22H 45M 0S", "19H 5M 0S", "12H 48M 0S", "17H 41M 0S", "12H 0M 0S", "4H 0M 0S", "22H 0M 0S", "23H 7M 0S", "18H 16M 0S", "14M 0S", "18H 20M 0S", "1H 40M 0S", "9H 12M 0S", "18H 7M 0S", "9H 28M 0S", "4H 30M 0S", "22H 40M 0S", "10H 15M 0S", "13H 30M 0S", "2H 30M 0S", "14H 41M 0S", "15H 0M 0S", "10H 20M 0S", "20H 40M 0S", "18H 49M 0S", "11H 30M 0S", "23H 27M 0S", "23H 45M 0S", "6H 11M 0S", "9H 5M 0S", "15H 21M 0S", "15H 10M 0S", "11H 12M 0S", "8H 55M 0S", "18H 23M 0S", "8H 35M 0S", "10H 4M 0S", "14H 50M 0S", "12H 29M 0S", "13H 45M 0S", "13H 0M 0S", "8H 5M 0S", "18H 0M 0S", "4H 20M 0S", "3H 17M 0S", "14H 10M 0S", "12H 15M 0S", "14H 25M 0S", "16H 36M 0S", "20M 0S", "18H 10M 0S", "9H 30M 0S", "12H 40M 0S", "19H 0M 0S", "20H 5M 0S", "21H 0M 0S", "19H 37M 0S", "7H 45M 0S", "13H 40M 0S", "4H 36M 0S", "16H 30M 0S", "4H 17M 0S", "14H 40M 0S", "15H 50M 0S", "15H 30M 0S", "10H 50M 0S", "12H 54M 0S", "20H 0M 0S", "13H 25M 0S", "17H 40M 0S", "17H 45M 0S", "14H 0M 0S", "6H 0M 0S", "16H 0M 0S", "21H 14M 0S", "22H 58M 0S", "10H 0M 0S", "9H 47M 0S", "8H 12M 0S", "1H 7M 0S", "7H 30M 0S", "14H 30M 0S", "8H 33M 0S", "2H 34M 0S", "15H 20M 0S", "20H 1M 0S", "16H 20M 0S", "10H 30M 0S", "10H 46M 0S", "13H 21M 0S", "3H 0M 0S", "17H 30M 0S", "11H 0M 0S", "7H 20M 0S", "20H 42M 0S", "23H 30M 0S", "18H 40M 0S", "15H 42M 0S", "13H 29M 0S", "1H 5M 0S", "12H 41M 0S", "12H 20M 0S", "15H 3M 0S", "23H 59M 0S", "1H 50M 0S", "9H 18M 0S", "8H 45M 0S", "1H 0M 0S", "9H 15M 0S", "23H 55M 0S", "9H 40M 0S", "19H 38M 0S", "7H 31M 0S"], "data": [343, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 5, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1]}, "label": "Time", "count": 125, "min": "10H 0M 0S", "max": "NA"}, {"values": {"label": ["Douglas C-47 Skytrain (DC-3)", "Noorduyn Norseman", "Lockheed C-60 LodeStar", "Avro 685 York", "Vickers 440 Wellington X", "De Havilland DH.89 Dragon Rapide", "Lockheed PV-1 Ventura", "Handley Page H.P.63 Halifax VI", "Boeing B-29 Superfortress", "Douglas DC-3", "Avro 652 Anson", "De Havilland DH.83 Fox Moth", "Lockheed 18 LodeStar", "Airspeed AS.65 Consul", "AAC.1 Toucan", "Fiat G.12", "Siebel Si-204", "Vickers 619 Wellington X", "Beechcraft C-45 Expeditor", "Lockheed L-049 Constellation", "Fairchild C-82 Packet", "Avro 691 Lancastrian", "Ford 4", "Savoia-Marchetti SM.79 Sparviero", "Caudron C.440 Go\u00e9land", "Handley Page H.P.63 Halifax VII", "Boeing C-97 Stratofreighter", "Avro 683 Lancaster", "Douglas C-54 Skymaster", "Douglas DC-4", "Handley Page H.P.70 Halifax VIII", "Grumman G-21A Goose", "Petlyakov Pe-8", "Miles M.57 Aerovan", "Lisunov LI-2", "Beechcraft AT-7 Navigator", "De Havilland DH.60 Moth", "SNCAC NC.701/702 Martinet", "Ilyushin II-12", "Short S.25 Sunderland", "De Havilland DH.84 Dragon", "Ford 5", "Martin 187 Baltimore", "Consolidated PB4Y-2 Privateer", "North American B-25 Mitchell", "Lockheed 10 Electra", "Douglas A-20 Havoc", "Consolidated PBY-5A Catalina", "Junkers JU.52", "Vought-Sikorsky VS-44", "Boeing B-17 Flying Fortress", "Curtiss C-46 Commando", "Short S.25 Sandringham", "Avro 689 Tudor", "Canadian Vickers PBV-1 Canso (OA-10 Canso)", "De Havilland DH.80 Puss Moth", "Vickers Viking", "Boeing 247", "Avro 694 Lincoln", "SNCASE SE.161 Languedoc", "Boeing 314 Clipper", "Bristol 170 Freighter", "Douglas DC-6", "Lockheed L-414 Hudson", "Vickers 458 Wellington XI", "Douglas C-53 Skytrooper (DC-3)", "Beechcraft D18", "Lockheed 9 Orion", "Airspeed AS.10 Oxford", "De Havilland DH.90 Dragonfly", "Short S.29 Stirling", "Douglas A-26 Invader", "Douglas C-48 (DC-3)", "Avro 19", "Grumman G-44 Widgeon", "Martin PBM Mariner", "De Havilland DH.104 Dove", "Lockheed L-649 Constellation", "Canadian Vickers Stranraer", "Fokker F7", "Northrop N-23 Pioneer", "Lat\u00e9co\u00e8re 631", "Messerschmitt M.20", "Consolidated Canso", "Vultee V-1", "Lockheed P-2 Neptune", "Douglas DC-2", "Douglas C-49 (DC-3)", "Miles M.60 Marathon", "Avro 616 Avian IVM", "Junkers W.34", "Fiat G.212", "SNCAC NC.211 Cormoran", "Naval Aircraft Factory PBN-1 Nomad", "Canadair C-4 North Star", "Aero C-3A"], "data": [90, 10, 5, 15, 2, 10, 2, 1, 13, 27, 27, 7, 5, 11, 11, 1, 3, 10, 5, 4, 4, 8, 1, 3, 2, 1, 1, 7, 13, 9, 16, 1, 1, 6, 12, 2, 2, 4, 3, 6, 3, 1, 5, 3, 9, 3, 1, 8, 3, 1, 3, 11, 2, 2, 2, 3, 9, 1, 4, 3, 1, 5, 5, 2, 1, 3, 1, 1, 2, 1, 1, 6, 1, 3, 2, 2, 3, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Aircraft", "count": 96, "min": "Aeromarine 40", "max": "Wild WT-S"}, {"values": {"label": ["United States Army Air Forces - USAAF", "Indian Overseas Airlines - IOA", "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Compa\u00f1ia Transandina de Aviaci\u00f3n", "British South American Airways - BSAA", "Royal Air Force - RAF", "British European Airways - BEA", "South African Air Force", "Mercury Aviation", "Aeroflot - Russian International Airlines", "Delta Airlines", "Guinea Air Traders", "China National Aviation Corporation - CNAC", "McAvoy Diamond Drilling %26 Development Company Ltd", "Trans-Canada Air Lines - TCAL", "Milburn Air", "Anglo-Iranian Oil Company", "Aerovias Latino Americanas", "Air France", "Italian Air Force - Aeronautica Militare Italiana", "Union Southern Airlines", "TACA International Airlines - Transportes A\u00e9reos Centro Americanos", "Polyarnaya Aviatsiya", "Trans World Airlines - TWA", "Skyways of London", "Negociaci\u00f3n A\u00e9rea Mexicana", "Corrieri Aerei Militari - CAM", "Secr\u00e9tariat G\u00e9n\u00e9ral de l'Aviation Civile - SGAC", "Strato Freight", "Philippine Air Force - Hukbong Himpapawid NG Pilipinas", "Aerovias Brasil", "Royal Netherlands Air Force - Koninklijke Luchtmacht", "United Airlines", "Flugf\u00e9lag \u00cdslands", "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Eastern Airlines", "Bond Air Services", "Services Fran\u00e7ais de T\u00e9l\u00e9communications et de Signalisation", "Ellis Airlines", "Butler Air Transport", "Lancashire Aircraft Corporation - LAC", "Air Gagnon", "LOT Polish Airlines - Polskie Linie Lotnicze", "Flota Aerea Mercante Argentina - FAMA", "Pays Plat Outfitters", "Pennsylvania Central Air Lines", "French Air Force - Arm\u00e9e de l'Air", "North Sea Air Transport", "Philippine Airlines - PAL", "Lineas A\u00e9reas de Transporte Nacional - LATN", "Pan American World Airways - PAA", "Buchan's Mining Company", "Ontario Provincial Air Service", "Private Canadian", "Colombian Air Force - Fuerza A\u00e9rea Colombiana", "Soci\u00e9t\u00e9 A\u00e9rienne de Transports Internationaux - SATI", "Ulster Aviation", "Transportes A\u00e9reos Nacionales - TAN Costa Rica", "French Navy", "Air Transport Association", "Air Azur", "Brazilian Air Force - For\u00e7a A\u00e9rea Brasileira", "Burke Air Transport", "Qantas Airways - Queensland and Northern Territory Aerial Services", "Aros-Flyg", "Miles Aircraft", "A\u00e9ro Cargo", "British Overseas Airways Corporation - BOAC", "Shell Company of Ecuador", "Turkish Air Force - T\u00fcrk Hava Kuvvetleri", "Southern Aerowork", "Argentinian Air Force - Fuerza A\u00e9rea Argentina", "United States Navy - USN", "Indonesian Government", "Chinese Air Force - AFPLA - Chung-Kuo Shan Min Taie Fang Tsun Pu-Tai", "London Aero %26 Motor Services - LAMS", "LAN Chile - Linea A\u00e9rea Nacional de Chile", "SATA Air A\u00e7ores", "Gidrometeosluzhba", "Vingtor Luftveier", "American Airlines", "New England Airways", "Aktiebolaget Aerotransport - ABA", "Photographic Survey Company", "TARS - Transporturile Aeriene Rom\u00e2no-Sovietice", "Transporte A\u00e9reo de Carga Internacional", "Mandated Airlines", "Slick Airways", "Minister of Supply %26 Aircraft Production", "Charter Airways", "Det Norske Luftfartselskap - DNL", "Royal New Zealand Air Force - RNZAF", "Royal Canadian Air Force - RCAF", "Transportes A\u00e9reos Peruanas - TAPSA", "Air Atlas", "Nayler Air Services", "Hellenic Airlines", "Payloads Charter Company", "Servicio A\u00e9reo Panini", "Hellenic Air Force - Elleniki Polemiki Aeroporia", "Compania Anonima Vuelos Express - CAVE", "Tata Airlines", "Franco-British Commercial %26 Industrial Company", "United States Air Force - USAF", "The Uganda Company", "Indian Air Force - Bharatiya Vayu Sena", "Malayan Airways", "American International Airlines", "Soci\u00e9t\u00e9 A\u00e9rienne du Littoral - SAL", "Central Air Transport - China", "Institut G\u00e9ographique National", "John Fairfax %26 Sons", "Philippines Air Express", "Air India", "Private British", "Soci\u00e9t\u00e9 Auxiliaire de Navigation A\u00e9rienne - SANA", "Rijksluchtvaartschool - RLS", "Airspan Travel", "Private American", "Trafik-Turist-Transportflyg", "British Air Transport - BAT", "Bristol Aeroplane Company", "Linea Aeropostal Venezolana - LAV", "Jugoslovenske Sovjet Transport Aviacija - JUSTA", "Columbia Air Cargo", "GLAM - Groupe de Liaisons A\u00e9riennes Minist\u00e9rielles", "Alaska Airlines", "Airlines WA", "Central African Airways - CAA", "Indonesian Air Force - TNI-AU Tentara Nasional Indonesia - Angkatan Udara", "Alfred Wegener Institute", "Iberia - Lineas A\u00e9reas de Espana", "Coastal Air Lines", "Air Transport - Belgium", "SABENA - Soci\u00e9t\u00e9 Anonyme Belge d'Exploitation de la Navigation A\u00e9rienne", "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Waite Fisheries", "Det Danske Luftfartselskab - DDL", "Bharat Airways", "United States Coast Guard - USCG", "SOCOTRA - Soci\u00e9t\u00e9 Coop\u00e9rative de Tramping A\u00e9rien", "South African Airways -SAA - Suid Afrikaanse Lugdiens - SAL", "Sivewright Airways", "Compagnie Alg\u00e9rienne des Transports A\u00e9riens - CATA", "VIARCO - Vias A\u00e9reas Colombianas", "Dominicana de Aviaci\u00f3n", "Mexicana de Aviaci\u00f3n", "Airways India", "African Air Cars", "Federal Aviation Administration - FAA", "Chartair - UK", "Soci\u00e9t\u00e9 Indochinoise de Transports A\u00e9riens - SITA", "Queen Charlotte Airlines", "Air Portugal - Transportes A\u00e9reos Portugueses", "Airline Transport Carriers", "Middle East Airlines - MEA", "Compagnie G\u00e9n\u00e9rale TransSaharienne - CGT France", "Skane Flyg", "Northrop Aircraft", "Cathay Pacific Airways", "Gulf Transportation Company", "Handley Page Aircraft Company Ltd", "Royal Australian Air Force - RAAF", "Aerea Teseo", "Lat\u00e9co\u00e8re Industries", "Commercial Airways - Philippines", "Bruning Aviation", "Pullman Airways", "Soci\u00e9t\u00e9 de Transports A\u00e9riens - STA", "United Air Services - Tanzania", "Loftleidir Icelandic Airlines", "VARIG - Via\u00e7\u00e3o A\u00e9rea Rio Grandense", "Eagle Air Freight", "Northwest Airlines", "Great Northern Skyways", "Cruzeiro do Sul", "Agencia Interamericana de Aviaci\u00f3n - AIDA Colombia", "Private Swedish", "Indian National Airways - INA", "Portuguese Air Force - Aeron\u00e1utica Militar", "United States Marine Corps", "Air Congo", "SCOLTA - Sociedad Colombiana de Transportes A\u00e9reos", "Compagnie Air Transport - CAT", "New Zealand National Airways", "Israeli Air Force - Heyl Ha'avir", "Superior Oil Corporation", "Connellan Airways", "Pakistan Airways - Pak Air", "New Holland Airways", "British American Air Services - BAAS", "Air Transport Charter", "SOMACO", "Morton Air Services", "Alpha Airways", "Aeroplane %26 Armament Experimental Establishment - A%26AEE", "Karachi Aero Club", "Royal Navy", "Hargreaves Airways", "Southern Cross Aviation Service", "Ecuadorian Air Force - Fuerza A\u00e9rea Ecuatoriana", "Compa\u00f1\u00eda Auxiliar de Navegaci\u00f3n A\u00e9rea", "Transporte A\u00e9reo Transandino", "Clairways", "Central BC Airways", "Iraq Petroleum Transport Company", "Private Mexican", "Avio Linee Italiane - ALI", "Scandinavian Airlines System - SAS", "Royal Norwegian Air Force - Kongelige Norske Luftforsvaret", "Aigle Azur", "Argentinian Navy - Armada Argentina", "Expreso A\u00e9reo Interamericano", "Private Venezuelan", "Extractors Hull", "SNCAC - Soci\u00e9t\u00e9 Nationale de Constructions A\u00e9ronautiques du Centre", "Mayflower Air Services", "Ethiopian Airlines", "Rimouski Airlines", "SNECMA - Soci\u00e9t\u00e9 Nationale d'Etude et de Construction de Moteurs d'Aviation", "Aviaci\u00f3n del Litoral Fluvial Argentino - ALFA", "Civil Air Transport", "OnzeAir", "Czech Air Force - Cesk\u00e9 Vojensk\u00e9 Letectvo", "AVENSA - Aerovias Venezolanas"], "data": [19, 2, 1, 2, 6, 55, 6, 1, 2, 14, 2, 3, 3, 2, 2, 1, 1, 1, 11, 4, 1, 1, 5, 2, 4, 1, 2, 1, 2, 1, 2, 3, 3, 1, 1, 3, 2, 1, 1, 1, 3, 1, 2, 5, 1, 1, 9, 1, 4, 1, 4, 1, 2, 1, 2, 1, 3, 1, 2, 1, 1, 8, 1, 2, 1, 1, 3, 5, 1, 4, 1, 3, 11, 1, 1, 2, 1, 1, 2, 1, 3, 1, 2, 1, 2, 1, 2, 3, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 35, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 2, 3, 1, 1, 2, 1, 2, 1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 3, 5, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Operator", "count": 225, "min": "AVENSA - Aerovias Venezolanas", "max": "Waite Fisheries"}, {"values": {"label": ["AS-32084", "E4104", "A8544", "AS-32098", "AS-4130", "N2851", "B3087", "D4593", "5", "B9976", "D1745", "B927", "F2633", "AS-23130", "NA", "SC-39168", "D9327", "6", "AS-39406", "AS-22846", "97", "E9362", "B9983", "F7136", "A-31615", "AS-29071", "AS-62447", "D8340", "8", "3", "F3748", "68", "G-EAAA", "AS-22853", "11495", "AS-30985", "H5894", "69", "D5439", "C7829", "C6861", "61", "B9982", "AS-43626", "G-EAAR", "78", "AS-30865", "B9981", "84", "E5557", "82", "110", "G-EACL", "86", "G-EAAO", "N123", "G-EAET", "AS-30992", "G-EAGO", "SC-829", "G-EAHO", "G-EAAN", "G-EACG", "G-EAGM", "AS-30931", "G-EAAQ", "AS-30963", "AS-24271", "AS-32390", "SC-24269", "AS-24198", "G-EAEW", "AS-24150", "G-EAFG", "AS-24006", "32", "87", "AS-30547", "G-EADO", "G-EAHG", "AS-32333", "90", "AS-514", "AS-24263", "77", "G-EACW", "G-EACD", "G-EACY", "G-EAOW", "G-EAAP", "G-EAMR", "G-EAHF", "G-EAOV", "G-EAGJ", "G-EAHM", "AS-31079", "108", "G-EADL", "203", "G-UABA", "AS-39408", "G-EANV", "G-EAMC", "AS-32466", "G-EAAV", "AS-32404", "SC-23961", "F8615", "CH-16", "F-ALAO", "65", "G-EACT", "105", "E9744", "72", "G-EAHW", "F302", "49", "44", "G-EADS", "G-EAMI", "91", "98", "AS-32562", "F-CGTY", "Cartagena", "N4044", "G-EACV", "95", "79", "103", "AS-63123", "AS-63385", "CH-4", "88", "AS-24158", "60", "204", "AS-62973", "AS-63169", "G-EARU", "AS-63173", "80", "G-EADR", "G-EAKE", "A-25", "G-EAGI", "AS-63501", "AS-23405", "G-EALO", "F.38", "F1646", "AS-22856", "Santa Marta", "G-EAGW", "G-EAPV", "G-EAGV", "G-EARZ", "SC-30913", "G-EAMY", "AS-23587", "G-CYAL", "G-EARI", "G-EALW", "31704", "G-EAJH", "AS-63244", "G-EAGX", "G-CYAD", "106", "G-CAAR", "CH-18", "305", "73", "G-CADB", "G-EANN", "308", "AS-63454", "AS-63019", "G-CABU", "G-EAJQ", "N.11", "G-EAPC", "31679", "G-EANS", "G-CYAZ", "F-ALAI", "F-ALTA", "H9853", "G-CYCF", "76", "G-EATP", "178", "G-EAQN", "F9745", "AS-68024", "AS-68154", "AS-63233", "G-CYBN", "31", "AS-68150", "AS-63130", "G-EAMA", "G-EAQA", "F-ALBO", "AS-40043", "AS-22998", "G-CABP", "G-CABM", "153", "AS-68176", "AS-63670", "N.19", "O-BAIN", "AS-63972", "AS-27969", "130", "AS-63417", "AS-63709", "A-26", "301", "179", "F-ALBA", "D-128", "42", "124", "G-CYCI", "E9691", "AS-63456", "67", "3605", "F8751", "O-BABI", "F8423", "G-CYCH", "D9383", "G-CYBD", "AS-44864", "G-CYBS", "H3021", "G-EAVL", "H81", "O-BATE", "G-CYCA", "160", "AS-63182", "196", "AS-62994", "176", "F-ALHE", "AS-62980", "AS-63566", "AS-38126", "G-EAUF", "H-NABL", "AS-62451", "AS-64243", "G-CADG", "G-CYBZ", "G-CYBW", "AS-63676", "F-CMAV", "G-CAAH", "AS-63145", "AS-63916", "F-CMAY", "D-18", "AS-38323", "AS-63915", "222", "G-CACN", "992", "AS-63690", "AS-63525", "AS-62965", "AS-63868", "AS-63891", "AS-63131", "AS-23190", "G-CYBV", "AS-64594", "G-CABA", "AS-63129", "AS-63502", "AS-63880", "F-ALBI", "AS-63082", "C4297", "AS-63967", "G-CADQ", "G-CAAU", "O-BLAN", "G-CYAW", "AS-63910", "H-NABP", "AS-64212", "F-ADCD", "G-EAWI", "AS-63452", "AS-64511", "AS-63595", "F-ADBN", "CH-71", "AS-63678", "AS-63567", "AS-68462", "G-EAEB", "AS-64521", "G-EACA", "F9157", "G-CADJ", "AS-64114", "T-DOBC", "G-CYBG", "AS-63865", "AS-24174", "H-116", "AS-63455", "F-ALQA", "G-EAFQ", "G-EAZF", "AS-63604", "AS-63033", "G-EAAB", "G-EANQ", "G-AUDI", "AS-63770", "E3440", "G-CYCB", "AS-68204", "E3446", "H2446", "229", "AS-63791", "AS-62989", "AS-30708", "AS-63249", "G-EATM", "D6243", "E5450", "H102", "E8474", "G-EATN", "AS-68036", "AS-63801", "H9829", "AS-63382", "AS-63366", "AS-64536", "E3568", "AS-63944", "D4542", "AS-64522", "N125", "AS-63989", "G-CACO", "G-EAPK", "E5497", "E967", "CH-77", "G-EAWU", "G-EAWO", "F-GEAD", "G-EBBZ", "AS-62990", "G-EASA", "AS-64138", "F-ALGU", "G-EBCL", "AS-63601", "F-ALFU", "AS-63395", "H-NABT", "AS-68180", "AS-24131", "G-EBDE", "CH-39", "F-ACMH", "75", "G-EAHU", "AS-68678", "G-EAOE", "B-2", "AS-68653", "AS-64556", "F8747", "H2364", "F-FREI", "N.21", "F-ALVE", "AS-68669", "AS-64535", "G-EBDH", "AS-68647", "G-EABX", "G-EAJG", "G-EBAV", "AS-64544", "E9910", "G-EBDI", "G-EALD", "43", "AS-64332", "AS-63548", "AS-64256", "227", "N4639", "AS-68648", "46", "E899", "D-27", "G-EAYT", "G-EAWK", "AS-63620", "AS-68673", "F-FRAV", "AS-63480", "AS-65045", "H-111", "G-EBBU", "AS-64634", "AS-63626", "AS-64537", "F-ESAB", "H-NABO", "AS-63408", "AS-63481", "F-ALNA", "AS-22365", "AS-42125", "249", "AS-63404", "AS-64461", "247", "F-AEIB", "Columbus", "F-ALJU", "223", "A-3359", "G-AUBL", "V-201", "A-2", "D-22", "G-AUCF", "291", "D-201", "D-217", "O-23", "F-AEEK", "AS-64205", "1970", "F-AFCP", "H-MACC", "Elisabeth"], "data": [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 43, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Registration", "count": 454, "min": "103", "max": "V-201"}, {"values": {"label": ["Takeoff (climb)", "Flight", "Landing (descent or approach)", "NA", "Taxiing", "Parking"], "data": [88, 196, 194, 15, 5, 2]}, "label": "Flight phase", "count": 6, "min": "Flight", "max": "Taxiing"}, {"values": {"label": ["Military", "Scheduled Revenue Flight", "Cargo", "Training", "Survey / Patrol / Reconnaissance", "Executive/Corporate/Business", "Private", "Charter/Taxi (Non Scheduled Revenue Flight)", "Positioning", "Topographic", "Government", "Postal (mail)", "NA", "Test", "Humanitarian", "Aerial photography", "Delivery", "Geographical / Geophysical / Scientific", "Ferry", "Demonstration", "Calibration", "Bombing"], "data": [101, 136, 77, 80, 8, 6, 15, 28, 6, 1, 4, 1, 1, 15, 2, 1, 10, 1, 4, 1, 1, 1]}, "label": "Flight type", "count": 22, "min": "Aerial photography", "max": "Training"}, {"values": {"label": ["Yes", "NA", "No"], "data": [306, 28, 166]}, "label": "Survivors", "count": 3, "min": "NA", "max": "Yes"}, {"values": {"label": ["Airport (less than 10 km from airport)", "NA", "Mountains", "Plain, Valley", "Desert", "Lake, Sea, Ocean, River", "City"], "data": [250, 7, 77, 86, 10, 65, 5]}, "label": "Crash site", "count": 7, "min": "Airport (less than 10 km from airport)", "max": "Plain, Valley"}, {"values": {"label": ["Dayton - Dayton", "Cricklewood - Cricklewood", "Abukir - Abukir", "Wright Patterson AFB-Wright Patterson AFB", "NA", "Isle of Grain - Usworth - Glasgow", "Seaton Carew - Seaton Carew", "Castle Bromwich - Castle Bromwich", "Seaton Carew AFB - Seaton Carew AFB", "Old Sarum - Old Sarum", "Bicester - Bicester", "Thessaloniki - Athens", "Villacoublay - Rome", "Andover - Andover", "Hendon - Bournemouth", "Udine - Bratislava", "Ellington AFB - Ellington AFB", "London - Paris", "London \u2013 Paris \u2013 Pisa \u2013 Rome \u2013 Cairo", "Aldeburgh - Aldeburgh", "Cleveland \u2013 Chicago", "Saint John's - Clifden", "Hendon - Hendon", "Bellefonte \u2013 Cleveland", "College Park - College Park", "Venice - Milan", "Hounslow Heath \u2013 Sandhurst", "Felixstowe - Felixstowe", "Manston- Hounslow Heath", "Weston-super-Mare - Weston-super-Mare", "Croydon \u2013 Newcastle", "Washington DC \u2013 New York", "Interlaken - Paris - Croydon", "Fort Sill AFB - Fort Sill AFB", "College Park \u2013 Belmont Park", "Hounslow Heath - Chania", "Paris-Le Bourget - Hounslow Heath", "Brooklands - Paris", "Paris - London", "Dessau - Dessau", "Brooklands - Derna - Wadi Halfa - Bulawayo - Cape Town", "Aswan - Khartoum", "Brooklands \u2013 Cairo \u2013 Gebelein \u2013 Kisumu \u2013 Mwanza \u2013 Tabora \u2013 Cape Town", "Wadi Halfa \u2013 Bulawayo \u2013 Cape Town", "Porrentruy - Porrentruy", "Chicago \u2013 Cleveland", "Paris - Hounslow Heath", "Roosevelt Field - Roosevelt Field", "Bellefonte - Heller Field", "Cricklewood - Biggin Hill", "Khartoum - Cairo", "Bustleton \u2013 Washington DC", "Barranquilla - Barranquilla", "Joyce Green - Brooklands", "Omaha \u2013 Iowa City \u2013 Chicago", "Romanshorn - Romanshorn", "Paris - Croydon", "Bournemouth - Peterborough", "Kjeller \u2013 Karlstad \u2013 Stockholm - Copenhagen", "Kalijati - Kalijati", "Twickenham \u2013 Northolt", "Havana \u2013 Jag\u00fcey Grande", "Salisbury - Salisbury", "Eastbourne - London", "Horten - Oslo", "Kenley - Kenley", "Cartagena - Barranquilla", "Brough - Scarborough", "Bournemouth - Bournemouth", "Camp Borden - Camp Borden", "Croydon - Paris", "Brighton - Eastbourne", "Hazlehurst \u2013 Cleveland", "Mineola \u2013 Northfield", "Alert Bay \u2013 Prince Rupert", "Hazlehurst \u2013 Bellefonte", "Toulouse - Barcelona", "Grantham - Grantham", "Chicago - Omaha", "Stockholm \u2013 Kristiania", "Salt Lake City \u2013 Cheyenne", "New Plymouth - New Plymouth", "Cricklewood - Paris", "Hounslow Heath - Paris", "Marina - Sacramento", "Croydon - Brussels", "Minneapolis \u2013 Chicago", "Lone Rock \u2013 La Crosse", "Cheyenne \u2013 Salt Lake City", "Gdansk \u2013 Berlin", "Rio de Janeiro - Rio de Janeiro", "Camp Borden - Toronto", "Baghdad - Baghdad", "Elko \u2013 Salt Lake City", "Farnborough - Farnborough", "Lake Maggiore - Lake Maggiore", "Martlesham Heath - Martlesham Heath", "Biggin Hill - Biggin Hill", "Fort Sill - Fort Sill", "Point Cook - Point Cook", "Basra - Baghdad", "Brussels - Paris", "Mitchel Field - Cleveland", "Barcelone \u2013 Alicante", "Carlstrom AFB - Carlstrom AFB", "Paris \u2013 Croydon", "Croydon \u2013 Rotterdam", "Langley \u2013 Bolling", "Calgary - Calgary", "Dortmund \u2013 Braunschweig", "San Francisco \u2013 Sacramento", "Malmen AFB - Malmen AFB", "Moundsville - Langley", "Luke AFB - Luke AFB", "High River - High River", "Edmonton \u2013 Peace River \u2013 Fort Vermilion \u2013 Hay River \u2013 Fort Providence \u2013 Fort Simpson \u2013 Norman Wells", "Charleston \u2013 Langley", "Warsaw - Prague - Strasbourg - Paris", "Croydon - Croydon", "Solothurn - Lausanne", "Stag Lane - Norwich", "Manston - Manston", "Croydon - Rotterdam", "Bandung - Batavia", "Penshurst - Ashford", "Geraldton \u2013 Kalbarri \u2013 Carnarvon \u2013 Karratha \u2013 Port Hedland \u2013 Broome \u2013 Derby", "Abu Sueir - Abu Sueir", "Cranwell - Cranwell", "Paris \u2013 London", "Kaikoura \u2013 Christchurch", "Hinaidi - Hinaidi", "El Bosque - El Bosque", "Sealand - Sealand", "Cowes - Isle of Grain", "Spitalgate - Spitalgate", "Baoding - Baoding", "Brooklands - Brooklands", "Alicante - Casablanca", "Perpignan \u2013 Barcelona", "Amsterdam - Rotterdam - Croydon", "Lyon - Marseille", "Lausanne - Lausanne", "Asch - Asch", "Batavia \u2013 Semarang", "Casablanca - Toulouse", "Hounslow Heath - Hounslow Heath", "Tours - Tours", "Izmir - Naxos - Tatoi AFB", "Bournemouth - Ashford", "Indianapolis \u2013 Cleveland", "Rutland - Rutland", "Hinaidi - Shaibah", "Goetsenhoven AFB - Goetsenhoven AFB", "Venice - London", "Wheeler AFB - Wheeler AFB", "Prague - Warsaw", "Kalijati - Bandung", "Paris - Paris", "Selfridge NAS - Selfridge NAS", "Toulouse - Barcelona - Valencia - Alicante - M\u00e1laga - Rabat", "Pearl Harbour - Pearl Harbour", "Salt Lake City \u2013 Rock Springs", "Toulouse \u2013 Barcelona \u2013 Valencia \u2013 Alicante \u2013 M\u00e1laga \u2013 Tanger \u2013 Rabat", "Luke Field - Luke Field", "Rock Springs \u2013 Salt Lake City", "Ajaccio - Antibes", "Key West - Havana", "Alicante \u2013 Barcelona", "Cheyenne - Cheyenne", "Bandung - Kalijati", "Girardot \u2013 Puerto Berr\u00edo", "Munich - Augsburg", "Albina - Macap\u00e1", "Oran \u2013 Casablanca", "Dayton - Langley", "Curitiba - Curitiba", "Paris \u2013 Strasbourg \u2013 Budapest \u2013 Bucharest", "Budapest - Budapest", "Wainwright - Wainwright"], "data": [1, 1, 1, 1, 262, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 2, 3, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 7, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 7, 1, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 2, 4, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Schedule", "count": 179, "min": "Abu Sueir - Abu Sueir", "max": "Wright Patterson AFB-Wright Patterson AFB"}, {"values": {"label": ["NA", "B9976", "B9983", "C6054", "B9982", "C105", "B9981", "D9298", "ATC.4", "1", "D5150", "D9343", "H1959", "E4225", "ATC.9", "K-161", "ATC.2", "G7/67", "ATC.13", "F8706", "F2694", "77", "E1663", "E4224", "C7175", "B9970", "ATC.3", "E4/500", "F2699", "C746", "E1707", "E4348", "539", "538", "HP.7", "HP.27", "K-107", "3437", "4570.56", "DH.16/1", "536", "E3364", "H2507", "PL.6146", "6526", "E4233", "544", "P.59", "D6245", "HP.22", "E4234", "E428", "E3", "H6599", "F302", "H6598", "H6551", "F.246", "H1917", "DH.18/1", "F7484", "E2", "H9255", "D9076", "2503", "H2514", "560", "C1293", "H2587", "970", "102", "E4", "E997", "31", "20", "F333", "H4600", "P.37E", "HP.25", "P.36E", "57", "P45", "AB.16", "AB.13", "H5915", "5220/8220.2", "610", "H9736", "3605", "H5925", "H5905", "103", "3", "1508", "15/2", "H9742", "1252", "M3100", "1254", "5097", "1161", "F2710", "AB.1", "22", "3752", "558", "17/7248", "H9196", "160", "E3672", "1913", "13", "B8774", "E6765", "1533", "17", "E4180", "H7426", "K100", "J755", "6116", "HP.42", "HP.43", "2", "FK.26/32", "F3439", "DH.18/04", "23", "15", "F9809", "127", "E9227", "3641/126", "1532", "H5738", "555", "E1611", "E3505", "25", "7", "117", "E4230", "H1956", "F9783", "F.330", "H1925", "14", "E3671", "133", "C74/1", "55889", "4", "6083.13", "557", "H4561", "565", "633", "1970", "5366.1", "628"], "data": [334, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "MSN", "count": 160, "min": "1", "max": "SH.915"}, {"values": {"label": ["1944", "1945", "NA", "1946", "1941", "1943", "1942", "28", "26", "0", "13", "19", "1947", "1928", "3", "1930", "27", "1951", "1932", "1933", "1937", "1940", "1948", "1935", "30", "31", "1934", "8", "21"], "data": [64, 57, 193, 53, 12, 39, 17, 1, 1, 2, 2, 1, 34, 1, 1, 4, 1, 1, 1, 1, 2, 1, 5, 1, 1, 1, 1, 1, 1]}, "label": "YOM", "count": 29, "min": "1918", "max": "NA"}, {"values": {"label": ["NA"], "data": [500]}, "label": "Flight number", "count": 1, "min": "NA", "max": "NA"}, {"values": {"label": ["Kelly AFB (ex Brooks Field, San Antonio) Texas", "Tiruppur Tamil Nadu", "Dalry Ayrshire", "Medell\u00edn Antioquia", "Dakar Dakar Region", "Bovingdon AFB Hertfordshire", "Greeba Isle of Man", "Aljammalab White Nile (<U+0627><U+0644><U+0646><U+064A><U+0644> <U+0627><U+0644><U+0623><U+0628><U+064A><U+0636>)", "Atlantic Ocean All World", "Kwajalein All Marshall Islands", "Malakal Upper Nile (<U+0623><U+0639><U+0627><U+0644><U+064A> <U+0627><U+0644><U+0646><U+064A><U+0644>)", "Volochanka Krasnoyarsk Krai", "Columbus Georgia", "Karlovy Vary Karlovy Vary Region (Karlovarsk\u00fd kraj)", "Port Moresby National Capital District", "Shanghai-Longhua Shanghai", "Coffey Lake Alberta", "Vancouver British Columbia", "Tatsfield Surrey", "Abadan Khuzestan", "San Salvador-Ilopango San Salvador", "Niamey Niamey City District", "Torino-Mirafiori Piedmont", "Newark New Jersey", "Nicoya Guanacaste (North Pacific)", "Beryozovo Tula oblast", "Driffield AFB East Yorkshire", "Songea Ruvuma Region", "Cartagena Bol\u00edvar", "Cape May Point New Jersey", "Austin-Bergstrom Texas", "H3 Oil Station Al-Anbar (<U+0627><U+0644><U+0623><U+0646><U+0628><U+0627><U+0631>)", "Nal (Bikaner) Rajasthan", "Ometepec Guerrero", "Rome-Centocelle Lazio", "Ch\u00e2tillon-sur-Colmont Mayenne", "Khabarovsk Khabarovsk Krai", "Gainesville-Lee Gilmer Georgia", "North Luffenham AFB Rutland", "Malaybalay Bukidnon", "Windsor Ontario", "Livingston Montana", "Finningley AFB South Yorkshire", "Rio de Janeiro-Santos Dumont Rio de Janeiro", "Wright-Patterson AFB (Dayton) Ohio", "Luqa All Malta", "Bulolo Morobe", "Gilze-Rijen AFB North Brabant", "Nairobi-Eastleigh (Moi Air Base) Nairobi City District", "Atsugi NAS Kanto", "New York-LaGuardia New York", "Mt Hestfjall Northeastern Region (Nor\u00f0urland eystra)", "Fort Wainwright AFB (Ladd Field) Alaska", "Trinidad Beni", "Bainbridge Maryland", "Barcelona Catalonia", "Algiers Algiers", "Ketchikan Alaska", "Schofields New South Wales", "G\u00e9menos Bouches-du-Rh\u00f4ne", "London-Heathrow London Metropolis", "Cottesmore AFB Rutland", "Mistassini Lake Quebec", "Mys Kosistyy Krasnoyarsk Krai", "Stockholm-Bromma Uppland", "Natal Rio Grande do Norte", "Oakington Cambridgeshire", "Cirrus Lake Ontario", "Lookout Rock West Virginia", "Vietnam All Vietnam", "Croydon Surrey", "Perkinsville Vermont", "Fort Knox Kentucky", "Leninabad Sughd Province", "Cebu City Cebu", "Quyquyh\u00f3 Paraguar\u00ed", "Al Mayadin Deir ez-Zor Governorate (<U+0645><U+064F><U+062D><U+0627><U+0641><U+0638><U+0629> <U+062F><U+064A><U+0631> <U+0627><U+0644><U+0632><U+0648><U+0631><U+200E>)", "Hall's Bay Newfoundland & Labrador", "Poshkakagan Lake Ontario", "Karkinyts\u2019ka Gulf Autonomous Republic of Crimea", "Grey Trout Lake Ontario", "Roncesvalles Tolima", "Kwagama Lake Ontario", "Hamlin Saskatchewan", "Mt Makiling Laguna", "Calcutta West Bengal", "Cloughey Down", "Isiolo Rift Valley", "Antananarivo Antananarivo Province", "Moscow-Vnukovo Moscow oblast", "Pacific Ocean All World", "Es\u00e9ka Centre", "Oran-Tafraoui Oran", "Newtownards Down", "Niton Isle of Wight", "Sargasso Sea All World", "Inishtrahull Island Ulster", "Saigon Th\u00e0nh ph<U+1ED1> H<U+1ED3> Ch\u00ed Minh City District", "Mt Meenard Londonderry", "Bizerte Bizerte Governorate (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+0628><U+0646><U+0632><U+0631><U+062A><U+200E>)", "Campo de Marte AFB (S\u00e3o Paulo) S\u00e3o Paulo", "Oberr\u00f6blingen Saxony-Anhalt", "Melbourne Florida", "Zenag Morobe", "Tumlehed V\u00e4sterg\u00f6tland", "Woodley Berkshire", "Vichy Allier", "Shaibah AFB (Basrah) Al-Basrah (<U+0627><U+0644><U+0628><U+0635><U+0631><U+0629>)", "Ecuador All Ecuador", "Diyarbakir Southeastern Anatolia Region (G\u00fcneydogu Anadolu B\u00f6lgesi)", "El Palomar AFB Buenos Aires province", "Eskisehir Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "Whidbey Island NAS (Ault Field) Washington", "Mor\u00f3n AFB Buenos Aires province", "Recife Pernambuco", "Yogyakarta Special Region of Yogyakarta", "Wuwei Gansu", "Bergamo Lombardy", "Kelso Washington", "Mt Tupungato Mendoza", "Antofagasta Regi\u00f3n de Antofagasta", "Ponta Delgada Azores Islands", "Naberezhnaya Moscow oblast", "Svolvaer (Lofoten Islands) Nordland", "Banke Aran", "Barra Hebrides Islands", "Kempsey New South Wales", "Malm\u00f6 Sk\u00e5ne", "Quebec Quebec", "Pendotiba Rio de Janeiro", "Itapemirim Esp\u00edrito Santo", "Orl\u00e9ans-Bricy Loiret", "Bucharest-Baneasa Bucure<U+0219>ti", "Ballykelly AFB Londonderry", "Montevideo Montevideo City District", "Maridi Western Equatoria (<U+063A><U+0631><U+0628> <U+0627><U+0644><U+0627><U+0633><U+062A><U+0648><U+0627><U+0626><U+064A><U+0629>)", "Lae Morobe", "Mt Blue Bell Knoll Utah", "Bahrain All Bahrain", "Woodford Cheshire", "Allen Lake Northwest Territories", "Harstad Troms", "Paraparaumu-Kapiti Coast Greater Wellington Regional Council", "Westgate-on-Sea Kent", "Cambridge Bay Nunavut", "Saposoa San Mart\u00edn", "El Hajeb Mekn\u00e8s-Tafilalet", "Eaton Bray Bedfordshire", "Dishforth AFB North Yorkshire", "Aberdeen-Dyce Aberdeenshire", "Athens-Hassani Attica / <U+0391>tt<U+03B9><U+03BA><U+03AE>", "Hamilton All Bermuda", "Klyazma Moscow oblast", "Ciudad Obreg\u00f3n Sonora", "Saint-Girons Landes", "Burbank California", "Farsala Thessaly / Tessa<U+03BB><U+03AF>a", "Buenos Aires-Aeroparque-Jorge Newbery Buenos Aires City", "La Carlota-General Francisco de Miranda AFB (Caracas) Caracas Federal District", "Junagarh Odisha (Orissa)", "Tunis Tunis Governorate (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+062A><U+0648><U+0646><U+0633><U+200E>)", "San Juan de Marcona Ica", "Floyd Bennett Field New York", "Zanzibar Unguja North Region", "Mautby Norfolk", "New Delhi-Palam National Capital Territory of Delhi", "Gulf of Aden All Yemen", "Belfast-Nutts Corner Antrim", "Ambavalao Fianarantsoa Province", "Annaba Annaba", "Cao B<U+1EB1>ng Cao B<U+1EB1>ng Province", "Borja Loreto", "Ipoh Perak", "Cabo de Palos Region of Murcia", "Sylva North Carolina", "Shijiazhuang Hebei", "Southend Essex", "Bryce Canyon Utah", "Saint-Etienne Loire", "Mt Hymettus Attica / <U+0391>tt<U+03B9><U+03BA><U+03AE>", "Annette Island Alaska", "Guilin Guangxi", "Balmoral New South Wales", "Pir Panjal Mountain Range Jammu and Kashmir", "Manila Metro Manila", "Marrakech Marrakech-Tensift-El Haouz", "Lyneham AFB Wiltshire", "Gallup New Mexico", "Buckenham Norfolk", "Spokane Washington", "Jammu Jammu and Kashmir", "La Rochelle Charente-Maritime", "Les Bouchoux Jura", "Soesterberg AFB Utrecht", "Ch\u00e2lons-en-Champagne Marne", "Los Angeles California", "Mumbai Maharashtra", "Mt Magazine Arkansas", "Ravello Campania", "Wilmington-New Castle County Delaware", "Brightstone Down Isle of Wight", "Porto de Moz Par\u00e1", "Saint Boniface Down Isle of Wight", "Birchington-on-Sea Kent", "Plouznice Liberec Region (Libereck\u00fd kraj)", "Wau Morobe", "Ciudad Bol\u00edvar Bol\u00edvar", "Port Sudan Red Sea (<U+0627><U+0644><U+0628><U+062D><U+0631> <U+0627><U+0644><U+0623><U+062D><U+0645><U+0631>)", "Mt Rumija Coastal Region", "Yakutat Alaska", "Gordon Lake Northwest Territories", "Perpignan Pyr\u00e9n\u00e9es-Orientales", "Trappa Piedmont", "B\u00e9char B\u00e9char", "Bah\u00eda Blanca Buenos Aires province", "Tacoma Washington", "Taldom Moscow oblast", "Moreton-in-Marsh AFB Gloucestershire", "Guildford Western Australia", "Saint Asaph Denbighshire", "Elgin Texas", "Goose Bay Newfoundland & Labrador", "Memphis Tennessee", "Zambezi North-Western", "Bukit Tanjung Hantu Perak", "Abingdon AFB Oxfordshire", "Norfolk Virginia", "Krasnoyarsk Krasnoyarsk Krai", "Dinalungan Aurora", "Uetersen Schleswig-Holstein", "Madrid-Barajas Madrid", "Nome Alaska", "Miami Florida", "Kunming Yunnan", "Mitwaba Katanga", "Chelles-le-Pin Seine-et-Marne", "Leeuwarden Friesland", "Karachi Sindh (<U+0633><U+0646><U+068C> <U+0633><U+0646><U+062F><U+06BE>)", "Le\u00f3n Guanajuato", "Saskatchewan Saskatchewan", "Copenhagen Hovedstaden", "Zlatoust Chelyabinsk oblast", "Elmendorf-Richardson AFB (JBER) Alaska", "Srinagar Jammu and Kashmir", "Signal Mountain Tennessee", "Casablanca Grand Casablanca", "Johannesburg Gauteng", "Northolt AFB London Metropolis", "Paris-Le Bourget Seine-Saint-Denis", "Levy South Carolina", "Chelford Cheshire", "Waterbeach AFB Cambridgeshire", "Lakhdaria Bouira", "Madrid AFB Cundinamarca", "Cerbaiola Friuli-Venezia Giulia", "Qingdao Shandong", "Cairo Cairo", "Yamas\u00e1 Monte Plata", "Topcliffe AFB North Yorkshire", "Rome-Fiumicino-Leonardo da Vinci Lazio", "Oxon Hill Maryland", "Guaymas Sonora", "Viterbo Lazio", "Andrews AFB Maryland", "Ed Dueim White Nile (<U+0627><U+0644><U+0646><U+064A><U+0644> <U+0627><U+0644><U+0623><U+0628><U+064A><U+0636>)", "Mukden Liaoning", "Ward Colorado", "Boston Massachusetts", "Iloilo City Iloilo", "Swinderby AFB Lincolnshire", "Lyon-Bron Rh\u00f4ne", "Baltimore Maryland", "Mediterranean Sea All World", "Vancouver Island British Columbia", "Paris Paris", "Ch\u00e2teau Garnier Alpes-de-Haute-Provence", "Monte da Caparica Estremadura - Lisbon District", "Coalinga California", "Chanolles Alpes-de-Haute-Provence", "Beirut Beirut Governorate", "Istres-Le Tub\u00e9 Bouches-du-Rh\u00f4ne", "Lake Iv\u00f6sj\u00f6n Sk\u00e5ne", "California California", "Jasper Arkansas", "Saluda North Carolina", "Locri Calabria", "Sandoway Rakhine State", "Hendon Middlesex", "Bandung West Java", "Ciudad del Carmen Campeche", "Jacksonville-Towers Field NAS Florida", "Condamine Queensland", "Ulrichstein Hesse", "Radlett Hertfordshire", "Hullavington AFB Wiltshire", "Tain AFB Ross and Cromarty", "Amberley Queensland", "Pisa Tuscany", "Saint-Marcouf Islands Manche", "La Grita T\u00e1chira", "Mati Davao Oriental", "Columbus-John Glenn (Port Columbus) Ohio", "Bel\u00e9m Par\u00e1", "Mobile Alabama", "Mombasa Coast", "Hellishei\u00f0i Southern Region (Su\u00f0urland)", "Brazil All Brazil", "Mt Netem-Pe Republic of Yamalia", "Mt Hamilton California", "Poso Central Sulawesi", "Chicago-Midway Illinois", "Dallas-Love Field Texas", "Mt Sanford Alaska", "Guidonia AFB Lazio", "McGregor Bay Ontario", "Sierra Cristais Minas Gerais", "Alto El Arrastradero Cundinamarca", "Vorkuta Republic of Komi", "Somerset Pennsylvania", "Rio Gurupizinho Par\u00e1", "Woodland Washington", "Dorotea V\u00e4sterbotten", "Southport Merseyside", "Mt Cardo Haute-Corse", "Lajes Azores Islands", "Berlin-Gatow Berlin", "North Sea All World", "China All China", "Kindu Maniema", "Venezuela All Venezuela", "Mt Baird Washington", "Kano Kano", "Destin Florida", "Algeciras Andalusia", "Shannon Munster", "Tauranga Bay of Plenty Regional Council", "Jolo Island Sulu", "Glasgow Strathclyde", "Tynda Amur oblast", "Praia de Ponte Negra Rio de Janeiro", "Quonset Point NAS Rhode Island", "Mexico City Federal District of Mexico City", "Bodaibo Irkutsk oblast", "Corpus Christi NAS Texas", "Vienna Vienna", "Verqui\u00e8res Bouches-du-Rh\u00f4ne", "Amsterdam-Schiphol North Holland", "Daly Waters Northern Territory", "Long Island Long Island", "Darwin Northern Territory", "Amman Amman City District", "Nairyah ash-Sharqiyah (<U+0627><U+0644><U+0634><U+0631><U+0642><U+064A><U+0629><U+200E>)", "Turnagain Island Queensland", "Saint-Bauzile Ard\u00e8che", "NA", "Jun\u00edn Mendoza", "Vrede Free State", "Columbus-Rickenbacker (Lockbourne AFB) Ohio", "Rennes Ille-et-Vilaine", "Rome-Urbe Lazio", "L\u00fcbeck-Blankensee Schleswig-Holstein", "Magadan Magadan oblast", "Studham Hertfordshire", "Latrun Jerusalem District", "El Alamein Matruh", "Albacete Castile-La Mancha", "Popowice Masovian Voivodeship (Mazowieckie)", "Boscombe Down AFB Wiltshire", "\u00c7ubuk Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "Enniskillen Fermanagh", "Lisbon Estremadura - Lisbon District", "Peel Isle of Man", "Port Erin Isle of Man", "Eloy Arizona", "Waimate Canterbury Regional Council", "Coulommiers Seine-et-Marne", "Berck-sur-Mer Pas-de-Calais", "Mount Carmel Pennsylvania", "Shell Pastaza", "Reus Catalonia", "Maracaibo Zulia", "Segni Lazio", "Merka Shabeellaha Hoose (<U+0634><U+0628><U+064A><U+0644><U+064A> <U+0627><U+0644><U+0633><U+0641><U+0644><U+0649>)", "British Columbia British Columbia", "Syria All Syria", "Caracas Caracas Federal District", "Blythe California", "Bogot\u00e1-Techo Bogot\u00e1 Capital District", "Erding AFB Bavaria", "Cue Western Australia", "Ciudad Serd\u00e1n Puebla", "Keerbergen Flemish Brabant", "Lindholme AFB South Yorkshire", "Wylye Wiltshire", "Prince George British Columbia", "Northwood London Metropolis", "Ekron-Tel Nof AFB Central District", "Wiesbaden-Erbenheim AFB Hesse", "Oslo-Gardermoen Akershus", "Di Linh L\u00e2m \u00d0<U+1ED3>ng Province", "Offutt AFB (Bellevue) Nebraska", "Greenville North Carolina", "K\u00f6nigstein im Taunus Hesse", "Coronel Pringles Buenos Aires province", "Caracas-Maiquet\u00eda-Sim\u00f3n Bol\u00edvar Vargas", "Laverton AFB (Melbourne) Victoria", "Paris-Orly Val-de-Marne", "Singapore-Seletar All Singapore", "Toulon Var", "Bel\u00e9m-Val de Cans-J\u00falio Cezar Ribeiro Par\u00e1", "S\u00e3o Paulo-Guarulhos S\u00e3o Paulo", "Schilling AFB (Smoky Hill AFB), Salina Kansas", "Puerto Cabello Carabobo", "Macau Macau", "Lumbreras La Rioja", "Tel Aviv (<U+05EA><U+05DC> <U+05D0><U+05D1><U+05D9><U+05D1>-<U+05D9><U+05E4><U+05D5>) Tel Aviv District", "V\u00e9lizy-Villacoublay Yvelines", "Lod (<U+05DC><U+05D5><U+05B9><U+05D3>) Central District", "Lake Mead Nevada", "Auchenblae Aberdeenshire", "Gore Oromia", "Hinojosa del Duque Andalusia", "Cap-des-Rosiers Quebec", "Fassberg AFB Lower Saxony", "Berlin-Tempelhof Berlin", "Aden-Khormaksar 'Adan (<U+0639><U+062F><U+0646>)", "Wadi Halfa Northern (<U+0627><U+0644><U+0634><U+0645><U+0627><U+0644><U+064A><U+0629>)", "Melun-Villaroche Seine-et-Marne", "Kittigazuit Northwest Territories", "Buenos Aires Buenos Aires City", "Sywell Northamptonshire", "Turukhansk Krasnoyarsk Krai", "Mauripur AFB (Karachi) Sindh (<U+0633><U+0646><U+068C> <U+0633><U+0646><U+062F><U+06BE>)", "Port Underwood Marlborough District Council", "Desford Leicestershire", "Roswell New Mexico", "Sydney Nova Scotia", "Rota Island Northern Marianna Islands", "Thruxton Hampshire", "Ellsworth AFB South Dakota", "Batu Melintang Negeri Sembilan", "Liberec Liberec Region (Libereck\u00fd kraj)", "Caribbean Sea All World", "Kinloss Moray (Elginshire)", "Hickam AFB Hawaii", "Ravolzhausen Hesse"], "data": [1, 1, 1, 1, 1, 4, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 3, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Crash location", "count": 446, "min": "Abadan Khuzestan", "max": "\u00c7ubuk Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)"}, {"values": {"label": ["United States of America", "United Kingdom", "Egypt", "France", "Portugal", "Greece", "Slovakia", "Italy", "Belgium", "Ireland", "Czech Republic", "Mexico", "Germany", "Sudan", "South Africa", "Malaysia", "Tanzania", "Zimbabwe", "Switzerland", "Spain", "World", "Colombia", "Sweden", "Indonesia", "Cuba", "Norway", "Philippines", "Canada", "New Zealand", "Brazil", "Poland", "Iraq", "Australia", "Netherlands", "Denmark", "Pakistan", "Chile", "China", "Turkey", "India", "Morocco", "Hungary"], "data": [209, 113, 4, 31, 2, 4, 1, 4, 5, 1, 2, 2, 6, 3, 1, 1, 1, 1, 9, 14, 1, 3, 7, 6, 2, 4, 3, 28, 2, 4, 1, 5, 4, 4, 1, 1, 2, 2, 1, 1, 3, 1]}, "label": "Country", "count": 42, "min": "Australia", "max": "Zimbabwe"}, {"values": {"label": ["North America", "Europe", "Africa", "Central America", "Asia", "World", "South America", "Oceania"], "data": [237, 210, 13, 4, 20, 1, 9, 6]}, "label": "Region", "count": 8, "min": "Africa", "max": "World"}, {"values": {"label": ["2", "0", "3", "6", "4", "9", "16", "5", "1", "7", "8", "12", "10", "13", "11", "20"], "data": [91, 78, 81, 27, 81, 5, 2, 59, 39, 12, 11, 6, 5, 1, 1, 1]}, "label": "Crew on board", "count": 16, "min": "0", "max": "NA"}, {"values": {"label": ["0", "3", "1", "4", "9", "16", "2", "5", "7", "6", "8", "12", "10", "11"], "data": [241, 50, 37, 46, 6, 3, 60, 20, 7, 16, 6, 4, 3, 1]}, "label": "Crew fatalities", "count": 14, "min": "0", "max": "5"}, {"values": {"label": ["0", "NA", "5", "3", "4", "1", "2", "12", "8", "6", "7"], "data": [397, 9, 4, 12, 5, 38, 26, 2, 4, 2, 1]}, "label": "Pax on board", "count": 11, "min": "0", "max": "9"}, {"values": {"label": ["0", "5", "3", "1", "12", "2", "6", "4"], "data": [460, 2, 5, 18, 2, 9, 1, 3]}, "label": "PAX fatalities", "count": 8, "min": "0", "max": "9"}, {"values": {"label": ["0", "5"], "data": [499, 1]}, "label": "Other fatalities", "count": 2, "min": "0", "max": "5"}, {"values": {"label": ["0.0 - 5.3", "5.3 - 10.6", "10.6 - 15.9", "15.9 - 21.2", "21.2 - 26.5", "26.5 - 31.8", "31.8 - 37.1", "37.1 - 42.4", "42.4 - 47.7", "47.7 - 53"], "data": [367, 52, 29, 22, 10, 6, 5, 2, 3, 4]}, "label": "Total fatalities", "count": 10, "min": 0.0, "max": 53}, {"values": {"label": ["Shortly after takeoff from Kelly AFB, an engine failed. The aircraft passed over few houses, stalled and crashed in a cotton field. A passenger was killed while all other occupants were rescued, some of them injured. The aircraft was written off. The crew was enroute to Davis Monthan carrying the members of a baseball team taking part to a tournament.", "Crashed in unknown circumstances.", "While cruising in poor weather conditions, the aircraft hit the slope of a mountain located in the region of Dalry. All six occupants were killed.", "Few minutes after takeoff from Medell\u00edn-Las Playas Airport, the crew decided to return for an emergency landing. On final, the twin engine aircraft crashed in flames in a field and was destroyed. Both occupants were uninjured.", "On final approach to Dakar-Yoff Airport, the captain decided to go around due to low visibility causes by poor weather conditions. A second and a third attempt to land were aborted few minutes later. During the fourth attempt, while short of fuel, the aircraft landed hard and the undercarriage were sheared off. The aircraft slid on its belly for several yards and came to rest, broken in two. Six passengers were killed while nine other occupants were injured.", "The crew was performing a training sortie from RAF Bovingdon. Enroute, the pilot encountered poor visibility due to foggy conditions and was unable to locate the destination airfield. Eventually, he ordered his crew to bail out and attempted to make a solo approach to RAF Bovingdon. Due to fog, he decided to reduce his altitude in an attempt to establish a visual contact with the ground when the airplane hit tree tops and crashed in Garston, east of the airfield. The pilot was killed while all five other crew members were later rescued.", "On approach to Douglas, the crew encountered poor visibility with mist. The captain decided to divert to RAF Jurby when the aircraft hit a hill, overturned and came to rest upside down. The aircraft was damaged beyond repair and all seven occupants were injured.", "Enroute to Khartoum, the twin engine aircraft crashed in unknown circumstances near Aljammalab, about 100 km southwest of Khartoum. The aircraft was destroyed and all 15 occupants were killed. All of them were pilots flying to UK to take deliver of Spitfire for the SAAF. Crew: Maj Frederick Welgemoed, pilot, Lt Hermanus Gerhardus van Rooyen, copilot, Petrus Andries Burger, flight engineer, Cpl Leslie Donovan Case, wireless operator. Passengers: Maj Andrew Christian Bosman, pilot, Cpt Hendrik Christoffel Weideman Liebenberg, pilot, Lt Ronald Leslie Crisp, pilot, Lt Jacobus Stephanus Gericke, pilot, Lt Robert Cecil Hirst, pilot, Lt Hermanus Johannes Kritzinger, pilot, Lt John Jurie Landman, pilot, Lt Peter David Nelson, pilot, Lt Peter Nicolay, pilot, Lt Norman Peter Prinsloo, pilot.", "\"Some 80 minutes after its departure from Belfast-Aldergrove Airport, the aircraft crashed in unknown circumstances into the Atlantic Ocean, about 150 km northwest of the Irish coast, at approximately 55\u00b000'00.0\"\"N 12\u00b000'00.0\"\"W. All nine crewmen were lost in the crash. It is believed that the crew encountered technical problems with some instruments. Crew (202nd Squadron): S/L D. L. Bisgood", "Crashed into the sea shortly after takeoff from the Kwajalein Atoll Airport. All 16 occupants were killed.", "Enroute, the crew was forced to attempt an emergency landing following an engine failure. The aircraft crash landed 10 km south of Malakal and came to rest. Two passengers were slightly injured while all other occupants were unhurt. The aircraft was damaged beyond repair.", "Enroute from Mys Kosistyy to Khatanga, the pilot was forced to attempt an emergency landing in the Taymyr Peninsula after the left engine failed. The aircraft crash landed in the tundra about 180 km northwest of Volochanka. The aircraft was damaged beyond repair but all 33 occupants survived the accident. Four days later, as the rescue teams were unable to locate the wreckage, the captain and eight passengers decided to leave the crash site to search for help. On May 11, 1947, the wreckage was eventually spotted and the rescuers arrived on site to evacuate the remaining 24 occupants. Unfortunately, no trace of the pilot and the eight other passengers was ever found. Officially registered CCCP-L1204 in the Soviet Register, the aircraft still have the 42-32892 registration on tail. The wreckage was recovered in 2016 and transferred to as delivered to the Museum of Northern development in Krasnoyarsk.", "On final approach to runway 05, while at a height of 10 feet, the DC-3 was hit by a private Vultee BT-13 registered NC55312 and carrying one pilot. Following the collision, both aircraft climbed to a height of 150 feet and then stalled and crashed in a huge explosion. Both aircraft were destroyed and all nine occupants were killed.", "In flight, all crew members decided to bail out and abandoned the aircraft that dove into the ground and crashed in a pasture. The aircraft was destroyed but all occupants were safe.", "While descending to Port Moresby Airport, the twin engine aircraft crashed in unknown circumstances 20 miles east of the city. Both crewmen were rescued while the aircraft was damaged beyond repair.", "Shortly after takeoff from Shanghai-Longhua Airport, while in initial climb, an engine failed. The aircraft stalled and crashed in an industrial area located near the airport. While both pilots were seriously injured, three people on the ground were killed.", "While on a flight from Yellowknife, the pilot was forced to attempt an emergency landing following an engine failure. The aircraft crash landed near Coffey Lake and was written off. All three occupants were rescued.", "While approaching Vancouver from the North, the crew did not realized that his altitude was insufficient due to the low visibility caused by night. The twin engine aircraft hit the east slope of a mountain located near Mt Elsay, some 16 km north of Vancouver. SAR operations were conducted in a large area but eventually suspended few days later as no trace of the aircraft nor the crew was found. Walkers found the wreckage of the aircraft in a remote area on September 27, 1994.", "While approaching Croydon Airport on a flight from Paris-Le Bourget, the twin engine aircraft crashed in unknown circumstances in a field located in Tatsfield, about 7 miles southeast of Croydon. The aircraft was destroyed and both occupants were killed, among them R. A. Milburn, pilot, co-owner and founder of this company.", "Crashed on landing for unknown reasons. All three occupants were rescued and the aircraft was destroyed.", "On final approach, the aircraft was too low and hit a train. On impact, the aircraft stalled and crashed in flames short of runway threshold. All four occupants were injured while the aircraft was destroyed by impact forces and a post crash fire. No one was hurt in the train.", "On final approach to Torino-Mirafiori Airport, the three engine crashed in flames on the Aeritalia hangar located near the airport. Both pilots were killed while three other occupants plus three people in the hangar were injured. Crew: Cpt Giulio Barattolo, pilot, \u2020 Cpt Bruno Gazzi, copilot, \u2020 Mar Pasquale Girometti, Mot Marco Ferrando, mechanic, Sgt Maj Genesio Saccucci, radio operator.", "The aircraft was approaching Newark Airport for landing. The airplane was too far to the right for an approach to runway 06 and the tower controller radioed that he was in line for an approach to runway 28. The approach was then made to runway 28 which is 7,100 feet long with an additional usable 500 feet at the end. The approach was fast, however and contact was not made with the runway until within the last 2,000 feet. The aircraft continued off the runway and ran into a drainage ditch where a fire broke out, which was quickly extinguished. Source: https://aviation-safety.net/database/record.php?id=19470504-0", "Shortly after takeoff, while in initial climb, an engine failed. The aircraft stalled and crashed in flames 5 km from the airport. The aircraft was destroyed and all 11 occupants were killed.", "While cruising at an altitude of 1,300 meters en route to Kramatorsk, Ukraine, the left engine failed. Shortly later, the right engine overheated and lost power. In such situation, the pilot attempted to make an emergency landing when the aircraft crash landed onto a hillside. All five occupants were unhurt while the aircraft was damaged beyond repair.", "On final approach to RAF Drieffield, the crew encountered control problems and informed ground that he was attempting an emergency landing. Few seconds later, the aircraft nosed down and crashed in a huge explosion few hundred yards short of runway threshold. The aircraft was destroyed by impact forces and a post crash fire and both pilots were killed.", "Crashed on landing in unknown circumstances. The aircraft was damaged beyond repair and all four occupants were rescued.", "During initial climb, while at a height of some 300 meters, the twin engine aircraft went out of control and crashed into the sea few hundred yards off shore. Both crew members were killed.", "The crew was conducting a training mission (pilot transition program). While cruising at an altitude of 2,500 feet and completing a turn to the left, the four engine aircraft christened 'Star of Athens' went into a dive and crashed into the Delaware Bay, some 7 miles west off Cape May Pount. The aircraft was destroyed on impact and all four crew members were killed.", "The crew was forced to make an emergency belly landing southeast of Bergstrom AFB, near Austin. There were no casualties but the aircraft was damaged beyond repair.", "Enroute from Cairo to Basra on a cargo flight, the crew encountered an unexpected situation and decided to divert to the H3 Oil Station Airfield for an emergency landing. The four engine aircraft crash landed and came to rest. All four occupants were unhurt while the aircraft was damaged beyond repair.", "Crashed on landing. Occupant fate unknown.", "During the takeoff roll, the three engine aircraft was caught by strong crosswinds, went out of control and veered off runway before coming to rest, broken in two. Both pilots were injured and the aircraft was written off.", "Crashed in flames during takeoff for unknown reason. The aircraft that was carrying mail and few passengers and crew was destroyed by a post crash fire but there were no casualties.", "The twin engine aircraft was returning to Paris-Le Bourget following a cartographic mission. After sunset, while flying at low height, the aircraft hit a tree and crashed in a field in Ch\u00e2tillon-sur-Colmont. All four occupants, two photographs and two pilots, among them Robert Leriche, were killed. The accident occurred in May (the exact date remains unclear).", "On final approach, the visibility was poor due to severe weather and as the aircraft was too low, it hit with its right wing a radio antenna located 2,600 meters short of the runway threshold. The aircraft stalled and crashed in a huge explosion, killing all 22 occupants.", "The DC-3 cargo plane landed on a runway which was 4,200 feet long but the pilot made his approach too fast. Brakes were not used until within 300 feet of the end of the runway. The aircraft continued off the runway, down a rough incline and across a dirt road. It was considered as damaged beyond repair. Source: https://aviation-safety.net/database/record.php?id=19470516-1", "During the takeoff roll, clear for rotation, the pilot lost directional control of the aircraft that overran and came to rest. There were no casualties but the aircraft was written off.", "While cruising in marginal weather conditions, the aircraft hit the slope of Mt Katanglad located about 24 km northwest of Malaybalay. All 18 occupants were killed. At the time of the accident, the visibility was poor due to weather and it appears that Mt Katanglad was showed with an elevation of 7,900 feet on maps while its real altitude was 9,300 feet.", "While approaching the Selfridge Air National Guard Base from the south, the twin engine aircraft crashed in unknown circumstances two miles south of Windsor, Ontario. All six occupants were killed.", "Enroute, the crew encountered an unexpected situation and decided to abandon the aircraft and to bail out. The aircraft dove into the ground and crashed in a mountainous are located 5 miles southeast of Livingston. Both pilots were found unharmed.", "The aircraft lost power during takeoff roll. The captain decided to abandon the takeoff procedure and raised the undercarriage. The aircraft sank on its belly and skidded for several yards before coming to rest. There were no casualties.", "Crashed in unknown circumstances in Santos Dumont Airport.", "On final approach to Wright-Patterson AFB, the aircraft went out of control and crashed in flames in a field located 5 miles short of runway. Five crew members were killed while two others were seriously injured.", "On final approach to Luqa Airport, the four engine aircraft was too low and hit a stone pile located in a stone-pit. The undercarriage were partially sheared off and the aircraft belly landed and came to rest. There were no casualties but the aircraft was damaged beyond repair. For unknown reason, the crew continued the final approach at an insufficient altitude.", "While on a cargo flight from Lae, the crew encountered an unexpected situation and was forced to make an emergency landing. The twin engine aircraft came to rest in a field located near Bulolo and was damaged beyond repair. Both crewmen were unhurt.", "The crew was engaged in a combined exercise with another RNAF Anson registered D-21 and carrying a crew of six as well. After takeoff from the Gilze-Rijen AFB, while in initial climb, both aircraft collided and crashed in a field. They were totally destroyed and all 12 crew members were killed.", "During the takeoff roll, the aircraft skidded and went out of control. The undercarriage collapsed and the airplane came to rest. There were no casualties among the crew of five from the 82nd Squadron.", "The crew was engaged in a combined exercise with another RNAF Anson registered D-22 and carrying a crew of six as well. After takeoff from the Gilze-Rijen AFB, while in initial climb, both aircraft collided and crashed in a field. They were totally destroyed and all 12 crew members were killed.", "The aircraft was performing a flight from Seoul-Kimpo to Tachikawa AFB with several US officers and five civilians on board. While approaching the Tokyo area by night and from the southwest, the crew completed a turn at an altitude of 1,500 meters in marginal weather conditions when the aircraft hit the slope of a mountain located west of the city of Atsugi, about 30 km southwest of Tachikawa AFB. The aircraft was destroyed by impact forces and burned completely. All 41 occupants were killed. At the time of the accident, the visibility was 10 km with cumulus and altostratus between 1,000 and 2,500 meters.", "\"Flight 521 taxied from its parked position, rolled onto Runway 18, and without pause or hesitation accelerated for take-off. The throttles were advanced. Air speed increased to above 90 miles per hour. Captain Baldwin applied back pressure to the control column, but the \"\"feel\"\" of the controls was \"\"heavy", "Enroute from Reykjavik to Akureyri, while flying in marginal weather conditions east of the city of Siglufj\u00f6r\u00f0ur, the aircraft hit the slope of Mt Hestfjall located on the west coast of the H\u00e9\u00f0insfj\u00f6r\u00f0ur Bay. The aircraft was totally destroyed and all 25 occupants were killed. Up to date, worst airplane crash in Iceland History.", "Shortly after takeoff from Fort Wainwright AFB (Ladd Field), while in initial climb, the aircraft stalled and crashed in flames 3 miles east of the airfield. Nine crew members were rescued while three others were killed.", "Crashed in unknown circumstances in a swampy area. Occupant fate remains unknown.", "The four engine aircraft left Newark Airport at 1704LT on a flight to Miami. While climbing to an altitude of 4,000 feet, the aircraft went out of control, dove into the ground and crashed in a huge explosion in a field located 2 miles east of Bainbridge. The aircraft was totally destroyed and all 53 occupants were killed.", "The crew was performing a cargo flight from London-Gatwick to Barcelona. After touchdown, the four engine aircraft was unable to stop within the remaining distance. It overran, lost its undercarriage, went through a fence, slid for several yards and lost its both left engines before coming to rest. All four crew members were unhurt while the aircraft was damaged beyond repair. It is believed that the landing was completed with an excessive speed.", "Just after lift off, while in initial climb, the three engine aircraft stalled and crashed in flames. All three crew members were killed. Crew: Georges Pascaud, pilot, Jean-Louis Coquerel, radio navigator, Pierre Besson, mechanic.", "Crashed while landing on a lake near Ketchikan. Occupant fate remains unknown. It is reported that the crew forgot to raise the landing gear.", "The crew was completing touch and goes at Schofields Airport. On final approach, the airplane failed to land, overshot and eventually crashed in a wooded area past the runway end. The aircraft was destroyed while both pilots were injured.", "On the leg from Nice to Marseille, the crew started the descent to Marignane Airport when the three engine aircraft hit the slope of a mountain located in the Sainte-Beaume Mountain Range, near G\u00e9menos. A crew member was seriously injured while both other occupants were killed. Two days later, the only survivor died from his injuries. Delivered in September 5, 1945, the aircraft entered in service in June 8, 1946 only. Crew: Gabriel Cahouet, pilot, Henri Decoudray, radio navigator, Robert Salles, mechanic.", "Following a wrong approach configuration, the aircraft landed very hard. After being parked on apron, the technician proceeded to a complete inspection which revealed that the fuselage was buckled. The aircraft was declared as damaged beyond economical repair.", "The crew was performing a training sortie when the aircraft went out of control, nosed down, lost several pieces and partially disintegrated in the air before crashing in a field located 6 miles east of RAF Cottesmore. All three crew members were killed.", "While landing on Mistassini Lake, the single engine aircraft went out of control, came to rest upside down and sank. There were no casualties but the aircraft was lost.", "On landing at Mys Kosistyy, near the Khatanga Bay, when had to go around due to strong cross winds. Engines # 3 and 4 flamed out shortly afterwards so the aircraft stalled and crashed in the tundra some 1,500 meters from the runway. While the aircraft was damaged beyond repair, all six occupants escaped unhurt.", "Crashed on landing for unknown reason. There were no casualties.", "On touchdown by night at Natal Airport, the aircraft went out of control, veered off runway, collided with airport facilities and came to rest in flames. Three crew members and two passengers were killed while 13 other occupants were injured. The aircraft was destroyed by fire.", "While on a training sortie in RAF Oakington, the aircraft belly landed and slid for several yards before coming to rest. All four crew members were unhurt while the aircraft was damaged beyond repair.", "Shortly after takeoff from Cirrus Lake, while climbing, the single engine aircraft hit trees and crashed in flames in a wooded area. The pilot was injured and the aircraft was destroyed by fire.", "\"The flight departed Pittsburgh at 1724 and at 1753, 29 minutes later, reported over the Flintstone Intersection, 88 miles southeast of Pittsburgh at 7,000 feet. At 1754 the flight received a message from Washington Airway Traffic Control clearing it to the Herndon Fan Marker to maintain 7,000 feet until further advised The flight was also instructed that there would be an indefinite delay at Herndon but that approach clearance could be expected no later than 1920, which was approximately one hour and 10 minutes later than its estimated time of arrival Immediately after receiving this message the flight was given the 1730 hourly weather sequence report for Washington After acknowledging receipt of the Washington weather report, Flight 410 instructed the company station at Washington to request from Airway Traffic Control a clearance to approach Washington in accordance with contact flight rules on the right side of the west leg of the Arcola radio range This request was approved by Airway Traffic Control and at 1803 the flight received a message clearing it to the Washington tower to cross the Arcola radio range station at or below 2,500 feet and in accordance with contact flight rules. The flight was advised that if this were not possible it was to hold at 2,500 feet and to inform Airway Traffic Control. Prior to establishing its descent the flight was instructed to report when leaving each 1,000-foot level In accordance with these instructions Flight 410 reported leaving the 7,000-foot level at 1805 and two minutes later another report was received from the flight indicating it was leaving 6,000 feet. The flight reported its position as \"\"south of Martinsburg\"\" at 1808 and immediately thereafter reported that it was leaving 5", "Crashed in unknown circumstances in a mountainous area located some 70 km north of \u00d0\u00e0 L<U+1EA1>t. All 12 occupants were killed.", "Shortly after takeoff, while in initial climb, the aircraft stalled and crashed. The passenger and the pilot were injured while the captain was killed. The crew was performing a cargo flight with a load of 604 racing pigeons.", "The flight had originated the previous morning when the plane took off from Davis-Monthan Air Force Base in Tucson, Arizona, for a navigational training mission to the east coast. The plane was scheduled to land at Andrews Field (Later known as Andrews Air Force Base) in Washington, D.C., but due to bad weather was diverted to Pittsburgh Airport where it arrived at 1507LT. After refueling, the aircraft proceeded towards Hanscom Air Force Base in Bedford, Massachusetts, where it was to remain overnight before flying back to Arizona the following day. However, the weather grew worse, and with poor visibility and darkness falling the crew became lost, ending up over Vermont instead of Massachusetts. Shortly after midnight on June 15, the bomber crashed into the southeast side of Hawks Mountain and exploded. All twelve men aboard were killed, and to this day the incident remains the worst aviation accident to ever occur in Vermont. Crew: 1st Lt Robert G. Fessler, pilot, 2nd Lt Wilfred E. Gassett, copilot, 2nd Lt Ceasare P. Fontana, observer, M/Sgt D. D. Jack, crew chief, T/Sgt Paul H. Fetterhoff, T/Sgt Clayton K. Knight, S/Sgt Oliver W. Hartwell, S/Sgt Sylvester S. Machalac, S/Sgt John J. O\u2019Toole, Cpl Harry C. Humphrey, Cpl Robert Clark, Pfc Robert M. Stewart. Source: http://www.newenglandaviationhistory.com/tag/b-29-44-62228/", "Crashed on landing. Crew fate unknown.", "The aircraft lifted off from Leninabad after a takeoff roll of 1,200 meters only. After rotation, while in initial climb at a height of 2-3 meters, the aircraft hit a telephone pole and power cables, stalled and crashed in flames. Three occupants were killed while four others were injured, among them the copilot. The aircraft was partially destroyed by fire. The crew was performing a cargo flight to Alma Ata, carrying a load consisting of apricots and silk.", "For unknown reason, the crew was forced to make an emergency landing on a beach in Cebu City. The aircraft was written off but there were no casualties.", "The twin engine aircraft left Asunci\u00f3n Airport at 1750LT with two officers and two pilots on board. About thirty minutes into the flight, the crew encountered poor weather conditions with thunderstorm activity. The aircraft went out of control and crashed in an uninhabited area located near Quyquyh\u00f3. The pilot was killed and his body was found in the wreckage. However, no trace of the three other occupants was found. It is believed that they may have abandon the aircraft and bail out, but as their bodies were never found, they were considered as deceased.", "\"Flight 121 departed from Karachi at 1537 June 18, 1947, for a return trip to the United States. The climb to the cruising altitude of' 18,500 feet was routine, and the flight was proceeding \u201cdirect\u201d to Istanbul, the first intended point of landing, estimating its arrival there to be 0208 the next day. Five hours after take-off trouble developed in the No. 1 engine, and the No. 1 propeller was feathered. The captain, J H. Hart, decided to continue to Istanbul with the use of three engines, however, it soon became evident that at an altitude of 18,500 feet the airspeed obtainable was not sufficient to provide adequate cooling for the engines. even though climb power was applied. Power was accordingly reduced and altitude was gradually lost. At 17,500 feet the engines still overheated and the descent was continued to 10,000 feet. At 2140, approximately one hour after the failure of engine No 1, the flight advised its company radio in Karachi of the engine trouble, following which it reported its 2200 position. This report placed the aircraft at 14,000 feet, 50 miles east of Baghdad, Iraq, and 90 miles east of the Royal Air Force Field at Habbaniya, Iraq Shortly after this report Habbaniya Tower was advised by the flight that its approximate position was over Baghdad. at an altitude of 10,000 feet, and the flight requested Habbaniya Tower to inform the civilian airfields in their area that the aircraft was proceeding with the use of only three engines to Istanbul Habbaniya Tower replied, stating that no airfields would be open until dawn, and suggested that an emergency landing be made at Habbaniya Flight 121, however, affirmed Its intention to continue, and added that if it were impossible to reach Istanbul, a landing would be made at Damascus, Syria Habbaniya Tower answered, at 2225, that all airfields in the Damascus area were closed until 0400 and again suggested that the flight land at Habbaniya. The flight again stated that It would continue to Istanbul, but that it would turn back to Habbaniya if it experienced any more trouble. Contemporaneous with this communication to Habbaniya Tower the flight sent a message, received in Karachi, and relayed to Damascus, requesting that Damascus Radio be alerted to stand by, and that the airport be opened. At 2308, June 18, Damascus Radio was on the air, and the field was opened as had been re quested. At approximately 2300 the flight reported its position to be 75 miles north west of Habbaniya at 10,000 feet Fifteen to thirty minutes later the purser seated in the passenger cabin noticed that the \"\"fasten seat belt-no smoking\u201d sign had come on", "On final approach to Poshkakagan Lake, the engine failed. The aircraft stalled and crashed on the shore. All four occupants were uninjured while the aircraft was written off.", "An engine failed in flight, forcing the crew to ditch the aircraft into the Karkinyts\u2019ka Gulf, some two km off shore. The aircraft sank fifteen minutes later and the crew of a trawler was able to evacuate 21 wounded people while 8 others, among them two crew members, were killed.", "Crashed in unknown circumstances shortly after takeoff from Grey Trout Lake, Ontario. All occupants survived while the aircraft owned by J. A. Mathieu was damaged beyond repair.", "The twin engine aircraft left Cali at 0827LT on a routine flight to Bogot\u00e1-Techo Airport. Some 45 minutes into the flight, the crew encountered icing conditions and the aircraft went out of control and crashed in a mountainous area located near the village of Roncesvalles, about 50 km southwest of Ibagu\u00e9. All eight occupants were killed.", "Shortly after takeoff from Kwagama Lake, while in initial climb, the single engine aircraft encountered downdraft, stalled and crashed into the lake. Both occupants were rescued while the aircraft sank and was lost.", "Crashed on landing. There were no casualties.", "While flying in marginal weather conditions, the twin engine aircraft hit the slope of Mt Makiling (1,090 meters high) located southeast of Calamba. The wreckage was founded three days later about 50 meters below the summit. All six occupants were killed.", "Crashed in unknown circumstances in Calcutta. The operator SATI may be Soci\u00e9t\u00e9 d'Avions Taxis d'Indochine.", "While approaching the Irish coast, the left engine failed. The crew was unable to maintain the assigned altitude so the captain decided to ditch the aircraft near the South Rock Lighthouse, about 3 km from Coughley (Coghly). The aircraft hit the water surface with the base of its tail, overturned and came to rest upside down. Both crewmen escaped uninjured and found refuge on one wing. They were eventually rescued by the crew of a vessel two hours later. The aircraft was lost.", "Enroute, the right engine failed and caught fire. The captain reduced his altitude and attempted an emergency landing in a swampy area located near Isiolo. The aircraft crash landed and was damaged beyond repair while all 15 occupants were able to evacuate safely. Crew from the 216th Squadron.", "On final approach, the aircraft was too low and hit the ground short of runway, lost its undercarriage and came to rest. There were no casualties but the aircraft was written off.", "One minute after takeoff, while in initial climb at a height of some 50 meters, the aircraft banked left to an angle of 30\u00b0, lost speed and altitude, then hit tree tops and crashed in a wooded area located 3 km from the airport. Four crew members were killed while a fifth crew and the passenger were seriously injured.", "While performing a cargo flight from Guayaquil to San Jos\u00e9, the aircraft failed to arrive in Costa Rica. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor the crew was found. It is possible the aircraft crashed into the Pacific Ocean off the Costa Rican coast.", "While cruising in marginal weather conditions, the three engine aircraft hit the slope of a mountain near Es\u00e9ka. All thirteen occupants were killed. Crew: Louis Coupvent, pilot, Robert Ferrisse, radio navigator, Frank Malaret, mechanic.", "While performing a solo training mission at Oran-Tafraoui Airfield (called BAN Lartigue in the 40's), the pilot lost control of the aircraft that crashed in Ouardia, about 2 km from the airport. The pilot Robert Georges Gosselin was killed.", "Crashed on final approach to Newtownards Airfield. The aircraft was damaged beyond repair and both crewmen were injured.", "Enroute, the twin engine aircraft went out of control and crashed into The Channel, about 24 km southwest of Isle of Wight. Both crew members were killed.", "The four engine aircraft left Hamilton, Bermuda, bound for Morrison AFB located in Palm Beach, Florida. While cruising about 294 miles northeast of the Florida coast, the crew encountered severe weather conditions with thunderstorm activity and turbulence. The aircraft went out of control and crashed into the sea. Some debris were found but no trace of the six occupants that were considered as deceased.", "The crew was engaged in an anti-submarine attack simulation of the HMS Sentinal. While cruising at low height, the seaplane hit the water surface, exploded and crashed about 32 km north of the Inishtrahull Island, off Donegal County. Five crew members were rescued while seven others were killed. For unknown reason, the pilot was flying at a too low altitude to complete the exercise. Crew from the 201st Squadron.", "While flying in a valley in marginal weather conditions, the twin engine aircraft hit tree tops and crashed in a wooded area located on Mt Meenard. Four crew members were injured while a pilot was killed.", "While approaching Bizerta Airport from the east, the twin engine aircraft crashed in unknown circumstances into the Mediterranean Sea, few km off shore. Both occupants were quickly rescued while the aircraft sank and was lost.", "Shortly after takeoff from Campo de Marte Airbase, while in initial climb, the twin engine aircraft went out of control and crashed. All occupants escaped injured while two people on the ground were killed.", "An engine failed enroute, forcing the crew to attempt an emergency landing. The aircraft crash landed in a field in Oberr\u00f6blingen. There were no casualties but the aircraft was damaged beyond repair.", "At 0134LT, the flight departed Augusta bound for Miami. The last communication from the crew was at 0303LT, the morning of July 13, at which time they reported to the Jacksonville Airway radio that they were at 2,000 feet. One and one-half hours later, the aircraft was observed approximately 2 1/2 miles west of Melbourne, Florida, flying southeast at an altitude of from 300 to 500 feet. The engines were heard to sputter and misfire as the aircraft proceeded ahead on a straight course. Altitude was gradually lost, the landing lights were turned on, and seconds later the aircraft struck the ground and crashed 4 miles southwest of Melbourne. Both pilots and twelve passengers were killed while all other occupants were injured, some of them seriously.", "Forced landing in trees in rugged terrain near the head of the Wampit River. Captain Ross K. Crabbe was en route from Lae to Wau with cases of supplies and two Australian passengers. Became trapped in a narrowing valley with low cloud base, deliberately put the aircraft into the spreading top branches of a tree. Crabb was hurled out of the cockpit through the nose and down to a ravine 36 meters below, injuring his back. The Dragon remained wedged in the top of the tree and his calls to the passengers were unanswered. A group of native hunters heard the crash and reported it to a nearby Government station. Two medical assistants were led to the scene, climbed the tree in the dark and administered morphine to the injured passengers and stayed with them for the night. The aircraft fabric was tearing as it moved and settled in the tree. Next day a team with a doctor arrived and the passengers were lowered in baskets. One seriously injured passenger was flown to Sydney by QEA DC-3 for plastic surgery for facial injuries. Source and photo: http://www.goodall.com.au/australian-aviation/dh84-pt2/dh84-dragon-pt2.htm", "The crew was performing a training flight from V\u00e4ster\u00e5s to G\u00f6teborg. On approach to Torslanda Airport from the northwest, the single engine aircraft went out of control, crashed into the sea off Tumlehed and came to rest upside down. Both occupants were rescued while the aircraft was damaged beyond repair.", "The crew (pilots and engineers) was involved in a ground test of the brakes systems. During taxiing, while practicing fast stop, the nose gear collapsed and punctured the cockpit floor. There were no injuries but the aircraft was written off.", "On touchdown, the three engine aircraft skidded and then went out of control. It veered off runway and came to rest in flames in a field. A passenger was killed.", "Crashed in unknown circumstances. Crew fate remains unknown.", "Enroute from Cairo to Basra, the crew was informed by ATC about poor weather in Basra and was instructed to divert to the Shaibah AFB located east of Basra. On approach by night, the pilot was unable to locate the runway and was forced to abandon the landing procedure for a go around. A second attempt to land and a third approach few minutes later were abandoned as well. During the fourth trial, the captain reduced his altitude in an attempt to establish a visual contact with the ground when the four engine aircraft hit the ground and bounced. It gain few meters, flew over a wooded area and eventually stalled and crashed 740 yards further, in a desert area. All six crew members were killed while 12 passengers were injured.", "Crashed somewhere in Ecuador. Occupant fate remains unknown.", "The pilot Sadettin Toker was killed when his Baltimore crashed in unknown circumstances near the Diyarbakir Airport while performing a training sortie.", "Crashed on takeoff from Croydon Airport for unknown reason. Both crew members were injured and the aircraft was written off.", "During the takeoff roll, the captain elected to rotate but the aircraft failed to respond. The crew attempted to make an emergency braking procedure but the aircraft failed to stop within the remaining runway, overran, hit several people who came to the airport to assist to the departure of the aircraft, crossed a road and came to rest in flames. Fourteen occupants plus three people on the ground were killed. Five other occupants plus eight people on the ground were seriously injured. The aircraft was destroyed by fire. The crew was on a flight to the nearby airbase of Mor\u00f3n to take part to the commemoration of the death of the Argentinian General Jos\u00e9 de San Martin in 1850. About 200 aircraft from the Argentinian Air Force were taking part to this event.", "Crashed while performing a training sortie in Eskisehir AFB. Both crew members were killed.", "On final approach to Whidbey Island-Ault Field NAS, the aircraft was too low, hit tree tops and crashed in flames. All five crew members were killed.", "The crew consisting of pilots and engineers was completing a test flight in Mor\u00f3n AFB following engine maintenance. After touchdown, the aircraft collided with a tank-truck that was mistakenly on the runway. The truck and the airplane exploded. Two crew members and the truck driver were killed while four other occupants were injured.", "After landing, the four engine aircraft encountered brakes problem and was unable to stop within the remaining distance. It overran and came across a river 250 yards further on. All 24 occupants were evacuated safely, four of them were slightly injured. The aircraft was written off.", "Crashed in unknown circumstances into the Rio Capibaribe in Recife. All six crew members were killed.", "The crew was performing a humanitarian flight from Singapore on behalf of the Indonesian Red Cross with drugs on board. On final approach to Yogyakarta-Maguwo Airport, the Dakota was shot down by the pilots of two NEIAF (Netherlands East Indies Air Force) fighters and crashed in an open field located few km from the airport. All five occupants were killed. Indonesian authorities confirmed that the aircraft was flying under civilian color scheme but did not have any Red Cross painted on its fuselage. So it is most probable that the fighters' pilots mistook the aircraft and thought it was a military plane carrying soldiers. Both pilots were Australian citizens as all three passengers were high ranking Indonesian Army Officers. Still registered in India, the aircraft was offered few days ago to the Indonesian government by Jawaharlal Nehru, future Indian Prime Minister. Following this tragedy, Indonesian Authorities will rename the airport of Yogyakarta that became Adisutjipto instead of Maguwo. Crew: A. N. Constantine, pilot, R. Hazlehurst, copilot, B. Ram, flight engineer, A. Q. Wirjokoesoemo, radio navigator. Passengers: Agustinus Adisutjipto, Abdulrahman Saleh, Adisumarmo Wirjokusumo.", "While on a flight from Urumqi to Lanzhou, the aircraft crashed in a mountainous area located in the region of Wuwei. The wreckage was found few days later and all 26 occupants were killed, among them one US and one British citizen.", "During the takeoff roll, the aircraft went out of control, veered off runway and came to rest. All five crew members were unhurt while the aircraft christened 'Port of Marseilles' was damaged beyond repair.", "The twin engine aircraft left McChord AFB at 0212LT bound for Hamilton AFB located in Novato, California. About fifteen minutes into the flight, the left engine caught fire and smoke spread into the cabin. Two crew members bailed out when the left wing broke off. Out of control, the aircraft dove into the ground and crashed in a pasture located 15 miles east of Kelso. Both crew who bailed out were able to walk away and to find help while both pilots were killed in the crash.", "After passing over Mendoza, enroute to Santiago de Chile, the crew encountered poor weather conditions with strong winds (up to 180 km/h) and heavy snow falls. While cruising at an altitude of 15,000 feet, the four engine aircraft christened 'Star Dust' hit the slope of Mt Tupungaro located in the Argentinian Andes. As the airplane failed to arrive, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor the crew was found. About 53 years later, in 2000, an official mission conducted by Argentinian Army Officers and Scientists was organized to find the aircraft. Few debris and three bodies were found and repatriated down to the valley.", "While cruising in marginal weather conditions, the twin engine aircraft christened 'Pedro de Valdivia' hit the slope of Mt Coloso located in the region of Antofagasta. All three occupants were killed. Crew: Roberto Reed Merino, pilot, Enrique \u00c1lmos Ojeda, copilot.", "Shortly after takeoff from Ponta Delgada Airport, while in initial climb, the twin engine aircraft went out of control and crashed into the sea few km off shore. Few debris were found on water surface but all six occupants were killed.", "The crew was engaged in a local training flight in Moscow. While flying at an altitude of 400-450 meters, the crew initiated an engine failure when the aircraft lost speed while performing a steep turn to the left. The aircraft went upside down and crashed in Naberezhnaya, in the suburb of Moscow. All five occupants were killed. It was reported that both passengers were illegal.", "While landing in the Svolv\u00e6r Bay, the seaplane went out of control and plunged into the water before coming to rest. There were no casualties among the 12 occupants while the aircraft was damaged beyond repair.", "The aircraft and its crew were dispatched from Baku-Zabrat Airport to the south (125 km south of Baku) to complete a night training program. While approaching Banke Airstrip, at a height of 100 meters, the pilot in command made a turn to the left when the aircraft stalled and crashed. Four crew members were killed while two others were seriously injured.", "Crashed shortly after takeoff from Barra Airport, Barra Island. The aircraft was written off and all seven occupants were rescued.", "The aircraft was on its way from Kodiak to Unalaska, carrying a crew of five and fifteen members of a Navy football team. While cruising some 250 km from the destination, the crew informed ground he encountered strong head winds. Shortly later, the seaplane crashed in unknown circumstances into the sea. All 20 occupants were killed.", "The aircraft took off on runway 13 of La Guardia Airport at 1843LT, having been cleared on an instrument flight plan to Rochester, New York, with Toronto, Ontario, as an alternate. Approximately 2 minutes after take-off the flight called La Guardia Tower and reported that it was in the vicinity of the south end of Whitestone Bridge, approximately 2 1/2 miles northeast of La Guardia Airport. The flight advised that the oil pressure was low on one engine, and requested clearance to land on runway 22. The request was approved, and the tower informed the crew that the wind was calm. When asked if emergency equipment was desired to stand by, the flight replied in the negative. Shortly thereafter, NX88787 reported that it was on the final approach, and that it was over the sand barges, located approximately one-half mile off the approach end of runway 22. In reply the flight was again given clearance to land. The aircraft was first seen at an altitude of approximately 800 feet, and about 1,300 feet off the approach end of runway 22 with the landing gear extended. The flaps were lowered, and the aircraft started a steep descent to runway 22,but it passed over the approach end of the runway at an altitude of approximately 300 feet. The flight then requested and was granted permission by the tower to make a right turn, however, the aircraft continued straight ahead over the runway, gradually losing altitude. When one-third of the way down the runway, the right propeller was feathered. When over the intersection of runways 22 and 18 and at an altitude of 200 feet the flaps were raised, which resulted in an additional loss of altitude. During or directly after raising the flaps, a right turn was initiated, and the landing gear was observed to retract slowly. Competent witnesses stated that the right turn was made at a very slow speed, at a high angle of attack, and at an altitude appearing never to have exceeded 200 feet. Over Bowery Bay the aircraft on two occasions almost settled into the water. When in a flat right turn toward runway 13 it lost altitude to about 50 feet. Approximately 2,000 feet from the end of the runway, the landing gear started to extend, and became fully extended when the aircraft was aligned with runway 13. At this time the airplane attitude appeared to be that of a steep climb. The wings were seen to wobble slightly, then the left wing and nose dropped, and the airplane struck the water at an angle of approximately 20 degrees. The forward movement of the aircraft continued on the surface of the water for 40 to 50 feet, throwing up a great spray as the tail rose to a vertical position, after which the aircraft continued over on its back and sank in about 5 minutes.", "The crew was completing a cargo flight from Sydney-Mascot. On touchdown in Kempsey, the undercarriage collapsed. The aircraft skidded on runway, came to rest and was damaged beyond repair. Both pilots were unarmed.", "On approach to Malm\u00f6-Bulltofta Airport, the aircraft was too high on the glide. Instead of making a go around, the captain decided to nose down, increase engine power and landed at high speed. Unable to stop within the remaining distance, the aircraft overran and hit an embankment before coming to rest. The aircraft was destroyed, a crew member was killed while four others were seriously injured.", "Ready for departure, the single engine aircraft was taxiing on a lake located in eastern Quebec, about 160 km south of Goose Bay, when it collided with an unknown obstacle and sank. Both occupants were unhurt.", "The crew was completing a training sortie from Rio de Janeiro-Gale\u00e3o Airport. While flying at low altitude in marginal weather conditions, the twin engine aircraft hit tree tops and crashed in a huge explosion in a wooded area located near Pendotiba, east of Rio de Janeiro. All seven crew members were killed.", "The four engine aircraft was completing a flight from Buenos Aires to Rio de Janeiro, carrying an Argentinian delegation to the Inter-American Conference in Rio de Janeiro. Due to poor visibility caused by thick fog, the crew failed to establish a visual contact with the airport of Rio and continued to the northeast. Eventually, the captain elected to make an emergency landing, maybe due to fuel shortage. The aircraft crash landed on a beach located in Itapemirim, about 330 km northeast of Rio. The aircraft was written off while all occupants were unhurt.", "Six minutes after takeoff from Orl\u00e9ans-Bricy Airbase, while in initial climb, the three engine aircraft went out of control and crashed in flames in a wooded area located 2 km north of Cercottes. All eight crew members were killed. Crew (Escadron de Transport 3/61 Poitou): Lt Andr\u00e9 Brisset, Lt Yves Fouques, Lt Bernard Couturier, Lt Charles Nguyen Than, Lt Pierre Bourdet, Lt Lucien Turina, Lt C\u00e9sar Serbassi, Sgt Charles Guinet.", "Crashed on final approach to Bucharest-Baneasa Airport. Three passengers were killed while five other occupants were injured.", "Crashed in a garden in New Germany while on approach to Wright-Patterson AFB. All four crew members were injured and the aircraft was written off.", "Crashed on takeoff when all four engines failed simultaneously. All five crew members were injured and the aircraft was written off.", "While landing by night off Montevideo, the seaplane crashed, overturned and sank. Four crew members were killed while both passengers and a fifth crewman were injured. The aircraft was lost. Source: http://1000aircraftphotos.com/Contributions/HornDavid/9343.htm", "While approaching the Hawaiian coast of Oahu Island on a flight from Tokyo, the crew encountered a fuel exhaustion and was forced to ditch the aircraft about 60 miles west of Hickam Field where it should land. Ten people were rescued while three others were killed, among them George Acheson, personal advisor of General McArthur and President of the Allied Council in Japan.", "While cruising by night in good weather conditions, a short-circuit on the electrical system caused the failure of several instruments. As the crew decided to fly without a navigator (which was considered against RAF procedures), the captain decided to reduce his altitude in an attempt to make an emergency landing. The aircraft belly landed in a prairie, skidded for several yards and eventually came to rest with its left engine in flames. Both crewmen were able to leave the aircraft that was destroyed by fire.", "\"After takeoff from Lae-Nadzab Airport, while climbing vertical to the Huon Gulf, the right engine failed, followed shortly later by the left engine. The pilot reduced his altitude and ditched the aircraft off Lae. All three occupants were quickly rescued by a fisherman while the aircraft was lost. Testimony from the passenger: \"\"I had the day off and Johnny Rose was doing a trip to Kokoda and Popondetta. I'd never been there and when he offered me a seat I jumped at it. He had another passenger on board", "While flying at an altitude of 10,000 feet in marginal weather conditions, the aircraft hit the slope of Mt Blue Bell Knoll located north of Boulder, Utah. The aircraft was destroyed by impact forces and all three occupants were killed.", "The approach to Bahrain was completed by night and the crew landed in the Marine Base at an indicated speed of 85 to 90 knots. Upon landing, the seaplane had a tendency to nose down so the captain counteracted with the control column and increased power simultaneously. The aircraft bounced, left water for about one to two seconds and then veered sharply to the left. Out of control, it plunged into water and came to rest. Three crew members and seven passengers were killed.", "Shortly after takeoff from Woodford Airport, while climbing to a height of some 60-80 feet, the four engine aircraft banked right, stalled and crashed in a wooded area. Four occupants were killed while two others were rescued. Crew: Bill Thorn, pilot, \u2020 David Wilson, copilot, \u2020 John Webster, flight engineer and radio operator, \u2020 Roy Chadwick, technician and designer, \u2020 Eddie Talbot, flight engineer, Stuart Davies, chief designer.", "While preparing for landing in Allen Lake, the single engine aircraft was caught by strong winds, landed hard, overturned and came to rest. The aircraft was lost and all five occupants were rescued.", "While cruising at an altitude of 13,000 feet in poor weather conditions, the four engine seaplane hit the slope of a mountain located 31 km northeast of Harstad. The wreckage was found in a rocky are some 290 meters from the summit and all 35 occupants were killed. It is believed that the aircraft was slightly off course at the time of the accident. Crew: John Buer, pilot, Karl Bengtsen, copilot, Johannes Daae Risnes, navigator, Paul Idland, radio operator, Gunnar Michaelsen, mechanic, Atle Fedje, steward, Ester Mildrid L\u00f8snes, stewardess.", "Crashed on landing. No casualties.", "The crew was completing a training sortie and while cruising at low height with an engine inoperative, the aircraft went out of control, dove into the ground and crashed in a huge explosion in a field located in Westgate-on-Sea. Both pilots were killed.", "Crashed on landing and broke in two. There were no casualties.", "Crashed in unknown circumstances. Occupant fate unknown.", "Hit a mountain near El Hajeb, killing at least one occupant.", "On approach to Eaton Bray aerodrome, the single engine aircraft stalled and crashed in flames. Both occupants, among them the pilot and owner Joan Nayler, were quickly rescued and uninjured. The aircraft was destroyed by fire. Source & photos: http://www.onthewire.co.uk/bray4.htm", "The crew was completing a training sortie in RAF Dishforth. Upon landing, while decelerating, the engine number two caught fire. The captain applied full brakes and stopped the aircraft. All five crew members were able to leave the cabin before the aircraft was destroyed by fire.", "Shortly after takeoff, while in initial climb, an engine failed. The captain decided to make an emergency landing and the aircraft crash landed in a field located 3 km from the airport. All 11 occupants escaped with minor injuries while the aircraft was damaged beyond repair.", "The crew consisting of eight pilots was completing a training exercise in Athens-Hassani Airport. On final approach, the aircraft encountered downdraft, lost height and crashed on a beach located in Voula, south of the airport. The three pilots that were seating in the cockpit were killed as the cockpit crashed on rocks. Five others occupants were seriously injured.", "While approaching Bermuda on a flight from London to Havana, the crew was instructed by ATC to stack due to poor weather conditions (thunderstorm). After 90 minutes, the crew was cleared to land at Hamilton-Kindley Field and started the approach that was completed in marginal weather conditions and poor visibility. Too low, the four engine aircraft christened 'Star Trail' hit a radio mast, stalled and crashed few hundred yards short of runway. All 20 occupants were rescued while the aircraft was written off.", "Crashed on landing for unknown reason. There were no casualties but the aircraft was written off.", "The airplane was on a delivery flight from Moscow to Leningrad-Koltushi Airport and has to be transferred from the Soviet Air Force to the Russian Hydro and Meteo Services (Gidrometeosluzhba). Shortly after takeoff, while climbing, the left engine caught fire. The pilot in command elected to make an emergency landing but smoke spread in the cockpit and the crew lost control of the aircraft that crashed in Klyazma. Three crew members, one passenger and one person on the ground were killed while three others were injured (one crew, one passenger and one person on the ground). The aircraft was destroyed.", "The crew departed Cazaux AFB bound to the south. Enroute, the right engine failed. The captain reduced his altitude and completed an emergency landing on a beach located in Saint-Girons. All three crew members were unhurt and with locals, were able to bring the aircraft out of water. Unfortunately, three hours later, the airplane was stuck by tide and written off. The accident occurred in September 1947 (exact date remains unknown).", "Just before reaching Las Vegas, however, a distance of 268 miles from Burbank, Captain Clark stated that his fuel quantity gauges indicated that he had 360 gallons of fuel remaining. Since he believed this to be sufficient to reach destination, he did not land at Las Vegas which was generally used as a fueling stop for Slick Airways. From Las Vegas to Palmdale, lighter winds were encountered resulting in a ground speed averaging 180 miles per hour. Palmdale was flown over at 1025, at which time the aircraft had been in the air a total of 5 hours and 18 minutes. Three minutes after passing over Palmdale, which was clear, the left engine fuel pressure dropped to 3 pounds, the red fuel warning light came on, and the left engine stopped. Fuel selector valves were changed, and as a result power was restored to the left engine. Captain Clark suspected a fuel leak. He inspected the aircraft for visible loss of fuel or fire, found none, and continued on to Burbank. As the flight approached Newhall California, Burbank reported a ceiling of 1,600 feet with visibility of two and one-half miles. The flight was instructed by the Los Angeles Airways Traffic Control Center to hold on the northwest course of the Burbank range, and advised that the approach clearance Into Burbank could be expected at approximately 1052. Captain Clerk informed the Burbank control tower that he was losing fuel and wanted to land as soon as possible, however, he declined to declare an emergency. Shortly after this, the left engine stopped for the second time, but power was again restored by changing the positions of the fuel selector valves. At 1056, approach clearance into Burbank was given, and at 1058, the flight reported inbound over the Chatsworth fan marker, approximately 14 miles from the Lockheed Air Terminal. The ceiling over Burbank had by this time lowered to 1,000 feet, and rain showers had reduced visibility to about one mile. As the flight descended below 1,600 feet only intermittent bursts of power could be secured from the left engine. The \u201cletdown\u201d was continued, the Burbank radio range station and the Lockheed Air Terminal were passed. Upon completion of a right turn to return to the range station the right engine stopped, and the propeller was immediately feathered. At an altitude of 200 to 400 feet, Captain Clark recognized almost immediately underneath him a hangar on the Lockheed Air Terminal. He executed a sharp right turn of approximately 270 degrees, and landed on the north-south taxi way about 400 feet before crossing Runway 7, a distance of approximately 1,900 feet from the south boundary of the airport. Brakes were applied, but the aircraft could not be brought to a stop within the airport boundaries. It came to rest only after skidding across a highway and railroad line adjacent to the south boundary of the airport.", "Crashed in unknown circumstances in Farsala, killing all six occupants, two crew members, a captain and three soldiers.", "Crashed on landing for unknown reason. Both crew members were slightly injured while the aircraft was written off.", "Crashed shortly after takeoff from Tunis while on a delivery flight to Antananarivo. The aircraft was destroyed and both crew members were injured. The airplane christened 'Tamatave' was on its way from Croydon to Antananarivo to be delivered to Air Madagascar.", "Enroute to Lima, it is believed that an engine caught fire. Most probably, the crew decided to divert to the Marcona Naval Station but the aircraft went out of control and crashed in a desert area located near San Juan de Marcona. The aircraft was destroyed by impact forces and a post crash fire and all 14 occupants were killed.", "\"Pan American's Flight 131 departed from Bermuda at 1358, September 20, 1947, with 36 passengers and a crew of 5. The take-off and climb to the cruising altitude of 8,000 feet were normal, and the flight proceeded on course to La Guardia Field, New York, for a period of 3 hours without incident Between 1650 and 1655, about 225 statute miles from destination, Warren Robinson, the first officer, noticed a fluctuation in fuel pressure for engines 1 and 2 Seconds later, the left auxiliary fuel tank quantity gauge dropped to zero, the fuel pressure warning light flashed on, and the No 1 engine faltered To insure a positive fuel supply for all engines Mr Robinson immediately turned the fuel selector valves for all engines to their respective main tanks, 2 following which all engines operated normally. Mr Robinson then transferred fuel from the right auxiliary tank to the left auxiliary tank so that they would contain equal amounts, which was 40 gallons each according to the fuel quantity gauges after completion of the operation A few minutes later Mr Robinson noticed that the right auxiliary fuel gauge indicated not 40 gallons, but 100, and that it was visibly increasing even though no fuel was at that time being transferred The No. 3 main fuel tank gauge then dropped to zero, and the fuel pressure for the No 4 engine started to fluctuate. Alarmed by what now appeared to be a serious malfunction in the right side of the fuel system, Mr Robinson operated all engines from the left main tanks (1 and 2), turning on all the cross feed valves, and the booster pumps for main tanks 1 and 2. The flight had by this time reached position \"\"Baker", "On start-up, the right engine caught fire. Both occupants were able to leave the aircraft that was partially destroyed by fire.", "The crew was completing a night training sortie from RAF Hemswell, Lincolnshire. While cruising northwest of Great Yarmouth, the crew encountered very poor weather conditions with thunderstorm activity and heavy turbulence. The aircraft went out of control, dove into the ground and crashed in a field located in Mautby. All nine crew members were killed. Crew (97th Squadron): F/Lt Stanley Frederick Whitlock, pilot, F/Lt Jack Anthony Guest, pilot, F/Lt John George Cook, navigator, F/Lt Ronald Vernon Havard, navigator and bomb aimer, Albert Wattleworth, signaler, Vincent Orville Woods, air gunner, William Allison, flight engineer, Roy Andrew Trundle, air gunner, LAC Denis Frederick Cummings.", "Crashed on landing in New Delhi-Palam Airport, killing all 5 crew members. The fifteen passengers were injured.", "The crew was performing a cargo flight from Aden-Khormaksar Airport. Enroute, the airplane went out of control, went into a dive by an angle of 30\u00b0 and finally crashed into the Gulf of Aden, about 352 km east of Aden. Few debris were found but no trace of the ten occupants who were considered as deceased. The aircraft sank in relatively deep. It is believed that an engine failed in flight and that the crew mistakenly shot down the wrong engine. It is possible that the engine failure was caused by a lack of electric power due to the failure of a battery. Also, it appears that the cargo loading was completed against the published procedures and that the CofG was affected, which may contribute to the loss of control.", "The takeoff was attempted in poor weather conditions. During takeoff roll started in visual reference, the visibility was insufficient and the captain decided to swap to instrument references. Control was lost and the airplane skidded and then swerved before coming to rest in the Cromlin river. All three crew members were injured while the aircraft was damaged beyond repair.", "After takeoff from Ambavalao Airport, while on a reconnaissance mission, the crew was forced to circle vertical to the city to gain sufficient height to clear the mountain. After passing the first mountainous terrain, the twin engine aircraft hit a rocky ridge and crashed. A crew member was seriously injured while six other occupants were killed. Crew: Sgt Anizet, Lt Col Pierre Lequesne, \u2020 Cpt Guillot, \u2020 S/Lt de Tournadre, \u2020 Adj Gourcerol, \u2020 Sgt Allard, \u2020 Sgt Katsia. \u2020", "During the takeoff roll, it appears that an undercarriage failed. The aircraft skidded, overran, lost its landing gear and came to rest with the engine number one on fire. All occupants were evacuated safely while the aircraft was damaged beyond repair.", "The aircraft was involved in a supply mission and was carrying paratroopers. While cruising at low height, the aircraft was hit by enemy fire and crashed in a wooded area located near Cao B<U+1EB1>ng. Adjutant Commercon was the only survivor while 15 other occupants were killed, among them Commander Lambert, Deputy Chief of Staff of the French troops in Indochina", "Crashed in unknown circumstances in a mountainous and uninhabited area located some 60 km southwest of Borja, Peru. The wreckage was found ten days later and all five occupants were killed, among them Colonel John R. Hawkins, Chief of the USAF in Peru.", "Take-off from Foynes was accomplished at 1540, the afternoon of October 13th. The flight climbed to its cruising altitude of 8,000 feet, proceeded on course for five hours and 50 minutes over the tops of clouds, and then, at 2130, instrument weather conditions were encountered. Since celestial navigation was no longer possible, Mr. Thompson, the only qualified celestial navigator aboard, retired. Before he had retired, however, he informed Captain Martin that the estimated time of arrival over the United States Coast Guard weather ship, Bibb, located on course and approximately 961 miles west of Foynes, was 0200. This was 45 minutes later than was originally estimated. Icing conditions were encountered shortly after midnight. At 0134, October 14th, the flight requested and was granted permission from the Moncton Ocean Air Traffic Control to descend to 6,000 feet. About this time the flight received from tie Gander radio station a weather forecast which included wind information at the original cruising altitude of 8,000 feet. According to the data received, the average headwind component had d velocity of 12 knots greater than that which was used in the computation of the flight plan. No further icing conditions were encountered at 6,000 feet, but instrument weather continued. The flight proceeded without the benefit of any navigational fix until 0205 when a radar fix from the Bibb placed the aircraft 68 miles from the vessel on a bearing of 80 degrees. At this time the flight had flown approximately 892 miles from Foynes, was slightly over half way to Gander, and had used 10 hours and 25 minutes of the estimated 22 fuel hours carried at the time of take off. They informed the Bibb that their estimated arrival time at Gander was 0930, which was 32 minutes later than was originally estimated. The crew anticipated no possibility of fuel exhaustion, and one hour and 11 minutes remained before they were to reach the point-of-no-return as computed in their flight plan. The Bibb reported the wind at its location at 6,000 feet to be 40 to 45 knots from the west. a headwind component of about 17 knots greater than that used in the flight plan. The captain estimated at 0232 that they were on course and 13 to 20 miles south of the Bibb. This was one hour and 17 minutes later than the original estimate and 32 minutes later than the amended estimate. Altitude was reduced to 4,000 feet after approval had been given by Moncton Ocean Air Traffic Control, and shortly thereafter, at 0327, eleven minutes after the flight passed its point-of-no-return, another weather forecast was received from Gander which showed the average headwind for the remainder of the route to be from 250 to 260 degrees at 38 knots, a headwind component 12 knots greater than that received in Shannon. Still no difficulty was anticipated, nor was the navigator consulted at this time. By 0500 clear weather was encountered. The navigator was then awakened in order that he might fix the aircraft's position by celestial observation, and according to the fixes that were plotted, headwinds in excess of 60 knots had existed en route, the average ground speed being only 59 knots. The crew immediately be came concerned as to whether or not the fuel remaining was sufficient. Approximately 550 miles remained to destination Captain Martin and First Officer Thompson believed that it was impossible to accomplish the remaining portion of the flight with the fuel remaining, so decided to return to the Bibb where rescue facilities would be immediately available. However, the flight continued westward and a position report was made to Gander at 0600. The turn around was actually made at 0758, at which time the aircraft was still 60 miles east of the previously reported 0600 position and approximately 460 miles east of Gander and 300 miles west of the Bibb Gander was advised of the decision, and at 0840 was Informed that the flight had two hours and 45 minutes of fuel remaining. The aircraft's position was reported at 0914 to be 100 miles west of the Bibb. The flight arrived over the Bibb at 0940, made four low passes, and then landed. All passengers had been fitted with life jackets and had been provided with seats and safety belts. Though the aircraft encountered waves six to eight feet high, no injury to any person or damage to the aircraft occurred. However, in taxying toward the Bibb the aircraft and Bibb drifted together with substantial damage to the aircraft. Rescue operations were slow and hazardous because of high seas, out by the next day all of the passengers and crew had been successfully transferred to the Bibb.", "While flying along the Spanish coast, the radio operator informed ground by radio: 'one engine stopped, are forced to ditch the aircraft'. Shortly later, the aircraft crashed into the sea some 25 km southeast off Cabo de Palos. The first rescuers arrived on site 24 hours later and were able to evacuate two survivors, the mechanic and a passenger. All 42 other occupants were killed. Crew: Mr. Galindo, pilot, Mr. Remy, mechanic, Mr. Chase, mechanic, Mr. Chanel, radio navigator, Anne-Marie Rouannet, stewardess.", "The aircraft departed Charlotte in a hurry because the pilot was afraid the cargo of baby chicks might suffocate due to high temperatures on the ground. Weather condition were not carefully checked. The crew were not able to locate their destination because of weather conditions and other station interference with their ADF. The DC-3 was found to have crashed into a mountain. Source: https://aviation-safety.net/database/record.php?id=19471016-1", "Crashed in a field few minutes after takeoff from Shijiazhuang Airport while on a cargo flight to Beijing. All three crew members were killed.", "During a training sortie, the engine number three failed. The captain decided to reduce his altitude in an attempt to ditch the aircraft when the same engine caught fire. Shortly later, the engine detached and the seaplane hit the water surface at high speed, overturned and came to rest off Southend. Six crew members were injured while the captain and all three passengers were killed.", "The crew was completing a night training mission in London-Heathrow Airport. On touchdown, the aircraft went out of control, ground looped and came to rest. All four crew members were unhurt while the aircraft christened 'Star Watch' was damaged beyond repair.", "Flight 608 departed Los Angeles, California, at 1023 with its destination Chicago, Illinois, to cruise at 19,000 feet according to visual flight rules. Routine position reports were made over Fontana, Daggett and Silver Lake, California; Las Vegas, Nevada; and Saint George, Utah. During the latter report, the flight indicated that it estimated passing over Bryce Canyon, Utah, at 1222. At 1221 Flight 608 reported that a fire had been detected in the baggage compartment which the crew was unable to extinguish. The report added that the cabin was filled with smoke and that the flight was attempting to make an emergency-landing at Bryce Canyon Airport. Shortly thereafter the flight again reported that the \u201ctail is going out--we may get down and we may not.\u201d At 1226 another transmission was received from the flight indicating that it was going into the \u201cbest place\u201d available. One minute later the flight reported \u201cwe may make it--approaching a strip.\u201d No further contact was had from the flight. Witnesses who observed the aircraft as it was approaching Bryce Canyon from approximately 20 miles southwest first observed what appeared to be white smoke streaming from the aircraft, followed later by dense black smoke. The first witnesses who observed fire in the bottom of the aircraft at approximately the center-section were located approximately 15 miles south of Bryce Canyon. Until shortly before the moment of impact, the aircraft appeared to be under normal control; however, no witnesses were located who observed the crash.", "While approaching Saint Etienne, an engine failed. The pilot attempted to make an emergency landing but the aircraft stalled and crashed in a prairie. All six occupants were killed. Crew: Robert Millet, pilot, Pierre-Claude Belmont, mechanic, Alain Le Bras, radio navigator, Roger Panenc, radio navigator. Passengers: Casimir Corniglion, photographer, Andr\u00e9 Lesure, chief of Photography by IGN.", "While descending to Athens-Hassani Airport, the crew was contacted by ATC and instructed to stack for a while due to poor weather conditions (thunderstorm activity) at destination. Few minutes later, the four engine aircraft christened 'Sunnan' hit the slope of Mt Hymettus located northeast of the airport. The airplane was destroyed by impact forces and all 44 occupants were killed. The crew was unable to distinguish the mountain due to poor visibility caused by low clouds. It is believed that the crew was not aware of his exact position at the time of the accident.", "Flight 923 departed at 1030 October 26, 1947, from Seattle, Washington, for Juneau, Alaska, with an intermediate stop scheduled at Annette Island Captain Alf N. Monsen flew as pilot and First Officer Laurence A Foster as copilot. The airplane carried 13 passengers including an infant, a crew of five, 2,500 gallons of fuel, and 822 pounds of cargo. This load was within the allowable airplane weight and was properly distributed in respect to the center of gravity. Company weather information given to Captain Monsen before departure was to the effect that there would be unlimited ceiling from Seattle to Comox, British Columbia. Then at the cruising altitude of 9,000 feet, instrument conditions, light icing, and light to moderate turbulence was expected over the route. Winds were forecasted to be from 200 to 230 degrees at 30 to 40 knots. It was also forecasted that at the time of the flight's arrival over Annette there would be an 800-foot overcast, lower broken clouds, visibility of 2 miles, light rain, and a surface wind from the south-southeast at 18 knots. A cold type occlusion or front which was moving toward Annette Island from a point about 375 miles west of there was expected to pass Annette Island before the flight arrived. Proceeding en route in accordance with an instrument clearance to fly at 9,000 feet, the flight arrived over Annette Island at 1338 after a routine trip. Earlier, at 1326, the company radio at Annette Island had transmitted a weather observation which reported an indefinite 1,400-foot ceiling, overcast, lower broken clouds, visibility of 3 miles, rain, wind southeast at 28 miles per hour, with gusts to 40 miles per hour. The flight acknowledged receipt of this information. Airway Traffic Control cleared the flight to pass over the radio range station located 1 5 mile northwest of the airport at 7,000 feet and then to proceed with a normal instrument letdown and approach to the field. The flight acknowledged this clearance, and reported its position over the radio range station at 7,000 feet at 1338. The normal instrument procedure for Annette Island was established with regard to the mountainous terrain east and northeast of the airport, which rises to an elevation of 3,596 feet on Tamgas Mountain. This procedure required the flight, after approaching from the south at 7,000 feet and reporting over the radio station, to remain west of the south course of the range while on instruments. Five minutes after the flight reported over the range station, at 1343 it advised Annette Radio that it was proceeding to Juneau, approximately 250 miles north-northwest of Annette Island, because of extreme turbulence. This was the first indication that the flight was encountering any difficulty in accomplishing a normal letdown and approach to the airport. In response, Annette Radio asked the flight to report its altitude, but there was no reply. After repeated calls to the flight Annette Radio issued an alert at 1401. It was estimated that the flight at the time of its last radio contact had aboard 9 hours and 16 minutes of fuel. At approximately 1430 the Civil Aeronautics Board was notified, and a search by air, land, and sea was immediately begun. However, adverse weather conditions retarded the search to such a degree that the wreckage was not located until 5 days after the accident October 31, 1947. It was found that the airplane had crashed on the north slope of Tamgas Mountain, approximately 8 miles east of Annette Island Airport and 8 miles east of the south course of the Annette radio range.", "Shot down by anti-aircraft fire and crashed in a field. A pilot survived while both other occupants were killed.", "Crashed and burned on Balmoral Station south of Muswellbrook, while on a trial newspaper dropping flight. The aircraft was preparing to drop newspapers in an open area when it appeared to dive almost vertically into the ground. Both crew members were killed. Crew: Geoff Hoskins, pilot, Edward Conner, copilot. Source: http://www.adastron.com/lockheed/hudson/vh-smj.htm", "Enroute from Jammu to Srinagar, the aircraft crashed in a mountainous area located in the Pir Panjal Mountain Range. As the aircraft failed to arrive, SAR operations were conducted but eventually suspended after few days as no trace of the aircraft nor the 25 occupants was found. Walkers found the wreckage in June 1980 in an isolated area. The crew was from the 12th Squadron.", "Crashed in unknown circumstances into the Laguna de Bay, off Barangay Rizal, a suburb located south of Manila. All five occupants were killed.", "For undetermined reason, the twin engine aircraft failed to rotate, overran and hit a concrete wall. Lieutenant Billaud, pilot, and Lieutenant Grandjean, radio navigator, were killed. The aircraft was destroyed.", "After landing, the brakes failed. The aircraft was unable to stop within the remaining distance, overran and collided with an embankment. All six occupants were unhurt while the aircraft was damaged beyond repair.", "The crew was engaged in a test flight at RAF Finningley. Enroute, both engines failed simultaneously. The captain elected to return to the airbase but on approach, the aircraft stalled and crashed in a field located five miles from the runway threshold. On ground, the aircraft hit an embankment located near a railway, sheared off some road signs and came to rest in flames. The pilot was killed while both other occupants were injured.", "Enroute from San Francisco to Chicago, the crew informed ATC that a fire erupted in the rear compartment of the aircraft and decided to divert to Gallup Airport for an emergency landing. The aircraft was difficult to maneuver and landed in flames. After it came to a halt, all 25 occupants were quickly disembarked and helped by local rescuers before the aircraft being totally destroyed by fire.", "The crew was performing a training sortie with other similar aircraft and De Havilland DH.103 Hornet as well. Enroute, the aircraft collided with a Hornet and both aircraft dove into the ground. During the dive, the captain of the Lancaster was able to bail out before the aircraft crashed in a field, killing all seven other occupants from the 35th and 115th Squadron. The Hornet's pilot was killed as well.", "Crashed in a mountainous area located some 30 miles northeast of Spokane. Five crew members were killed and five others were injured.", "After takeoff from Hamilton bound for Havana, while climbing to a height of 9,000 feet, the engine number four caught fire. The crew elected to return to Hamilton-Kindley Field for an emergency landing. On final approach, the aircraft stalled and crashed few hundred yards short of runway threshold. All 16 occupants were uninjured while the aircraft was damaged beyond repair.", "After landing at Jammu Airport, the aircraft failed to stop within the remaining distance. It overran and came to rest. There were no casualties while the aircraft was written off.", "The pilot was forced to make an emergency landing for unknown reason. There were no casualties but the aircraft owned by D. L. Steiner was damaged beyond repair.", "While flying over the Jura Mountain Range at a too low altitude, the three engine aircraft hit tree tops and crashed in flames in a wooded area called La Joux. The radio navigator Henri Glaise was slightly injured, the mechanic Leroy was seriously injured and the pilot Alain Bamayeux was killed.", "While performing a training flight in the area of Soesterberg AFB, the aircraft suffered a double engine failure. The crew attempted to make an emergency landing when the aircraft crashed in a field and was destroyed. All three crew members were slightly injured.", "In flight, the pilot was forced to reduce his altitude and to make an emergency landing in a field. There were no casualties but the aircraft was written off.", "Crashed in unknown circumstances. No casualties. The accident occurred in November 1947 (exact date unknown). The aircraft was owned by F. H. Stewart and T. M. Gibson.", "The crew was completing a training flight in Bombay-Santa Cruz Airport, consisting of touch and goes. On final approach, the instructor voluntarily shut down one engine. During the last segment, the aircraft banked left and right and the control became difficult. In such conditions, the instructor decided to raise the undercarriage, increased power on the three remaining engines and started a go around. The aircraft stalled and hit the runway surface, slid on its belly for several yards and came to rest. All three crew members were unhurt while the aircraft was damaged beyond repair.", "While cruising in a thunderstorm area, the aircraft went out of control and crashed in Mt Magazine, about five miles northwest of Havana, Arkansas. All six crew members were killed.", "Three student pilots and one instructor were completing a training sortie consisting of touch and goes. For unknown reason, the pilot in command failed to complete the flare properly, causing the aircraft to hit the runway surface. The aircraft bounced and the instructor decided to make a go around. At that time, the aircraft stalled and hit again the runway, swerved and came to rest in flames. All four crew members were uninjured while the aircraft was written off.", "The aircraft was returning to Stockholm with a crew of four and 21 Swedish pilots who delivered Saab B-17 to the Ethiopian Army in Addis-Ababa. It left Catania Airport at 1428LT bound for Rome. After passing over the Island of Stromboli, the crew encountered poor weather conditions with thick clouds. To avoid this area, the crew modified his route but few minutes later, while flying at an insufficient altitude of 1,040 meters in poor visibility, the aircraft hit tree tops located on the Mt Cerro near Ravello. The captain tried to avoid a ground collision so he increased engine power and attempted a 180 turn when the left wing hit the Santa Maria del Monte Peak. The aircraft crashed in flames and was destroyed. Four occupants were rescued while 21 others were killed.", "At 1210 the flight called the Wilmington-New Castle Tower and asked to be cleared for an instrument approach to runway one. The flight advised that they would fly law over the field on their first approach, and that they would then circle and land The approach was made, and the aircraft flew low over the field to the immediate right of runway one. After passing the north end of the runway. a climbing left turn was made to an altitude of 400 to 500 feet. The aircraft circled at that altitude until approximately one mile west of the south end of runway one, then it started a gliding left turn, toward the field. One-half mile south of the airport the turn was completed, and the aircraft flew a straight course on final approach toward runway one for landing. This last turn onto final approach was completed at an altitude of 200 to 300 feet. The landing gear was down, but the flaps were not extended. The descent on final approach continued normally until the aircraft had reached an altitude of approximately 50 feet above the ground, at which time it was 500 to 1,000 feet from the approach end of runway one. Then, the aircraft was observed to assume a nose-high attitude and to descend more rapidly. First contact with the ground was made 130 feet Prom the approach end of runway one, and 22 feet in front of a 5-foot embankment. The top of this embankment was level with the runway. Since the embankment was uniformly covered with sod, it was not discernible from the air. The extreme loads which were imposed upon the aircraft structure as it rolled into and over the rising embankment immediately after it had settled to the ground caused considerable damage to the landing gear, fuselage, and wings. Forced back into the air by the rise of the embankment, the airplane landed for the second time on the runway, skidding forward 1,270 feet. The right wing was torn from the fuselage as the aircraft turned over to an inverted position. Fuel spilled from ruptured gasoline tanks ignited, and the wreckage burst into flames.", "While cruising at low height in poor weather conditions, the seaplane hit the slope of a hill and crashed in Brightstone Down, Isle of Wight. A crew member was killed, three others were injured.", "Enroute from Bel\u00e9m to Manaus, the seaplane crashed in unknown circumstances in the region of Porto de Moz. As the aircraft failed to arrive in Manaus, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. On December 22, 1947, the wreckage and the dead bodies of all 16 occupants were found near the village of Aquiqui, northwest of Porto de Moz.", "The aircraft departed Croydon on a cargo flight to Jersey, carrying a load of newspapers. While flying over the Isle of Wight, the crew encountered poor weather conditions with clouds down to 700 feet. Due to low visibility, the pilot did not realize he was off course and his altitude was too low when the twin engine aircraft hit the pylon of a radar and crashed in a prairie located near Saint Boniface Down. Both occupants, pilot E. G. Snowden and radio operator R. J. Corrie were killed.", "The crew was completing a training sortie over the North Sea when the right engine failed in flight. The captain reduced his altitude and elected to return to Manston for an emergency landing. While descending to an altitude of 800 feet and while flying across the last cloud layer, the aircraft stalled and crashed into the sea, few miles off Birchington-on-Sea. A crew member was killed while three others were rescued.", "Enroute from Bucharest to Prague, the crew encountered poor weather conditions with low clouds. The pilot lost his orientation due to fog and decided to reduce his altitude to establish a visual contact with the ground when the aircraft hit tree tops and crashed in a dense wooded area. Thirteen passengers were rescued, among them Arel Grigoresco, ambassador of Romania in Prague, while thirteen other occupants were killed, among them all five crew members.", "The crew was performing a demo flight to potential clients. Upon landing in Wau Airport, on a relative steep runway, the aircraft failed to stop properly. The aircraft eventually overran and came to rest into a ditch. All five crew members were slightly injured while the aircraft was damaged beyond repair.", "Shortly after takeoff from Ciudad Bolivar Airport, while on a test flight, the aircraft stalled and crashed 150 meters past the runway end. The aircraft was written off while all three crew members were uninjured.", "The aircraft crashed on landing in Port Sudan Airport for unknown reason. While the aircraft was damaged beyond repair, all seven crew members were unhurt.", "The descent to Titograd was started from the south, by night and poor weather conditions. Through freezing fog, the aircraft hit the slope of Mt Rumija located 25 km south of the airport. The wreckage was found few hours later and all 23 occupants were killed. Crew: Cpt Vasa Vracarevic 4.", "\"The flight departed from Anchorage at 0020, November 27, 1947, carrying 11 revenue passengers and 600 gallons of fuel. At 0238 the flight reported that it was over Yakataga, Alaska, at 6,000 feet, and that it was proceeding in accordance with instrument flight rules to Yakutat, estimating arrival there at 0320. Twenty-eight minutes later at 0306 the flight called Yakutat Radio, stating that it was leaving the 6,000-foot altitude and making an approach \"\"straight in.\"\" The CAA communicator acknowledged and transmitted the Yakutat weather \"\"Indefinite ceiling", "Crashed on landing in Gordon Lake and was lost. All three occupants escaped unhurt.", "On final approach to Perpignan Airport, the twin engine aircraft stalled and crashed in a field. All three occupants were injured and the aircraft was damaged beyond repair.", "After his departure from Pisa Airport, the crew encountered very poor weather conditions with alto-cumulus, heavy snow falls and wind from the southeast up to 25 knots. Due to the wind, the aircraft went off course up to 50 km to the west, and due to poor visibility, the crew was unaware of this course deviation. The aircraft hit the slope of a mountain located near Trappa and was destroyed. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. On January 31st, 1948, Italian skiers found the wreckage of the aircraft and 20 dead bodies in an isolated area. According to some US military Officers, at least two passengers survived the crash but died few hours later.", "The aircraft christened 'Tailly 2' left Oran at 1015LT in marginal weather conditions. Enroute, due to sandstorm, the captain decided to reduce his altitude in an attempt to establish a visual contact with the ground. Twice, the crew informed ground that his ETA in Colomb-B\u00e9char was delayed about fifteen minutes. While descending at a too low altitude, the twin engine aircraft hit the ground near a railroad and crashed in a huge explosion about 56 km north of Colomb-B\u00e9char. All thirteen occupants were killed, among them the French General Philippe Leclerc. Thirteen bodies were recovered and evacuated to France, but only twelve of them were identified. A thirteenth occupant, wearing a French Army uniform with the grade of Lieutenant was recovered but unidentified. Crew: Lt Fran\u00e7ois-Ren\u00e9 Delluc, pilot, Lt Andr\u00e9-Ren\u00e9 Pilleboue, navigator, Adj Jean Guillou, mechanic, Sgt Eug\u00e8ne Lamotte, radio operator. Passengers: Gen Philippe Leclerc, Col Th\u00e9odore Fieschi, Col Charles Cl\u00e9mentin, Col Louis du Garreau de la M\u00e9chenie, Col Paul Fouchet, Cpt Georges Frichement, Cdt Michel Meyrrand, S/Lt Robert Miron de L'Espinay.", "Upon landing, the aircraft hit unknown obstacles. On impact, the undercarriage were sheared off and the aircraft skidded for several yards before coming to rest. There were no casualties while the aircraft was written off.", "\"The flight arrived over the Seattle radio range station at 3,000 feet on its initial approach to the Boeing Airport at 1357. Shortly before Captain Farris had reported to Seattle Radio that he had 2 rough engines, but he did not declare an emergency. The condition of engine roughness is discussed below. Weather at Boeing Field, Seattle, Washington, was reported to be ceiling indefinite 500 feet visibility one mile. An instrument approach for landing at Boeing Field was made, but not completed because of the low ceiling and visibility, so the flight returned to an altitude of 1,500 feet on the northwest course of the Seattle radio range. During this time Copilot Whitting remained in the left seat and flew the airplane. The second instrument approach was made for a landing at the Seattle-Tacoma Airport, sometimes referred to as the Bow Lake Airport, which is located 4 miles south of the Seattle radio range station. The airplane was flown inbound on the northwest course of the range. Then, after passing over the range station at 1,500 feet, a heading of 193 degrees toward the airport was flown, and a descent made for landing. The aircraft was first observed at the Seattle-Tacoma Airport when approximately 500 feet above the approach and of Runway 20, 5,611 feet long, at which time it was flying at an angel to the left of the runway. An \"\"S\"\" maneuver and rapid decent were made. A right turn was entered and held until the airplane was again over Runway 20", "The crew was performing a positioning flight from Kimry-Borki to Moscow-Zakharkovo. Few minutes after takeoff, the left engine lost oil pressure and power. The captain elected to make an emergency landing but the aircraft crashed in a wooded area located in Taldom, about 13 km southeast of Borki Airport. The aircraft was destroyed and all five crew members were injured. At the time of the accident, weather conditions were poor with a cloud base at 100 meters and an horizontal visibility limited to two km. It appears that the crew did not receive any permission to complete this positioning flight to Moscow.", "The pilot, sole on board, was performing a training sortie in RAF Moreton-in-Marsh, consisting of stall maneuvers. While conducting an umpteenth stall, he lost control of the airplane that went into a spin. He tried to bail out but the aircraft dove into the ground and crashed in a field near the airbase. The aircraft was destroyed and the pilot was killed. For undetermined reason, the pilot's harness was not properly secured.", "During the takeoff roll, the aircraft skidded, veered off runway and came to rest upside down. All three occupants were rescued, one of the passenger was slightly injured.", "\"While at Lille 6,380 kg (96 bales) of fabric was loaded onto the aircraft, this was described in contemporary newspaper reports as being woolen piece goods. Once this was complete their flight plan was submitted to the Lille controller, it was a direct flight back to Speke, and they received a weather briefing for the planned route. This indicated that there would be dense cloud layers from 1000 feet upwards on the entire route with some rain. The wind as far as the London area was forecast to be from the Southwest at 35 to 40 knots and from the Northwest beyond there at a similar speed. The estimated flight time was 1 hour 30 minutes. The aircraft departed Lille at 14:38 GMT and made contact with the regional control at Uxbridge at 15:06, they reported that they had flown over the French coast in the Dunkerque area at 14:46. At around 15:15 they were over the east coast of England between Ipswich and Colchester, they were already someway off course due to the strong wind and this was confirmed with a position fix at 15:35 which put the aircraft over the fens in the Ely area. Had they not had the strong cross wind their intended track at this point would have taken them over Bedford. Upon confirming how far off course they were the pilot adopted a more westerly course and asked Uxbridge if he should contact the Manchester area control at Ringway, they replied yes. By around 16:00 to 16:05 was more or less back on the right course in the Stafford area. The crew never made contact with Ringway, their call-sign was heard at 15:59 but another aircraft was communicating with Ringway at the time. Once this transmission was completed the Ringway controller attempted to contact G-AIHU twice but failed to get a response, the crew had in fact made contact directly with the approach controller at Speke around the time of the second attempt by Ringway. This was to request a QTE (true bearing) from Speke, this was passed as 1340. At 16:10 the Speke controller asked the crew what their ETA was and they replied 16:20, three minutes later he gave the crew permission to enter the controlled airspace around Speke and circle the airfield. They were instructed to report when they had descended to 2,000 ft and reply by R/T (Radio Telephony) to the Aerodrome Controller, up to this point they had been communicating by morse (Wireless Telegraphy). No communication was received from them by R/T and after dealing with other aircraft the approach controller managed to re-establish contact at 16:28 by W/T. The crew reported in plain language \"\"unable to raise 6440 - landing instructions?\"\"", "Crashed 11 miles northeast of Elgin following an engine failure. Occupant fate unknown.", "One minute after a night takeoff from Goose Bay, while in initial climb, the pilot encountered serious difficulties to gain height, informed ground and elected to return. Shortly later, the four engine aircraft stalled and crashed in flames in a wooded area located 13,5 km north of the airport. Six occupants were seriously injured while 23 others were killed.", "On final approach to Memphis in marginal weather conditions, the aircraft banked right, dove into the ground and crashed in a wooded area located 4 miles short of runway threshold. All 20 occupants were killed.", "Crashed on approach to Zambezi Airport for unknown reason. The aircraft was damaged beyond repair and all six occupants were slightly injured.", "The aircraft left Songkhla, Thailand, bound for Bukittinggi, West Sumatra, to be delivered to the Indonesian Air Force. It was carrying medical supplies as well. While flying along the west coast of Malaysia, the twin engine aircraft crashed in unknown circumstances into the sea, killing both occupants, Lt Col Iswahjudi and Air Vice-Marshal Halim Perdanakusuma.", "Crashed in unknown circumstances while preparing to land in Calcutta Airport. The aircraft was written off and both occupants were injured.", "While descending to RAF Abingdon, while on a local training sortie, the captain was forced to shut down the engine number three due to an excessive temperature. As the aircraft was unstable on approach, the captain decided to make a go around when the engine number four overheat. Simultaneously, the approach light system failed. In dark, the crew decided to land immediately, raised the undercarriage and crash landed in a field short of runway threshold. While all five crew members were unhurt, the aircraft was damaged beyond repair.", "The crew was performing a training sortie in NAS Norfolk. In flight, the seaplane collided with a Chance Vought F4U Corsair. Both aircraft dove into the ground and crashed near the airbase. One crew aboard the Catalina survived the crash while six other occupants and the pilot of the Corsair were killed.", "Fifteen minutes after takeoff from Krasnoyarsk-Severniy Airport, the oil pressure on the left engine dropped. The crew shut down the engine, feathered the propeller and decided to return to Krasnoyarsk for a safe landing. On final approach, the speed was too high and the crew encountered problems to lower the undercarriage so the captain elected to make a go around. Few minutes later, during a second attempt to land, while at a height of some 50 meters, the aircraft stalled and crashed few hundred yards short of the runway threshold. Eighteen occupants were injured while seven others, among them four crew members, were killed.", "The crew was engaged in a test flight following modification on the engines by GVF (Grazhdansky Vozdushnyi Flot). The final approach to Vnukovo Airport was completed in low visibility due to foggy conditions, when the aircraft hit a hill and crashed about 10 km northeast of the airport. The occupant fate remains unknown.", "Crashed in unknown circumstances in Diyarbakir while completing a training sortie. All four crew members were killed.", "The starboard engine blew up about 480 km north of Manila. Flight was maintained on one engine but bad weather and turbulence forced the plane down to below 1,000 feet. At about 200 km from Manila, some personal baggage and mail were jettisoned. The crew eventually realized it was impossible to join Manila so decided to make a wheels up landing near Dinalungan. The aircraft crash landed and was damaged beyond repair while all 12 occupants were unhurt.", "On final approach to Uetersen in poor weather conditions, the left engine failed. The pilot lost control of the aircraft that stalled and crashed in flames in a field short of runway threshold. All occupants were injured, the copilot more seriously. The aircraft was destroyed by fire.", "Suffered a ground accident in Barajas Airport. No casualties.", "The crew left Ladd Army Airfield in the day for a 15 hours training sortie. While flying over the Seward Peninsula at low height, the four engine aircraft christened 'The Clobbered Turkey' hit the slope of Mt Hot Springs. The aircraft was written off but all eight crew members survived. Two of them decided to walk away to find help but were found dead few days later. Six other occupants were rescued later and three rescuers were killed as well during the salvage operations. Crew: Lt Vern H. Arnett, pilot, Lt Donald B. Duesler, copilot, Lt Frederick E. Sheetz, navigator, Lt Lyle B. Larson, flight engineer, Lt Francis Schaack, radar operator, T/Sgt Wilbur E. Decker, electrical mechanic, Sgt Olan R. Samford, radio operator, S/Sgt Leslie R. Warre, photographer. Source: http://vintageairphotos.blogspot.ch/2014/12/the-legacy-of-clobbered-turkey-tragedy_19.html", "The crew was performing a cargo flight from Raleigh to Miami and while reaching Melbourne, Florida, he was informed by ATC that Miami Airport was closed to traffic due to poor weather conditions. For same reason, the alternate airport West Palm Beach was closed and the crew was advised to divert to Key West or Tampa. Few minutes later, the captain informed ATC that he was short of fuel and started the approach to Miami in low visibility. During the last turn to join the approach path, the right engine failed due to fuel exhaustion. The aircraft stalled and crashed. Both crew members were injured while the aircraft was written off.", "Shortly after takeoff from Kunming Airport, while in initial climb, the aircraft stalled and crashed in a field located 3 km from the airport. Five passengers were seriously injured while all 25 other occupants were killed. It appears that three of the four engines failed shortly after rotation. All passengers were Belgian missionaries.", "Shortly after takeoff, while in initial climb, the twin engine aircraft stalled and crashed in a field. All five occupants were killed.", "Few minutes after takeoff from V\u00e9lizy-Villacoublay, an engine caught fire. The captain elected to return but was forced to attempt an emergency landing in a field located near the aerodrome of Chelles-le-Pin. The aircraft belly landed and came to rest in flames. All 15 occupants, most of them women and children flying back to Algeria, were slightly injured while the aircraft was damaged beyond repair.", "While approaching Leeuwarden, the crew encountered poor weather conditions with heavy rain falls and a cloud base at 100 meters. Unable to locate the airport, the captain decided to make a go around and increased engine power. Shortly later, while flying over the city of Leeuwarden, the aircraft hit with its left wing the church of Saint Bonifatius which is 70 meters high. Three meters of the left wing were sheared off. The captain reduced his altitude in an attempt to make an emergency landing and completed a belly landing in a field. The aircraft skidded for several yards and hit three successive ditches before coming to rest with both propellers sheared off. All 15 occupants were unhurt while the aircraft was damaged beyond repair.", "Shortly after takeoff by night, while in initial climb, the aircraft banked right, stalled and crashed by a 30\u00b0 nose down angle in Korangi Creek. All 23 occupants were killed. At the time of the accident, visibility was poor and weather conditions were considered as marginal.", "Shortly after takeoff from Le\u00f3n-Guanajuato-Del Bajio Airport, the crew informed ground that an engine failed and received the authorization to return for an emergency landing. While completing a last turn, the pilot lost control of the aircraft that stalled and crashed in a residential area located near the airport. Both pilots, three passengers and three people on the ground were killed.", "Enroute from Buffalo Narrows to Big River, the pilot encountered poor weather conditions with a snowstorm. He reduced his altitude in an attempt to make an emergency landing when landing on a road, the aircraft ended up in the bush and was destroyed. Both occupants were injured.", "On final approach to Copenhagen-Kastrup Airport, the twin engine aircraft went unstable, rolled left and right, stalled and crashed in a flat position in the \u00d8resund, about 500 meters short of runway threshold. While all 15 occupants were uninjured and quickly rescued, the aircraft christened 'Torulf Viking' was damaged beyond repair.", "The crew left Chelyabinsk Airport at 1215LT, established contact with RDS Koltsovo and was instructed to proceed to the altitude of 1,500 meters, although this was lower than the minimum safe altitude of 2,100 meters on the route Chelyabinsk - Kazan. An hour later, the crew encountered poor weather conditions with a cloud base at 200 meters, heavy snow falls and an estimated horizontal visibility less than 4 km. While cruising at the altitude of 1,145 meters, the twin engine aircraft hit the slope of Mt Taganay located about 20 km north of Zlatoust. The wreckage was found in an isolated and mountainous area a day later, the aircraft was destroyed by impact forces and a post crash fire and all six occupants have been killed. The aircraft was carrying a load of various goods consisting of grinding wheels, boxes and a furnace-type PET-8 for a total of 2,298 kilos.", "Crashed shortly after takeoff from Elmendorf AFB, killing all nine crew members.", "Crashed in unknown circumstances. The exact date remains unknown, somewhere during 1947.", "While descending to Chattanooga Airport by night, the seaplane hit tree tops and crashed in flames in a wooded area located in Signal Mountain, north of Chattanooga. Both crew members were killed. Crew: Ens Roger W. Whale, Amm1 Kristian F. Anderson.", "On touchdown, a landing gear failed. The aircraft was damaged beyond repair while all three crew members were unhurt.", "On landing, an undercarriage collapsed. The aircraft went out of control, veered off runway and hit a drainage ditch. All 15 occupants were unhurt while the aircraft was damaged beyond repair.", "On approach to Northolt Airport, about seven km from the runway threshold, the captain decided to make a go around and informed ATC he was unable to distinguish the runway due to poor weather conditions. A second and a third attempt to land were aborted few minutes later. During the fourth attempt, the aircraft was too low and hit tree tops before crashing in a field located 4 km short of the runway threshold. 17 occupants were injured while a passenger was killed.", "While approaching Paris, the crew was instructed by ATC to stack for about 30 minutes due to an Air Alg\u00e9rie DC-3 landing at the same time. Also, ATC told the crew to divert to Pontoise-Cormeilles en Vexin if they wanted to land immediately. The captain decided to stack for about 30 minutes at an altitude between 700 and 1,000 meters and was later authorized to descent to Le Bourget. On final approach, while at a height of some 150 feet, the aircraft stalled and crashed in a tulip field located 1,500 meters short of runway threshold. Two passengers were seriously injured while all 14 other occupants were killed. Few hours later, both survivors died from their injuries. Crew: Edouard Albin, pilot, Georges Capron, copilot, Pierre Lebeau, radio navigator, Joseph Lacroix, mechanic, Mr. Germ\u00e9, steward.", "After refueling to 600 gallons of gasoline, the flight departed at 0553 on an instrument flight plan to Miami, via Airway Amber 7, at an altitude of 2,000 feet. The crew reported over the Florence, South Carolina, range station at 0643 at an altitude of 2,000 feet. At 0716 they reported over Charleston, South Carolina, at an altitude of 2,000 feet, and estimated their arrival over Savannah at 0744. This was the last communication received from the flight. Between Charleston and Savannah, Co-pilot Eick left the cockpit to obtain navigational charts, during which time he heard one or both of the engines run roughly. By the time he returned to his seat, however, both engines were again operating normally. A few minutes later both engines stopped, and the fuel pressure gauges were observed to be at zero. The wobble pump was used, different positions of the fuel tank selector valves were tried, the cross-feed valves were turned to the \u201con\u201d position, but no fuel pressure could be obtained. When it became apparent that the engines could not be restarted, Captain Antonioli informed the co-pilot that it would be necessary to make a forced landing in a nearby marsh, and instructed him to see that the passengers were secured by safety belts. Co-pilot Eick proceeded immediately to the cabin where he buckled the safety belts of 4 or 5 passengers. Then he felt the airplane turning steeply, and he attempted to return to the cockpit. By the time he reached the radio compartment passageway between the passenger cabin and the cockpit he was forced to the floor by centrifugal force. The aircraft shuddered as though in a stall, and crashed. Witnesses on a nearby barge saw the aircraft approaching from a north-westerly direction at an altitude estimated to be 1,000 feet, descending without audible engine noise. It was observed to enter a gliding turn to the left which was continued for about one and one-half revolutions, until the airplane crashed into a marsh and burst into flames. A pilot and 17 passengers were killed.", "Enroute, the pilot was forced to make an emergency landing for unknown reason. The aircraft crash landed in a field in Chelford and was damaged beyond repair. There were no casualties.", "The crew was performing a training sortie at RAF Waterbeach, consisting of touch and goes. On final approach, the instructor deliberately shut down an engine to simulate a failure. Following this, the pilot in command missed the landing procedure, overshot and landed too far down the runway. After touchdown, the aircraft was unable to stop within the remaining distance, overran, crossed a road and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "While cruising in marginal weather conditions, the radio navigator informed ground that an engine failed and elected to return to Algiers. Shortly later, the aircraft went out of control and crashed in an affluent of the Isser River, about 11 km from Palestro (now Lakhdaria). All nine occupants were killed. Crew: Mr. P\u00e9hu, pilot, Mr. Suhaud, radio navigator.", "On final approach to Madrid AFB, the crew decided to make a go around when the seaplane stalled and crashed short of runway threshold. All three crew members were rescued while the aircraft was destroyed. Engine failure is suspected.", "Enroute, the aircraft hit the slope of Mt dell'Aretino located near Cerbaiola, killing all four crew members.", "Shortly after takeoff from the Qingdao Bay, while climbing, the aircraft caught fire, exploded and crashed into the sea. A crew member was killed while the aircraft was destroyed by fire.", "Enroute, an engine failed. The crew tried several times to restart the engine that fell off shortly later. In such conditions, the crew elected to make an emergency landing in a desert area located about 40 km northwest of Cairo. The aircraft belly landed and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "Few minutes after its departure from Santa Cruz de Barahona Airport, the crew encountered poor weather conditions and decided to modify his route, diverting to Ciudad Trujillo, the capital city. While cruising about 20 km north of Ciudad Trujillo in low visibility, the aircraft hit the slope of a mountain and crashed near Yamas\u00e1. All 32 occupants were killed, among them members of the baseball team of Santiago returning home.", "The aircraft took off from RAF Topcliffe in the mid-afternoon so the pilot could train on instrument flying. Also on board was a second pilot who was acting as an instructor, a radio operator and a passenger. The purpose of the latter was so that he could carry out radar tests during the flight. The aircraft took off in the gusty conditions with the pilot having to use both hands to maintain lateral control, the aircraft climbed normally to 400 feet but after which the nose rose sharply. The pilot pushed the control column forward to try and make the aircraft return to level but this had no effect, full power was applied but the aircraft continued to climb at this rate until it was at about 1000 feet. The speed of it had now dropped to 80 knots so the pilot ordered the crew to bale out before it stalled. Only the second pilot was able to get out before the nose sank and the aircraft entered a dive from which it could not be recovered from. The survivor sustained slight injuries after being dragged by his parachute when on the ground after it caught in the strong wind. The other three had no chance to get out before it crashed and were sadly killed in the crash at 1500LT. Source: http://www.yorkshire-aircraft.co.uk/aircraft/yorkshire/rp555.html", "The aircraft was carrying a passenger and six crew members on a test flight in Rome-Fiumicino Airport. While flying in the vicinity of the airfield, an engine caught fire and the captain elected to make an emergency landing. The aircraft belly landed in a field located in Ponte Galeria, east of the airport, and came to rest in flames. All seven occupants were unhurt while the aircraft was destroyed by fire.", "\"Flight 572 arrived in Atlanta, Georgia, from its point of origin, Houston, Texas, at 2330, January 12, 1948. With a new crew, consisting of Captain Paul J. Saltanis, First Officer Ralph B. Sanborn, Jr., and Flight Attendant Peter L. Philiois, the flight departed from Atlanta at 2355 for Greenville and Winston-Salem, North Carolina, and Washington, D. C. The flight as far as Winston-Salem was routine. At 0306, January 13, 1948, the flight took off from Winston-Salem carrying six passengers, a crew of three, and 600 gallons of fuel. It proceeded at the altitude of 9,000 feet specified in the flight plan, to Washington, via Blackstone and Richmond, Virginia. Shortly after reporting over Blackstone, at 0405, 146 miles southwest of Washington, an airway traffic control clearance was transmitted by company radio to the flight authorizing it to cross the Doncaster fan marker, 27 miles southwest of Washington, at 5,000 feet. Captain Saltanis requested a lower altitude and ten minutes later received another ATC clearance approving 3,000 feet over Doncaster, and permission to descend to 2,500 feet immediately after crossing Doncaster. At 0427, the flight reported its position to the Washington control tower, stating that it was over Doncaster at 3,000 feet. It was instructed by the tower to maintain 2,500 feet, and to report again when it was over Mt. Vernon. 9 miles south of the Washington National Airport. At about this same time another Eastern Air Lines\u2019 flight, No, 454, reported that it was at 4,500 feet over the Arcola range station, which is located 23 miles west-northwest of Washington, D. C. Since the two Eastern Air Lines' flights were converging toward Mt. Vernon, the airport traffic controller thought that flight 454 might fly over Mt. Vernon before it had descended to a safe altitude below Flight 572. To assure that both airplanes would not be over Mt. Vernon at the seine time and altitude, the controller instructed Flight 572 to climb to 3,500 feet Flight 572 acknowledged, advised that it was contact, and asked why it was necessary to climb. Less than a minute later, at approximately 0430, the east bound flight, No. 454, reported that it was \u201ccontact\u201d at 2,000 feet and approaching Mt. Vernon. The controller then knowing that a safe altitude separation existed between the two aircraft, cleared night 572 back to its previous approach altitude of 2,500 feet. At 0433, flight 572 was again cleared to the airport by the Washington Tower, and advised to report when leaving 2,500 feet, when leaving Mt. Vernon, and when \"\"VFR.\"\" 2 Following this transmission flight 572 was asked to give a short count", "The crew was performing a flight from England to India to deliver the aircraft that was brand new. While descending to Rome for a refueling stop, the twin engine aircraft hit the slope of Mt Urbanu located in the region of Viterbo. Both pilots were injured and the aircraft was destroyed.", "On final approach to Andrews AFB, the aircraft was too low, hit a building and crashed. A crew member was killed while three others were injured.", "Enroute to Malakal, the crew was forced to make an emergency landing near Ed Dueim for unknown reason. While both crew members were unhurt, the aircraft was damaged beyond repair.", "Shortly after takeoff from Mukden Airport, while climbing in heavy snow falls to a height of 60 feet, the aircraft stalled and crashed near the runway. Eleven passengers were killed while 43 other occupants were injured. The crew was in charge to evacuate some people fleeing the regime recently introduced in Mukden.", "The aircraft departed Denver at 1602 for Grand Junction. The crew, all employees of the Civil Aeronautics Administration, consisted of Fred L. Snavely, pilot; Warren L. Lungstrum, copilot; and Ross C. Brown, observer. Over the route to Grand Junction a check was to be made by these men of the VHF (very high frequency) airway facilities to determine whether they were operating normally. According to the flight plan, the flight was to proceed over Red Airway 6 at an air speed of 150 mph. Though only 2 hours were required for the trip, 8 hours supply of fuel was carried. Information supplied to Copilot Lungstrum at the Denver United States Weather Bureau Office was to the effect that clear weather conditions existed generally over the intended route. Over Fraser, Colorado, located approximately 50 miles west northwest of Denver, however, broken clouds were reported. Since this layer of clouds was only 2,000 feet in depth, with tops at 13,500 feet above sea level, it appeared that a cruising altitude of 14,000 or 15,000 feet would be high enough for the flight. Winds at that altitude were from the northwest at 50 mph. Weather Bureau personnel advised that these winds would result in considerable turbulence. Take-off was accomplished at 1602. Twenty-two minutes later, at 1624, the CAA communication station at Denver received a position report from the flight that it was at an altitude of 14,500 feet, 500 feet over the top of clouds, and 20 miles west of Denver. The flight also reported that they were experiencing severe turbulence. Since the flight plan specified that the trip would be made in accordance with visual flight rules, and since the position report indicated that the aircraft was being flown over the top of clouds, the flight was requested at the termination of their 1624 position to verify whether they were actually proceeding in accordance with visual flight rules. A response in the affirmative was received. About one minute after the 1624 report the CAA communicator at Cheyenne, Wyoming, called NC206 and asked for a check of his station\u2019s radio transmission. NC206 responded, \u201cRead Cheyenne Radio loud and clear.\u201d The communicator then asked for a position report from NC206, and the flight replied, \u201cWe are approximately. . . .\u201d The remainder of this message, received shortly after 1625, was garbled and faded. The Cheyenne communicator attempted to contact the flight again but was unable to do so. Since interference to radio transmission could have resulted from the mountain ranges between Cheyenne and the aircraft, and since the Cheyenne communicator had overheard the report of severe turbulence, he presumed that the crew was completely occupied in flying the aircraft, and that either they had not heard the last transmission or were too busy at the time to acknowledge. Accordingly, he placed no significance on the failure of the flight to reply. A request had previously been made by the communication station at Eagle, Colorado, for the flight to check the radio transmission of that station. Since Eagle Radio did not receive any calls from NC206, the station called the flight at 1645. No reply was received. Repeated calls were made by the communicator at Eagle on all available frequencies at three-minute intervals until 1735. Then the station requested information concerning the flight from Grand Junction Radio, but neither Grand Junction Radio nor any other radio station on the route had received a call from NC206 since 1625. At 1825, 23 minutes after the estimated arrival time of NC206 at Grand Junction, an emergency was declared.", "\"Flight 604 departed Miami, Florida, at 2301, January 20, 1948, on an instrument flight rules clearance, non-stop to Newark, New Jersey, to cruise at 15,000 feet via Airway Amber 7 to Jacksonville, Florida, and Airway Amber 6 to Alma, Georgia, thence direct to Spartanburg, South Carolina, Winston-Salem, North Carolina, and Washington, D. C., and via Airway Amber 7 to Newark, Boston, Massachusetts, and Providence. Rhode Island, were designated as alternate air ports. In order to remain above the overcast, the flight requested changes of cruising altitude between Winston-Salem and Washington, and at 0232, at which time it reported over Washington, the flight was cruising at 21,000 feet. Shortly after passing Washington, Flight 604 was cleared to descend en route to Newark and to cross Philadelphia at 7,000 feet, and was advised that no traffic was reported above 7,000 feet. A descent was established and at 0253 the flight reported over Philadelphia \"\"at 8", "Belly landed for unknown reason. The aircraft was damaged beyond repair and there were no casualties.", "The crew was performing a night training sortie in RAF Swinderby. On final approach, while at an insufficient altitude, the aircraft hit the ground at a relative high speed and crashed one mile short of runway threshold. The aircraft was destroyed and all three crew members were killed.", "On approach to Lyon-Bron, the pilot encountered poor weather conditions and decided to make an emergency landing. The twin engine aircraft belly landed in a flooded field located 10 km north of the airport and came to rest. All three occupants were unhurt while the aircraft was damaged beyond repair.", "The twin engine aircraft was returning from Newark and was diverted from National Airport due to a severe snowstorm, to Baltimore Municipal Airport. While approaching, the airplane crashed in unknown circumstances, killing all four crew members. The wreckage was located two days later after an extensive search by Army, Navy and Coast Guard aircraft. Crew: Lcdr Charles W. Schuh, Lt Jg William N. Killebrew, Amm1 Charles A. MacArthur, Arm1 Rudolph H. Schoning.", "The aircraft was on its way to Indochina to be delivered to the Soci\u00e9t\u00e9 Indochinoise de Transports A\u00e9riens (SITA) and was carrying two British engineers and three pilots. While cruising between Turkey and Cyprus, the aircraft crashed in unknown circumstances into the Mediterranean Sea, about 100 km north of the Cyprus coast. No trace of the aircraft nor the five occupants was ever found.", "Caught fire and sank off Vancouver Island enroute to Forward Harbour. After it went to a halt, all four occupants were able to evacuate.", "Shortly after takeoff from Paris-Le Bourget Airport, while climbing, the four engine aircraft went out of control and crashed on a factory located in Romainville, in the suburbs of Paris. All nine occupants were killed while two workers in the factory were slightly injured. The crew was performing a local training flight from Paris-Le Bourget Airport and the takeoff was initiated with one engine voluntarily inoperative. Crew: Georges Lemare, pilot, Charles Fouquet, pilot, Fran\u00e7ois Rogale, copilot, Jean Soulard, radio navigator, Pierre Tolosano, mechanic, Hubert Halter, mechanic, Guy Kerespert, mechanic, Roger Deluc, mechanic, Pierre Ledoux, radio navigator by Air Atlas.", "The aircraft left Istres-Le Tub\u00e9 AFB at 1237LT bound for Udine with an intermediate stop in Pisa. While flying over the Alps, the crew encountered poor visibility with snowstorm and strong winds. In such conditions, the captain decided to return to Istres but was unable to locate his position with certainty. Few minutes later, while flying northwest of the village of Ch\u00e2teau Garnier, the aircraft hit the slope of Mt du Cheval Blanc culminating at an altitude of 2,323 meters. The wreckage was spotted by the crew of a USAF B-17 based in Germany two days later. On site, rescuers did not find any survivors and among the passengers were five children aged 5, and women of US soldiers based in Udine. The day after the wreckage was found, the US B-17 crashed in the same region, killing its entire crew of nine.", "The crew was performing a training flight in the vicinity of Lisbon. In flight, the pilot encountered poor weather conditions and lost control of the aircraft that crashed in a huge explosion in Monte da Caparica, south of Lisbon. All three crew members were killed.", "The flight departed from its operating base, Burbank, California, for Oakland, California, at 0646, January, 1948. According to company instructions, the crew consisting of Francis Charles Atkinson, captain; Marion Harlow Ewing, first officer; and Mrs. Francis Charles Atkinson, stewardess, were to fly NC79055, which was certificated to carry 32 passengers, however, the crew made a mistake and departed in NC36480. This airplane was certificated to carry only 26 passengers and was 7 hours overdue for a 100-hour inspection at the time of departure from Burbank. Landing at Oakland was accomplished at 0849. The trip had been routine, and somewhere between Burbank and Oakland the pilot apparently realized that he was flying the wrong airplane for he requested his landing instructions from the Oakland tower with the appropriate airplane call numbers, 480. In Oakland, 28 Mexican Nationals and one United States Immigration official were enplaned for a flight to the Imperial County Airport, Imperial County, California. This flight was to be performed under a contract which the company had with the United States Immigration and Naturalization Service. Since NC36480 had accommodations for only 26 passengers, three of the 28 Mexican Nationals who boarded the aircraft were unable to be seated where they could be secured with safety belts. According to the statement of a United States Immigration official who assisted in the loading, three pieces of unsecured luggage were in the aisle at the time of take-off, and it as probable that the three passengers were seated on this luggage after the aircraft taxied from its parking area at the Oakland Airport for take-off. The remainder of the airplane load consisted of 375 gallons of fuel. Total weight was 67 pounds in excess of the maximum allowable. No flight plan was filed for the southbound trip since clear weather conditions prevailed over the route to the Imperial County Airport. Take-off was accomplished at approximately 0930. Before leaving the Oakland tower frequency Captain Atkinson received a message from his company, relayed through the tower, that he was to return directly to Burbank. His acknowledgment of this message was the last communication received from the flight. One hour and 35 minutes after the aircraft had departed from Oakland, it was observed over the vicinity of Coalinga, California, cruising at an estimated altitude of 5,000 feet above the ground. At this time a trail of white vapor or smoke, 150 to 200 feet long, was observed streaming from the left engine of the aircraft. Ten to 15 seconds later flames were seen flowing from the left engine over the wing and back to the empennage. Seconds later the left wing and the left engine dropped free from the rest of the aircraft; and the airplane fell out of control, crashed to the ground, and burst into flames.", "The aircraft left Istres-Le Tub\u00e9 Airbase in the morning to try to locate an USAF C-47 that disappeared in the region three days earlier. In fact, this C-47 registered 44-76443 crashed on the Cheval Blanc mountain, killing all 11 occupants. Around noon, the crew of the B-17 localized the wreckage of the C-47 on the east slope of the mountain and while flying to close from the terrain, the aircraft went out of control, maybe due to downdraft, and hit the north slope of the same mountain, near the village of Chanolles. The aircraft was destroyed on impact and eight of the ten occupants were killed. Two crew members, among them a pilot, survived. The pilot decided to leave the area to find help but his dead body was found in an isolated area on March 25, 1948. The only survivor, Sgt Angelo La Salle, was rescued few hours later.", "Christened 'Star Tiger', the four engine aircraft left Horta, in the Azores Islands, at 1534LT bound for Hamilton, Bermuda. At 0200LT, about 10,5 hours into the flight, the navigator Cyril Ellison fixed its position and learned that they too had been blown off course and were crabbing away from Bermuda. He informed the pilot McMillan about a new course which turned the aircraft directly into a gale. However, McMillan still expected to reach Bermuda with at least an hour's worth of fuel remaining upon landing. At 0304LT, the radio officer Robert Tuck requested a radio bearing from Bermuda, but the signal was not strong enough to obtain an accurate reading. He repeated the request eleven minutes later, and this time the Bermuda radio operator was able to obtain a bearing of 72 degrees, accurate to within 2 degrees. The Bermuda operator transmitted this information, and Tuck acknowledged receipt at 0317LT. This was the last radio contact with the aircraft and its crew. As the aircraft failed to arrive in Hamilton, SAR operations were conducted but were eventually suspended few days later as no trace of the aircraft nor the 31 occupants was found.", "Damaged beyond repair in a ground accident in Beirut with a Junkers JU.52/3m operated by Compagnie G\u00e9n\u00e9rale Transsaharienne (CGT). There were no casualties.", "Damaged beyond repair in a ground accident in Beirut with a C-47 operated by Middle East Airlines and registered LR-AAA. There were no casualties.", "Shortly after takeoff from Istres-Le Tub\u00e9 Airbase, the captain was forced to feather the propeller on engine number one because it was running roughly. He elected to return to Istres, initiated a turn and started an approach when he realized he was misaligned with the runway centerline. He increased power on the three remaining engines in an attempt to make a go around when the aircraft stalled and crashed on an abandoned hangar located short of the runway threshold. Four crew were injured, five others were unhurt and seven passengers were killed. Crew killed were (115th Squadron): S/L D. T. Moir, pilot, G. Atter, flight engineer, G. G. W. Carter, J. T. Walton, F/Lt P. Smith, F/Sgt S. A. Wallace, AC2 R. A. Knapp.", "While landing on the iced Lake Iv\u00f6sj\u00f6n, the three engine aircraft went through the ice and sank. There were no casualties but the aircraft was lost.", "The three engine aircraft was operated by the manufacturer Northrop in a number of various unimproved and short fields in Southern California (exact place unknown). The crew, consisting of one engineer and two pilots, was performing a test of an experimental dorsal fin. While flying in the vicinity of an airfield, the fin broke loose and damaged the Pioneer\u2019s tail surfaces, making the aircraft uncontrollable. The test pilot Latham A. \u201cSlim\u201d Perrett did what he could to steady the aircraft to allow the copilot and an engineer to parachute to safety. Sadly, there was no time for Perrett to escape. The aircraft was destroyed and the pilot was killed. Source: http://oldmachinepress.com/2014/05/17/northrop-n-23-pioneer-and-n-32-yc-125-raider/", "While cruising at an altitude of 2,000 feet by night on a flight from Wright-Patterson AFB to Little Rock, the twin engine aircraft hit the east slope of Mt Round Top located three miles south of Jasper, in the Ozark Mountains. The aircraft was destroyed by impact forces and a post crash fire and the wreckage was spotted around midnight, four hours after the crash. All five occupants, four USAF officers and one Navy Officer, were killed. Crew: Lt Phillip Novick, pilot, Lt Charles W. Thomas, copilot, M/Sgt George L. Haties, crew chief. Passengers: Lt Felton F. Roberson, GM2 Francis J. Russell.", "On final approach, one of the engine failed. The aircraft stalled and crashed in a field short of the runway threshold. The aircraft was damaged beyond repair and all 19 occupants were injured.", "Enroute, the aircraft hit the east slope of Mt Page located 2 miles southwest of Saluda, North Carolina. The aircraft was destroyed by impact forces and a post crash fire. Four passengers were killed while six other occupants were injured.", "Crashed in unknown circumstances into the Ionian Sea off Locri, Calabria. All occupants were quickly rescued while the aircraft sank and was lost.", "Crashed on approach to Sandoway Airport. The aircraft was written off but there were no casualties.", "On final approach to RAF Hendon, while performing a local training sortie, the aircraft stalled and hit several buildings located 1'100 yards short of the runway threshold. On impact, the aircraft nosed down and crashed on a trolleybus. Both pilots were killed while eight civilians seating in the trolleybus were seriously injured.", "Shortly after takeoff from Bandung-Andir Airport, while climbing in stormy weather, the crew informed ground that an engine failed. While trying to return, the pilot lost control of the aircraft that dove into the ground and crashed in a huge explosion into a wooded ravine located near Padalarang, about 10 km northwest of Bandung Airport. The aircraft disintegrated on impact and all 19 occupants were killed, among them 11 soldiers and four members of a music ensemble.", "The crew was on his way from Brownsville to Ciudad del Carmen to pick up a load of seafood for the US market. While cruising vertical to the Gulf of Mexico, the right engine failed, forcing the crew to ditch the aircraft 24 km off Ciudad del Carmen. While preparing a life raft, the American pilot Neil Womack fell into the water and was drowned. The Mexican copilot Esteban de Le\u00f3n was rescued by the crew of a ship christened 'Roat\u00e1n' nine days later.", "On final approach to Jacksonville-Towers Field NAS, following a maritime patrol flight, the seaplane was too low, hit tree tops and crashed in a wooded area located few hundred yards short of runway. Two crew members were killed while five others were injured.", "Enroute from Brisbane-Archerfield to Roma, while flying in the region of Condamine in poor weather conditions, the right engine failed. The crew reduced his altitude and elected to make an emergency landing when the aircraft hit a tree and crashed in a field. A passenger and a pilot were slightly injured while all other occupants were unarmed. The aircraft was damaged beyond repair.", "While descending to Frankfurt-Main Airport in marginal weather conditions, the crew informed ground that an engine failed and was forced to make an emergency landing as he was unable to maintain a safe altitude. The aircraft crash landed in a field located in Ulrichstein, about 70 km northeast of Frankfurt Airport. On impact , a wing was sheared off, causing a gaping hole in the cabin, allowing some of the passengers to quickly evacuate the aircraft. Nevertheless, all four crew members and eight other passengers were killed in the accident.", "The crew consisting of pilots and engineers from the manufacturer Handley Page Aircraft was completing a test flight in Radlett. Upon landing, an undercarriage collapsed. The aircraft went out of control and veered off runway before coming to rest. All four occupants were unhurt while the aircraft was damaged beyond repair.", "The crew was completing a training sortie in RAF Hullavington. The aircraft landed 200 yards after the runway threshold. On a relatively short runway, the aircraft was unable to stop within the remaining distance, overran and came to rest into a ditch. All four crew members were unhurt while the aircraft was damaged beyond repair.", "The crew (236th OCU) was engaged in a night training sortie from RAF Kinloss. While flying in the vicinity of Tain, the aircraft went out of control and crashed in flames in a prairie. All five crew members were injured while the aircraft was destroyed.", "The aircraft departed Laverton at 1415LT for Amberley. Aeradio position reports were received normally through out the flight, until 1734LT, when clearance was obtained to descend from 8000 feet preparatory to the landing at Amberley. A short time later Amberley Flight Control cleared the aircraft for a straight-in approach RWY 05 at an angle of 45 degrees, turn right to align itself with the runway and commence to lose height on the approach - which appeared to be lower and faster that usual. The aircraft touched down in a tail high attitude, approximately 300 feet after crossing the threshold. After travelling a short distance, the aircraft then left the ground, rising to about five feet. From eyewitness reports, attempts were then made by the crew to force the aircraft onto the runway but this only resulted in three more bounces. When about 600 feet from the upwind end of the runway, engine power was applied to make a go around. It is estimated by ground observers that, by this stage, the airspeed of the Lincoln had decreased to approximately 80-85 knots. The Lincoln was then seen to climb slightly, level out at 100 feet, after which the nose of the aircraft rose sharply to place the aircraft in a climbing attitude of 40 degrees. After a further few seconds, the attitude changed abruptly to a climb of 80 degrees. With all engines roaring presumably under full power, the aircraft attained an altitude of approximately 500 feet AGL when, with no forward speed, the port wing slowly dropped and the aircraft steadily accelerated until the port main plane struck the ground in a vertical position. By this time the fuselage was parallel with the ground. The aircraft caught fire immediately and, although the fire tender arrived shortly after the crash, the fire could not be sufficiently controlled to extricate the crew or passengers. The crash site was 400 yards from the end of RWY 05 and displaced approximately 100 yards left of the runway. Source: http://www.adf-gallery.com.au/", "The aircraft was scheduled to fly from Florence to Rome but few minutes prior to departure, the operator decided to make an unscheduled stop in Pisa Airport to disembark passengers that were blocked in Florence due to a technical failure on the aircraft. Due to low clouds, the crew was forced to fly at low height from Florence to Pisa and apparently, the weather conditions dropped as the aircraft approached Pisa Airport. Descending from the south in poor visibility, the aircraft hit the slope of a mountain and crashed near the village of Collesalvetti, south of the airport. All three crew members and four passengers were killed while three other passengers were seriously injured.", "Few minutes after takeoff from Le Havre, while flying over the Bay of Seine, the crew encountered poor weather conditions with snow falls. The seaplane went out of control and crashed into the sea off the Saint-Marcouf Islands, between Le Havre and Cherbourg. The aircraft was lost and all 19 occupants, pilots and engineers of the manufacturer, were killed.", "On the leg from Maracaibo to C\u00facuta, while starting the descent, the crew encountered technical problems with the engines and elected to make an emergency landing. The aircraft crash landed and was written off. All 17 occupants were injured, nine of them seriously.", "Crashed shortly after takeoff from Mati, killing all 12 occupants.", "Captain De Cicco took over the controls of the aircraft shortly after the flight had passed the Newark fan marker, and started an instrument approach to the Port Columbus Airport. Altitude was reduced to 1,600 feet which was the minimum for that part of the instrument approach to Columbus. However, Captain De Cicco continued his descent below 1,600 feet despite the objections of Mr. Cole. Mr. Cole stated that he immediately engaged himself in a search of the cockpit for an instrument approach chart for Columbus, presumably to show Captain De Cicco that an altitude of 1,600 feet was required until over the Summit Hill fan marker. The descent was continued, and just as the aircraft emerged below the overcast Mr. Cole looked up to see the trees into which the aircraft flew. The first tree struck extended approximately 90 feet above the terrain, the elevation of which was 1,055 feet. The aircraft continued in a straight line, striking a second tree 60 feet away from the first. At this point the right horizontal stabilizer tip and the right elevator were sheared from the empennage A third tree was struck, 265 feet from the first point of contact, and miscellaneous fuselage parts and the right wing were torn from the aircraft. The airplane then made contact with the ground at which time both propellers were broken from the engines. The main body of the wreckage came to rest and burned 1,150 feet from the first point of impact. The pilot was killed, but the co-pilot, although seriously injured has substantially recovered.", "At Benina Airport, the pilot was in a hurry and took off in a rush at 1535LT, with the passenger but without his radio navigator. While flying along the Libyan coast, he encountered poor weather conditions and the twin engine aircraft crashed into the sea around 1600LT. SAR operations were conducted but eventually suspended few days later as no trace of the aircraft nor both occupants was found. On March 6, 1948, some debris and the dead body of the passenger were found on a beach in Zarzis, Tunisia.", "On final approach to Bel\u00e9m Airport, the aircraft stalled and crashed in a prairie short of runway threshold. Three passengers were seriously injured while 23 other occupants were killed.", "Enroute, the crew encountered unknown technical problems and decided to abandon the aircraft and to bail out. Out of control, the aircraft dove into the ground and crashed. All five crew members were unhurt.", "The approach to London-Heathrow Airport was started in reduced visibility due to the night and foggy conditions. On final, the aircraft hit the ground, exploded and came to rest in flames short of the runway threshold. Only two passengers survived the crash and were seriously injured while 20 other occupants were killed. Crew: Henri Goblet, pilot, Jean Lomba, radio operator, Louis De Geyndt, steward.", "The three engine aircraft departed Oran-Es Senia Airport at 1530LT on a cargo flight to Lyon via Perpignan, carrying a load of vegetables. En route, the airplane crashed in the Gulf of Lion about 90 km east of Perpignan for unknown reason. All four occupants were killed. Crew: Mr. Screka, pilot, Mr. Pelletier, radio operator, Mr. Prado, mechanic. Passenger: Mr. Saada.", "Belly landed in Mombasa and slid for several yards before coming to rest. Both occupants were unhurt while the aircraft was damaged beyond repair.", "While cruising in poor weather conditions, the twin engine aircraft hit the slope of Mt Skalafell located near Hellishei\u00f0i. The aircraft was destroyed by impact forces and all four occupants were killed.", "Crashed in unknown circumstances somewhere in Brazil. Occupant fate unknown.", "While flying by night from Dudinka to Amderma, the crew encountered poor weather conditions and due to low visibility, became lost. The aircraft hit the eastern slope of Mt Netem-Pe (1,338 meters high) located 143 km north of Kharp, in the Iamalo-Nenets okrug. As the aircraft failed to arrive, SAR operations were conducted but eventually suspended few days later as no trace of the aircraft was found. Walkers found the wreckage in an isolated area on September 17, 1950. All 20 occupants were killed. It appears the crew was tired at the time of the accident and did not have a sufficient rest time prior to start the flight.", "The flight departed from Seattle, Washington, at approximately 1300, March 8, 1948, with a crew consisting of George S. Griebel, pilot, and William F. Grund, co-pilot. It carried 800 gallons of fuel, but no passengers or cargo, weighing at the time of take-off 21.963 pounds. At 1615, the flight reported over Red Bluff, California, at 12.000 feet, and requested clearance to descend to and cruise at 10.000 feet. Oakland Airway Traffic Control granted the request, and also cleared the flight to the Moffett radio range station. 25 miles southeast of San Francisco Municipal Airport, San Francisco, California. At 1715, the flight advised San Francisco Approach Control that it as holding northwest of the Moffett radio range station at 10,000 feet. In reply, San Francisco Approach Control directed the flight to hold between the Moffett radio range station and a point 2 minutes northwest of it. At the same time the flight was advised to expect clearance to the San Francisco Municipal Airport at 1745. Between 1717 and 1734 the flight, while flying its holding pattern, received clearance and descended from 10,000 to 6,000 feet. At 1741, it was cleared to make a \u201cstraight in\u201d approach to the San Francisco Airport. It was directed to report when it crossed the Moffett radio range station and 4,000 feet, and to report again when it had descended below the overcast, A minute later, at 1742, the flight reported leaving the Moffett radio range station and 4,000 feet. Though the San Francisco Tower called repeatedly, this was the last communication received from the flight. Between 1755 and 1805 a rancher in the vicinity of Mt. Hamilton heard a noise he thought to be either thunder or blasting. About 1945, after driving to another part of his ranch, he observed fire in the hills and realized then that the noise he had thought to be thunder was that of an aircraft crashing. It was midnight before a searching party reached the wreckage, which was approximately 20 miles east-southeast (on a bearing of 110 degrees) from the Moffett radio range station, and at an elevation of 1,800 feet.", "Crashed into the sea shortly after takeoff from the bay of Poso. All 13 occupants were rescued while the seaplane sank and was lost.", "The takeoff roll and the first part of the climb appeared to be normal until the aircraft and progressed three-quarters of the way down the runway, at which time it had reached an altitude between 150 and 200 feet. Then, while still within the airport boundaries, it assumed a very steep, near vertical, climbing attitude. Airport, tower, and flight personal observing from the ground believed the flight to be in difficulty, and though no distress signal was received from the airplane, the tower promptly telephoned the crash and fire facilities on the field. At an altitude between 500 and 800 feet the airplane appeared to stall, and the nose and right wing dropped. A partial recovery from the stall was made before the aircraft crashed to the ground and burst into flames. A passenger was seriously injured while 12 other occupants were killed.", "During the takeoff roll in Tulsa, the nose gear hit a snowdrift. After departure, during initial climb, the crew was unable to raise the nose gear so the captain decided to divert to Dallas-Love Field for a safe landing. After touchdown, the aircraft slid on its nose and came to rest. There were no casualties but the aircraft was written off.", "Take-off from Anchorage was accomplished at 2012, March 12, 1948, and the flight proceeded en route. 2 At 2028 the flight reported over the Wasilla Intersection, which is the intersection of the north course of the Anchorage radio range and the east course of the Skwentna radio range. This intersection is located 35 miles north 3 of Anchorage. Three minutes later, at 2031, the flight reported that it was at its cruising altitude of 11,000 feet. At 2042 the flight reported over Sheep Mountain, a non-directional radio beacon located 85 miles airways distance, 31 degrees, from Anchorage. At 2103 the flight reported being over the Gulkana radio range station, 159 miles, 34 degrees, from Anchorage, and at this time it estimated that it would be over Northway, Alaska, 283 miles from Anchorage, at 2136. Gulkana did not establish communication with the flight. However, the flight repeated its clearance into the Fairbanks area back to Northway, indicating that the flight could receive on 400 kcs, the frequencies for both the Northway radio range and communication. Shortly before the position report of 2103, the flight was observed flying an easterly heading approximately 4 miles south of the Gulkana radio range station. Approximately 42 miles, 51 degrees, from the Gulkana radio range station is Mt. Sanford, the elevation of which is 16,208 feet. In order to provide a safe lateral distance from Mt. Sanford for aircraft flying the route, the airway from Gulkana east is deflected to the north, its course being 23 degrees. Fifteen minutes after the flight was observed flying easterly from Gulkana a fire was observed on the western slope of Mt. Sanford. Except for a repeat transmission of the flight's Gulkana position report, overheard by Northway Radio 124 miles northeast of Gulkana and approximately one minute before the fire was observed on Mt. Sanford, no communication was received from the flight after 2103. Northwest Airlines, at 2150, requested from Anchorage Radio the reported time of the flight over Northway, at which time Anchorage Radio advised that neither the Northway nor the Gulkana stations had been able to contact the flight, and that a fire had been reported on Mt. Sanford. Radio facilities over the route were immediately alerted. Since all attempts to contact the flight were unsuccessful, it was concluded that the flight had struck Mt. Sanford and burned.", "Shortly after takeoff from Guidonia AFB, while in initial climb, the right engine failed. Unable to gain height, the aircraft hit power cables and crashed in flames in a field located three km southeast of the airport, near Tivoli. The radio navigator was seriously injured while both pilots were killed. Crew: Cpt Gianni Colaprete, pilot, Mar Teodoro Tagliabue, copilot, Mr. Borelli, radio navigator.", "Crashed shortly after takeoff from McGregor Bay following an engine failure. The aircraft was written off and the pilot was injured.", "Hit a rocky peak located in the Sierra Cristais and crashed. All six occupants were killed.", "While descending to Bogota Airport, the aircraft hit the slope of Alto El Arrastradero mountain located about 40 km northeast of the capital city. A 14 years old girl was rescued while 14 other occupants were killed.", "Following the disappearance of a LI-2 registered CCCP-N444 on March 7, rescue operations were conducted and dispatched. Unfortunately, due to poor weather conditions (heavy snow falls), most of the crew were forced to stay on the ground. That day, a crew decided to make a sortie but the runway at Vorkuta Airport has not been cleared of snow. The captain ask three crew members to seat in the rear of the cabin and started the takeoff procedure on a snow covered runway (up to 30 cm of snow). After a course of about 700 meters, the aircraft lifted off but failed to gain height due to an insufficient speed. After passing the runway end, the aircraft hit the roof of a house, lost an engine, stalled and crashed in a field. All six crew members were injured and the aircraft was written off.", "The crew was engaged in a night training sortie at RAF Topcliffe. Shortly after takeoff, while climbing at a height of some 300 feet, the aircraft collided with a second Vickers 619 Wellington X. Registered RP565, it was carrying another crew of four, was also completing a training flight and was attempting to land. Both aircraft went out of control and crashed in a field near the airport. All eight crew members were killed. Crew: F/Lt Franciszek Kula, pilot, Colin Bass, pilot, Sig Walter Ernest Leslie Howell, Sig Arthur Edward Highman, F/Lt William James Jones, F/Lt Robert Sneddon Laird, F/Lt Harry Corelius New, F/Lt John Edge Kerslake.", "The crew was engaged in a night training sortie at RAF Topcliffe. While approaching the airbase at a height of some 300 feet, the aircraft collided with a second Vickers 619 Wellington X. Registered RP499, it was carrying another crew of four and just took off from RAF Topcliffe. Both aircraft went out of control and crashed in a field near the airport. All eight crew members were killed. Crew: F/Lt Franciszek Kula, pilot, Colin Bass, pilot, Sig Walter Ernest Leslie Howell, Sig Arthur Edward Highman, F/Lt William James Jones, F/Lt Robert Sneddon Laird, F/Lt Harry Corelius New, F/Lt John Edge Kerslake.", "Aircraft NC 22077 departed from Providence, Rhode Island, for White Plains, New York, at about 0730 March 19, 1948. The aircraft carried the pilot, Herman F. Burlingame III, his wife Ruth L. Burlingame, their infant daughter Kathleen, and George H. Armitage, as well as four Chow dogs and personal baggage. Arriving at Westchester Airport, White Plains, one hour and 20 minutes later, aircraft NC22077 was serviced with 118 gallons of fuel. At 0935 the aircraft departed from White Plains, the pilot telling airport officials that he intended to fly either to Hadley Field, New Brunswick, New Jersey, or Solberg-Hunterdon Airport, White House, New Jersey. Two hours and 31 minutes later the aircraft returned to White Plains, Mr. Burlingame telling airport officials that he had not landed at either of the alternative destinations. The aircraft was parked for the night, after being serviced with 85 gallons of fuel. The following morning, March 20, 1948, at 0550 the flight departed from White Plains for St. Louis, Missouri. The aircraft carried an additional four persons who had joined the original group at White Plains. The take-off weight could not be precisely determined, but it was close to the maximum allowable. No flight plan was filed with CAA Airways Traffic Control, and though NC22077 was equipped with two-way radio, no transmissions were received from the flight after its departure from White Plains. Consequently the exact route over which the flight proceeded is not known. Shortly after 0800, witnesses in the vicinity of the west portal of the Laurel Hill Tunnel of the Pennsylvania Turnpike, approximately 45 miles southeast of Pittsburgh, Pennsylvania, observed an aircraft flying at a low altitude on a northwesterly heading. It was flying in and out of low-hanging cloud fringes, and therefore, was not continuously visible. However, the aircraft was observed to approach the tunnel, circle in front of the portal, and then disappear into the overcast. After losing sight of the aircraft, some of the witnesses stated that they heard a surge of engine power, followed by the sound of a crash. Others, more distant, noticed that sound from the aircraft ceased abruptly. Since no other aircraft was observed in the vicinity at that time, there is no doubt but what it was NC22077 that these witnesses saw.", "Crashed in unknown circumstances near the Rio Gurupizinho, at the border of Par\u00e1 and Maranh\u00e3o States. The wreckage was found two days later and all four crew members were killed.", "The crew left Travis AFB for a night flight to Hillsboro, in the suburb of Portland, Oregon. During the approach to Hillsboro, the crew encountered poor weather conditions and missed the airport. While flying in dark conditions, the aircraft hit the slope of Mt Davis located about 11 miles northeast of Woodland. Two passengers were seriously injured while eight other occupants were killed.", "On a local flight from G\u00f6teborg, the pilot encountered poor weather conditions and was forced to reduce his altitude when the aircraft hit power cables and crashed in a field. The pilot was injured and the aircraft was written off. The aircraft was owned by Nils Olofsson.", "While flying over the Irish Sea, enroute from Belfast to Liverpool, the pilot was forced to ditch the aircraft off Southport. He was quickly rescued while the aircraft sank and was lost.", "While flying at an altitude of 2,400 meters in poor weather conditions, the twin engine aircraft hit the slope of Mt Cardo located in the center of Corsica. The wreckage was found few hours later and all 19 occupants were killed.", "After touchdown, the four engine aircraft overran and collided with a rocky wall. There were no casualties but the aircraft was written off.", "On final approach to Berlin-Gatow Airport, at an altitude of 1,500 feet, the twin engine aircraft collided with a Soviet Air Force Yakovlev Yak-3. Both aircraft went out of control and crashed. All 14 occupants on board the Viking were killed as well as the fighter pilot. Crew: John Ralph, pilot, Norman Merrington, copilot, Charles Mamser, radio operator, Leonard G. Goodman, steward. Passengers: Sgt Pasquale E. Pintus, Frances Ruth Clough, J. K. Shea, J. E. Roberts, S. J. Stocking, Robert Collier, Waldemar Hald, Cpt Flamings, M. Lewin, H. Read-Jahn.", "Left its base at 0930LT for a training mission over the North Sea. At 1435LT, the crew informed ground about his position and that he was flying at an altitude of 15,000 feet some 192 km from his departure point. Few minutes later, the aircraft crashed into the sea in unknown circumstances. No trace of the aircraft nor the crew was ever found.", "The crew was forced to make an emergency landing for unknown reason. The aircraft came to rest in marsh field and was damaged beyond repair. There were no casualties.", "About half an hour after its departure from Maracaibo Airport, the aircraft crashed in a mountainous region located in the east part of Venezuela. As the aircraft failed to arrive in Cartagena, SAR operations were conducted but eventually suspended few days later as no trace was found. The wreckage was located in June 1959 in an isolated area. All four occupants were killed, among them Hernando Navarro Botero, Director of the company. The registration remains unconfirmed.", "Crashed in unknown circumstances on Mt Baird located in the Cowlitz county, Washington. All three crew members were killed.", "Following the failure of the starter on engine number one, the crew was unable to restart this engine and received the authorization to perform an empty leg back to Paris for maintenance purposes. During the takeoff roll in Kano Airport, the aircraft went out of control and veered off runway before colliding with a BOAC technical hangar. A crew member was killed while five others were injured. The aircraft was destroyed. Pilots : Mr. Salvetat & Marchandise.", "The crew was performing a training flight from Eglin AFB. Enroute, an unexpected situation forced to crew to abandon the aircraft that crashed into the sea two miles off Destin. Two crew members, F/Lt John Kubo and T/Sgt Joseph A. Riley were rescued while the body of T/Sgt John E. Brizendine was never found.", "Shortly after a night takeoff from Gibraltar, while climbing to an altitude of 2,500 to 3,000 feet, the twin engine aircraft hit the slope of a mountain located in Los Barrios, northwest of Algeciras. The aircraft was destroyed and all three crew members were killed. They were performing a cargo flight from Bordeaux to Casablanca with an intermediate stop in Gibraltar. The aircraft was carrying a load of four tons of various goods.", "\"Pan American's Flight 1-10, originating in San Francisco, California, April 10, 1948, was scheduled to fly around the world to New York, New York. In accordance with company practice the flight changed to a different aircraft, NC-88858, at the Pan American Airways' base in Calcutta, India. The flight took off from Calcutta, April 13, 1948, and continued without incident via Damascus, Syria, and Istanbul, Turkey, to Brussels, Belgium. During a night landing approach at Brussels the fluorescent lighting on the left or pilot side of the cockpit went out. Since the only other lighting immediately available was a chart light which was focused on the automatic direction finder indicator, the flight instruments could not be read, and the remainder of the landing approach was accomplished without visual reference to the flight instruments. An examination was made of the fluorescent lights after the landing. They appeared to operate normally, so the flight departed from Brussels, continuing without difficulty until on the final landing approach into London. When the power was reduced the same pilot's fluorescent lights again went out. This time the chart light was focused on the airspeed indicator. The approach was continued, and the landing was accomplished without incident. A faulty rheostat switch was found to be the cause of the fluorescent light failure, but since a spare switch could not be located, it was not changed at London. An entry describing the defect was placed in the aircraft's Form C, the airplane flight log, and the captain and the flight engineer of the new crew were informed by the company's maintenance supervisor of the condition. Though no actual maintenance was accomplished, the lights again appeared to be operating normally, so the captain, F. C. Jakel, decided to take-off, departing from London at 0035, April 15, 1948, for Shannon. At this time available weather forecasts indicated that at the estimated time of the flight's arrival at Shannon the ceiling there would be 700 feet with a higher cloud layer at 1,000 feet, and visibility 4 miles. At 0159, April 15, 1948, the flight reported being at an altitude of 4,500 feet, contact, over the Limerick Junction fan marker, located 25 statute miles southeast from the Shannon Airport, and requested permission to make a practice approach to the field with the use of the instrument landing system. Shannon Tower cleared the flight for this approach. The tower advised that 3 hours previously the instrument landing system equipment on the airport had been reported faulty, but that it had since been serviced and was operating normally according to its monitoring board, though not flight-checked. At 0210, the flight reported that it was proceeding to the outer marker, 5.2 statute miles northeast of the Shannon Airport, and also made a report, routine for Pan American flights, \"\"mechanical condition okay.\"\" In response Shannon Tower advised the flight that the weather over the field was \"\"fog patches", "Shortly after takeoff from Lae-Nadzab Airport, while in initial climb, an engine failed. The pilot lost control of the aircraft that crashed on an island located in the Markham River, south of the airport. All 37 occupants were killed. It was determined that all passengers were local farmers that were seating in the main cabin without seat or seat belt. Worst accident involving a Lockheed Hudson.", "The twin engine aircraft christened 'Kahu' left Auckland Airport at 1435LT bound for Gisborne with an intermediate stop in Tauranga. On final approach, the crew encountered poor weather conditions with thunderstorm activity and strong winds. The aircraft lost height and crashed in the Waipu Bay, less than 200 yards from the runway threshold. All 12 occupants were rescued while the aircraft was damaged beyond repair. Crew: A. C. Harris, pilot, G. E. Bruce, copilot.", "The twin engine aircraft left RAF Northolt at 1809LT bound for Glasgow-Renfrew Airport. At 1946LT, while cruising at an altitude of 4,700 feet, the captain contacted ATC to obtain the permission to descend to Renfrew. Few minutes later, he requested if the outer marker was operative. Shortly later, the aircraft hit the slope of Mt Irish Law and crashed. All 20 occupants were quickly rescued, two of them were slightly injured. The aircraft was destroyed.", "An Aeroflot LI-2 registered CCCP-L4279 made an emergency landing near Tynda on April 20. A day later, a Deputy from the Amur Region decided to conduct a mission to help and forced the crew to takeoff despite the fact that weather conditions were below minima. The aircraft left Takhtamygda Airport at 1550LT. About twenty minutes later, the right engine failed. The crew was forced to feather the propeller and the captain decided to return to his departure point. Shortly later, while losing altitude, the aircraft hit tree tops with its propeller while the left elevator hit a telephone pole. The aircraft stalled and crashed. Three crew members, among them the captain, were killed while three other occupants were injured.", "The crew left Rio de Janeiro-Gale\u00e3o Airport at 1000LT. About half an hour later, the aircraft crashed in unknown circumstances in Praia de Ponte Negra, about 150 km southwest of its departure point. Both pilots were killed.", "On final approach to Quonset Point NAS, both engines failed. The aircraft stalled and crashed into the sea few miles off shore. All eight crew members were rescued while the aircraft sank and was lost.", "Shortly after lift off, the aircraft went out of control and crashed in flames. The copilot was killed while the captain was seriously injured. He died from his injuries few hours later. The crew was on its way from Burbank to Israel to deliver the aircraft to the Israel Air Force. Four other similar aircraft were performing the same trip at the same time. At the time of the accident, the aircraft was still under the Panamanian register by LAPSA - Lineas A\u00e9reas de Panama. Crew: William Guy Gerson, pilot, Ernest Glen King, copilot.", "During the takeoff roll, the aircraft veered off the center line to the right as the rudder trim has not been set to neutral position before takeoff. The crew failed to abort the takeoff procedure and about 30 seconds after liftoff, during initial climb, the right wing hit a telegraph line and collided with the pole of a high voltage power line. Out of control, the aircraft stalled and crashed. The mechanic was killed while 13 other occupants were injured. The aircraft was destroyed.", "Approaching Bodaibo, the crew lost his orientation due to low visibility caused by poor weather conditions (snow falls). The captain decided to reduce his altitude and followed the Vitim River to join Bodaibo Airport at a height of 100 meters. The aircraft hit the water surface and crashed in a huge explosion into the river off Mamakan, about 13 km southwest of Bodaibo. A passenger was injured and rescued while all 28 other occupants were killed.", "On final approach to Corpus Christi NAS, the aircraft hit tree tops and crashed. At least one crew member was killed.", "Crashed in unknown circumstances into the sea some 5 km off Qingdao. All occupants were rescued while the aircraft was recovered nine hours later but written off.", "While taxiing, the twin engine aircraft swung due to heavy winds, lost its undercarriage and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "Prior to departure, the crew was briefed about the poor weather conditions in south of France and that he should avoid this area. While cruising southeast of Avignon, the aircraft went through a low pressure zone with cumulonimbus. It encountered severe turbulences, lost two engines and its tail, went into a dive and crashed in a field in Verqui\u00e8res. All 11 occupants were killed. It appears that few elements of the aircraft broke off due to severe turbulences that exceeded their certification.", "The crew was engaged in a local training flight on this brand new aircraft that was delivered to KLM last April 22. After several touch and goes completed without any issues, the instructor decided to perform a takeoff with the engine number one voluntarily inoperative. Ready for departure on runway 23, the crew increased power on all four engines and started the takeoff procedure. At a speed of 137 km/h, the captain started the rotation and the nose wheel left the ground. At a speed of 169 km/h, the instructor decided to reduce the power on the engine number one and pull the power lever to the back. At this moment, the aircraft was still on the ground and slightly deviated from the runway center line to the left. The captain tried to counteract this with the tail when the right main gear left the ground. Due to the presence of obstacles ahead, the instructor decided to increase power on the engine number one that oversped. The left wing dropped and hit a rocky wall, causing the aircraft to stall and crash into a ditch. All five crew members were injured while the aircraft was destroyed.", "Crashed into the Atlantic Ocean in unclear circumstances. As the aircraft failed to arrive in Shannon, SAR operations were conducted but eventually suspended five days later, on May 10, as no trace of the aircraft nor both crew members was found.", "Crashed one minute after its takeoff from Daly Waters while performing a delivery flight to Alice Springs with two crew and two ladies as passengers on board. After takeoff, during the initial climb, while at an altitude of 150 feet, both engines failed simultaneously. The captain elected to make an emergency landing in a prairie but at the last moment, the left engine regained power. The aircraft went out of control and crashed in flames. All four occupants were injured while the aircraft was destroyed.", "Crashed into the sea off Long Island, Bahamas, while performing a night flight from Roosevelt Roads NAS (Ceiba, Porto Rico) to Key West. No trace of the aircraft nor the crew was ever found.", "The crew started the descent to Shaibah Airbase near Basra when all four engines stopped simultaneously. The captain elected to make an emergency landing in a desert area located 66 km northwest of the airport. The aircraft came to rest and was damaged beyond repair while all three crew members were unhurt. The crew was in charge to deliver the aircraft in Karachi as it was just on the Pakistan register since 4 days.", "Crashed on landing in unknown circumstances. There were no casualties.", "Taking part to the Independence War of Israel, the single engine aircraft was engaged in a bombing mission when it crashed in unknown circumstances in Bait Mahseer, a suburb of Amman. All four occupants were killed, among them pilots Yariv Sheinbaum and Daniel Bukstein.", "Following an engine failure, went out of control and crashed in a desert area located near Nairyah. All nine crew members were killed.", "On May 11, the pilot John Spiers left Lae on a ferry flight to Sydney for the annual CofA renewal. On May 12, he departed Daru for Horn Island. Halfway across Torres Strait, he encountered a severe rain storm and turned back to Daru. At low level over sea, the pilot saw a small low mudflat island, so made a forced landing there, wrecking the Dragon. No radio on the aircraft, so Spiers waited to be found. A search was made by a Mandated Airlines C-47 with pilots Brian Carpenter and Tom Deegan as far south as the Australian Gulf country for 3 days. When returning to Daru from Horn Island, they spotted the Dragon on the mudflat island with Spiers sitting on the roof of the aircraft. He had been unable to find food and at high tide the island was mostly under water, so he stayed in the cabin of the Dragon while the sea gradually broke up the aircraft for 6 days without food, surviving by drinking rainwater. RAAF Catalina from Port Moresby landed off Turnagain Island, sent a crew member ashore in a rubber dinghy to collect Spiers. A storm blew up so Catalina returned to Moresby, leaving the two men on the island. They were rescued by a pearling lugger sent from Thursday Island. Source: http://www.goodall.com.au", "The twin engine aircraft left Croydon in the early afternoon for Paris with eight passengers and a crew of two. Six passengers disembarked in Paris and the aircraft took off around 1530LT bound for Cannes. About two hours into the flight, the crew encountered poor weather conditions with heavy rain, turbulence and strong winds. The aircraft went out of control and crashed in a wooded area located on Mt Le Coran, near Saint-Bauzile, about 9 km southeast of Privas. A local farmer was quickly on the scene but all four occupants were killed. Rescue teams arrived the next morning. Crew: Peter Townsend, pilot, Arthur Frederick Freeman, radio operator. Passengers: Peter Wentworth-Fitzwilliam, Kathleen Kennedy-Cavendish, young sister of John Fitzgerald Kennedy.", "The four engine aircraft left L\u00e9opoldville Airport at 0805LT bound for Libenge. About three hours later, as he started the descent to Libenge, the crew encountered poor weather conditions with heavy rain falls, low clouds and turbulence. While descending at an altitude of 700 feet, the aircraft went out of control and crashed in a wooded area located near the village of Magazini, some 27 km south of Libenge. A passenger was seriously injured while 31 other occupants were killed.", "After landing at RAF Bovingdon, while completing a cargo flight, the four engine aircraft was unable to stop within the remaining distance, overran and came to rest. All three crew members were unhurt while the aircraft was damaged beyond repair.", "The crew was completing a test flight from Mendoza to Buenos Aires-Aeroparque-Jorge Newbury Airport. Enroute, the pilot encountered engine problems and decided to divert to Jun\u00edn Airport. On approach, the twin engine aircraft crashed in a field, lost its undercarriage and came to rest in flames. All five crew members were unhurt while the aircraft was destroyed.", "The aircraft left Durban in the early morning on a flight to London via Johannesburg. While cruising in poor weather conditions, the aircraft hit the slope of Mt Spitzkop located 32 km south of Vrede, in the Witkoppens Mountain Range. All 13 occupants were killed. At the time of the accident, the aircraft was off track by eight miles, probably due to navigational error on part of the crew, caused by the lack of visibility due to poor weather conditions.", "\"The flight departed from Newark, New Jersey, at 1733 May 16, 1948, for Chicago, Illinois, Denver, Colorado, Burbank, and San Francisco, California. In addition to a crew consisting of Captain William R. McCauley and Copilot Jack R. Foote, the flight carried 5,280 pounds of fuel, and 10,263 pounds of cargo. According to the hourly weather reports available to the crew in Newark prior to departure, thunderstorm activity which existed over the vicinity of Goshen and Fort Wayne, Indiana, was moving eastward. Chicago Municipal Airport was reported to have a ceiling of 2,000 feet. The flight plan specified a cruising altitude of 4,000 feet to Chicago, the first intended point of landing. South Bend, Indiana, was designated as the alternate airport. No unusual incident was reported for approximately the first two hours of the trip, then, at 1931 the flight reported over Cleveland, Ohio, at 4,000 feet, stating that there was extreme turbulence approximately five miles east of the Cleveland Airport. At this time the flight acknowledged receipt of a weather report from Toledo, Ohio, to the effect that light thunderstorms with cloud to cloud lightning were moving northeasterly from Toledo. At 2013 the flight reported at 4,000 feet over Mansfield, Ohio, 58 miles south southwest of Cleveland. The crew stated that they had changed course to the south to avoid thunderstorms, and intended to proceed to Columbus, Ohio, in accordance with visual flight rules. A special weather observation taken at Cleveland at 2003 which reported a ceiling of 2,000 feet, visibility 10 miles, light rain, wind from the northwest at 30 miles per hour with strong gusts, and cloud to cloud and cloud to ground lightning was transmitted to the flight Cleveland Radio also transmitted a weather observation taken at Columbus at 1930 which reported an unlimited ceiling, visibility of 15 miles, and wind from the south at 14 miles per hour. After acknowledging receipt of this weather information, the flight stated \"\"For your information advise no one to go through the turbulence we just went through.\"\" The next position report was received at 2032 at which time the flight reported being five miles north of Columbus. Following this report it was cleared by Columbus Tower for landing. In reply the flight stated to the tower", "Shortly after takeoff, while in initial climb, the aircraft stalled and crashed in a field. All 17 occupants were injured and the aircraft was destroyed.", "Upon landing in Rennes, an undercarriage collapsed. The aircraft slid for several yards and came to rest. There were no injuries but the aircraft was damaged beyond repair.", "Crashed shortly after takeoff from Guidonia. A crew member (observer) was killed while four others were injured.", "The aircraft left Valence-Chabeuil Airport at 2232LT on a cargo flight to RAF Bovingdon, carrying a crew of four and a load of fruits. On a night approach, the pilot encountered poor visibility due to a low ceiling. During the last turn, the aircraft stalled and crashed in a wooded area located few dozen yards from the airport. A crew member was rescued while three others were killed.", "The crew was performing a delivery flight from Brussels to Tel Aviv via Rome-Urbe Airport. Shortly after takeoff, while in initial climb, the aircraft suffered an explosion and crashed near the runway end. Both pilots were killed and the aircraft was destroyed. The crew consisted of Leonard Cohen and George Frederick Beurling, a Canadian pilot, hero from WWII.", "The crew was completing a training sortie in L\u00fcbeck, towing a glider. While flying around the airport at low height, the left engine failed. The crew immediately dropped the glider and reduced his altitude in an attempt to make an emergency landing. The aircraft crash landed in a field located near the airport, slid for several yards and came to rest in flames. Both pilots escaped uninjured while the aircraft was partially destroyed by fire.", "Crash landed. No injuries.", "Following an uneventful flight from Petropavlovsk-Kamchatsky-Yelizovo Airport, the crew started the descent to Magadan in poor weather conditions. During the final approach, at a distance of 13 km from the runway threshold, the captain was unable to locate the runway and decided to descend to 500 meters, the decision altitude. Unable to establish a visual contact with the runway, he decided to abandon the approach, started a go around and diverted to the Seymchan Airport located some 350 km north of Magadan. Few minutes later, while cruising in poor visibility, the aircraft hit the slope of Mt Marchekanskaya (707 meters high). A passenger was seriously injured while eight other occupants were killed. It appears the aircraft hit the mountain 70 meters below the summit.", "On approach to RAF Bovingdon, the aircraft became unstable and the captain was forced to attempt an emergency landing. The aircraft crash landed in a field located in Studham, about 11 km north of the airbase. While all five occupants were unhurt, the aircraft was damaged beyond repair. It was completing a cargo flight from Valencia, Spain, with a load of apricots.", "The crew was performing a flight from \u017datec, Czech Republic, to the airbase of Ekron-Tel Nof, carrying a load of bombs and a Czech fighter aircraft. While descending to Ekron, the crew encountered poor weather conditions and the captain decided to divert to Tel Aviv-Sde Dov Airport. On final approach, the aircraft was hit by gun fire. In such conditions, the captain increased power and started a go around to leave the area. Few minutes later, while cruising a low height in reduced visibility, the aircraft hit the slope of a mountain located south of Latrun. Both pilots were rescued while the navigator was killed. It was later confirmed by the authorities that the soldiers in place in Tel Aviv Airport opened fire on the aircraft as they have not been informed that an aircraft would land.", "Enroute, the pilot encountered an unexpected situation and was forced to make an emergency landing in a desert area located about 26 km south of El Alamein. All four occupants were rescued while the aircraft was damaged beyond repair.", "The crew was completing a local training sortie in Madrid AFB. On final approach, the twin engine aircraft collided with a private Luscombe that just took off from the same runway. Both aircraft went out of control and crashed near the runway threshold. All four crew members on board the C-47 and the pilot of the Luscombe were killed.", "The crew was engaged in a local training flight in Albacete. Shortly after takeoff, while in initial climb, the four engine aircraft collided with a small private plane. Both aircraft went out of control and crashed near the runway end. All four crew members on board the Halifax and the pilot of the private plane were killed.", "The crew was involved in a test flight at RAF Boscombe Down, with some propeller blade control. While cruising at low height, the crew informed ground he was encountering difficulties and lost control of the airplane that dove into the ground and crashed in a wooded area located eight miles northeast of the airbase. The aircraft was destroyed and both crew members were killed.", "Crashed on landing for unknown reason, injuring both occupants.", "The twin engine aircraft crashed in unknown circumstances near the \u00c7ubuk dam, killing the pilot, sole on board.", "While cruising in the vicinity of the RAF Boscombe Down, the twin engine aircraft collided in unknown circumstances with a RAF Avro 652 Anson registered NL248. The Dominie went out of control and crashed in a prairie while the pilot of the Anson was able to land safely. All three crew members on board the Dominie were killed. Crew: F/O Ashley James Greer, Peter J. Bartlett, Peter C. Damon.", "During takeoff from Lough Erne off Enniskillen, the seaplane hit several waves in strong winds. The departure was interrupted and the aircraft came to rest. There were no casualties but the airplane was damaged beyond repair.", "The crew was completing a training mission in Lisbon. Shortly after takeoff from Lisbon-Portela de Sacav\u00e9m Airport, while in initial climb, the instructor shut down an engine. The aircraft stalled and crashed near the runway end. While all five crew members were injured, the aircraft was destroyed.", "The crew started the descent to Douglas-Ronaldsway Airport in poor weather conditions. Apparently following a navigational error, the aircraft came from the west at a too low altitude when it hit a cliff located near Peel. The wreckage was found few hours later. Both crew members and four passengers were killed while two others were seriously injured. The crew was unable to locate the airport of Douglas and to know his exact position when the accident occurred. The pilot was completing his first flight to Douglas Airport.", "The crew was performing a charter flight from Blackpool to Douglas with an intermediate stop in RAF Walney Island, Cumbria. On approach to the Isle of Man, the crew encountered poor weather conditions and continued to the west to Ireland without locating the Douglas-Ronaldsway Airport. Few minutes later, the pilot realized that the fuel reserve was insufficient and decided to ditch the aircraft into the Irish Sea, off Port Erin. The aircraft came to rest few miles off shore and floated for a while, allowing the occupants to take refuge on the wings, awaiting for help. The crew of a boat rescued all nine occupants shortly later and the aircraft sank and was lost.", "At approximately 2235, June 11, 1948, the flight departed from Burbank, California, for Fort Worth, Texas, via El Paso, Texas. Prior to takeoff a VFR2 flight plan was filed, the weather being clear. Only cargo was carried the only persons aboard being the crew, which consisted of John Dobson, pilot, and John Leslie, copilot. After departure from Burbank, the flight proceeded en route to El Paso at the specified flight plan altitude of 9,000 feet. Approximately 15 minutes after takeoff, over the vicinity of Palmdale, California, control of the aircraft was given to the copilot, and the pilot went to sleep. No trouble was experienced until 0048, at which time the copilot observed flames, deep orange in color and extending about two feet rearward, coming from under the cowl flaps around the entire circumference of the left engine. The pilot was awakened by a shout, and he immediately assumed control of the aircraft. In an attempt to control the fire the crew discharged the emergency fire bottle, cut the fuel flow to the engine, and feathered the propeller, however, the fire continued to burn intensely and the propeller did not feather. A descent for an emergency landing was started, during which the color of the flame changed to brilliant white. It appeared to the crew that the nacelle skin and the leading edge of the wing were burning. Three emergency radio transmissions from NC-79042 were intercepted by an Air Force airplane which relayed the message to Tucson Radio at 0056. To correct excessive air speed the crew reduced power to the right engine and raised the nose of the aircraft. Then the cockpit filled with smoke to the extent that the crew were unable to see the instruments. The aircraft vibrated violently, then fell into an uncontrolled spin or spiral. At approximately 4,000 feet smoke cleared from the cockpit and control of the aircraft was regained. During the descent the burning engine had fallen from the wing, and after regaining control, the crew could observe no sign of fire. Since the aircraft seemed to fly satisfactorily, a right turn towards Tucson, approximately 47 miles to the southeast, was made. In the turns however, altitude could not be maintained, and the aircraft became increasingly right-wing heavy. Accordingly it was decided to land at Eloy, Arizona, 45 miles northwest of Tucson which was observed straight ahead. Ground witnesses in Eloy saw the aircraft at a low altitude with fire in the left wing. A crash landing was made in a wheat stubble field one-fourth mile northeast of Eloy and the crew escaped through the cockpit hatch from the burning aircraft.", "The pilot, sole on board, was forced to make an emergency landing in a field located in Willowbridge, southeast of Waimate. He was unhurt while the aircraft was considered as damaged beyond repair.", "Crashed in unknown circumstances in Coulommiers. There were no casualties.", "The aircraft was on its way from Redhill, Surrey to France when, approaching Berck-sur-Mer, the pilot was forced to attempt an emergency landing for unknown reason. While both occupants were unarmed, the aircraft was damaged beyond repair.", "On final approach to runway 23, while at a height of 500 meters and with an indicated speed of 160 km/h about 500 meters from the runway threshold, the flight engineer reported to the captain that flaps were selected to 3/4 and that the speed was a bit low. The captain did not react and continued the approach in such configuration. Once the aircraft passed over the perimeter road, the captain ordered full flaps and throttle down. The engineer then selected full flaps and slowly retarded the power lever when the aircraft lost height, hit tree tops and hit the ground 175 meters short of the runway threshold. It rolled for several yards and hit a ditch before coming to rest. While all 27 occupants were evacuated safely, the aircraft was considered as damaged beyond repair due to severe structural damages.", "\"The airplane arrived in Chicago at 0952LT, en route from Los Angeles to New York City. At Chicago, the airplane was given a routine station inspection, serviced, loaded, and the flight departed for New York with a new crew at 1044. Aboard were 39 passengers, a crew of four, 2,568 pounds of cargo and 1,800 gallons of fuel, all properly loaded. The resulting total airplane weight was within the certificated gross weight. The airplane climbed en route to its planned altitude of 17,000 feet, proceeding on course, and at 1155 the captain reported to the company radio at LaGuardia Field, that the airplane was mechanically \"\"okay\u201d for a return trip. A routine report was made over Phillipsburg", "The crew was engaged in a local training flight in Shell-Mera Airport. During the takeoff roll with both engines at full power, the aircraft swung to the right. The pilot in command over corrected so the aircraft veered off runway to the left, hit an earth mount and a tree stump before crashing into a building. While all three crew members were unhurt, an employee in the building was killed.", "The pilot was forced to attempt an emergency landing for unknown reason. Upon landing, the aircraft hit several nutmeg trees and came to rest. The aircraft was damaged beyond repair.", "The crew was performing a training sortie at Whidbey Island NAS when an engine caught fire in flight. The pilot decided to return but was eventually forced to make an emergency landing in a field. The aircraft belly landed and came to rest in flames. There were no casualties but the aircraft was destroyed.", "After landing in Maracaibo Airport, the aircraft went out of control, veered off runway and came to rest in flames. There were no casualties but the aircraft was destroyed by fire.", "While on a test flight, the aircraft crashed in unknown circumstances in Segni, about 40 km southeast of Guidonia airbase. Two crew members were injured while the pilot Antonio Biscardi was killed.", "Crashed in unknown circumstances in Merka, some 70 km southwest of Mogadishu. The pilot was unhurt while the aircraft was damaged beyond repair. The exact date of the occurrence remains uncertain.", "Crashed on landing for unknown reason and came to rest on its nose. All occupants escaped uninjured while the aircraft was damaged beyond repair. The accident occurred somewhere in British Columbia, the exact place remains unknown.", "En route to Damascus, the pilot was forced to make an emergency landing in a desert area located in the southeast of Syria. Both occupants were unhurt while the aircraft was damaged beyond repair.", "On landing, went out of control, veered off runway and came to rest. A crew member was killed while 16 other occupants were injured. The aircraft was written off.", "In flight, the twin engine aircraft collided with a USAF North American P-51D Mustang registered 45-11680. A crew member was able to bail out before the Invader crashed in a field, killing all three other crew members. The fate of the P-51's crew remains unknown.", "Shortly after takeoff from Bogot\u00e1-Techo Airport, while on a cargo flight to Medell\u00edn, the crew encountered engine problems and elected to return. Due to technical issues, the crew was unable to lower the gear so the aircraft belly landed and came to rest. There were no injuries but the aircraft was considered as damaged beyond repair.", "Crashed in unknown circumstances near Erding AFB, killing all four occupants.", "Shortly after takeoff from Cue Airport, while on a local training flight, an engine failed. The aircraft lost height, hit trees and crashed in a wooded area. Both pilots were killed.", "En route, the crew encountered poor weather conditions with heavy rain falls and thunderstorm activity. The airplane hit the slope of Orizaba Peak located northeast of Ciudad Serd\u00e1n. The wreckage was found three days later and all 14 occupants were killed. The aircraft was performing a special flight for the US-Mexico Foot and Mouth Disease Commission.", "On approach to Brussels-Zaventem Airport, the crew encountered poor weather conditions with heavy rain falls, low visibility and a ceiling at 100 meters. In such conditions, the captain overshot the runway in Zaventem and was unable to land. He increased power on all three engines and continued to the northeast. Few minutes later, he decided to land on a makeshift airfield in Keerbergen but during the last turn to the left, the aircraft stalled and crashed in a field. Three passengers and a crew member survived while all eight other occupants were killed.", "The crew was performing a training sortie in RAF Lindholme. On final approach with one engine voluntarily inoperative, the pilot was unable to lower the undercarriage. The crew decided to go around when the aircraft stalled and hit the runway surface, crashing on its belly. There were no injuries but the aircraft was damaged beyond repair.", "Crashed in unknown circumstances 15 miles from Merka. Both crew members survived while the aircraft was damaged beyond repair.", "The crew was performing a test flight from RAF Boscombe Down to RAF Defford on behalf of the A & AEE. Shortly after takeoff, while climbing to a height of 3,500 feet with the propeller of the engine number one feathered and the number two running at low speed, the aircraft stalled, went into a dive and crashed in a field located in Wylye, about 10 miles west of RAF Boscombe Down. All four crew members were killed. Crew: S/L A. Toot, F/Lt A. G. Bradfield, F/O G. W. Williams, P. W. Howes.", "On final approach to Prince George, while completing a local flight, the single engine aircraft stalled and crashed. All three occupants were killed.", "The four engine aircraft left Malta-Luqa Airport bound for RAF Northolt with four passengers and a crew of three on board. While approaching the London area, the crew encountered low visibility due to poor weather conditions. The crew was cleared to descent to 3,000 feet when the aircraft collided with a Scandinavian Airlines System (SAS) DC-6 registered SE-BDA. Inbound from Amsterdam, this second aircraft was carrying 25 passengers and a crew of 7. Following the collision, both aircraft went out of control, dove into the ground and crashed in a wooded area located in Northwood, about 4 miles north of RAF Northolt. Both aircraft were destroyed and all 39 people were killed. Among the passenger of the York was Sir Gerard Edward James, High Commissioner in Malaysia for Her Majesty the Queen of England.", "The four engine aircraft christened 'Agnar Viking' was approaching RAF Northolt when the crew encountered low visibility due to poor weather conditions. After being cleared by ATC to descent to 2,500 feet, the crew was unable to locate the airport and decided to return to Amsterdam-Schiphol Airport. Few minutes later, while climbing to an altitude of 3,000 feet, the aircraft collided with a Royal Air Force Avro 685 York C.1 registered MW248. This second aircraft was completing a flight from Malta-Luqa with four passengers and a crew of three. Following the collision, both aircraft went out of control, dove into the ground and crashed in a wooded area located in Northwood, about 4 miles north of RAF Northolt. Both aircraft were destroyed and all 39 people were killed.", "The left engine caught fire during start up. The crew called the fire brigade and evacuated the aircraft. The fire was extinguished but the aircraft was partially destroyed by fire and considered as damaged beyond economical repair.", "The approach to Wiesbaden-Erbenheim AFB was completed by night and poor weather conditions. On final, the aircraft hit tree tops and crashed in a wooded area located 1,6 km short of runway 25 threshold. Both pilots were injured while the aircraft was damaged beyond repair.", "The crew was completing a training flight from Oslo-Fornebu Airport to Oslo-Gardermoen Airport. The twin engine aircraft crash landed for unknown reason and was damaged beyond repair. All three crew members were unarmed. Crew: Lt Nils Arveschoug, Lt H. Hartmann, Lt F. Eriksrud.", "While flying by night and in poor weather conditions, the aircraft hit the slope of a mountain located near Li Dinh. The wreckage was found a day later and all 16 occupants were killed. Crew: Ottino Sabbadini, pilot, Andr\u00e9 Delfau, radio navigator, Andr\u00e9 Stang, mechanic.", "Crashed 2 miles southwest of Offutt AFB following an engine failure. The crew fate remains unknown.", "During a night approach to Greenville, the aircraft crashed in flames and burned. At least one crew member was killed in the accident.", "Few minutes after takeoff from Wiesbaden-Erbenheim AFB, while climbing by night, the aircraft hit the slope of Mt Steinkopf located near K\u00f6nigstein im Taunus, about 16 km northeast of Wiesbaden Airport. All three crew members were killed. They were involved in the Berlin Airlift.", "While cruising in foggy conditions, the aircraft hit the slope of a mountain located 17 km from Coronel Pringles. The aircraft was destroyed by impact forces and a post crash fire and all five crew members were killed.", "On final approach to Maiquet\u00eda-Sim\u00f3n Bol\u00edvar Airport, while on a cargo flight from Havana, both engines flamed out. The aircraft stalled and crashed into the sea few hundred yards short of the runway threshold. All three crew members were rescued while the aircraft sank and was lost.", "During a training sortie in Laverton AFB, the crew encountered an unexpected situation and made an emergency landing in a field located one mile north of the airbase. Both occupants were rescued while the aircraft was damaged beyond repair.", "For unknown reason, the four engine aircraft crash landed and came to rest in flames. All 12 occupants were rescued while the aircraft was destroyed by fire.", "The crew was engaged in a local training flight in Singapore-Seletar Airport. Just after liftoff, an engine was cut by the instructor. The aircraft stalled and bounced, causing the tail to separate. The seaplane crashed and came to rest. There were no casualties but the aircraft was written off.", "The crew started the approach to Marseille-Marignane Airport in foggy conditions. The aircraft hit a cliff located near Cape Sici\u00e9, south of Toulon. All six occupants were killed.", "Shortly after takeoff from runway 06, while on initial climb, the pilot made a turn to the left when the aircraft stalled and crashed in a huge explosion. The aircraft was destroyed by fire and all five occupants were killed.", "Crashed in unknown circumstances in Cumbica, south of the S\u00e3o Paulo-Guarulhos Airport. All 12 crew members were killed.", "Shortly after takeoff from Smoky Hill AFB (Schilling AFB), while on a local training flight, an engine failed. Four crew members were able to bail out before the aircraft dove into the ground and crashed in a field located two miles southeast of Smolan, about four miles south of the airbase. The aircraft was destroyed by impact forces and nine crew members were killed. The four crew members who were able to bail out were injured, one of them seriously.", "Crashed in unknown circumstances into the Puerto Cabello harbor. The crew fate remains unknown but the aircraft was lost.", "Shortly after takeoff from Macau, a hijacker came into the cockpit and killed the captain with a gun. The copilot lost control of the aircraft christened 'Miss Macau' that crashed into the Zhujiang River Estuary, between Macau and Hong Kong. A passenger was seriously injured while all 25 other occupants were killed. This event was considered as the first official hijacking of a commercial aircraft in the Civil Aviation History. It was later reported that lone survivor, Huang Yu, was the admitted leader of the hijacking plot. He survived by jumping out the emergency exit just before the crash. He was brought to court by the Macau Police, but the Macau court suggested that the prosecution should be brought in Hong Kong instead, since the plane was registered in Hong Kong and most of the passengers were from there. However, the British colonial government in Hong Kong stated that the incident happened over Chinese territory in which the British have no jurisdiction. Since no state claimed authority to try him, Huang was released without trial from Macau prison on 11 June 1951, and was then deported to China.", "Hit the slope of a mountain located near Lumbreras, province of La Rioja. All three occupants flying from White Waltham were killed.", "En route, an engine failed, forcing the crew to attempt an emergency landing south of Tel Aviv. While the aircraft was damaged beyond repair, all five occupants survived. The captain Murray Weissberg was recovered later while the second pilot Spencer Boyd and all three passengers were captured by Palestinians soldiers and later executed.", "The crew was forced to ditch the aircraft into the Mediterranean Sea some 130 km south of Marseille. All twenty occupants were rescued while the aircraft sank and was lost.", "The crew was engaged in a test flight on this first prototype and was completing a short flight from Toussus-le-Noble to his main base in V\u00e9lizy-Villacoublay. On final approach, at an altitude of 250 meters, the four engine aircraft nosed down and crashed in a huge explosion in the wood of Verri\u00e8res located less than two km from the runway threshold. The aircraft was destroyed by impact forces and a post crash fire and all five crew members were killed. Crew: Louis Bertrand, pilot, Abel Nicolle, flight engineer, Robert Facomprez, radio operator, Maurice Itasse, mechanic, Marcel Constum, mechanic.", "On final approach to Lod Airport, the aircraft stalled and crashed short of runway. All three crew members were unhurt while the aircraft was damaged beyond repair. It appears that two engines were inoperative at the time of the accident, maybe following fuel starvation ? Israel authorities reported that the aircraft was on a delivery flight from the UK and that nor the crew nor the operator received any permission to land in Israel.", "This version was an electronic reconnaissance aircraft used in Arctic conditions. It crashed into Lake Mead, during a research flight. The crew of five was able to scramble away before the plane sank. It has been located by sonar in 170 feet of water, largely intact except for 3 missing engines (number two, three and four). The flight was for a secret missile guidance system that allowed navigation by tracking of the Sun. A low pass over calm water with pilot error put it into the lake. The aircraft plummeted from high altitude down to as close to the lake as possible. Unfortunately, Captain Robert M. Madison lost his depth perception and plowed the huge plane into the lake at 230 mph. The impact tore off all but one of the engines and sent the plane skipping along the lake surface. When she eventually stopped, she began to take on water and started to sink. Fortunately, all of the crew was able to escape into life rafts and wait for rescue. Source: http://www.advanceddivermagazine.com/articles/B29/B29.html", "The crew was engaged in a maritime patrol flight over the North Sea. While flying over Scotland, the crew encountered poor visibility when the twin engine aircraft hit the slope of a mountain near Auchenblae. All six crew members were killed.", "After landing, the aircraft failed to stop within the remaining runway, overran and hit some rocks. While there were no casualties, the aircraft was damaged beyond repair. For unknown reason, the aircraft landed too far down the runway.", "En route, the crew encountered an unexpected situation and was forced to attempt an emergency landing in Hinojosa del Duque. The aircraft crash landed in a field and came to rest in flames. All ten occupants were injured while the aircraft was destroyed by fire.", "The aircraft left Port-Menier, Anticosti Island, on a charter flight to Gasp\u00e9, carrying two pilots and 27 people, most of them employees of the Consolidated Paper Company. The approach to Gasp\u00e9 Airport was started from the east in foggy conditions. While flying too low, the aircraft hit some trees, stalled and crashed in a wooded area located near Cap-des-Rosiers, about 20 km east of Gasp\u00e9 Airport. Rescuers arrived on the scene few hours later and all 29 occupants were killed. Crew: Emerson Mills, pilot, Ross Miles, copilot. Passengers: Germain Jean, Elle Godin, Camille Furgesson, Jean Laflamme, Lawrence Travers, Mathias Cote, Henri Tardif, Rolland Denis, Alphonse Veer, Ren\u00e9 Blais, Alfred Desjardins, Rodolphe Gendreau, Roger Gendreau, Hughes Prouix, James Travers, G\u00e9rard Despr\u00e9s, Harris Gleeton, Eddy Bouchard, Julien Fynott, Mr. and Mrs. Berth McCallum and son, Joseph Gauvin, Romuald Dufresne, Clarimond Fournier, Mr. and Mrs. Emmett Maloney.", "On approach to Fassberg AFB, an engine caught fire. On landing, an undercarriage collapsed and the aircraft veered off runway and came to rest in flames. While all three crew members were unhurt, the aircraft was destroyed by fire.", "On final approach to Berlin-Tempelhof Airport, taking part to the Berlin Airlift, the twin engine aircraft hit the roof of a building and crashed in flames in the adjacent street located in the suburb of Friedenau. Both crewmen were killed while three people on the ground were injured. The aircraft was destroyed by impact forces and a post crash fire.", "After takeoff, while climbing in thunderstorm activity, the aircraft went out of control and crashed in to the sea. All six crew members were killed.", "During the takeoff roll, the four engine aircraft went out of control, veered off runway, lost its undercarriage and came to rest. There were no casualties but the aircraft was written off.", "Just after liftoff, the twin engine aircraft stalled and crashed in flames. All 14 occupants were quickly rescued while the aircraft was destroyed by a post crash fire. The crew was completing a flight from Belgian Congo to Brussels via Sudan.", "Shortly after takeoff from Paris-Le Bourget Airport, the four engine aircraft christened 'Keroual' crashed in unknown circumstances in Aubervilliers, south of the airport. All three crew members were slightly injured while the aircraft was damaged beyond repair.", "Crashed shortly after takeoff from Melun-Villaroche Airport while on a test flight. The crew fate remains unknown.", "On landing off Kittigazuit, the seaplane hit rocks and sank rapidly. There were no casualties but the aircraft was lost.", "The approach to Buenos Aires harbor was completed in foggy conditions. The seaplane hit the water surface and crashed in the River Plate. Six passengers were injured while 18 other occupants were killed. Few hours later, two survivors died from their injuries.", "Shortly after takeoff, while climbing to a height of 100 meters, the aircraft went out of control and crashed near the runway end. Five passengers and a crew member were seriously injured while 18 other occupants were killed.", "En route to RAF Northolt, the crew encountered technical problem with the right engine and was forced to shut it down and to feather its propeller. As the aircraft was unable to maintain the prescribed altitude, the crew decided to divert to Sywell. On final approach, the aircraft was misaligned and overflew the runway at low height before colliding with power cables. Out of control, it crashed in a field and came to rest. All 19 occupants were slightly injured while the aircraft was damaged beyond repair.", "Crashed in unknown circumstances. Crew fate unknown.", "On approach to Turukhansk, the wind was gusting to 43 km/h. Waves up to 50 cm were spotted in the Enisey River. On landing, the seaplane hit three successive waves and plunged into the water. The cockpit separated from the rest of the fuselage, the aircraft came to rest and sank. Three passengers, two women and one child, were killed while 17 other occupants were rescued, five of them seriously injured. The aircraft was a total loss.", "The crew was performing a flight from Fort-de-France, Martinique, to Paris, with an intermediate stop in Port-Etienne, Mauritania. While cruising by night over the Atlantic Ocean, about 1,920 km from Port-Etienne (now Nouadhibou), the aircraft crashed into the ocean in unknown circumstances at 2355LT. No message was sent by the crew. SAR operations were jointly conducted by several countries and few debris were found by the crew of USS Campbell three days later, on August 4. Unfortunately, none of the 52 occupants survived the crash of this six-engine aircraft christened 'Henri Guillaumet'. Crew: Corentin Kersual, pilot, Jean Goutay, copilot, Henri Gloux, radio navigator, Gontran Ronat, radio navigator, Henri Cabanes, navigator, Gaston Le Morvan, mechanic, Jean Coustaline, mechanic, Alfred Jaggi, mechanic, Mr. Arbelot, mechanic, Mr. Sgourdeos, steward, Mr. Meunier, steward.", "The crew was completing a cargo flight from Chaklala Airport in Islamabad, carrying a load of military goods. On final approach to Mauripur Airport, while at an altitude of 300 feet, the aircraft pitched up and down and then went into a nose down attitude. Out of control, it plunged into the earth and crashed in a near vertical angle near the runway 22 threshold. The aircraft was destroyed and all four crew members were killed.", "Shortly after takeoff from Berlin-Gatow Airport, the crew reported technical problems and received the permission to return for an emergency landing. On touchdown, the undercarriage collapsed. The aircraft slid for several yards and came to rest. All three crew members were unhurt while the aircraft was considered as damaged beyond repair.", "The crew was descending to Opa Locka Airport when the aircraft collided with a Stearman while 11 miles north of Miami. Both aircraft dove into the ground and crashed. While both occupants of the Stearman were able to bail out and were found alive, all 10 crew members of the R4D-6 inbound from Norfolk NAS were killed. The exact circumstances and causes of the in flight collision remains unknown.", "About 15 minutes after takeoff from Blenheim-Woodbourne Airport, while on a cargo flight to Paraparaumu, the crew encountered poor weather conditions. The aircraft hit the slope of a mountain located in Rununder Point, near Port Underwood, 32 km northeast of Blenheim. Both pilots were killed. Crew: Murdo McLeod, R. J. R. H. Makgill.", "En route, the crew informed ATC that the engine number four failed. He received the permission to divert to RAF Desford to attempt an emergency landing. To lower the risk of fire, the crew decided to shut down the engine number three and feathered the propeller as well. Due to a loss of speed, the aircraft was unable to maintain a safe altitude. During the last segment, the aircraft stalled and hit violently the runway surface. On impact, the aircraft broke in two and came to rest in flames. All four crew members were evacuated safely while the aircraft was destroyed.", "Shortly after a night takeoff from Roswell Airport, while in initial climb, the aircraft went out of control and crashed in a huge explosion six miles south of the airfield. Eight crew members were injured while 13 others were killed. It was reported that the aircraft may have been overloaded. Crew killed were: Maj Joe O. Will Jr., pilot, Cpt Richard W. Hunsicker, M/Sgt James L. Brewer, Sgt Clyde N. Vanderslice, Sgt Earl P. Boley, Cpl Richard L. Lighthall, Cpl Gordon E. McNeill, Cpl Wayne O. Werkchiser, Pfc John J. Capitan, Pfc Maurice Harris, Pvt Kenneth Ruohonen, Sgt Charles R. Jackson, Pfc Norman J. Remy.", "On final approach to Sydney, the aircraft was too low and hit an earth mound short of the runway threshold. On impact, an undercarriage punctured a fuel tank and a fire erupted. The aircraft landed safely but came to rest in flames and was damaged beyond repair. All 17 occupants were unhurt.", "The crew was completing a short flight from Agana NAS to Rota Island. On final approach to runway 27, in poor weather conditions, the aircraft was too low and hit a cliff located about 2 miles from the runway threshold. All 12 crew members were killed. Crew: Lt Thomas C. O'Connor, Russell G. Delany, Walter R. Delaney, Charles D. Rudolph, Trafton R. Lee, John A. Beland, Carl H. Christensen, Charles G. Degarimore, Clarence Pinkerton, Paul D. McDonald, Lt William L. Wise, Frederick A. Earle Chaero.", "After touchdown on runway 27R at Tempelhof Airport, the aircraft was unable to stop within the remaining distance, overran, hit a wooded fence and came to rest in flames. All four crew members were unhurt while the aircraft was partially destroyed by fire. The crew was taking part to the Berlin Airlift.", "On landing, the aircraft overturned and came to rest upside down. The pilot, sole on board, was unhurt while the aircraft was damaged beyond repair.", "Shortly after takeoff from Ellsworth AFB, while in initial climb, the aircraft went out of control and crashed in a huge explosion in a prairie located 5 miles north of the airfield. All 17 occupants were killed.", "The crew was involved in a training mission and was in charge to locate an appropriate dropping zone for paratroopers. While flying at an estimated height of few hundred yards, the crew realized that smoke was coming out from the right engine. Few seconds later, the aircraft banked right, dove into the ground and crashed in a prairie. All five crew members were killed.", "The aircraft left Prague-Kbely Airport in the early morning with a crew of three and three engineers on board, bound for Liberec where they should take part to a meeting. While descending to Liberec in poor weather conditions (heavy rain falls), the twin engine aircraft hit the slope of Mt Je\u0161ted few meters below the top and came to rest in flames. Two passengers were seriously injured and evacuated to a local hospital while four other occupants were killed. Six days later, one of the survivor died from his injuries. The visibility was very limited due to heavy rain falls and low ceiling. Crew: V\u00e1clav Barborka, pilot, Jan Padouch, radio operator, Josef Kroul\u00edk, navigator. Passengers: Anton\u00edn Husn\u00edk (survived but died 6 days later), Vladim\u00edr Karmaz\u00edn, killed, V\u00e1clav Brabec, survived.", "On the leg from Maiquet\u00eda to Las Piedras, while on a cargo flight to Maracaibo, the aircraft crashed in unknown circumstances into the Caribbean Sea, off the Venezuelan coast. No trace of the aircraft nor the crew was found.", "The crew was completing a training sortie in RAF Kinloss. The final approach was completed in heavy cross winds (up to 50 knots) and during the last segment, the captain decided to abandon the landing procedure and started a go around maneuver. During initial climb, while at a height of 250 feet, the four engine aircraft went out of control and crashed in a huge explosion. All eight crew members were killed.", "Shortly after takeoff from Barbers Point NAS, bound for Kadena via Kwajalein, the pilot informed ground that an engine failed and elected to return. ATC guided the crew to Hickam Field in Honolulu and eight minutes later, while on approach, the airplane overshot so the pilot-in-command decided to make a go around when control was lost. The airplane crashed in flames and skidded for about 600 yards before coming to rest in flames. Sixteen crew members were killed while four others were injured.", "The crew was performing a cargo flight from Berlin-Tempelhof to the airbase of Wiesbaden-Erbenheim, taking part to the Berlin Airlift. While cruising in a reduced visibility due to foggy conditions, the aircraft collided with a USAF Douglas C-47A-90-DL registered 43-16036 and carrying also a crew of two and conducting the same operation from Berlin to Wiesbaden. Following the collision, both aircraft dove into the ground. The first crashed about 100 yards south of the city of Ravolzhausen while the second crashed about one km northwest of the same city. All four crew members on both aircraft were killed."], "data": [1, 10, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Circumstances", "count": 486, "min": "\"After takeoff from Lae-Nadzab Airport, while climbing vertical to the Huon Gulf, the right engine failed, followed shortly later by the left engine. The pilot reduced his altitude and ditched the aircraft off Lae. All three occupants were quickly rescued by a fisherman while the aircraft was lost. Testimony from the passenger: \"\"I had the day off and Johnny Rose was doing a trip to Kokoda and Popondetta. I'd never been there and when he offered me a seat I jumped at it. He had another passenger on board", "max": "While taxiing, the twin engine aircraft swung due to heavy winds, lost its undercarriage and came to rest. There were no casualties but the aircraft was damaged beyond repair."}, {"values": {"label": ["Technical failure", "Unknown", "Weather", "Human factor", "Other causes", "Terrorism act, Hijacking, Sabotage"], "data": [126, 296, 26, 47, 4, 1]}, "label": "Crash cause", "count": 6, "min": "Human factor", "max": "Weather"}, {"values": {"label": ["305.0"], "data": [500]}, "label": "Date_stringindexer_transform", "count": 1, "min": "0.0", "max": "304.0"}, {"values": {"label": ["0.0 - 12.4", "12.4 - 24.8", "24.8 - 37.2", "37.2 - 49.6", "49.6 - 62.0", "62.0 - 74.4", "74.4 - 86.8", "86.8 - 99.2", "99.2 - 111.6", "111.6 - 124.0"], "data": [458, 5, 2, 0, 4, 5, 0, 1, 4, 1]}, "label": "Time_stringindexer_transform", "count": 10, "min": 0.0, "max": 124.0}, {"values": {"label": ["71.0 - 71.0"], "data": [500]}, "label": "Aircraft_stringindexer_transform", "count": 1, "min": 71.0, "max": 71.0}, {"values": {"label": ["2.0 - 14.1", "14.1 - 26.2", "26.2 - 38.3", "38.3 - 50.4", "50.4 - 62.5", "62.5 - 74.6", "74.6 - 86.7", "86.7 - 98.8", "98.8 - 110.9", "110.9 - 123.0"], "data": [71, 1, 3, 1, 2, 2, 3, 1, 0, 416]}, "label": "Operator_stringindexer_transform", "count": 10, "min": 2.0, "max": 123.0}, {"values": {"label": ["0.0 - 46.8", "46.8 - 93.6", "93.6 - 140.4", "140.4 - 187.2", "187.2 - 234.0", "234.0 - 280.8", "280.8 - 327.6", "327.6 - 374.4", "374.4 - 421.2", "421.2 - 468.0"], "data": [43, 0, 0, 1, 0, 0, 0, 0, 0, 0]}, "label": "Registration_stringindexer_transform", "count": 10, "min": 0.0, "max": 468.0}, {"values": {"label": ["2", "0", "1", "3"], "data": [114, 264, 95, 27]}, "label": "Flight phase_stringindexer_transform", "count": 4, "min": "0", "max": "3"}, {"values": {"label": ["0.0 - 1.8", "1.8 - 3.6", "3.6 - 5.4", "5.4 - 7.2", "7.2 - 9.0", "9.0 - 10.8", "10.8 - 12.6", "12.6 - 14.4", "14.4 - 16.2", "16.2 - 18.0"], "data": [258, 132, 58, 23, 7, 8, 5, 4, 4, 1]}, "label": "Flight type_stringindexer_transform", "count": 10, "min": 0.0, "max": 18.0}, {"values": {"label": ["0", "2", "1"], "data": [306, 28, 166]}, "label": "Survivors_stringindexer_transform", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["0.0", "1.0", "4.0", "2.0", "3.0", "6.0", "5.0"], "data": [246, 168, 8, 58, 12, 3, 5]}, "label": "Crash site_stringindexer_transform", "count": 7, "min": "0.0", "max": "6.0"}, {"values": {"label": ["0.0 - 31.0", "31.0 - 62.0", "62.0 - 93.0", "93.0 - 124.0", "124.0 - 155.0", "155.0 - 186.0", "186.0 - 217.0", "217.0 - 248.0", "248.0 - 279.0", "279.0 - 310.0"], "data": [220, 31, 31, 31, 31, 31, 31, 31, 31, 32]}, "label": "Schedule_stringindexer_transform", "count": 10, "min": 0.0, "max": 310.0}, {"values": {"label": ["160.0", "0.0", "94.0", "134.0", "22.0", "1.0", "65.0"], "data": [377, 117, 1, 2, 1, 1, 1]}, "label": "MSN_stringindexer_transform", "count": 7, "min": "0.0", "max": "160.0"}, {"values": {"label": ["0.0", "5.0", "1.0", "2.0", "3.0", "6.0", "4.0"], "data": [330, 4, 68, 56, 24, 2, 16]}, "label": "YOM_stringindexer_transform", "count": 7, "min": "0.0", "max": "7.0"}, {"values": {"label": ["0"], "data": [500]}, "label": "Flight number_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["4.0 - 48.2", "48.2 - 92.4", "92.4 - 136.6", "136.6 - 180.8", "180.8 - 225.0", "225.0 - 269.2", "269.2 - 313.4", "313.4 - 357.6", "357.6 - 401.8", "401.8 - 446.0"], "data": [16, 2, 0, 9, 3, 1, 0, 3, 2, 464]}, "label": "Crash location_stringindexer_transform", "count": 10, "min": 4.0, "max": 446.0}, {"values": {"label": ["0.0 - 4.2", "4.2 - 8.4", "8.4 - 12.6", "12.6 - 16.8", "16.8 - 21.0", "21.0 - 25.2", "25.2 - 29.4", "29.4 - 33.6", "33.6 - 37.8", "37.8 - 42.0"], "data": [209, 21, 9, 43, 23, 32, 7, 14, 8, 134]}, "label": "Country_stringindexer_transform", "count": 10, "min": 0.0, "max": 42.0}, {"values": {"label": ["0.0", "1.0", "3.0", "6.0", "2.0", "7.0", "4.0", "5.0"], "data": [237, 210, 13, 4, 20, 1, 9, 6]}, "label": "Region_stringindexer_transform", "count": 8, "min": "0.0", "max": "7.0"}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [103, 188, 2, 196, 1, 1, 0, 0, 0, 9]}, "label": "Crew on board_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0", "3.0", "1.0", "4.0", "7.0", "2.0", "5.0"], "data": [241, 50, 37, 46, 46, 60, 20]}, "label": "Crew fatalities_stringindexer_transform", "count": 7, "min": "0.0", "max": "7.0"}, {"values": {"label": ["0.0 - 3.9", "3.9 - 7.8", "7.8 - 11.7", "11.7 - 15.6", "15.6 - 19.5", "19.5 - 23.4", "23.4 - 27.3", "27.3 - 31.2", "31.2 - 35.1", "35.1 - 39.0"], "data": [356, 39, 30, 22, 17, 14, 8, 6, 4, 4]}, "label": "Pax on board_stringindexer_transform", "count": 10, "min": 0.0, "max": 39.0}, {"values": {"label": ["0.0", "16.0", "3.0", "2.0", "13.0", "1.0", "10.0", "5.0"], "data": [460, 2, 5, 18, 2, 9, 1, 3]}, "label": "PAX fatalities_stringindexer_transform", "count": 8, "min": "0.0", "max": "16.0"}, {"values": {"label": ["0", "1"], "data": [499, 1]}, "label": "Other fatalities_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["486.0", "344.0", "0.0", "198.0"], "data": [455, 16, 24, 5]}, "label": "Circumstances_stringindexer_transform", "count": 4, "min": "0.0", "max": "485.0"}, {"values": {"label": ["0.0 - 1.9", "1.9 - 3.8", "3.8 - 5.7", "5.7 - 7.6", "7.6 - 9.5", "9.5 - 11.4", "11.4 - 13.3", "13.3 - 15.2", "15.2 - 17.1", "17.1 - 19.0"], "data": [324, 141, 21, 2, 2, 2, 2, 2, 2, 2]}, "label": "Crash cause_stringindexer_transform", "count": 10, "min": 0.0, "max": 19.0}]}, "selectedFE": [{"transformationsData": [{"feature_label": "Date", "transformation_label": "String Indexer"}], "feature": "Date", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "1/10/1923", "max": "9/9/1921", "missing": "0", "distinct": "305"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Date"}, {"transformationsData": [{"feature_label": "Time", "transformation_label": "String Indexer"}], "feature": "Time", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "10H 0M 0S", "max": "NA", "missing": "0", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Time"}, {"transformationsData": [{"feature_label": "Aircraft", "transformation_label": "String Indexer"}], "feature": "Aircraft", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Aeromarine 40", "max": "Wild WT-S", "missing": "0", "distinct": "96"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Aircraft"}, {"transformationsData": [{"feature_label": "Operator", "transformation_label": "String Indexer"}], "feature": "Operator", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "AVENSA - Aerovias Venezolanas", "max": "Waite Fisheries", "missing": "0", "distinct": "123"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Operator"}, {"transformationsData": [{"feature_label": "Registration", "transformation_label": "String Indexer"}], "feature": "Registration", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "1302.53", "stddev": "5524.09", "min": "103", "max": "V-201", "missing": "0", "distinct": "454"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Registration"}, {"transformationsData": [{"feature_label": "Flight phase", "transformation_label": "String Indexer"}], "feature": "Flight phase", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Flight", "max": "Taxiing", "missing": "0", "distinct": "6"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Flight phase"}, {"transformationsData": [{"feature_label": "Flight type", "transformation_label": "String Indexer"}], "feature": "Flight type", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Aerial photography", "max": "Training", "missing": "0", "distinct": "18"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Flight type"}, {"transformationsData": [{"feature_label": "Survivors", "transformation_label": "String Indexer"}], "feature": "Survivors", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "NA", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Survivors"}, {"transformationsData": [{"feature_label": "Crash site", "transformation_label": "String Indexer"}], "feature": "Crash site", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Airport (less than 10 km from airport)", "max": "Plain, Valley", "missing": "0", "distinct": "7"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crash site"}, {"transformationsData": [{"feature_label": "Schedule", "transformation_label": "String Indexer"}], "feature": "Schedule", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Abu Sueir - Abu Sueir", "max": "Wright Patterson AFB-Wright Patterson AFB", "missing": "0", "distinct": "311"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Schedule"}, {"transformationsData": [{"feature_label": "MSN", "transformation_label": "String Indexer"}], "feature": "MSN", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "81024.0", "stddev": "1084425.62", "min": "1", "max": "SH.915", "missing": "0", "distinct": "160"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "MSN"}, {"transformationsData": [{"feature_label": "YOM", "transformation_label": "String Indexer"}], "feature": "YOM", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "1919.92", "stddev": "1.06", "min": "1918", "max": "NA", "missing": "0", "distinct": "29"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "YOM"}, {"transformationsData": [{"feature_label": "Flight number", "transformation_label": "String Indexer"}], "feature": "Flight number", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "NA", "max": "NA", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Flight number"}, {"transformationsData": [{"feature_label": "Crash location", "transformation_label": "String Indexer"}], "feature": "Crash location", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Abadan Khuzestan", "max": "\u00c7ubuk Central Anatolia Region (I\u00e7 Anadolu B\u00f6lgesi)", "missing": "0", "distinct": "362"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crash location"}, {"transformationsData": [{"feature_label": "Country", "transformation_label": "String Indexer"}], "feature": "Country", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Australia", "max": "Zimbabwe", "missing": "0", "distinct": "42"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Country"}, {"transformationsData": [{"feature_label": "Region", "transformation_label": "String Indexer"}], "feature": "Region", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Africa", "max": "World", "missing": "0", "distinct": "8"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Region"}, {"transformationsData": [{"feature_label": "Crew on board", "transformation_label": "String Indexer"}], "feature": "Crew on board", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "1.02", "stddev": "1.29", "min": "0", "max": "NA", "missing": "0", "distinct": "16"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crew on board"}, {"transformationsData": [{"feature_label": "Crew fatalities", "transformation_label": "String Indexer"}], "feature": "Crew fatalities", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "0.51", "stddev": "1.11", "min": "0", "max": "5", "missing": "0", "distinct": "7"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crew fatalities"}, {"transformationsData": [{"feature_label": "Pax on board", "transformation_label": "String Indexer"}], "feature": "Pax on board", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "5.08", "stddev": "9.45", "min": "0", "max": "9", "missing": "0", "distinct": "11"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Pax on board"}, {"transformationsData": [{"feature_label": "PAX fatalities", "transformation_label": "String Indexer"}], "feature": "PAX fatalities", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "3.09", "stddev": "7.66", "min": "0", "max": "9", "missing": "0", "distinct": "35"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "PAX fatalities"}, {"transformationsData": [{"feature_label": "Other fatalities", "transformation_label": "String Indexer"}], "feature": "Other fatalities", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "0.01", "stddev": "0.22", "min": "0", "max": "5", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Other fatalities"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Total fatalities", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "5.1", "stddev": "8.95", "min": "0", "max": "53", "missing": "0"}, "updatedLabel": "Total fatalities"}, {"transformationsData": [{"feature_label": "Circumstances", "transformation_label": "String Indexer"}], "feature": "Circumstances", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "\"After takeoff from Lae-Nadzab Airport, while climbing vertical to the Huon Gulf, the right engine failed, followed shortly later by the left engine. The pilot reduced his altitude and ditched the aircraft off Lae. All three occupants were quickly rescued by a fisherman while the aircraft was lost. Testimony from the passenger: \"\"I had the day off and Johnny Rose was doing a trip to Kokoda and Popondetta. I'd never been there and when he offered me a seat I jumped at it. He had another passenger on board", "max": "While taxiing, the twin engine aircraft swung due to heavy winds, lost its undercarriage and came to rest. There were no casualties but the aircraft was damaged beyond repair.", "missing": "0", "distinct": "433"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Circumstances"}, {"transformationsData": [{"feature_label": "Crash cause", "transformation_label": "String Indexer"}], "feature": "Crash cause", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Human factor", "max": "Weather", "missing": "0", "distinct": "20"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Crash cause"}], "autoFE_flag": true}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "modeltrainingpercent": "100", "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}, "_id": "665e04f9a0338a49680b1522"}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "Total fatalities", "alias": "Total fatalities", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "Date_stringindexer", "alias": "Date_stringindexer", "type": "real", "position": 1}, {"inherited": true, "checked": true, "field": "Time_stringindexer", "alias": "Time_stringindexer", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "Aircraft_stringindexer", "alias": "Aircraft_stringindexer", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Operator_stringindexer", "alias": "Operator_stringindexer", "type": "real", "position": 4}, {"inherited": true, "checked": true, "field": "Registration_stringindexer", "alias": "Registration_stringindexer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "Flight phase_stringindexer", "alias": "Flight phase_stringindexer", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "Flight type_stringindexer", "alias": "Flight type_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "Survivors_stringindexer", "alias": "Survivors_stringindexer", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "Crash site_stringindexer", "alias": "Crash site_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "Schedule_stringindexer", "alias": "Schedule_stringindexer", "type": "real", "position": 10}, {"inherited": true, "checked": true, "field": "MSN_stringindexer", "alias": "MSN_stringindexer", "type": "real", "position": 11}, {"inherited": true, "checked": true, "field": "YOM_stringindexer", "alias": "YOM_stringindexer", "type": "real", "position": 12}, {"inherited": true, "checked": true, "field": "Flight number_stringindexer", "alias": "Flight number_stringindexer", "type": "numeric", "position": 13}, {"inherited": true, "checked": true, "field": "Crash location_stringindexer", "alias": "Crash location_stringindexer", "type": "real", "position": 14}, {"inherited": true, "checked": true, "field": "Country_stringindexer", "alias": "Country_stringindexer", "type": "real", "position": 15}, {"inherited": true, "checked": true, "field": "Region_stringindexer", "alias": "Region_stringindexer", "type": "real", "position": 16}, {"inherited": true, "checked": true, "field": "Crew on board_stringindexer", "alias": "Crew on board_stringindexer", "type": "real", "position": 17}, {"inherited": true, "checked": true, "field": "Crew fatalities_stringindexer", "alias": "Crew fatalities_stringindexer", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "Pax on board_stringindexer", "alias": "Pax on board_stringindexer", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "PAX fatalities_stringindexer", "alias": "PAX fatalities_stringindexer", "type": "real", "position": 20}, {"inherited": true, "checked": true, "field": "Other fatalities_stringindexer", "alias": "Other fatalities_stringindexer", "type": "numeric", "position": 21}, {"inherited": true, "checked": true, "field": "Circumstances_stringindexer", "alias": "Circumstances_stringindexer", "type": "real", "position": 22}, {"inherited": true, "checked": true, "field": "Crash cause_stringindexer", "alias": "Crash cause_stringindexer", "type": "real", "position": 23}], "actual_schema": [{"inherited": true, "checked": true, "field": "Date", "alias": "Date", "type": "date", "position": 0}, {"inherited": true, "checked": true, "field": "Time", "alias": "Time", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Aircraft", "alias": "Aircraft", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "Operator", "alias": "Operator", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "Registration", "alias": "Registration", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Flight phase", "alias": "Flight phase", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Flight type", "alias": "Flight type", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "Survivors", "alias": "Survivors", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Crash site", "alias": "Crash site", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "Schedule", "alias": "Schedule", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "MSN", "alias": "MSN", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "YOM", "alias": "YOM", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "Flight number", "alias": "Flight number", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "Crash location", "alias": "Crash location", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "Country", "alias": "Country", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "Region", "alias": "Region", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "Crew on board", "alias": "Crew on board", "type": "String", "position": 16}, {"inherited": true, "checked": true, "field": "Crew fatalities", "alias": "Crew fatalities", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "Pax on board", "alias": "Pax on board", "type": "String", "position": 18}, {"inherited": true, "checked": true, "field": "PAX fatalities", "alias": "PAX fatalities", "type": "String", "position": 19}, {"inherited": true, "checked": true, "field": "Other fatalities", "alias": "Other fatalities", "type": "String", "position": 20}, {"inherited": true, "checked": true, "field": "Total fatalities", "alias": "Total fatalities", "type": "numeric", "position": 21}, {"inherited": true, "checked": true, "field": "Circumstances", "alias": "Circumstances", "type": "String", "position": 22}, {"inherited": true, "checked": true, "field": "Crash cause", "alias": "Crash cause", "type": "String", "position": 23}], "selected_schema": [], "created_at": "2024-06-03 18:01:29.588000", "originalcount": 28536, "samplecount": 2825, "samplefile": "/FileStore/platform/sampleData/665e04f9a0338a49680b1521/part-00000-c58812fc-c031-48a7-af86-b5a660ca85b6-c000.csv", "joinSchema": [], "updated_at": "2024-06-03 18:14:03.004000", "__v": 0, "datacache": 0, "sampleData": [{"Date": "5/2/1918", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Signal Corps - USSC", "Registration": "AS-32084", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Dayton - Dayton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Dayton-McCook Field Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The single engine airplane departed Dayton-McCook Field for a local test flight. Shortly after takeoff, the aircraft stalled and crashed, killing both occupants. Crew: Maj Oscar Brindley, Lt Col Henry Damm.", "Crash cause": "Technical failure"}, {"Date": "6/8/1918", "Time": "NA", "Aircraft": "Handley Page V/1500", "Operator": "Handley Page Aircraft Company Ltd", "Registration": "E4104", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cricklewood - Cricklewood", "MSN": "NA", "YOM": "1918", "Flight number": "NA", "Crash location": "Cricklewood London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Assembled at Cricklewood Airfield in May 1918, the aircraft departed Cricklewood for its 13th test flight, carrying six crew members. Shortly after takeoff, while climbing to a height of about 700-800 feet, all four engines stopped. The pilot elected to return for an emergency landing when the aircraft stalled and crashed in a field located in front of 21 Garrick Avenue in Golders Green, bursting into flames. Colonel Ogilvie, who was seating in the tail gunner position at the back of the plane, survived, while all five other occupants were killed. Crew: Cpt Vernon Earl George Busby, pilot, \u2020 Mr. Bertram G. Cooper, \u2020 Mr. R. P. Cooper, \u2020 Mr. W. H. Hathaway, \u2020 Mr. J. W. Windebank, \u2020 Colonel Ogilvie.", "Crash cause": "Technical failure"}, {"Date": "3/10/1919", "Time": "NA", "Aircraft": "Handley Page H.P.12", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-62447", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Elizabeth New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on a river bank near Elizabeth, NJ, following an engine failure.", "Crash cause": "Technical failure"}, {"Date": "3/18/1919", "Time": "NA", "Aircraft": "Handley Page H.P.12", "Operator": "Royal Air Force - RAF", "Registration": "D8340", "Flight phase": "Landing (descent or approach)", "Flight type": "Aerial photography", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Castle Bromwich - Castle Bromwich", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Castle Bromwich West Midlands", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The twin engine airplane was returning to Castle Bromwich following an aerial photography mission. Upon landing, the pilot encountered strong crosswinds when the aircraft slipped into the ground, crashed and came to rest with its nose stuck in the ground. All five occupants evacuated safely while the aircraft was damaged beyond repair.", "Crash cause": "Weather"}, {"Date": "4/15/1919", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "U.S. Air Mail Service", "Registration": "3", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Newark Delaware", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While flying in poor weather conditions, the aircraft impacted trees and crashed in a wooded area located 3 miles north of Newark. Crew fate unknown.", "Crash cause": "Weather"}, {"Date": "8/6/1919", "Time": "NA", "Aircraft": "Avro 536", "Operator": "Avro Air Transport", "Registration": "G-EAAO", "Flight phase": "Landing (descent or approach)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Hounslow Heath \u2013 Sandhurst", "MSN": "ATC.4", "YOM": "1919", "Flight number": "NA", "Crash location": "Sandhurst Berkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Following an uneventful flight from Hounslow Heath, the single engine airplane was approaching Sandhurst Airfield when it stalled and crashed. All three passengers were injured and the pilot was killed. Crew: Cpt Herbert Richard Hastings. Passengers: Maj H. S. Phillips, Mr. E. Kohler, Mr. A. J. Whittingdon.", "Crash cause": "Unknown"}, {"Date": "8/21/1919", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Avro Air Transport", "Registration": "G-EAGO", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "D9343", "YOM": "1919", "Flight number": "NA", "Crash location": "Southport Merseyside", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was forces to attempt an emergency landig for unknown reasons. The aircraft crashed in a field near Southpoer and was damaged beyond repair. The pilot was injured.", "Crash cause": "Unknown"}, {"Date": "9/20/1919", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "SC-24269", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Marfa Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft crashed upon landing at Marfa Airport. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "10/17/1919", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-30547", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coronado California", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft crashed on landing at Coronado-Rockwell Field, CA. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "3/5/1920", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "SC-23961", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Fort Sill-Henry Post Field AFB Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in the Fort Sill Reserve, some five km southwest of the airbase. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "3/6/1920", "Time": "NA", "Aircraft": "Farman F.40", "Operator": "Martin Seidler", "Registration": "CH-16", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Porrentruy - Porrentruy", "MSN": "3437", "YOM": "1919", "Flight number": "NA", "Crash location": "Porrentruy Jura", "Country": "Switzerland", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Martin Seidler, sole on board, was completing a local flight in Porrentruy when he lost control of the airplane that crashed in a field. The pilot escaped uninjured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "3/24/1920", "Time": "NA", "Aircraft": "Junkers-Larsen JL-6 (Junkers F.13)", "Operator": "Junkers-Larsen", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Demonstration", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Roosevelt Field - Roosevelt Field", "MSN": "536", "YOM": "1920", "Flight number": "NA", "Crash location": "Roosevelt Field New York", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Emil Monz was performing a demonstration flight at Roosevelt Field Airport. Shortly after take off, while climbing to a height of about 100 feet, the propeller disintegrated. The pilot attempted an emergency landing when the aircraft crashed near the runway. The pilot evacuated safely and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "3/26/1920", "Time": "NA", "Aircraft": "Handley Page H.P.12", "Operator": "Royal Air Force - RAF", "Registration": "E9744", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "El Qantara Ismailia", "Country": "Egypt", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff. Crew faite unknown.", "Crash cause": "Unknown"}, {"Date": "3/31/1920", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Handley Page Transport", "Registration": "G-EAHW", "Flight phase": "Flight", "Flight type": "Aerial photography", "Survivors": "Yes", "Crash site": "City", "Schedule": "Cricklewood - Biggin Hill", "MSN": "E3364", "YOM": "1919", "Flight number": "NA", "Crash location": "Southwark Park London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Cricklewood on a flight to Biggin Hill for an aerial photography mission on behalf of Aerofilms Ltd, carrying one photographer and one pilot. En route, the pilot encountered technical problems and elected to make an emergency landing in Southwark Park. The aircraft crashed in a small lake and was damaged beyond repair. Both occupants escapes uninjured.", "Crash cause": "Technical failure"}, {"Date": "4/1/1920", "Time": "NA", "Aircraft": "Handley Page H.P.12", "Operator": "Royal Air Force - RAF", "Registration": "F302", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Desert", "Schedule": "Khartoum - Cairo", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abu Hamad River Nile (<U+0648><U+0644><U+0627><U+064A><U+0629> <U+0646><U+0647><U+0631> <U+0627><U+0644><U+0646><U+064A><U+0644>)", "Country": "Sudan", "Region": "Africa", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The twin engine aircraft departed Khartoum on a flight to Cairo. En route, the airplane suffered a structural failure and crashed near Abu Hamad, about 450 km north of Khartoum, bursting into flames. All four occupants were killed. Crew: F/O John Barclay Jaques, F/O Desmond Wilkie Sibley, Sgt Edmund West Wadey, AC2 Reginald Colin Meldrum.", "Crash cause": "Unknown"}, {"Date": "4/29/1920", "Time": "NA", "Aircraft": "Farman F.40", "Operator": "Compa\u00f1ia Colombiana de Navegaci\u00f3n A\u00e9rea", "Registration": "Cartagena", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Barranquilla - Barranquilla", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Barranquilla Atl\u00e1ntico", "Country": "Colombia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The aircraft was performing a local flight with three passengers and one pilot on board. Shortly after takeoff, while climbing to a height of about 100 metres, the aircraft was caught by a strong wind, rolled to the left and hit the ground. While all three passengers were seriously injured, the pilot was killed. They were completing their first flight. Crew: Jacques Jourdanet, pilot. Passengers: Mrs. Pepa Restrepo de V\u00e1squez and her both sons.", "Crash cause": "Weather"}, {"Date": "4/30/1920", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Vickers-Armstrongs Ltd", "Registration": "G-EACV", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Joyce Green - Brooklands", "MSN": "E4233", "YOM": "1919", "Flight number": "NA", "Crash location": "Joyce Green (Dartford) Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a training flight from Joyce Green Airport, in Dartford, Kent, to Brooklands Airport, Weybridge, Surrey. Shortly after take off, he lost control of the aircraft that crashed in a field. While the pilot was injured, the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "7/4/1920", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Central Aircraft Company", "Registration": "G-EAGI", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Twickenham \u2013 Northolt", "MSN": "E4234", "YOM": "1919", "Flight number": "NA", "Crash location": "Twickenham London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Twickenham, while climbing, the pilot encountered technical problems. The aircraft stalled and crashed in a field. Both occupants were injured and the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "7/20/1920", "Time": "NA", "Aircraft": "Farman F.40", "Operator": "Compa\u00f1ia Colombiana de Navegaci\u00f3n A\u00e9rea", "Registration": "Santa Marta", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Cartagena - Barranquilla", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cartagena Bol\u00edvar", "Country": "Colombia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from the bay of Cartagena, while climbing, the engine stopped. The pilot F\u00e9lix Fratoni lost control of the aircraft that lost height and crashed in the sea. The pilot and a passenger were killed while a second passenger was injured. Miguel Araujo, Director of the newspaper 'El Porvenir', was the only survivor.", "Crash cause": "Human factor"}, {"Date": "8/28/1920", "Time": "NA", "Aircraft": "Savoia S.16", "Operator": "Regia Marina Italiana", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2503", "YOM": "NA", "Flight number": "NA", "Crash location": "Kallnach Bern", "Country": "Switzerland", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances, injuring both crew members, Umberto Maddalena and Nanneti.", "Crash cause": "Unknown"}, {"Date": "9/23/1920", "Time": "NA", "Aircraft": "Avro 504", "Operator": "H. W. B. Hansford", "Registration": "G-EAJQ", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "H2587", "YOM": "1919", "Flight number": "NA", "Crash location": "Honiton Devon", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. The aircraft was destroyed and the pilot was injured.", "Crash cause": "Unknown"}, {"Date": "10/2/1920", "Time": "NA", "Aircraft": "Salmson 2.A2", "Operator": "Lignes A\u00e9riennes Lat\u00e9co\u00e8re", "Registration": "F-ALAI", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Toulouse - Barcelona", "MSN": "31", "YOM": "1920", "Flight number": "NA", "Crash location": "Port-Vendres Pyr\u00e9n\u00e9es-Orientales", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a mail flight from Toulouse to Barcelona when the aircraft crashed in unknown circumstances some 5 km north of Cape B\u00e9ar, near Port-Vendres. Crew: Jean Rodier, pilot Marie-Fran\u00e7ois Marty-Mah\u00e9, mechanic.", "Crash cause": "Unknown"}, {"Date": "11/6/1920", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "U.S. Air Mail Service", "Registration": "178", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Salt Lake City \u2013 Cheyenne", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tie Siding Wyoming", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While cruising in poor visibility due to fog, the aircraft hit a mountain near Tie Siding, Wyoming. The pilot J. P. Woodward was killed.", "Crash cause": "Human factor"}, {"Date": "11/22/1920", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYBN", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Camp Borden Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "2/20/1921", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Air Force - RAF", "Registration": "E9691", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Baghdad - Baghdad", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Baghdad Baghdad (<U+0628><U+063A><U+062F><U+0627><U+062F>)", "Country": "Iraq", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot, sole on board, was completing a local training flight in Baghdad. En route, the engine failed. The pilot elected to make an emergency landing when the aircraft crashed in the Tigre River, near the district of Karrada, in Baghdad. The pilot was injured and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "3/4/1921", "Time": "NA", "Aircraft": "Caproni Ca.60", "Operator": "Caproni Trasporti", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Lake Maggiore - Lake Maggiore", "MSN": "1", "YOM": "1921", "Flight number": "NA", "Crash location": "Lake Maggiore Piedmont", "Country": "Italy", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot, sole on board, was engaged in a test flight on this first prototype equipped with nine wings and eight engines. This flight was the first test of the aircraft which was just built few days earlier. After takeoff from Lake Maggiore, while climbing to a height of 18 meters (some 60 feet), the eaplane stalled and crashed in the lake. The pilot Captain Semprini was slightly injured and the aircraft was destroyed. The project was later abandoned.", "Crash cause": "Unknown"}, {"Date": "4/1/1921", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYBD", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Camp Borden - Camp Borden", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Camp Borden Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "4/2/1921", "Time": "NA", "Aircraft": "Curtiss JN-4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-44864", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Fort Sill - Fort Sill", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Fort Sill-Henry Post Field AFB Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot, sole on board, was completing a local training flight at Fort Sill-Henry Post Field. The engine failed in-flight, forcing the pilot to attempt an emergency landing. The aircraft was damaged beyond repair and the pilot escaped uninjured.", "Crash cause": "Technical failure"}, {"Date": "5/11/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63566", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Fort Sill - Fort Sill", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Fort Sill-Henry Post Field AFB Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "6/12/1921", "Time": "NA", "Aircraft": "Curtiss JN-4", "Operator": "McCall-Hanrahan Air Service", "Registration": "G-CAAH", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Calgary - Calgary", "MSN": "M3100", "YOM": "1920", "Flight number": "NA", "Crash location": "Calgary Alberta", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane was completing a local flight when it crashed in unknown circumstances in Bowness Park, Calgary. The pilot P. J. A. Fleming was injured and the passenger Mr. Alf Mabee was killed.", "Crash cause": "Unknown"}, {"Date": "6/17/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63916", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Oceana NAS (Virgnia Beach) Virginia", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following an engine failure in flight, the pilot was forced to make an emergency landing 10 km from Oceana NAS. Crew fate unknown.", "Crash cause": "Technical failure"}, {"Date": "6/23/1921", "Time": "NA", "Aircraft": "Bl\u00e9riot Spad 27", "Operator": "Compagnie des Messageries A\u00e9riennes - CMA", "Registration": "F-CMAY", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Croydon - Paris", "MSN": "1254", "YOM": "1920", "Flight number": "NA", "Crash location": "Bekesbourne Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Croydon to Paris-Le Bourget, the pilot encountered technical problems and elected to make an emergency landing in Bekesbourne. At low height, the aircraft collided with a telephone line then crashed on the railway road between Bekesbourne and Adisham. All three occupants evacuated safely, only the pilot suffered minor injuries. The aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "7/11/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63690", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "New Point Comfort Virginia", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "7/13/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63525", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Luke Field AFB, Ford Island Hawaii", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after takeoff from Luke AFB, Ford Island, Pearl Harbor, Hawaii. Pilot fate unknown.", "Crash cause": "Technical failure"}, {"Date": "8/10/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63502", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Fort Sill-Henry Post Field AFB Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft collided with a USAAS De Havilland DH.4B registered AS-63129 while taking off from Fort Sill-Henry Post Field AFB. The collision occurred in unknown circumstances and the fate of both crew is also unknown.", "Crash cause": "Unknown"}, {"Date": "11/26/1921", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Stallard Airways", "Registration": "G-EAFQ", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Penshurst - Ashford", "MSN": "E4180", "YOM": "1919", "Flight number": "NA", "Crash location": "Hildenborough Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Showing off to a crowd often leads to embarrassment, as the pilot of an Avro 504 K discovered back in 1921. G-EAFQ was supposed to be flying from Penshurst to Ashford on the afternoon of 26th November - at the controls was Mr. R.H. Leavy, with a Mr. T. Baden-Powell as passenger. After making a short test flight the pilot took off again with the intention of heading for a temporary aerodrome at Ashford. On climbing to about 600 feet in an easterly direction, Leavy commenced a gradual turn to port until the Avro 504 arrived over a football ground on which a game was in progress. The machine was then banked vertically and the pilot, at 400 feet, waved his arm at the spectators. Unfortunately G-EAFQ fell rapidly into a side-slip and only partially recovered before striking the ground about 200 yards outside the touchline. The aircraft was fitted with dual controls - the passenger had not, however, interfered with them in any way. The men scrambled from the wreckage, Mr. Leavy having received nothing worse than cuts to the face, and Mr. Baden-Powell was unhurt.", "Crash cause": "Human factor"}, {"Date": "12/21/1921", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63249", "Flight phase": "NA", "Flight type": "Military", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Stockdale Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "3/31/1922", "Time": "NA", "Aircraft": "De Havilland DH.6", "Operator": "Brompton Motor Company", "Registration": "G-EAWU", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "F3439", "YOM": "1921", "Flight number": "NA", "Crash location": "Isle of Wight Isle of Wight", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft was completing a plaisance flight over the Isle of Wight when it crashed for unknown reasons. Both occupants evacuated safely and the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "5/6/1922", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Grahame-White Aviation", "Registration": "G-EBCL", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "E9227", "YOM": "1922", "Flight number": "NA", "Crash location": "Newport Isle of Wight", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Crashed on takeoff, killing the pilot, sole on board.", "Crash cause": "Unknown"}, {"Date": "5/9/1922", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-63395", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Dallas Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff.", "Crash cause": "Unknown"}, {"Date": "5/17/1922", "Time": "14H 30M 0S", "Aircraft": "Fokker F3", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "H-NABT", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Amsterdam - Rotterdam - Croydon", "MSN": "1532", "YOM": "1921", "Flight number": "NA", "Crash location": "Hythe Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Rotterdam-Waalhaven Airport at 1214LT and the pilot landed at Calais where it stopped for about 45 minutes for weather improvement. While cruising over The Channel and approaching the English coast, the pilot encountered poor visibility due to fog and low clouds. He continued along the shore and arrived in Hythe, Kent, when the aircraft hit a tree and crashed in a field. All four occupants were rescued and one passenger was slightly injured. At the time of the accident, visibility did not exceed 75 yards. Crew: W. Warnaar, pilot.", "Crash cause": "Human factor"}, {"Date": "6/2/1922", "Time": "NA", "Aircraft": "Avro 504", "Operator": "\u00c9cole A\u00e9ro", "Registration": "CH-39", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lausanne - Lausanne", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lausanne-Bl\u00e9cherette Vaud", "Country": "Switzerland", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was completing a local training flight at Lausanne-Bl\u00e9cherette Airport. The single engine airplane crashed in unknown circumstances, killing both occupants Emile Johner and Mr. Glaser.", "Crash cause": "Unknown"}, {"Date": "6/11/1922", "Time": "NA", "Aircraft": "De Havilland DH.4", "Operator": "United States Army Air Service - USAAS", "Registration": "AS-68678", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Augusta Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following an engine failure in flight, the pilot made an emergency landing in an open field. While the pilot was uninjured, the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "7/8/1922", "Time": "7H 0M 0S", "Aircraft": "LVG C.VI", "Operator": "Nederlands-Indische Luchtvaart Onderneming", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Batavia \u2013 Semarang", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Jakarta City District of Jakarta", "Country": "Indonesia", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after takeoff from Antjol in Batavia, the aircraft impacted trees and crashed. A passenger was injured while three other occupants were killed.", "Crash cause": "Unknown"}, {"Date": "7/22/1922", "Time": "NA", "Aircraft": "Hansa Brandenburg W.33", "Operator": "JL Tiedemanns Tobaksfabrik", "Registration": "N.21", "Flight phase": "Flight", "Flight type": "Executive/Corporate/Business", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "7", "YOM": "1922", "Flight number": "NA", "Crash location": "R\u00f8rvik Nord-Tr\u00f8ndelag", "Country": "Norway", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft was performing a regional flight when it crashed in unknown circumstances in the Namsdalen Valley located near R\u00f8rvik. Both occupants were killed. The aircraft was named 'Tiger'.", "Crash cause": "Unknown"}, {"Date": "8/23/1922", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Air Force - RAF", "Registration": "E9910", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Abu Sueir - Abu Sueir", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abu Sueir Ismailia", "Country": "Egypt", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was completing a training sorti at Abu Sueir Airport. While completing a turn at a height of 300 feet, the crew lost control of the airplane that entered a dive and crashed. Both pilots were killed. Crew: F/O F. W. G. Bedford, F/O H. F. Potter.", "Crash cause": "Unknown"}, {"Date": "9/20/1922", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Registration": "D-27", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Goetsenhoven AFB - Goetsenhoven AFB", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Goetsenhoven AFB (Tienen) Flemish Brabant", "Country": "Belgium", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Oscar Dumortier was performing a training mission. On approach to Goetsenhoven AFB located 2 km south of Tienen, the aircraft crashed in an open field located in Outgaarden. The aircraft was destroyed and the pilot killed.", "Crash cause": "Unknown"}, {"Date": "12/3/1922", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-ALNA", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Toulouse - Barcelona - Valencia - Alicante - M\u00e1laga - Rabat", "MSN": "14", "YOM": "1920", "Flight number": "NA", "Crash location": "Fez F\u00e8s-Boulemane", "Country": "Morocco", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Alphonse Gensollen was performing a flight between France and Argentina. While cruising in the region of Fez, he encountered low visibility due to foggy conditions. He reduced his altitude to maintain a visual contact with the ground when the aircraft collided with trees and crashed on a hill. The pilot was killed.", "Crash cause": "Human factor"}, {"Date": "3/17/1923", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Junkers Flugzeug %26 Motorenwerke", "Registration": "D-217", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Albina - Macap\u00e1", "MSN": "633", "YOM": "1922", "Flight number": "NA", "Crash location": "Oiapoque Amap\u00e1", "Country": "Brazil", "Region": "South America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was conducting flights in South America to promote the sale of the Junkers F.13 to local operators. The aircraft departed Albina Airport, Suriname, bound to Macap\u00e1, Brazil. Just after passing the border between French Guyana and Brazil, the crew encountered poor weather conditions and elected to make an emergency landing on the Oiapoque River, near Oiapoque. In unknown circumstances, the aircraft crashed in the river and was damaged beyond repair. While the pilot Drewsky was injured, the mechanic Thill was killed.", "Crash cause": "Weather"}, {"Date": "4/12/1923", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-AEEK", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Oran \u2013 Casablanca", "MSN": "160", "YOM": "1922", "Flight number": "NA", "Crash location": "Casablanca Grand Casablanca", "Country": "Morocco", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "A connecting rod broke in flight, causing the engine to fail. The crew was forced to attempt an emergency landing. While both crew escaped uninjured, the aircraft was destroyed. The radionavigator was Juan Munar.", "Crash cause": "Technical failure"}, {"Date": "5/11/1923", "Time": "NA", "Aircraft": "Junkers-Larsen JL-6 (Junkers F.13)", "Operator": "Roald Amundsen", "Registration": "Elisabeth", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Wainwright - Wainwright", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wainwright Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Oskar Omdal was performing a local test flight on this aircraft named 'Elisabeth'. Shortly after takeoff from Wainwright, the aircraft stalled and crashed in a lagoon. While the pilot was uninjured, the aircraft was damaged beyond repair as a ski was torn off and went through the engine. The aircraft, owned by the Norwegian explorer Roald Amundsen, was performing some tests before an expedition to the Spitzberg archipelago.", "Crash cause": "Technical failure"}, {"Date": "6/23/1923", "Time": "13H 30M 0S", "Aircraft": "Bl\u00e9riot 115", "Operator": "Bl\u00e9riot", "Registration": "F-ESBB", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Le Touquet - Toussus-le-Noble", "MSN": "1", "YOM": "1923", "Flight number": "NA", "Crash location": "Dam\u00e9raucourt Oise", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "After taking part to an airshow in Le Touquet to introduce this new four engine aircraft (first prototype), the crew was returning to his base in Toussus-le-Noble. While cruising at an altitude of 600 metres over Dam\u00e9raucourt, some 4 km north of Grandvilliers, the aircraft went out of control and crashed in the forest of Vieuville. While the mechanic was uninjured, the pilot was killed instantly. The aircraft was named 'Le Mammouth'. Crew: Jean Casale, pilot, Gaston Boulet, mechanic.", "Crash cause": "Technical failure"}, {"Date": "9/10/1923", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Midland Aviation", "Registration": "G-EAGB", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "H5173", "YOM": "1919", "Flight number": "NA", "Crash location": "Evesham Worcestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "10/18/1923", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Brazilian Air Force - Avia\u00e7\u00e3o Militar", "Registration": "2", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Campo dos Afonsos - Campo dos Afonsos", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Campo dos Afonsos AFB Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was completing a local training mission at Campo dos Afonsos AFB when the aircraft crashed in unknown circumstances. A crew member was seriously injured and both other occupants were killed.", "Crash cause": "Unknown"}, {"Date": "5/27/1924", "Time": "NA", "Aircraft": "De Havilland DH.34", "Operator": "Imperial Airways", "Registration": "G-EBBR", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brussels - Ostend - Croydon", "MSN": "28", "YOM": "1922", "Flight number": "NA", "Crash location": "Ostend West Flanders", "Country": "Belgium", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff for unknown reasons. All occupants escaped unhurt while the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "2/5/1925", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-ALXE", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Rio de Janeiro - Salvador - Recife", "MSN": "118", "YOM": "1922", "Flight number": "NA", "Crash location": "Salvador Bahia", "Country": "Brazil", "Region": "South America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After takeoff, the aircraft overturned and came to rest upside down on a beach. All three crew members escaped uninjured and the aircraft was damaged beyond repair. Crew: Paul Vachet, pilot, Joseph Roig, pilot, No\u00ebl Gauthier, engineer.", "Crash cause": "Unknown"}, {"Date": "3/22/1925", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Zakavia", "Registration": "RR-ECA", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Tbilisi - Sukhumi", "MSN": "590", "YOM": "1920", "Flight number": "NA", "Crash location": "Tbilisi Tbilisi City District", "Country": "Georgia", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after take off from Tbilisi Airport, the single engine aircraft went out of control and crashed, bursting into flames. All five occupants were killed, among them three official of the Georgian Government en route to a Soviet Congress in Sukhumi.", "Crash cause": "Unknown"}, {"Date": "3/27/1925", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Portuguese Air Force - Aeron\u00e1utica Militar", "Registration": "13", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Barcarena Estremadura - Lisbon District", "Country": "Portugal", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was completing a training flight when the airplane crashed in unknown circumstances in Barcarena. All three occupants were killed.", "Crash cause": "Unknown"}, {"Date": "4/7/1925", "Time": "11H 0M 0S", "Aircraft": "Vickers Virginia", "Operator": "Royal Air Force - RAF", "Registration": "J7439", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Manston - Manston", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Birchington-on-Sea Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew departed Manston Airport in the morning to complete a training mission over the North Sea and the Thames Estuary. At the end of the mission, while returning, the crew encountered poor visibility due to fog. The captain decided to ditch the aircraft off Birchington-on-Sea, Kent. The aircraft crashed in the sea and was later recovered. The copilot and another crew were killed while the captain and another crew were injured. Crew: Eric Alfred Claude Bushell, pilot, Neil Coull Walker, copilot, \u2020 Ernest Edward Mills, \u2020 Horace Eustace Grellis.", "Crash cause": "Weather"}, {"Date": "5/25/1925", "Time": "5H 0M 0S", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-AFBB", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "M\u00e1laga \u2013 Alicante \u2013 Barcelona \u2013 Toulouse", "MSN": "202", "YOM": "1923", "Flight number": "NA", "Crash location": "Alicante Valencian Community", "Country": "Spain", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from Alicante-Els \u00c0ngels Airfield, while climbing to a height of 150 metres, the pilot encountered unfavorable winds (strong downdrafts). The aircraft lost height and crashed, bursting into flames. Both crew members were killed while all three passengers were seriously injured. The weather was very bad at the time of the accident as another pilot of the company refused to start the flight. He was replaced by Raoul Berjaud, Station Manager, at the last minute. Crew: Raoul Berjaud, pilot, \u00c9mile Lempereur, mechanic.", "Crash cause": "Weather"}, {"Date": "7/14/1925", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "H9814", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Netheravon - Netheravon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Charlton Wiltshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot departed RAF Netheravon on a solo training flight. En route, he lost control of the airplane that crashed in a field located in Charlton, about 45 km northwest of RAF Netheravon. The pilot F/O John Ryan was killed.", "Crash cause": "Unknown"}, {"Date": "8/1/1925", "Time": "NA", "Aircraft": "Farman F.60 Goliath", "Operator": "Farman Line", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Paris - Brussels", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Soignies Hainaut", "Country": "Belgium", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "8", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Paris to Brussels, the crew encountered an unexpected situation and was forced to attempt an emergency landing. The aircraft crash landed in an open field in Soignies and was damaged. All 10 occupants evacuated safely but the aircraft was damaged beyond repair after being attacked by a bull.", "Crash cause": "Unknown"}, {"Date": "8/27/1925", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Schlesische Luftverkehrs", "Registration": "D-559", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "755", "YOM": "1925", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Named 'Ziegenmelker', the aircraft crashed in unknown circumstances, in Germany? Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "10/22/1925", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYBH", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Camp Borden - Camp Borden", "MSN": "H9624", "YOM": "NA", "Flight number": "NA", "Crash location": "Camp Borden Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a local training flight at Camp Borden Airfield when the airplane crashed in unknown circumstances. Both pilots were injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "12/16/1925", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "E2914", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Manston", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Manston Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, was completing a local training mission at Manston Airport. Shortly after takeoff, while in initial climb, he lost control of the airplane that crashed on the ground. The pilot LAC Edward Emmanuel Dunn was killed.", "Crash cause": "Unknown"}, {"Date": "3/2/1926", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A3-14", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Point Cook - Point Cook", "MSN": "H3031", "YOM": "1920", "Flight number": "NA", "Crash location": "Point Cook (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot D. Ross was performing a training mission at RAAF Point Cook when the accident occurred in unknown circumstances. While the pilot was injured, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "3/8/1926", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Deutsche Lufthansa", "Registration": "D-290", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin - Berlin", "MSN": "665", "YOM": "1923", "Flight number": "NA", "Crash location": "Berlin-Staaken Berlin", "Country": "Germany", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing a local training flight at Berlin-Staaken Airport. On final approach, while completing a last turn to the left, the pilot lost control of the aircraft that stalled and crashed. The pilot Paul Billik was killed.", "Crash cause": "Unknown"}, {"Date": "3/13/1926", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "Lignes A\u00e9riennes Lat\u00e9co\u00e8re", "Registration": "F-FYMS", "Flight phase": "NA", "Flight type": "Postal (mail)", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "1926", "YOM": "1919", "Flight number": "NA", "Crash location": "France All France", "Country": "France", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "4/10/1926", "Time": "11H 0M 0S", "Aircraft": "Avro 504", "Operator": "Inland Area Aircraft Depot", "Registration": "H9535", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Henlow - Henlow", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Henlow AFB Bedfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed RAF Henlow for a local training flight. While flying in the vicinity of the airbase, the aircraft collided with a Vickers FB.27 Vimy Commercial registered F9184. Also operated by the Inland Area Aircraft Depot, the aircraft was carrying four crew members. Following the collision, both aircraft dove in the ground and were destroyed by a post crash fire. All five occupants were killed. Crew from the Vimy: F/O Charles Victor Lacey, LAC Reginald Richard Germain, LAC Basil Henry Greene Young, AC1 James William Simmons. Crew Avro: F/O William Scott.", "Crash cause": "Human factor"}, {"Date": "4/13/1926", "Time": "10H 10M 0S", "Aircraft": "Fokker F3", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "H-NABU", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Amsterdam - Rotterdam", "MSN": "1662", "YOM": "1922", "Flight number": "NA", "Crash location": "Amsterdam-Schiphol North Holland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During the takeoff roll, the aircraft struck an irregularity in the ground and rotated prematurely. Unable to get sufficient height due to low speed, the aircraft stalled and crashed. All three occupants evacuated safely and the aircraft was considered as damaged beyond repair.", "Crash cause": "Other causes"}, {"Date": "5/18/1926", "Time": "16H 40M 0S", "Aircraft": "Ford 2", "Operator": "Ford Air Freight Lines", "Registration": "1", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Chicago - Detroit", "MSN": "1", "YOM": "1925", "Flight number": "NA", "Crash location": "Chicago-Midway Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing the first commercial cargo flight from Chicago to Detroit for the Ford Air Freight Lines Company. The Ford 2-AT Pullman was carrying mail and cargo on behalf of the Contract Air Mail. Shortly after takeoff from Chicago-Midway Airport, while climbing in poor weather conditions, the aircraft named 'Maiden Dearborn I' went out of control and crashed in Summit, some 2 miles west of the airport. The pilot was killed and the aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "6/1/1926", "Time": "NA", "Aircraft": "Dornier Do B Merkur", "Operator": "Deutsche Verkehrsfliegerschule - DVS", "Registration": "D-774", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Hamburg - Magdeburg", "MSN": "83", "YOM": "1925", "Flight number": "NA", "Crash location": "Bleckede Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Crashed in unknown circumstances in Bleckede while performing a training flight from Hamburg to Magdeburg. One pilot was killed and the second occupant was injured.", "Crash cause": "Unknown"}, {"Date": "6/5/1926", "Time": "NA", "Aircraft": "Khioni-Konek-Gorbunok Kh-5", "Operator": "Dobrolet", "Registration": "NA", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Nizhegorodets Nizhny Novgorod oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "6/21/1926", "Time": "NA", "Aircraft": "Fokker F7", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "H-NACL", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Amsterdam \u2013 Rotterdam \u2013 Croydon", "MSN": "4841", "YOM": "1925", "Flight number": "NA", "Crash location": "Hythe Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While overflying The Channel and approaching the British coast, the engine failed. The pilot was able to ditch the airplane few dozen metres offshore. All five occupants evacuated safely and were quickly rescued by local people who brang the aircraft back to the beach. The aircraft was later considered as damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "7/21/1926", "Time": "NA", "Aircraft": "Loening 23 Air Yacht", "Operator": "Provincial Air Service of Lands %26 Forests", "Registration": "G-CAOO", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "3", "YOM": "1924", "Flight number": "NA", "Crash location": "Ramsey Lake (Sudbury) Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "After takeoff from Ramsey Lake in Sudbury, while climbing to a height of 200 feet, the seaplane stalled and crashed in water. All five occupants were rescued and the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "9/29/1926", "Time": "23H 55M 0S", "Aircraft": "Farman F.60 Goliath", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "A-5", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Chartres - Chartres", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bonneval Eure-et-Loir", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a night training flight on behalf of the 3rd Squadron of the 22nd regiment based in Chartres. While flying in the region of Bonneval, some 20 km south of Chartres, the aircraft caught fire. The pilot reduced his altitude and attempted an emergency landing. From a height of 50 meters, the aircraft stalled and crashed in a huge explosion. All five occupants were killed. Crew: Lt Jules Gindre, pilot, Sgt Pierre Pacaud, navigator, Sgt Roger Duchatelle, navigator, Sgt Raymond Rigault, mechanic, Pvt Jean Fr\u00e9mont, radio.", "Crash cause": "Technical failure"}, {"Date": "11/6/1926", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "Oriente", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Cochabamba \u2013 Santa Cruz", "MSN": "769", "YOM": "1925", "Flight number": "NA", "Crash location": "Santa Cruz Santa Cruz", "Country": "Bolivia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "5", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While descending to Santa Cruz, the single engine crashed in unknown circumstances near Santa Cruz. All six occupants were killed, among them Emilio Antelo, Consul of Bolivia in Arica, Chili.", "Crash cause": "Unknown"}, {"Date": "11/11/1926", "Time": "8H 0M 0S", "Aircraft": "Breguet 14", "Operator": "Compagnie G\u00e9n\u00e9rale d'Entreprises A\u00e9ronautiques - CGEA", "Registration": "F-AFAX", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Casablanca \u2013 Dakar", "MSN": "198", "YOM": "1923", "Flight number": "NA", "Crash location": "Cape Bojador La\u00e2youne-Boujdour-Sakia El Hamra", "Country": "Western Sahara", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route from CAsablanca to Dakar, while cruising along the shore, the engine failed. The crew made an emergency landing on a beach near Cape Bojador. After landing, the crew was attacked by Maures tribesmen and killed while the aircraft was set on fire and destroyed. Crew: L\u00e9opolds Gourp, pilot, Henri Erable, copilot, Mr. Pintado, mechanic.", "Crash cause": "Technical failure"}, {"Date": "12/15/1926", "Time": "NA", "Aircraft": "Grulich V.1", "Operator": "Deruluft - Deutsch-Russische Luftverkehrs Gesellschaft", "Registration": "D-902", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "1653", "YOM": "NA", "Flight number": "NA", "Crash location": "Russia All Russia", "Country": "Russia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in December 1926, exact date unknown.", "Crash cause": "Unknown"}, {"Date": "2/24/1927", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Newcastle upon Tyne Light Aeroplane Club", "Registration": "G-EBLY", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cramlington - Cramlington", "MSN": "191", "YOM": "1925", "Flight number": "NA", "Crash location": "Cramlington Northumberland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight. Shortly after takeoff from Cramlington Airport, while in initial climb, the engine stopped. The aircraft stalled and crashed. While both occupants were injured, the aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "3/24/1927", "Time": "9H 30M 0S", "Aircraft": "De Havilland DH.9", "Operator": "Qantas Airways - Queensland and Northern Territory Aerial Services", "Registration": "G-AUED", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Charleville \u2013 Tambo \u2013 Blackall", "MSN": "86", "YOM": "1923", "Flight number": "NA", "Crash location": "Tambo Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The airplane departed Charleville at 0530LT with a pilot, Ian Douglas Davidson, and two passengers, William Robertson Donaldson from Rockland, and A. W. Bell from Belmont. The plane must have had trouble on the road as it only reached Tambo at 0930LT (two hours late), flying very low over the river, with the engine running. On final approach, the engine stopped, and a second later, the plane hit tree top and crashed. Mr. Bell was dead and Mr. Davidson died within half-an-hour, while Mr. Donaldson expired at 2 o'clock. The plane was destroyed, the engine and fuselage being smashed to pieces.", "Crash cause": "Technical failure"}, {"Date": "5/15/1927", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A7-1", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Point Cook - Point Cook", "MSN": "199", "YOM": "1925", "Flight number": "NA", "Crash location": "Point Cook (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While performing a local training flight in the vicinity of RAAF Point Cook, the aircraft crashed in unknown circumstances. Both pilots were injured.", "Crash cause": "Unknown"}, {"Date": "5/28/1927", "Time": "NA", "Aircraft": "Martin NBS-1 (MB-2)", "Operator": "United States Army Air Corps - USAAC", "Registration": "AC-68525", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Augusta Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Shortly after takeoff from Augusta Airport, while climbing to a height of 500 feet, one of the engine caught fire. The crew lost control of the airplane that crashed, bursting into flames. All four crew members were killed.", "Crash cause": "Technical failure"}, {"Date": "7/11/1927", "Time": "NA", "Aircraft": "Vickers Viking (Serie I/II/III & IV)", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYET", "Flight phase": "Flight", "Flight type": "Topographic", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Winnipegosis - Winnipegosis", "MSN": "27", "YOM": "1923", "Flight number": "NA", "Crash location": "Hilbre Manitoba", "Country": "Canada", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew departed Winnipegosis on a topographic mission over the area of Hilbre, north of Winnipeg. While flying in stormy weather at an altitude of 3,500 feet, the aircraft went out of control and crashed in a prairie. All three occupants were killed.", "Crash cause": "Weather"}, {"Date": "7/14/1927", "Time": "NA", "Aircraft": "Travel Air 5000", "Operator": "Ernest L. Smith", "Registration": "Spirit of Oakland", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Oakland - Honolulu", "MSN": "160", "YOM": "1927", "Flight number": "NA", "Crash location": "Molokai Hawaii", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Both pilots Ernest L. Smith and Emory R. Bronte were engaged in one of the first transpacific nonstop flight from Oakland to Honolulu, taking part to the 'Dole Race' with a price of 25,000 US$. After a flight of 26 hours and 36 minutes, the crew was approaching the coast of Molokai when the engine failed due to fuel exhaustion. The crew made an emergency landing and was uninjured while the aircraft named 'Spirit of Oakland' was damaged beyond repair. As he did not reach Honolulu, the crew was disqualified and did not win the prize.", "Crash cause": "Technical failure"}, {"Date": "7/30/1927", "Time": "NA", "Aircraft": "Sablatnig P.III", "Operator": "Deutsche Lufthansa", "Registration": "D-984", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Konstanz Baden-W\u00fcrttemberg", "Country": "Germany", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Konstanz Airfield, while climbing, the engine failed. The pilot attempted an emergency landing when the aircraft crashed in the Gnadensee. All four occupants were rescued and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "8/4/1927", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Dennis M. M. Rooke", "Registration": "G-EBQJ", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Aurangabad - Darwin", "MSN": "371", "YOM": "1927", "Flight number": "NA", "Crash location": "Aurangabad Maharashtra", "Country": "India", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Dennis M. M. Rooke, pilot and owner of this aircraft named 'Marjorie', was performing a flight from England to Australia. Shortly after takeoff from Aurangabad, en route to Darwin, the aircraft hit a palm tree and crashed. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "8/16/1927", "Time": "NA", "Aircraft": "Lockheed 1 Vega", "Operator": "Jack Frost", "Registration": "NX913", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Oakland - Honolulu", "MSN": "1", "YOM": "1927", "Flight number": "NA", "Crash location": "Pacific Ocean All World", "Country": "World", "Region": "World", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was taking part to the 'Dole Race' between Oakland and Honolulu. The aircraft departed Oakland Airport in the morning but never arrived at destination. It was lost without trace in the Pacific Ocean. The aircraft was named 'Golden Eagle'. Crew: Jack Frost, pilot, Gordon Scott, navigator.", "Crash cause": "Unknown"}, {"Date": "9/3/1927", "Time": "NA", "Aircraft": "Fokker Universal", "Operator": "Colonial Air Transport", "Registration": "NC52", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Boston \u2013 Hartford", "MSN": "405", "YOM": "1926", "Flight number": "NA", "Crash location": "Willington Connecticut", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed Boston on a night mail flight to Hartford. En route, he encountered poor weather conditions and was forced to make two emergency landing. While flying in poor visibility, the airplane struck a hill and crashed near Willington. The pilot was killed.", "Crash cause": "Weather"}, {"Date": "9/23/1927", "Time": "NA", "Aircraft": "Sablatnig P.III", "Operator": "Deutsche Lufthansa", "Registration": "D-962", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "271", "YOM": "1926", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "11/11/1927", "Time": "11H 0M 0S", "Aircraft": "Breguet 19", "Operator": "Georges Medaets", "Registration": "Reine Elisabeth II", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lafert\u00e9-sur-Aube Haute-Marne", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew departed Wevelghem, Belgium, on a flight to Belgian Congo. While flying over France, the crew encountered poor visibility due to foggy conditions. The pilot attempted an emergency landing when the aircraft impacted a hill and crashed. Both occupants were injured and the aircraft was damaged beyond repair.", "Crash cause": "Weather"}, {"Date": "12/26/1927", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "African Aerial Travels", "Registration": "G-UAAE", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "439", "YOM": "1927", "Flight number": "NA", "Crash location": "Pomeroy KwaZulu-Natal", "Country": "South Africa", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While on a flight from Durban, the aircraft crashed in unknown circumstances near Pomeroy. Both occupants were injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "1/2/1928", "Time": "NA", "Aircraft": "Lior\u00e9-et-Olivier LeO H-13", "Operator": "L'A\u00e9ropostale", "Registration": "F-AHBI", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "4", "YOM": "1925", "Flight number": "NA", "Crash location": "Almeria Andalusia", "Country": "Spain", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances some 50 km off Almer\u00eda, in the Mediterranean Sea. Both crew members were injured and the aircraft sank and was lost.", "Crash cause": "Unknown"}, {"Date": "1/22/1928", "Time": "NA", "Aircraft": "Travel Air 4000", "Operator": "Pacific Air Transport", "Registration": "NC12", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Portland \u2013 San Francisco", "MSN": "1260", "YOM": "1927", "Flight number": "NA", "Crash location": "Dunsmuir California", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Arthur D. Starbuck was completing a mail flight from Portland, Oregon, to San Francisco. While entering California, he encountered poor weather conditions with low visibility due to a snowstorm. He lost control of the aircraft that crashed in a canyon in Shasta Springs, near Dunsmuir. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Weather"}, {"Date": "2/5/1928", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Yorkshire Aero Club", "Registration": "G-EBLS", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Sherburn-in-Elmet - Sherburn-in-Elmet", "MSN": "185", "YOM": "1925", "Flight number": "NA", "Crash location": "Sherburn-in-Elmet North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a local training flight at Sherburn-in-Elmet Aerodrome. On final approach, while completing a last turn to join the glide, the aircraft stalled and crashed. Both occupants were injured.", "Crash cause": "Human factor"}, {"Date": "3/14/1928", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A3-11", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Laverton - Laverton", "MSN": "H3023", "YOM": "NA", "Flight number": "NA", "Crash location": "Laverton AFB (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from RAAF Laverton, while climbing, the aircraft stalled and crashed. Both pilots were injured and the aircraft was destroyed. Crew: J. M. C. Philpott, L. N. Rowe.", "Crash cause": "Unknown"}, {"Date": "3/30/1928", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Swedish Air Force - Flygvapnet", "Registration": "76", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Ljungbyhed - Ljungbyhed", "MSN": "16932", "YOM": "NA", "Flight number": "NA", "Crash location": "Ljungbyhed Sk\u00e5ne", "Country": "Sweden", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was completing a solo training flight in the vicinity of Ljungbyhed Airport. The accident occurred in unknown circumstances and while the pilot was injured, the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "4/9/1928", "Time": "NA", "Aircraft": "Avro 548", "Operator": "George Lockhart", "Registration": "G-EABJ", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "E3043", "YOM": "NA", "Flight number": "NA", "Crash location": "Brooklands (Weybridge) Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Brooklands Airport, the aircraft stalled and crashed near the airfield. The airplane was damaged beyond repair and all three occupants were injured.", "Crash cause": "Unknown"}, {"Date": "5/9/1928", "Time": "NA", "Aircraft": "Bellanca CH-200 Pacemaker", "Operator": "Private American", "Registration": "NC4484", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Teterboro - Teterboro", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Hasbrouck Heights New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The airplane departed Teterboro Airport on a local test flight. In unknown circumstances, it crashed in Hasbrouck Heights, killing both occupants.", "Crash cause": "Unknown"}, {"Date": "5/12/1928", "Time": "NA", "Aircraft": "Fairey III", "Operator": "Royal Air Force - RAF", "Registration": "S1260", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Gosport \u2013 Farnborough", "MSN": "F.967", "YOM": "1927", "Flight number": "NA", "Crash location": "Farnborough Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to Farnborough Airport, the single engine airplane stalled and crashed on Alexandra Road near the airfield. Two crew members were injured while the third one was killed. Few hours later, one of the survivor died from his injuries. Crew: Cpt Edward James Osborne Ellison, AC1 James George Bolton, \u2020 Percival Reginald Carter. \u2020", "Crash cause": "Unknown"}, {"Date": "5/12/1928", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Registration": "D-90", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tournai Hainaut", "Country": "Belgium", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Andr\u00e9 Tahon was performing a training mission out from Courtrai-Wevelgem when the aircraft crashed in unknown circumstances. The pilot was seriously injured and was taken to the hospital of Tournai where he died a day later.", "Crash cause": "Unknown"}, {"Date": "5/28/1928", "Time": "NA", "Aircraft": "Albatros L73", "Operator": "Deutsche Lufthansa", "Registration": "D-961", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Berlin - Hamburg", "MSN": "10077", "YOM": "1926", "Flight number": "NA", "Crash location": "Lanz Brandenburg", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Berlin to Hamburg, the pilot encountered an unexpected situation and was forced to attempt an emergency landing. The aircraft named 'Brandenburg' crash landed in an open field located in Babekuhl, near Lanz. There were no casualties.", "Crash cause": "Unknown"}, {"Date": "7/5/1928", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "Chaco", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Cochabamba \u2013 Santa Cruz", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Vacas Cochabamba", "Country": "Bolivia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "En route from Cochabamba to Santa Cruz, the airplane crashed in unknown circumstances in Vacas. Both occupants were killed. Crew: Hermann Berndt, pilot. Passenger: Mr. Schwarz.", "Crash cause": "Unknown"}, {"Date": "7/7/1928", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Cinque Ports Flying Club", "Registration": "G-EBZN", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lympne - Lympne", "MSN": "553", "YOM": "1928", "Flight number": "NA", "Crash location": "Lympne Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a local training mission at Lympne Airport. On final approach, the aircraft was too low and collided with a wall before crashing near a hangar. The pilot was injured and the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "7/13/1928", "Time": "NA", "Aircraft": "Boeing B-1", "Operator": "Western Canada Airways", "Registration": "G-CASX", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Butedale - Swanson Bay", "MSN": "1029", "YOM": "1928", "Flight number": "NA", "Crash location": "Graham Reach British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the pilot encountered low visibility due to heavy rain falls. To obtain more visibility, he decided to clean the windshield but he did not realize he was losing altitude. The seaplane hit the water surface and crashed. All three occupants were injured.", "Crash cause": "Human factor"}, {"Date": "8/17/1928", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A3-43", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Point Cook - Point Cook", "MSN": "H9842", "YOM": "1920", "Flight number": "NA", "Crash location": "Point Cook (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot G. S. Coleman lost control of the aircraft that stalled and spun into the ground. The aircraft was destroyed and the pilot was injured.", "Crash cause": "Unknown"}, {"Date": "8/30/1928", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Johannesburg Light Plane Club", "Registration": "G-UAAN", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Baragwanath \u2013 Baragwanath", "MSN": "588", "YOM": "1928", "Flight number": "NA", "Crash location": "Baragwanath Gauteng", "Country": "South Africa", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a local training flight at Baragwanath Airport. The single engine aircraft crashed upon landing for unknown reason. Both occupants were injured.", "Crash cause": "Unknown"}, {"Date": "9/2/1928", "Time": "9H 15M 0S", "Aircraft": "Bl\u00e9riot Spad 56", "Operator": "Compagnie Internationale de Navigation A\u00e9rienne - CIDNA", "Registration": "F-AIEP", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Toul \u2013 Clermont-Ferrand", "MSN": "May-07", "YOM": "1926", "Flight number": "NA", "Crash location": "Toul Meurthe-et-Moselle", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after takeoff from Croix-de-Metz Airport located in Toul, Meurthe-et-Moselle, while climbing to a height of 150 meters, the engine lost power and failed. The pilot tried to maintain speed and attitude but the aircraft stalled and crashed, bursting into flames. The aircraft was totally destroyed and all five occupants were killed. Crew: Gabriel Hanin, pilot, Maurice Villuis, radio, Henri Vidal, mechanic. Passengers: Jean-Abel Lefranc, General Secretary of CIDNA, Maurice Bokanowski, Minister of Commerce and Industry.", "Crash cause": "Technical failure"}, {"Date": "9/2/1928", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Air Force - RAF", "Registration": "J8107", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Castle Bromwich - Castle Bromwich", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Great Glen Leicestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed Castle Bromwich on a training mission. While making a sharp turn, he lost control of the airplane that stalled, entered a dive and crashed in a field. The pilot P/O George Herbert Aldridge was killed.", "Crash cause": "Human factor"}, {"Date": "9/22/1928", "Time": "NA", "Aircraft": "Breguet 14", "Operator": "L'A\u00e9ropostale", "Registration": "F-AFAT", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "195 ter", "YOM": "1923", "Flight number": "NA", "Crash location": "Morocco All Morocco", "Country": "Morocco", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a mail flight from France. An emergency landing was made following unknown technical problems. While both occupants were injured, the airplane was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "10/18/1928", "Time": "NA", "Aircraft": "Junkers W.33", "Operator": "Crescent Air Service", "Registration": "NC5797", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2512", "YOM": "1928", "Flight number": "NA", "Crash location": "Atlantic City New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "6", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "After takeoff from Atlantic City Airport, while climbing to a height of 600 feet, the single engine airplane entered an uncontrolled descent and crashed. Two occupants were killed and six others were injured.", "Crash cause": "Unknown"}, {"Date": "12/20/1928", "Time": "NA", "Aircraft": "Douglas M-3", "Operator": "National Air Transport - USA", "Registration": "NC790", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "653", "YOM": "NA", "Flight number": "NA", "Crash location": "Huron Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route, the pilot lost his orientation due to a snowstorm. He decided to make an emergency landing when the aircraft hit the ground and crashed. The pilot was killed.", "Crash cause": "Weather"}, {"Date": "12/31/1928", "Time": "NA", "Aircraft": "Junkers G.31", "Operator": "Deutsche Lufthansa", "Registration": "D-1137", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "3001", "YOM": "1927", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. The mishap occurred somewhere in December 1928, exact date unknown.", "Crash cause": "Unknown"}, {"Date": "1/30/1929", "Time": "11H 30M 0S", "Aircraft": "Fairey III", "Operator": "Royal Air Force - RAF", "Registration": "N9759", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Eastchurch - Eastchurch", "MSN": "F.623", "YOM": "1925", "Flight number": "NA", "Crash location": "Eastchurch AFB Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was completing a local training flight at RAF Eastchurch. On approach, the aircraft entered an uncontrolled descent and crashed in a field. All three crew members were killed. Crew: F/O Geoffrey Hugh Conningsby Ingle, LAC Frank Nelson Howick, AC2 George Henry Johnson.", "Crash cause": "Unknown"}, {"Date": "2/5/1929", "Time": "NA", "Aircraft": "Avim\u00e9ta 92", "Operator": "Eug\u00e8ne de Ligne", "Registration": "OO-AJY", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Antwerp - Antwerp", "MSN": "2", "YOM": "1928", "Flight number": "NA", "Crash location": "Antwerp-Deurne Antwerp", "Country": "Belgium", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft was attempting a test flight with a crew of two on board. It crashed in unknown circumstances while taking off from Antwerp-Deurne Airport. While both occupants were unhurt, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "2/25/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A7-12", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Richmond - Richmond", "MSN": "551", "YOM": "1928", "Flight number": "NA", "Crash location": "Richmond AFB New South Wales", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from RAAF Richmond, the aircraft hit trees and crashed. Both occupants were seriously injured and the aircraft was destroyed. Second pilot L. L. Colless died a day later.", "Crash cause": "Unknown"}, {"Date": "3/11/1929", "Time": "NA", "Aircraft": "Boeing 40", "Operator": "Boeing Air Transport", "Registration": "NC275", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "886", "YOM": "1927", "Flight number": "NA", "Crash location": "Park City Utah", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, poor weather conditions forced the pilot to attempt an emergency landing. Both occupants were uninjured and the aircraft was damaged beyond repair.", "Crash cause": "Weather"}, {"Date": "3/22/1929", "Time": "NA", "Aircraft": "Sikorsky S-29", "Operator": "Caddo Company", "Registration": "NC2756", "Flight phase": "Flight", "Flight type": "Cinematography", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Oakland - Oakland", "MSN": "1", "YOM": "1929", "Flight number": "NA", "Crash location": "Pacoima California", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was taking part to the movie called 'Hell's Angels'. In flight, the pilot encountered problems and attempted to bail out with his parachute. He asked the engineer to do so. Worried about the malfunction of a generator, the engineer did not hear the order coming from the pilot who abandoned the aircraft shortly later. The aircraft entered an uncontrolled descent and crashed. The engineer was killed while the pilot was uninjured. Crew: Al Wilson, pilot, Phil Jones, engineer.", "Crash cause": "Technical failure"}, {"Date": "4/9/1929", "Time": "NA", "Aircraft": "Ford 4", "Operator": "Mexicana de Aviaci\u00f3n", "Registration": "M-SCAL", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mexico City \u2013 Tuxpan \u2013 Tampico \u2013 Brownsville", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tampico-General Francisco Javier Mina Tamaulipas", "Country": "Mexico", "Region": "Central America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "4", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after takeoff, while climbing to a height of 100 feet, one of the engine failed. The aircraft stalled and crashed, killing all five occupants, among them pilot Dennis W. Taylor.", "Crash cause": "Technical failure"}, {"Date": "5/16/1929", "Time": "NA", "Aircraft": "Fokker Super Universal", "Operator": "TAT Flying Service", "Registration": "NC8032", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "819", "YOM": "1928", "Flight number": "NA", "Crash location": "Delaware Mountains Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While cruising in poor weather conditions, the pilot lost control of the aircraft that crashed in a wooded area located in the Delaware Mountains, east of Dell City. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Weather"}, {"Date": "6/16/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYYO", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Shirley\u2019s Bay - Shirley\u2019s Bay", "MSN": "491", "YOM": "1928", "Flight number": "NA", "Crash location": "Shirley\u2019s Bay (Ottawa) Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on takeoff, injuring both crew members.", "Crash cause": "Unknown"}, {"Date": "6/20/1929", "Time": "NA", "Aircraft": "Fokker Super Universal", "Operator": "Canadian Vickers", "Registration": "CF-AEX", "Flight phase": "Takeoff (climb)", "Flight type": "Ambulance", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "CV-134", "YOM": "1929", "Flight number": "NA", "Crash location": "Montreal-Saint-Hubert Quebec", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The single engine aircraft was engaged in an ambulance flight, carrying one doctor and two crew members. Shortly after takeoff from Montreal-Saint-Hubert Airport, the aircraft encountered difficulties to gain height. It collided with power cables and crashed on the Nun's Island. All three occupants were killed.", "Crash cause": "Unknown"}, {"Date": "6/24/1929", "Time": "NA", "Aircraft": "Ford 5", "Operator": "Northwest Airways", "Registration": "NC7416", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "5-AT-002", "YOM": "1928", "Flight number": "NA", "Crash location": "Minneapolis-Saint Paul Minnesota", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "6", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from Minneapolis-Saint Paul Airport, while climbing, the airplane suffered an multiple engine failure. It stalled and crashed in a garden located in Mounds View Boulevard, bursting into flames. A passenger was killed while all other occupants were injured. The aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "6/29/1929", "Time": "NA", "Aircraft": "Fairchild 71", "Operator": "Mexicana de Aviaci\u00f3n", "Registration": "X-ABCF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "602", "YOM": "1929", "Flight number": "NA", "Crash location": "Panama All Panama", "Country": "Panama", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in Panama. Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "6/29/1929", "Time": "NA", "Aircraft": "Pitcairn PA-5 Mailwing", "Operator": "National Air Transport - USA", "Registration": "NC5863", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "25", "YOM": "1928", "Flight number": "NA", "Crash location": "Skiatook Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the engine failed, forcing the pilot to attempt an emergency landing. While contacting the ground, the aircraft overturned and came to rest upside down, bursting into flames. The pilot was slightly injured and the aircraft was destroyed by fire.", "Crash cause": "Technical failure"}, {"Date": "6/30/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Provincial Air Service of Lands %26 Forests", "Registration": "G-CAPH", "Flight phase": "Landing (descent or approach)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Sault Sainte Marie - Abitibi Lake", "MSN": "909", "YOM": "1929", "Flight number": "NA", "Crash location": "Abitibi Lake Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The airplane was completing a flight from Sault Ste Marie to Abitibi Lake. For unknown reasons, the aircraft crashed upon landing at Abitibi Lake, Ontario. The aircraft was damaged beyond repair and both occupants were uninjured.", "Crash cause": "Unknown"}, {"Date": "7/8/1929", "Time": "NA", "Aircraft": "Pitcairn PA-5 Mailwing", "Operator": "Pitcairn Aviation", "Registration": "NC5117", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "21", "YOM": "1928", "Flight number": "NA", "Crash location": "Berlin New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing a test flight when a fire erupted on board. The aircraft went out of control and crashed in Berlin, bursting into flames. The aircraft was destroyed and the pilot, sole on board, was killed. The source and the cause of the fire remains unknown.", "Crash cause": "Technical failure"}, {"Date": "7/11/1929", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Netheravon - Netheravon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Trowbridge Wiltshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed RAF Netheravon for a local training mission. En route, he lost control of the airplane that crashed in Upper Studley, southwest of Trowbridge. The pilot P/O Reginald Montague Swaine was killed.", "Crash cause": "Unknown"}, {"Date": "7/25/1929", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Schlee-Brock Aircraft Corporation - SBAC", "Registration": "NC7441", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Chicago - Chicago", "MSN": "21", "YOM": "1929", "Flight number": "NA", "Crash location": "Chicago Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a local test flight at Chicago Airport. The accident occurred in unknown circumstances. The aircraft was damaged beyond repair and all three occupants were injured.", "Crash cause": "Unknown"}, {"Date": "7/26/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYYQ", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Shirley\u2019s Bay - Shirley\u2019s Bay", "MSN": "487", "YOM": "1928", "Flight number": "NA", "Crash location": "Shirley\u2019s Bay (Ottawa) Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Both pilots were injured.", "Crash cause": "Unknown"}, {"Date": "8/13/1929", "Time": "9H 30M 0S", "Aircraft": "Breguet 14", "Operator": "L'A\u00e9ropostale", "Registration": "F-AFBA", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Casablanca \u2013 Alicante \u2013 Barcelona \u2013 Perpignan \u2013 Toulouse", "MSN": "201", "YOM": "1923", "Flight number": "NA", "Crash location": "Toulouse-Montaudran Haute-Garonne", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On final approach to Toulouse-Montaudron Airport, the single engine stalled and crashed near the runway threshold. All three occupants, the pilot Marcel Murier and two passenger, were killed.", "Crash cause": "Human factor"}, {"Date": "8/13/1929", "Time": "NA", "Aircraft": "Loening C-2 Air Yacht", "Operator": "Thompson Aeronautical Corporation", "Registration": "NC9783", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "222", "YOM": "1929", "Flight number": "NA", "Crash location": "Lake Erie Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On final approach to Lake Erie, the pilot encountered low visibility due to foggy conditions. The aircraft hit the ground short of runway and crashed. A passenger was killed while three other occupants were injured.", "Crash cause": "Weather"}, {"Date": "8/14/1929", "Time": "NA", "Aircraft": "Heinkel HD.24", "Operator": "Swedish Air Force - Flygvapnet", "Registration": "207", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "\u00d6sterj\u00f6n J\u00e4mtland", "Country": "Sweden", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances in the region of \u00d6sterj\u00f6n. Both pilots were rescued.", "Crash cause": "Unknown"}, {"Date": "8/25/1929", "Time": "NA", "Aircraft": "Loening C-2 Air Yacht", "Operator": "Northern Aerial Minerals Exploration", "Registration": "G-CATM", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "209", "YOM": "1928", "Flight number": "NA", "Crash location": "Thicket Portage Northwest Territories", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach, while completing a last turn, the pilot lost control of the aircraft that stalled and crashed. The pilot was injured.", "Crash cause": "Unknown"}, {"Date": "8/29/1929", "Time": "NA", "Aircraft": "Junkers G.24", "Operator": "Aktiebolaget Aerotransport - ABA", "Registration": "SE-AAF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Stockholm \u2013 Malm\u00f6 \u2013 Hamburg \u2013 Bremen \u2013 Amsterdam", "MSN": "837", "YOM": "1925", "Flight number": "NA", "Crash location": "Lingen Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The airplane named 'Sk\u00e5ne' departed Stockholm on a flight to Amsterdam with intermediate stops in Malm\u00f6, Hamburg and Bremen. During the last leg from Bremen to Amsterdam, the pilot encountered engine problems and attempted an emergency landing. The aircraft landed in a pasture, lost its undercarriage and slid for few dozen metres before coming to rest. All occupants evacuated safely and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "9/1/1929", "Time": "NA", "Aircraft": "Curtiss Robin", "Operator": "Transcontinental Air Transport - TAT", "Registration": "NC8372", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "254", "YOM": "1929", "Flight number": "NA", "Crash location": "Bogalusa Louisiana", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft suffered a structural failure on a wing, lost height and crashed in a pasture. All three occupants were injured.", "Crash cause": "Technical failure"}, {"Date": "9/2/1929", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Associated Aviators", "Registration": "NR859E", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Van Nuys \u2013 Cleveland", "MSN": "67", "YOM": "1929", "Flight number": "NA", "Crash location": "Needles California", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route from Van Nuys to Cleveland, the crew encountered stormy weather. In strong turbulences, the pilot lost control of the airplane that entered a dive. The mechanic was able to bail out before the aircraft crashed near Needles, east California. The wreckage was found three days later. The mechanic was found alive while the pilot was killed. Crew: John Wood, pilot, Ward Miller, mechanic.", "Crash cause": "Weather"}, {"Date": "9/4/1929", "Time": "NA", "Aircraft": "Fokker F7", "Operator": "Andrew Paton Holt", "Registration": "G-EBZJ", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "5087", "YOM": "1928", "Flight number": "NA", "Crash location": "United Kingdom All United Kingdom", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane was lost without trace in sea off United Kingdom. No trace of the aircraft nor the pilot was ever found.", "Crash cause": "Unknown"}, {"Date": "9/11/1929", "Time": "NA", "Aircraft": "Fokker-Grulich F3", "Operator": "British Air Lines - BAL", "Registration": "G-AALC", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "City", "Schedule": "Croydon \u2013 Le Touquet", "MSN": "1558", "YOM": "1929", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Croydon Airport, the airplane suffered technical problems, lost height and crashed onto a house located in Plough Lane, north of the airfield. The aircraft was damaged beyond repair and all six occupants were escaped with minor injuries. No one on the ground was injured.", "Crash cause": "Technical failure"}, {"Date": "9/19/1929", "Time": "NA", "Aircraft": "Sikorsky S-38", "Operator": "Pan American World Airways - PAA", "Registration": "NC197H", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "214-01", "YOM": "1929", "Flight number": "NA", "Crash location": "Miami Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from the Miami harbor, the seaplane crashed in unknown circumstances. There were no casualties.", "Crash cause": "Unknown"}, {"Date": "11/3/1929", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Phillips %26 Powis Aircraft", "Registration": "G-AARM", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "City", "Schedule": "Woodley \u2013 Oxford", "MSN": "477", "YOM": "1927", "Flight number": "NA", "Crash location": "Oxford-Kidlington Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Oxford-Kidlington Airport, the aircraft went out of control and crashed in Port Meadow, bursting into flames. The aircraft was destroyed by a post crash fire and the pilot, Mr. Skuce, was seriously injured.", "Crash cause": "Unknown"}, {"Date": "12/20/1929", "Time": "NA", "Aircraft": "Levasseur PL.8", "Operator": "L'A\u00e9ropostale", "Registration": "F-AJKP", "Flight phase": "Landing (descent or approach)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Dakar - Istres", "MSN": "PL.8-02", "YOM": "1928", "Flight number": "NA", "Crash location": "Istres-Le Tub\u00e9 Bouches-du-Rh\u00f4ne", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Henri Delaunay was completing a mail flight from Dakar to Istres-Le Tub\u00e9 Airport. Upon landing, the aircraft hit a pothole, went out of control and came to rest with serious damages. The the pilot was uninjured and the aircraft was considered as damaged beyond repair.", "Crash cause": "Other causes"}, {"Date": "1/5/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A7-10", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Laverton - Laverton", "MSN": "543", "YOM": "1928", "Flight number": "NA", "Crash location": "Laverton AFB (Melbourne) Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The aircraft crashed about 1,500 metres from RAAF Laverton after striking a haystack and shearing of the undercarriage while performing manoeuvres at low level without authorization. The aircraft crashed a short distance from the haystack and was destroyed. Flying Officer Leo J. Ryan survived the impact and was critically injured and later died of those injuries in Caulfield Repatriation Hospital two days later.", "Crash cause": "Human factor"}, {"Date": "1/11/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Henry Charles Hiley Bathurst", "Registration": "G-AAHF", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bristol \u2013 Croydon", "MSN": "1051", "YOM": "1929", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The single engine airplane crashed in unknown circumstances while on final approach to Croydon Airport. The pilot, sole on board, was injured.", "Crash cause": "Unknown"}, {"Date": "1/18/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Marjorie Hazeldene Stevens", "Registration": "G-EBWZ", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "509", "YOM": "1928", "Flight number": "NA", "Crash location": "Brooklands (Weybridge) Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from Brooklands, the aircraft crashed in Addlestone, north of the airfield. The aircraft was destroyed and both occupants were seriously injured. The passenger died from his injuries on 14 February 2022.", "Crash cause": "Unknown"}, {"Date": "1/19/1930", "Time": "NA", "Aircraft": "Ryan B-5 Brougham", "Operator": "Florida Airways", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "West End \u2013 Daytona Beach", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lake Worth Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route from West End, Bahamas, to Daytona Beach, the aircraft crashed in unknown circumstances in the harbor of Lake Worth. Two occupants were injured and three others were killed.", "Crash cause": "Unknown"}, {"Date": "1/19/1930", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 25", "Operator": "L'A\u00e9ropostale", "Registration": "F-AIEJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "609", "YOM": "1926", "Flight number": "NA", "Crash location": "Kenitra Gharb-Chrarda-B\u00e9ni Hssen", "Country": "Morocco", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Upon landing in Kenitra, the aircraft went out of control and crashed. Both crew members were injured.", "Crash cause": "Unknown"}, {"Date": "1/21/1930", "Time": "12H 0M 0S", "Aircraft": "Fairey III", "Operator": "Royal Air Force - RAF", "Registration": "J9637", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "F.1139", "YOM": "1928", "Flight number": "NA", "Crash location": "Sudbury Suffolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft departed RAF Bircham Newton with two pilots on board. While cruising in foggy conditions, the aircraft entered an uncontrolled descent and crashed in an orchard. Both crew members were killed. Crew: F/O Donald Mackenzie, Cpl Leonard Edward Barnard.", "Crash cause": "Unknown"}, {"Date": "1/28/1930", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "J9267", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Grantham - Grantham", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Grantham AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew departed RAF Grantham for a local training mission. Shortly after liftoff, the engine failed. The aircraft stalled and crashed. Both occupants were injured and the aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "3/25/1930", "Time": "NA", "Aircraft": "Pitcairn PA-6 Mailwing", "Operator": "Eastern Air Transport", "Registration": "NC804H", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "44", "YOM": "1929", "Flight number": "NA", "Crash location": "Hagerstown Maryland", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the pilot encountered foggy conditions and due to low visibility, was unable to locate his position. He eventually decided to abandon the aircraft and bailed out. The aircraft crashed and was destroyed and the pilot was unhurt.", "Crash cause": "Weather"}, {"Date": "5/4/1930", "Time": "12H 5M 0S", "Aircraft": "CAMS 53", "Operator": "L'A\u00e9ropostale", "Registration": "F-AJKB", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Marseille \u2013 Algiers", "MSN": "17", "YOM": "1929", "Flight number": "NA", "Crash location": "Algiers Algiers", "Country": "Algeria", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Marseille at 0813LT on a mail flight to Algiers. At 1040LT, the crew reported his position along the Balearic coast. Around noon, while approaching the Algerian coast, the pilot sent a brief message and announced he was forced to attempt an emergency landing off Cape of Pointe Pescade, some 30 km northwest of Algiers, due to an engine failure. All three crew members were uninjured and rescued around 1600LT by the crew of ship named 'Colonel Casse'. The aircraft sank and was lost. Crew: Mr. De Visa, pilot, Maurice Thomasset, radio navigator, Albin Pinot, mechanic.", "Crash cause": "Technical failure"}, {"Date": "5/9/1930", "Time": "NA", "Aircraft": "Boeing 40", "Operator": "Pacific Air Transport", "Registration": "NC740K", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1147", "YOM": "1929", "Flight number": "NA", "Crash location": "San Jose California", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While taking from San Jose Airport, the aircraft collided with a wagon and crashed near the runway. The pilot was slightly injured and there was no casualty on ground.", "Crash cause": "Other causes"}, {"Date": "5/14/1930", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Schlee-Brock Aircraft Corporation - SBAC", "Registration": "NC892E", "Flight phase": "Landing (descent or approach)", "Flight type": "Executive/Corporate/Business", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Detroit \u2013 Hamilton", "MSN": "74", "YOM": "1929", "Flight number": "NA", "Crash location": "Hamilton Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Hamilton following an uneventful flight from Detroit, the single engine airplane crashed in Ancaster, about 7 km northwest of the airfield. The aircraft was destroyed and all three occupants were injured, the pilot Don Walker seriously.", "Crash cause": "Unknown"}, {"Date": "5/15/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Hampshire Aeroplane Club", "Registration": "G-EBOH", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Hamble - Hamble", "MSN": "269", "YOM": "1926", "Flight number": "NA", "Crash location": "Ewshot Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew departed Hamble on a training mission. En route, the airplane crashed in unknown circumstances in a garden located in Ewshot, Hampshire. Both crew members were injured and the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "5/27/1930", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Corporaci\u00f3n Aeronautica de Transportes", "Registration": "XA-BHC", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "90", "YOM": "1929", "Flight number": "NA", "Crash location": "Monterrey Nuevo Le\u00f3n", "Country": "Mexico", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances near Monterrey and was destroyed by fire. Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "5/27/1930", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Brazilian Navy - Avia\u00e7\u00e3o Naval Brasileira", "Registration": "A-25", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Rio de Janeiro - Rio de Janeiro", "MSN": "446", "YOM": "NA", "Flight number": "NA", "Crash location": "Rio de Janeiro Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was completing a local training sortie in Rio de Janeiro when the airplane crashed in unknown circumstances in the Bay of Guanabara. A crew member was killed and the second was injured.", "Crash cause": "Unknown"}, {"Date": "6/29/1930", "Time": "NA", "Aircraft": "Hamilton H-47", "Operator": "Ontario Provincial Air Service", "Registration": "N878H", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Thunder Bay - Thunder Bay", "MSN": "68", "YOM": "1929", "Flight number": "NA", "Crash location": "Thunder Bay Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot departed Thunder Bay on a local solo demo flight. While performing aerobatic manoeuvres, he lost control of the airplane that entered a dive and crashed into the Lake Superior. The pilot was killed.", "Crash cause": "Human factor"}, {"Date": "7/2/1930", "Time": "NA", "Aircraft": "Douglas M-4", "Operator": "National Air Transport - USA", "Registration": "NC1648", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "314", "YOM": "NA", "Flight number": "NA", "Crash location": "Middlebury Indiana", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, while cruising at low height, the single engine airplane collided with power cables and crashed in a field. The aircraft was destroyed and the pilot was injured.", "Crash cause": "Human factor"}, {"Date": "9/27/1930", "Time": "NA", "Aircraft": "Fairchild FC-2", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "G-CYWU", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "19", "YOM": "1929", "Flight number": "NA", "Crash location": "Crystal Island Northwest Territories", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On a clearly day, while in the process of an overshoot following an aborted landing attempt, the aircraft hit tree tops and crashed in a wooded area. Both occupants were uninjured while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "10/12/1930", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 28", "Operator": "L'A\u00e9ropostale", "Registration": "F-AJUU", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Casablanca \u2013 Paris", "MSN": "928", "YOM": "1930", "Flight number": "NA", "Crash location": "Larache Tangier-T\u00e9touan", "Country": "Morocco", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While cruising over the region of Larache (El Ara\u00efch), the pilot encountered poor weather conditions with storms. He lost control of the airplane that crashed. All four occupants were killed. Crew: Germain Villetard de Lagu\u00e9rie, pilot. Passengers: Mr. Augusto Belesch, Mrs. Jeuille Dif, Mr. or Mrs. Monica.", "Crash cause": "Weather"}, {"Date": "10/13/1930", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Wings Ltd", "Registration": "VH-UPC", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Maylands - Maylands", "MSN": "2021", "YOM": "1930", "Flight number": "NA", "Crash location": "Perth Western Australia", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While flying over the Darling Range, the aircraft went out of control, enetered a dive and crashed in hilly terrain, killing all three occupants. Crew: Charles Nesbit, pilot and Managing Director of Wings Ltd, Passengers: William Bell, Mrs. Haidee Rae.", "Crash cause": "Technical failure"}, {"Date": "10/14/1930", "Time": "16H 0M 0S", "Aircraft": "Junkers W.34", "Operator": "Transadriatica", "Registration": "I-AAMA", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Venice - Venice", "MSN": "2605", "YOM": "1928", "Flight number": "NA", "Crash location": "Venice Veneto", "Country": "Italy", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The single engine airplane departed Venice on a local test flight. Shortly after takeoff, at low height, it stalled and crashed. A crew member was killed while two others were seriously injured. Crew: Riccardo Pasquali, pilot, Gaetano Ferrari, engineer, \u2020 Dr. Piccirilli, engineer.", "Crash cause": "Unknown"}, {"Date": "10/24/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Flygindustri", "Registration": "SE-ABR", "Flight phase": "Flight", "Flight type": "Executive/Corporate/Business", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "438", "YOM": "1927", "Flight number": "NA", "Crash location": "Malm\u00f6 Sk\u00e5ne", "Country": "Sweden", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances in the \u00d6resund off Limhamn, in the south suburb of Malm\u00f6. The pilot, sole on board, was injured, and the airplane sank.", "Crash cause": "Unknown"}, {"Date": "10/25/1930", "Time": "NA", "Aircraft": "Bl\u00e9riot Spad 56", "Operator": "Air Union France", "Registration": "F-AIYA", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Paris \u2013 Marseille", "MSN": "18/4411", "YOM": "1929", "Flight number": "NA", "Crash location": "Sens Yonne", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot departed Paris-Le Bourget Airport on a mail flight to Marseille. After takeoff, the pilote Ren\u00e9 Charpentier continued to the south and after passing over Fontainebleau, while approaching Sens, he encountered unknown technical problems and attempted to make an emergency landing. The aircraft crashed in a prairie and was damaged beyond repair. The pilot was unhurt.", "Crash cause": "Technical failure"}, {"Date": "11/1/1930", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Douglas Henry Corsellis", "Registration": "G-AAEI", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Norwich \u2013 Stag Lane", "MSN": "993", "YOM": "1929", "Flight number": "NA", "Crash location": "Stag Lane (Edgware) London Metropolis", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On approach to Stag Lane Airport, the pilot encountered poor visibility due to foggy conditions. On short final, the airplane collided with the perimeter fence and crashed, bursting into flames. The pilot, sole on board, was killed.", "Crash cause": "Human factor"}, {"Date": "11/7/1930", "Time": "14H 0M 0S", "Aircraft": "Junkers G.24", "Operator": "Syndicato Condor", "Registration": "P-BAHA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Porto Alegre \u2013 Laguna \u2013 Rio de Janeiro", "MSN": "921", "YOM": "1928", "Flight number": "NA", "Crash location": "Iguape S\u00e3o Paulo", "Country": "Brazil", "Region": "South America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "7", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The aircraft departed Porto Alegre at 0600LT bound for Rio de Janeiro with six passengers and a crew of three on board. During the intermediate stop at Laguna, Santa Catarina, a seventh passenger boarded. The aircraft named 'Potyguar' continued to the northeast and while cruising some 500 metres off the beach of Icapara, the aircraft 'exploded', lost height and crashed into the sea. Nine occupants were quickly rescued by locals while a passenger, Colonel Attila Gaston Joseph Campos Salvaterra, was killed. Crew: Heinz Luels, pilot, Herbert Hermann, copilot, Guido Kleinat, mechanic. Passengers: Colonel Attila Gaston Joseph Campos Salvaterra, \u2020 Dr. Joseph Falcani, Dr. Hannibal Loureiro, Colonel de Basil Bicca Avila, Jean Cunha, George Frederic Pichel, Dr. Demetrius Mercio Xavier.", "Crash cause": "Unknown"}, {"Date": "12/19/1930", "Time": "NA", "Aircraft": "Waco 9", "Operator": "Frederic M. Greenwood", "Registration": "NC3757", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "270", "YOM": "1926", "Flight number": "NA", "Crash location": "Bellows Falls Vermont", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft crashed in unknown circumstances in Bellows Falls. Two occupants were killed and a third was injured.", "Crash cause": "Unknown"}, {"Date": "12/27/1930", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 26", "Operator": "L'A\u00e9ropostale", "Registration": "F-AJKH", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Dakar \u2013 Casablanca \u2013 Alicante \u2013 Barcelona \u2013 Perpignan \u2013 Toulouse", "MSN": "735", "YOM": "1929", "Flight number": "NA", "Crash location": "Tarfaya La\u00e2youne-Boujdour-Sakia El Hamra", "Country": "Western Sahara", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Dakar to Casablanca, the crew lost his orientation and attempted to make an emergency landing. No distress call was received at the company base in Casablanca. SAR operations were initiated and the crew of another aircraft spotted the wreckage three days later in an uninhabited area located south of Tarfaya, near Cape Juby. All three occupants were rescued . Crew: Albert Pinot, pilot, Mr. Neri, mechanic. Passenger: Mr. Ibrapa.", "Crash cause": "Unknown"}, {"Date": "1/7/1931", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Wedell-Williams Air Services", "Registration": "NC537M", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Dallas \u2013 New Orleans", "MSN": "106", "YOM": "1930", "Flight number": "NA", "Crash location": "Marshall Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route from Dallas to New Orleans, the crew encountered poor visibility due to foggy conditions when the aircraft crashed in Marshall, TX. The aircraft was destroyed and all three occupants were killed. Crew: Arthur C. Brown, pilot, Everett Williams, mechanic. Passenger: Robert Wilton.", "Crash cause": "Weather"}, {"Date": "1/17/1931", "Time": "NA", "Aircraft": "Junkers W.34", "Operator": "Guinea Airways", "Registration": "VH-UJD", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2604", "YOM": "1929", "Flight number": "NA", "Crash location": "Wampit Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Upon landing, a gear failed. The aircraft veered off runway and came to rest. Both occupants evacuated safely and the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "1/28/1931", "Time": "NA", "Aircraft": "Heinkel HD.24", "Operator": "Deutsche Verkehrsfliegerschule - DVS", "Registration": "D-1313", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "271", "YOM": "1928", "Flight number": "NA", "Crash location": "El Calafate Santa Cruz", "Country": "Argentina", "Region": "South America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Named 'Tsingtau', the aircraft was carrying two crew members among them the famous German aviator G\u00fcnther Pl\u00fcschow. They were performing their second attempt to fly to the south Patagonia, between Chile and Argentina. While cruising over the region of the Perito Moreno Glacier, some 78 km from El Calafate, the aircraft crashed in unknown circumstances, killing both occupants. Crew: Gunther Pl\u00fcschow, pilot, Ernst Dreblow, mechanic.", "Crash cause": "Unknown"}, {"Date": "2/4/1931", "Time": "NA", "Aircraft": "Blackburn R.B.1 Iris", "Operator": "Royal Air Force - RAF", "Registration": "N238", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "RAF Mount Batten - RAF Mount Batten", "MSN": "1", "YOM": "1929", "Flight number": "NA", "Crash location": "Mount Batten AFB Devon", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "12", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "The aircraft was engaged in a training mission with 12 crew on board on behalf of the 209 Squadron. At the time of the accident, weather conditions were good with a calm sea. At a speed of 70 mph, the float plane hit violently the water surface and was wrecked. Three crew members were rescued while nine other occupants perished. Crew: W/Cdr Charles Gilbert Tucker, \u2020 F/O Frederick Kingsley Wood, \u2020 Sgt Edmund Walter Harris Wilson, \u2020 LAC William Henry Stark, \u2020 LAC Cecil Gwilym Davies, \u2020 LAC Louis Charles Oates, \u2020 LAC Harold Corrie Ongley, \u2020 LAC William Sidney Rutledge, \u2020 LAC William George Stevens, \u2020 F/Lt Maurice Hibbert Ely, F/Lt Charles Ryley, Cpl William Mansell Barry.", "Crash cause": "Human factor"}, {"Date": "2/7/1931", "Time": "17H 30M 0S", "Aircraft": "Sikorsky S-38", "Operator": "Panagra - Pan American-Grace Airways", "Registration": "NC306N", "Flight phase": "Landing (descent or approach)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Talara \u2013 Col\u00f3n", "MSN": "414-04", "YOM": "1929", "Flight number": "NA", "Crash location": "Col\u00f3n Col\u00f3n", "Country": "Panama", "Region": "Central America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a mail flight from Talara, Peru, to France Field (Col\u00f3n). Upon arrival, the seaplane crashed in unknown circumstances in the Lim\u00f3n Bay. All three occupants were injured.", "Crash cause": "Unknown"}, {"Date": "2/24/1931", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 32", "Operator": "L'A\u00e9ropostale", "Registration": "F-AITX", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Algiers \u2013 Marseille", "MSN": "84", "YOM": "1928", "Flight number": "NA", "Crash location": "Banyuls-sur-Mer Pyr\u00e9n\u00e9es-Orientales", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew encountered strong headwinds all along the flight from Algiers to Marseille. After overflying Cape of Creus in Catalonia, both engines failed due to fuel exhaustion. The crew ditched the aircraft off Banyuls-sur-Mer, Pyr\u00e9n\u00e9es Orientales. The crew of the Spanish cargo named 'Stella' was quickly on the scene but during the towing operations, the float plane sank and the radio navigator Bossard drowned. The pilot Edmond Larbonne and the mechanic were rescued.", "Crash cause": "Technical failure"}, {"Date": "4/2/1931", "Time": "NA", "Aircraft": "Avro 594 Avian", "Operator": "Charles Maurice Brown", "Registration": "G-EBZD", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Croydon - Croydon", "MSN": "161", "YOM": "1928", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from Croydon Airport, while in initial climb, the single engine airplane stalled and crashed in Carshalton. The pilot Charles Maurice Brown and the passenger F/O Ernest Frederick Smith were killed.", "Crash cause": "Unknown"}, {"Date": "4/22/1931", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.154 Argosy", "Operator": "Imperial Airways", "Registration": "G-AACH", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Croydon - Croydon", "MSN": "AW.362", "YOM": "1928", "Flight number": "NA", "Crash location": "Croydon Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was engaged in a local training flight out from Croydon Airport. Shortly after liftoff, while in initial climb, the aircraft stalled and crashed, bursting into flames. Both crew were injured and the aircraft was destroyed by a post crash fire.", "Crash cause": "Technical failure"}, {"Date": "5/12/1931", "Time": "NA", "Aircraft": "Breguet 19", "Operator": "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Courtrai - Goetsenhoven", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Courtrai-Wevelgem West Flanders", "Country": "Belgium", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Crashed in unknown circumstances shortly after takeoff from Courtrai-Wevelgem Airport. Both pilots Justin Denis Patron and Ren\u00e9 Eulalie van Boogaert were killed.", "Crash cause": "Unknown"}, {"Date": "5/16/1931", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "B.F. Goodrich Company", "Registration": "NX308H", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "79", "YOM": "1929", "Flight number": "NA", "Crash location": "Vineland Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a local test flight when the aircraft crashed in unknown circumstances in Vineland. While both occupants were unhurt, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "7/2/1931", "Time": "NA", "Aircraft": "Junkers W.33", "Operator": "Eurasia Aviation Corporation", "Registration": "II", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Nankin \u2013 Lanzhou", "MSN": "2560", "YOM": "1930", "Flight number": "NA", "Crash location": "Lanzhou Gansu", "Country": "China", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "It is believed that the crew was forced to make an emergency landing while approaching Lanzhou. The mechanic was injured and the pilot escaped unhurt. Other source reports that the aircraft was shot down over Mongolia - China border.", "Crash cause": "Unknown"}, {"Date": "7/15/1931", "Time": "11H 30M 0S", "Aircraft": "Nieuport-Delage NiD-641", "Operator": "Soci\u00e9t\u00e9 de Transports A\u00e9riens Rapides - STAR", "Registration": "F-AJRB", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Cannes \u2013 Grenoble \u2013 Dijon \u2013 Paris", "MSN": "10", "YOM": "1930", "Flight number": "NA", "Crash location": "Lus-la-Croix-Haute Dr\u00f4me", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "4", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While cruising over the Alps and approaching the Lus-la-Croix-Haute Pass from the south, the pilot encountered misty conditions and the visibility was low. The aircraft hit the ground and crashed near the pass. The pilot Albert Bouthier and two passengers were killed while two other passengers were injured. The aircraft was returning to Paris with few other airplanes from the same operator, carrying some 20 models accompanying the French fashion designer Aline Chiffon. It was descending to Grenoble-Moirans Airport, a scheduled intermediate stop before continuing to Dijon and Paris. Crew: Albert Bouthier, pilot. \u2020 Passengers: Mrs. Aluta (aka Aline Chiffon), \u2020 Mr. Arbeau, \u2020 Mrs. Soskins, Mr. Amon.", "Crash cause": "Human factor"}, {"Date": "9/12/1931", "Time": "23H 30M 0S", "Aircraft": "Dornier Do J Wal", "Operator": "Syndicato Condor", "Registration": "PP-CAL", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Fernando de Noronha - Natal - Rio de Janeiro", "MSN": "107", "YOM": "1930", "Flight number": "NA", "Crash location": "Natal Rio Grande do Norte", "Country": "Brazil", "Region": "South America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The seaplane named 'Olinda' was performing a flight from Europe to South America with intermediate stops in Fernando de Noronha, Natal and Rio de Janeiro. While taking off from the Rio Potenji in Natal, the aircraft hit a floating object and crashed. Three occupants were killed while a crew member was injured.", "Crash cause": "Other causes"}, {"Date": "9/16/1931", "Time": "NA", "Aircraft": "Sikorsky S-38", "Operator": "United States Navy - USN", "Registration": "NA", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "David - Belize City", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "David Chiriqu\u00ed", "Country": "Panama", "Region": "Central America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "Shortly after takeoff from David, the airplane went out of control and crashed, bursting into flames. The radio navigator was seriously injured while three others were killed. Few hours later, the only survivor died from his injuries. The aircraft was en route to Belize City with a load of 600 pounds of bandages and medical supplies for the stricken Honduras section. Crew: Lt C. K. Langford +3.", "Crash cause": "Unknown"}, {"Date": "9/18/1931", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Nigel B. Cohen", "Registration": "G-AAKR", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lympne - Lympne", "MSN": "1395", "YOM": "1930", "Flight number": "NA", "Crash location": "Lympne Kent", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot departed Lympne on a local solo training flight. At a height of 4,000 feet, while completing aerobatics, he lost control of the airplane that entered a dive. A wing broke off and the airplane lost several pieces before crashing in Royal Oak Inn, near Lympne. The pilot was killed.", "Crash cause": "Human factor"}, {"Date": "9/30/1931", "Time": "NA", "Aircraft": "De Havilland DH.9", "Operator": "Royal Netherlands East Indies Air Force - ML-KNIL", "Registration": "H-115", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kalijati - Bandung", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lembang West Java", "Country": "Indonesia", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While descending to Bandung, the aircraft suffered an engine failure. The pilot attempted an emergency landing when the aircraft crashed in a dense wooded area located in Lembang, north of Bandung. The aircraft was destroyed and the pilot was injured.", "Crash cause": "Technical failure"}, {"Date": "10/25/1931", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 26", "Operator": "L'A\u00e9ropostale", "Registration": "F-AIXU", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Toulouse \u2013 Perpignan \u2013 Barcelona \u2013 Alicante \u2013 Casablanca", "MSN": "684", "YOM": "1928", "Flight number": "NA", "Crash location": "Skhirat Rabat-Sal\u00e9-Zemmour-Zaer", "Country": "Morocco", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Alicante to Casablanca, the aircraft crashed in unknown circumstances southwest of Rabat. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "11/20/1931", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "The Rhodesian Aviation Company", "Registration": "VP-YAB", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "452", "YOM": "1928", "Flight number": "NA", "Crash location": "Bulawayo Bulawayo", "Country": "Zimbabwe", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after takeoff from Bulawayo Airport, the single engine airplane went out of control and crashed, killing both occupants. Crew: Lt Daniel S. Judson, pilot. Passenger: Jock Speight.", "Crash cause": "Unknown"}, {"Date": "12/6/1931", "Time": "5H 46M 0S", "Aircraft": "Fokker F7", "Operator": "KLM Royal Dutch Airlines - Koninklijke Luchtvaart Maatschappij", "Registration": "PH-AFO", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Melbourne \u2013 Alor Setar \u2013 Bangkok \u2013 Yangon \u2013 Amsterdam", "MSN": "5236", "YOM": "1930", "Flight number": "NA", "Crash location": "Bangkok-Don Mueang Bangkok City District", "Country": "Thailand", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "4", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The aircraft was carrying three passengers, a crew of four and 209 kilos of mail. Two takeoff attempts were rejected because the aircraft was too heavy. In such conditions, the captain decided to start the takeoff roll from a further point at the airport. On the third attempt, after a course of 1,500 metres, the aircraft impacted a dirt bank. The undercarriage were torn off and the airplane crashed. The radio operator was seriously injured and all six other occupants were killed. Crew: Thaeke Wiersma, pilot, Jan van Onlangs, copilot, G. van Zadelhoff, radio operator, J. F. W. O. Kotte, mechanic.", "Crash cause": "Other causes"}, {"Date": "12/24/1931", "Time": "NA", "Aircraft": "Avia BH-25", "Operator": "Bata Shoes", "Registration": "OK-ABC", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Vienna - Venice", "MSN": "3", "YOM": "1928", "Flight number": "NA", "Crash location": "Stolzalpe Styria", "Country": "Austria", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Vienna-Aspern Airport on a cargo flight to Venice with two crew members on board. En route, the pilot got lost due to snow falls. He attempted an emergency landing when the airplane crashed in a hilly terrain near Stolzalpe. The aircraft was destroyed and both crew members walked away for two days before finding help.", "Crash cause": "Weather"}, {"Date": "2/19/1932", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Leslie S. Hamilton", "Registration": "G-AAXW", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "2027", "YOM": "1930", "Flight number": "NA", "Crash location": "Ruvo di Puglia Apulia", "Country": "Italy", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Brothers Leslie and Kenneth Hamilton were engaged in a flight from England to Australia. The crew departed Lympne Airport on February 18 bound for the south. While overflying Apulia, weather conditions worsened and the visibility was poor due to fog. The aircraft impacted a hill and was damaged beyond repair. Both occupants were injured.", "Crash cause": "Weather"}, {"Date": "2/27/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Aerocentro Ligure da Turismo", "Registration": "I-ABEB", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Genoa - Genoa", "MSN": "692", "YOM": "1928", "Flight number": "NA", "Crash location": "Genoa Liguria", "Country": "Italy", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing in unknown circumstances. Both occupants were injured and the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "3/18/1932", "Time": "NA", "Aircraft": "Farman F.303", "Operator": "Air Orient", "Registration": "F-AJIG", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "Baghdad \u2013 Damascus", "MSN": "7155.1", "YOM": "1930", "Flight number": "NA", "Crash location": "Syria All Syria", "Country": "Syria", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Baghdad to Damascus, the pilot encountered an unexpected situation and was forced to attempt an emergency landing in the Syrian Desert. While all occupants were unhurt and quickly rescued, the aircraft was probably damaged beyond repair and abandoned on site.", "Crash cause": "Unknown"}, {"Date": "3/20/1932", "Time": "NA", "Aircraft": "Focke-Wulf A.16", "Operator": "Flugdienst Breslau - Wilhelm Przibilla", "Registration": "D-548", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Lewin Brzeski - Lewin Brzeski", "MSN": "5", "YOM": "1924", "Flight number": "NA", "Crash location": "Lewin Brzeski Opole Voivodeship (Opolskie)", "Country": "Poland", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The single engine airplane was engaged in a local joyride in L\u00f6wen (now Lewin Brzeski), carrying three passengers and one pilot, Johannes Hentschel. For unknown reasons, he decided to takeoff from another area in the field, with a light and non significant wind component. In a relative muddy ground, the takeoff distance was too short when the pilot realized the presence of a ditch. He attempted to takeoff but the aircraft' speed was too low. It nosed down, crashed and came to rest upside down. All three passengers escaped with minor injuries while the pilot was seriously injured. He died from his injuries the following evening.", "Crash cause": "Human factor"}, {"Date": "3/20/1932", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Bhaba Deb Mukerjee", "Registration": "VT-ABJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2032", "YOM": "1930", "Flight number": "NA", "Crash location": "Lucknow Uttar Pradesh", "Country": "India", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was taking part to the Viceroy\u2019s Cup Race. While approaching Lucknow, the airplane struck a pylon and crashed. The pilot was injured and the aircraft was destroyed.", "Crash cause": "Human factor"}, {"Date": "3/29/1932", "Time": "NA", "Aircraft": "Farman F.190", "Operator": "Air Orient", "Registration": "F-AJDP", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Desert", "Schedule": "Damascus \u2013 Baghdad \u2013 Karachi", "MSN": "7135", "YOM": "1929", "Flight number": "NA", "Crash location": "Rutbah Wells (Ar Rutbah) Al-Anbar (<U+0627><U+0644><U+0623><U+0646><U+0628><U+0627><U+0631>)", "Country": "Iraq", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route from Damascus to Baghdad, the crew encountered poor weather conditions with a sandstorm. The pilot lost his orientation when the airplane impacted ground and crashed near Tell-Farida, in the region of Rutbah Wells, some 300 km west of Baghdad. The aircraft came to rest upside down and was destroyed. All three occupants were killed. The crew and passenger were performing a special flight on behalf of The League of Nations (Soci\u00e9t\u00e9 des Nations). The passenger was the Swiss Colonel de Reynier who was in charge to fix the border between Syria and Iraq. Crew: Julien Risser, pilot, Mr. Huber, mechanic. Passenger: Colonel de Reynier.", "Crash cause": "Weather"}, {"Date": "5/6/1932", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "K1050", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Wittering AFB - Wittering AFB", "MSN": "K1050", "YOM": "NA", "Flight number": "NA", "Crash location": "Wittering AFB Cambridgeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing a local solo training flight on formation with a second RAF Avro 504N registered K1042. While changing direction, K1050 collided with K1042. Both aircraft dove into the ground and crashed in a field near the airbase. Both pilots were killed.", "Crash cause": "Human factor"}, {"Date": "5/12/1932", "Time": "NA", "Aircraft": "Lior\u00e9-et-Olivier LeO H-253", "Operator": "Brazilian Air Force - Avia\u00e7\u00e3o Militar", "Registration": "K-613", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Campo dos Afonsos - Campo dos Afonsos", "MSN": "3", "YOM": "1931", "Flight number": "NA", "Crash location": "Campo dos Afonsos AFB Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "6", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The airplane named 'Tuiuty' crashed in unknown circumstances at Campo dos Afonsos AFB and was destroyed. Four crew members were killed and two others survived.", "Crash cause": "Unknown"}, {"Date": "5/21/1932", "Time": "NA", "Aircraft": "Spartan Three Seater I/II", "Operator": "Spartan Aircraft", "Registration": "G-ABTT", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Heston \u2013 Norwich", "MSN": "64", "YOM": "1932", "Flight number": "NA", "Crash location": "Stanton Suffolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route from Heston to Norwich, while taking part to the 'Morning Post' Air Race, the pilot lost control of the airplane that dove into the ground and crashed into trees near Stanton, Suffolk. The pilot Frank George Gibbons was killed.", "Crash cause": "Human factor"}, {"Date": "5/28/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Surrey Flying Services", "Registration": "G-EBSO", "Flight phase": "Takeoff (climb)", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brooklands \u2013 Croydon", "MSN": "419", "YOM": "1927", "Flight number": "NA", "Crash location": "Brooklands (Weybridge) Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Brooklands Aerodrome, the single engine airplane went out of control and crashed. The pilot, sole on board, was injured.", "Crash cause": "Unknown"}, {"Date": "6/23/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Finnish Air Force - Suomen Ilmavoimat", "Registration": "MO-99", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Kauhava - Kauhava", "MSN": "VL-4", "YOM": "1929", "Flight number": "NA", "Crash location": "Kauhava Ostrobothnia", "Country": "Finland", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was performing a local training mission out from Kauhava Airport. In flight, control was lost and the airplane crashed in a field. While the pilot was seriously injured, the mechanic was killed.", "Crash cause": "Unknown"}, {"Date": "6/29/1932", "Time": "NA", "Aircraft": "Fokker Super Universal", "Operator": "Canadian Airways", "Registration": "G-CASL", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "806", "YOM": "1928", "Flight number": "NA", "Crash location": "Mazenod Lake Northwest Territories", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route, the pilot lost control of the aircraft that crashed 450 km northeast of Yellowknife. All three occupants, a pilot and two engineers, were killed. A memorial was erected on site in summer 2009.", "Crash cause": "Unknown"}, {"Date": "7/10/1932", "Time": "NA", "Aircraft": "Boeing 80", "Operator": "Boeing Air Transport", "Registration": "NC229M", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Chicago \u2013 Oakland", "MSN": "1087", "YOM": "1929", "Flight number": "NA", "Crash location": "Sterling Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "5", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Chicago to Oakland, while cruising over the area of Sterling, west of Chicago, the crew encountered poor weather conditions with heavy rain falls, turbulences and thunderstorm activity. The captain decided to attempt an emergency landing in an open field when, upon touchdown, the airplane went out of control and crashed. All eight occupants evacuated safely.", "Crash cause": "Weather"}, {"Date": "8/27/1932", "Time": "NA", "Aircraft": "Morane-Saulnier M.S.60 Moth", "Operator": "Etienne Michelin", "Registration": "F-ALKX", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Clermont-Ferrand - Clermont-Ferrand", "MSN": "37", "YOM": "1930", "Flight number": "NA", "Crash location": "Saint-Gen\u00e8s-Champanelle Puy-de-D\u00f4me", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Etienne Michelin departed Clermont-Ferrand-Aulnat Airport at the end of the afternoon for a private flight, heading to the Puys Mountain Range. En route, he encountered poor weather conditions with thunderstorm activity. The airplane went out of control and crashed in a prairie. The pilot, sole on board, was killed.", "Crash cause": "Weather"}, {"Date": "10/2/1932", "Time": "NA", "Aircraft": "Stinson SM-2/SM-7/SM-8", "Operator": "Petro Sol Corporation", "Registration": "NC8481", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1075", "YOM": "1929", "Flight number": "NA", "Crash location": "North Haven Connecticut", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The single engine airplane departed New Haven-Tweed Airport with four people on board, three passengers and one pilot. Climbing to the north, the airplane went out of control and crashed on the edge of a pasture located in North Haven, just north of Clintonville Road. A passenger was seriously injured and three other occupants were killed. Crew: George A. Smith, pilot. \u2020 Passengers: Lester Smith, \u2020 Beatie Russner, \u2020 John A. Hood.", "Crash cause": "Unknown"}, {"Date": "10/9/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Northern Air Transport", "Registration": "G-EBZU", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "686", "YOM": "1928", "Flight number": "NA", "Crash location": "Barton Lancashire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from Barton, while climbing, the aircraft went out of control and crashed in Irlam, near the airport. The pilot C. S. G. Homewood was seriously injured and his wife Olga Homewood was killed.", "Crash cause": "Unknown"}, {"Date": "12/6/1932", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A7-41", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Richmond - Richmond", "MSN": "LASCO.18", "YOM": "NA", "Flight number": "NA", "Crash location": "Richmond South Australia", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "On final approach to Richmond, the pilot failed to realize that he was flying too low. A gear impacted a fence and the aircraft overturned and crashed upside down, bursting into flames. While the P/O Charles M. Blamey was killed, the passenger Able Seaman John Plumb was injured.", "Crash cause": "Human factor"}, {"Date": "12/13/1932", "Time": "6H 0M 0S", "Aircraft": "Boeing 40", "Operator": "Boeing Air Transport", "Registration": "NC842M", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Chicago \u2013 Omaha", "MSN": "1168", "YOM": "1929", "Flight number": "NA", "Crash location": "McClelland Iowa", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While on a night mail flight from Chicago to Omaha, the pilot encountered an unexpected situation. He reduced his altitude and attempted an emergency landing when the aircraft crashed and came to rest upside down, bursting into flames. The pilot was uninjured and the aircraft was destroyed.", "Crash cause": "Technical failure"}, {"Date": "1/24/1933", "Time": "NA", "Aircraft": "Ford 5", "Operator": "Pacific Air Transport", "Registration": "NC431H", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Portland \u2013 Eugene \u2013 Medford", "MSN": "5-AT-098", "YOM": "1931", "Flight number": "NA", "Crash location": "Eugene Oregon", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The three engine airplane was ready for a schedule service from Portland to Medford. As the weather was iffy, all passengers tickets were canceled but the crew has to deliver the mail. The airplane departed Portland-Swan Island Airport at 1015LT bound for Eugene. Approaching Eugene, the crew encountered marginal weather conditions with low clouds but was able to land without further problems. After the mail was deplaned, the crew was cleared for takeoff. Following a normal takeoff run, the pilot-in-command initiated the rotation when the right engine failed. The airplane stalled, collided with a runway light and eventually crashed onto a vacant house. All three crew members were injured, both pilots seriously. The following day, they both died from their injuries. The aircraft named 'Dawson' was destroyed. Crew: Harold Adams, pilot, \u2020 Kenneth Householder, copilot, \u2020 Cornelia Pederman, stewardess.", "Crash cause": "Technical failure"}, {"Date": "1/25/1933", "Time": "NA", "Aircraft": "Avro 504", "Operator": "Royal Air Force - RAF", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Abu Sueir - Abu Sueir", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abu Sueir Ismailia", "Country": "Egypt", "Region": "Africa", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Sgt Henry Thomas Inglis was completing a post maintenance test flight out from Abu Sueir Airport. The accident occurred in unknown circumstances, killing the pilot, sole on board.", "Crash cause": "Unknown"}, {"Date": "2/19/1933", "Time": "NA", "Aircraft": "Fairchild FC-2", "Operator": "Canadian Airways", "Registration": "G-CATU", "Flight phase": "Takeoff (climb)", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "CV-104", "YOM": "1928", "Flight number": "NA", "Crash location": "Kenogamissi Lake Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Shortly after takeoff from Kenogamissi Lake, the airplane impacted a tree, causing the left wing to be torn off. The aircraft descended to the ground and crashed. All five occupants were killed.", "Crash cause": "Unknown"}, {"Date": "3/31/1933", "Time": "NA", "Aircraft": "Ford 4", "Operator": "J. H. O\u2019Brien", "Registration": "NC7686", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Tulsa \u2013 Winnipeg", "MSN": "4-AT-044", "YOM": "1928", "Flight number": "NA", "Crash location": "Neodesha Kansas", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "11", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "En route from Tulsa to Winnipeg, while cruising south of Topeka, the crew encountered technical problems and was forced to attempt an emergency landing. The pilot reduced his altitude and elected to land in an open field when the aircraft stalled and crashed 11 km south of Neodesha. Both pilots and five passengers were killed. All occupants were members of the Winnipeg Toilers basketball team. Crew: Avlie H. Hakes, pilot, H. E. Eggens, copilot.", "Crash cause": "Technical failure"}, {"Date": "4/3/1933", "Time": "16H 0M 0S", "Aircraft": "Junkers F.13", "Operator": "Deutsche Lufthansa", "Registration": "D-534", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Dortmund \u2013 Hanover", "MSN": "694", "YOM": "1926", "Flight number": "NA", "Crash location": "Hemkenrode Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route from Dortmund to Hanover, the airplane caught fire in flight. The crew attempted an emergency landing when the aircraft crashed in a pasture located in Hemkenrode, bursting into flames. A pilot was killed while the second occupant was seriously injured.", "Crash cause": "Unknown"}, {"Date": "4/29/1933", "Time": "NA", "Aircraft": "Junkers W.34", "Operator": "Deutsche Lufthansa", "Registration": "D-4", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin - Berlin", "MSN": "2737", "YOM": "1933", "Flight number": "NA", "Crash location": "Traunstein Bavaria", "Country": "Germany", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The airplane departed Berlin on a long term test flight, carrying one passenger and three crew members. En route, the airplane went out of control and crashed in a field, bursting into flames. All four occupants were killed. The crew was completing a test mission before the aircraft would be delivered to Eurasia, China. Crew: Hans Wende, Mr. Eichenfoss, Mr. Schmidt.", "Crash cause": "Unknown"}, {"Date": "5/31/1933", "Time": "18H 0M 0S", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Armand Dufaux", "Registration": "CH-274", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Geneva - Geneva", "MSN": "2182", "YOM": "1931", "Flight number": "NA", "Crash location": "Versoix Geneva", "Country": "Switzerland", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot Armand Dufaux departed Geneva-Cointrin on a solo local flight. After takeoff, the airplane encountered difficulties to gain sufficient altitude. It collided with power cables and crashed in an open field located in Versoix, few km from the airfield. The pilot escaped with minor injuries and the airplane was destroyed.", "Crash cause": "Unknown"}, {"Date": "6/1/1933", "Time": "NA", "Aircraft": "Fokker F14", "Operator": "United States Army Air Corps - USAAC", "Registration": "31-395", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1429", "YOM": "1931", "Flight number": "NA", "Crash location": "Rockingham North Carolina", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances shortly after takeoff from Rockingham. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "7/1/1933", "Time": "13H 0M 0S", "Aircraft": "Savoia-Marchetti S.55", "Operator": "Regia Aeronautica", "Registration": "I-DINI", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Orbetello \u2013 Schellingwoude", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Amsterdam North Holland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The seaplane departed Orbetello on a flight to the US, taking part to a world tour with 25 other similar airplane under the command of General Italo Balbo. While attempting to land in the harbor of Amsterdam (Schellingwoude), the airplane impacted a dam and crashed. Four crew members were injured and the Sgt Quintavalle was killed.", "Crash cause": "Human factor"}, {"Date": "7/23/1933", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "V. Spencer", "Registration": "CF-ALX", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2050", "YOM": "1930", "Flight number": "NA", "Crash location": "Takla Landing British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff, the aircraft named 'City of Prince George' hit a tree and crashed some 170 km north of Takla Landing, British Columbia. All four occupants escaped unhurt while the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "9/24/1933", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Winnipeg Flying Club", "Registration": "G-CAKB", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Winnipeg - Winnipeg", "MSN": "449", "YOM": "1928", "Flight number": "NA", "Crash location": "Sanford Manitoba", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The single engine airplane departed Winnipeg on a training flight. While cruising at low altitude, it stalled and crashed in an open field. The passenger was killed while the pilot was injured.", "Crash cause": "Unknown"}, {"Date": "9/28/1933", "Time": "NA", "Aircraft": "Spartan Three Seater I/II", "Operator": "Rollason Aviation", "Registration": "G-ABWV", "Flight phase": "Flight", "Flight type": "Positioning", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Yapton \u2013 Grantham", "MSN": "68", "YOM": "1932", "Flight number": "NA", "Crash location": "Grantham AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While approaching Grantham, the pilot encountered low visibility due to foggy conditions. Too low, the airplane impacted a hill and crashed. The George B. Watson was killed.", "Crash cause": "Human factor"}, {"Date": "10/15/1933", "Time": "NA", "Aircraft": "General Aircraft Genairco", "Operator": "Rabaul Airways", "Registration": "VH-UNY", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kabakaul - Kabakaul", "MSN": "12", "YOM": "1930", "Flight number": "NA", "Crash location": "Kabakaul East New Britain", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane was completing local joyrides in the area of Rabaul and Kanakaul. While flying over the Rainau Plantation, the pilot Duncan failed to realized his altitude was insufficient. The airplane struck a tall coconut tree and crashed. A passenger was killed while the second passenger was seriously injured. The pilot Duncan escaped with minor injuries.", "Crash cause": "Human factor"}, {"Date": "10/21/1933", "Time": "NA", "Aircraft": "Boulton & Paul P.64 Mailplane", "Operator": "Boulton %26 Paul Industry", "Registration": "G-ABYK", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Martlesham Heath AFB - Martlesham Heath AFB", "MSN": "P.64", "YOM": "1933", "Flight number": "NA", "Crash location": "Martlesham Heath AFB Suffolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, was engaged in a local test flight on this machine that was built by Boulton & Paul's factory seven months ago. During initial climb, the twin engine aircraft went out of control and crashed. The pilot was killed.", "Crash cause": "Unknown"}, {"Date": "10/25/1933", "Time": "NA", "Aircraft": "Polikarpov AP", "Operator": "Selkhozaviatsiya", "Registration": "CCCP-A11", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "2481", "YOM": "1931", "Flight number": "NA", "Crash location": "Russia All Russia", "Country": "Russia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "10/25/1933", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Dr. R. Schien", "Registration": "D-1869", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "D\u00fcbendorf - D\u00fcbendorf", "MSN": "1544", "YOM": "1930", "Flight number": "NA", "Crash location": "D\u00fcbendorf Zurich", "Country": "Switzerland", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "1", "Total fatalities": 2, "Circumstances": "While flying at an altitude of 80-100 metres in the vicinity of D\u00fcbendorf Airport, the pilot lost control of the airplane that dove into the ground and crashed. The pilot was killed as well as one people on the ground.", "Crash cause": "Unknown"}, {"Date": "10/30/1933", "Time": "10H 15M 0S", "Aircraft": "Couzinet 33 Biarritz", "Operator": "Charles de Verneilh Puyraseau", "Registration": "F-ALMV", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Tunis \u2013 Dijon \u2013 Paris", "MSN": "2", "YOM": "1931", "Flight number": "NA", "Crash location": "Blaisy-Bas C\u00f4te-d'Or", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The airplane was returning to Paris following a tour of the Mediterranean countries. It departed Tunis in the early morning bound to Paris with an intermediate stop in Dijon. Few minutes after takeoff from Dijon, the crew encountered poor visibility due to foggy conditions. Too low, the airplane impacted the slope of a hill in Blaisy-Bas, some 24 km northwest of Dijon. The aircraft was destroyed and all three crew members were killed. Crew: Charles de Verneilh Puyraseau, pilot, Mr. Le Bas, mechanic, Mr. Goulmy, radio navigator.", "Crash cause": "Weather"}, {"Date": "11/16/1933", "Time": "9H 0M 0S", "Aircraft": "Lior\u00e9-et-Olivier LeO H-213", "Operator": "Air France", "Registration": "F-AIFD", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "City", "Schedule": "Paris \u2013 Croydon", "MSN": "1", "YOM": "1926", "Flight number": "NA", "Crash location": "Beauvais Oise", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew departed Paris-Le Bourget Airport at 0840LT on a mail flight to Croydon. Twenty minutes later, while cruising at an altitude of 1,000 metres, the left engine caught fire. The crew decided to bail out and abandoned the aircraft that impacted an electricity pole and the roof of a factory before crashing in an affluent of the Avelon River, bursting into flames. Both pilots were uninjured while the aircraft was destroyed. All mail, more than one ton, was also destroyed.", "Crash cause": "Technical failure"}, {"Date": "12/11/1933", "Time": "16H 0M 0S", "Aircraft": "Focke-Wulf A.17", "Operator": "Deutsche Lufthansa", "Registration": "D-1403", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin - Hamburg", "MSN": "47", "YOM": "1928", "Flight number": "NA", "Crash location": "Hamburg-Helmut-Schmidt (Fuhlsb\u00fcttel) Hamburg", "Country": "Germany", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "4", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "On final approach to Hamburg-Fuhlsb\u00fcttel Airport in foggy conditions and snow falls, the pilot failed to realize his altitude was too low. The aircraft collided with an obstacle and crashed, bursting into flames. A passenger survived while all seven other occupants were killed. The aircraft was named 'L\u00fcneburg'.", "Crash cause": "Human factor"}, {"Date": "2/23/1934", "Time": "14H 15M 0S", "Aircraft": "Boeing 247", "Operator": "Boeing Air Transport", "Registration": "NC13357", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Los Angeles \u2013 Salt Lake City \u2013 Cheyenne \u2013 Chicago", "MSN": "1739", "YOM": "1933", "Flight number": "NA", "Crash location": "Salt Lake City Utah", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "5", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The airplane was completing a schedule service from Los Angeles to Chicago with intermediate stops in Salt Lake City and Cheyenne. It departed Salt Lake City Airport at 1400LT bound for Cheyenne with five passengers and three crew members on board. Weather conditions were poor with limited visibility due to snow falls and fog. While flying at an altitude of 8,000 feet at full speed, the airplane impacted the slope of the Parley's Canyon located about 17 km southeast of Salt Lake City Airport. The aircraft disintegrated on impact and all eight occupants were killed. Crew: Lloyd Anderson, pilot, Eric G. Danielson, copilot.", "Crash cause": "Human factor"}, {"Date": "2/26/1934", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 28", "Operator": "Air France", "Registration": "F-AJPA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Paris \u2013 Casablanca \u2013 Dakar \u2013 Buenos Aires", "MSN": "925", "YOM": "1930", "Flight number": "NA", "Crash location": "Cape Bojador La\u00e2youne-Boujdour-Sakia El Hamra", "Country": "Western Sahara", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "5", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The single engine airplane departed Paris on an international schedule service to Buenos Aires with five passengers and two crew members on board. On the leg from Casablanca to Dakar, while cruising at night at an altitude of 3,000 metres, the engine caught fire. The pilot reduced his altitude and attempted an emergency landing when the airplane crash landed in rough terrain located about 50 km from the Cape Bojador, bursting into flames. Six occupants were injured while the flight engineer Jean Reig was killed. Crew: Marcel Goret, pilot, Fr\u00e9d\u00e9ric Marret, radio operator, Jean Reig, flight engineer. \u2020", "Crash cause": "Technical failure"}, {"Date": "3/9/1934", "Time": "NA", "Aircraft": "Keystone LB-6", "Operator": "United States Army Air Corps - USAAC", "Registration": "32-148", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Daytona Beach \u2013 Miami", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Daytona Beach Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane departed Daytona Beach Airport on a flight to Miami, carrying three crew members on behalf of the AACMO, the Army Air Corps Mail Operation. After liftoff, while climbing to a height of about 500 feet, the airplane stalled and crashed in a cypress area. Lt Sell was killed and both other occupants were injured.", "Crash cause": "Unknown"}, {"Date": "3/31/1934", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "NKKK - Nippon Kaiji Kentei Kyokai", "Registration": "J-BALG", "Flight phase": "NA", "Flight type": "Executive/Corporate/Business", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "2014", "YOM": "1928", "Flight number": "NA", "Crash location": "Japan All Japan", "Country": "Japan", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in Japan. Crew fate unknown. Crashed somewhere in March, exact date unknown.", "Crash cause": "Unknown"}, {"Date": "5/29/1934", "Time": "NA", "Aircraft": "Udet U12 Flamingo", "Operator": "Austrian Air Force - \u00d6sterreichische Luftstreitkr\u00e4fte", "Registration": "A-110", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Graz - Graz", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Pernegg an der Mur Styria", "Country": "Austria", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Adolf Sikorovsky departed Graz-Thalerhof Airport on a local solo training mission. En route, the airplane went out of control and crashed in unknown circumstances in Pernegg an der Mur, some 30 km north of Graz. The pilot was killed.", "Crash cause": "Unknown"}, {"Date": "6/1/1934", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Central Airlines", "Registration": "NC934Y", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "138", "YOM": "1930", "Flight number": "NA", "Crash location": "Pittsburgh Pennsylvania", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "6/30/1934", "Time": "NA", "Aircraft": "Avro 504", "Operator": "National Aviation Day", "Registration": "G-ACRS", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Farnborough - Farnborough", "MSN": "K1802", "YOM": "NA", "Flight number": "NA", "Crash location": "Farnborough Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole on board, departed Farnborough on a local demo flight. At the time of the accident, about 3,000 spectators were at the airport. While cruising north of the airfield, the pilot lost control of the airplane that crashed in Cove. The aircraft was destroyed and the pilot was seriously injured. He died the next of injuries sustained.", "Crash cause": "Technical failure"}, {"Date": "7/17/1934", "Time": "NA", "Aircraft": "Macchi M.9", "Operator": "Spanish Air Force - Aeron\u00e1utica Militar", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Barcelona Catalonia", "Country": "Spain", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot Lt Jos\u00e9 de Sandoval, sole on board, was killed when the aircraft crashed in unknown circumstances into the sea off Barcelona.", "Crash cause": "Unknown"}, {"Date": "7/27/1934", "Time": "13H 0M 0S", "Aircraft": "Tupolev ANT-9", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L130", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Alma-Ata \u2013 Karaganda \u2013 Taldykorgan \u2013 Balkhash", "MSN": "131", "YOM": "1932", "Flight number": "NA", "Crash location": "Balkhash Karagandy", "Country": "Kazakhstan", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "8", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 10, "Circumstances": "The airplane departed Alma-Ata on a flight to Balkhash with intermediate stops in Karaganda and Taldykorgan. Following a wrong approach configuration to Balkhash Airport, the pilot led the airplane descending with a crosswind component which caused the airplane to land on one landing gear only. The pilot increased engine power and initiated a go-around procedure. During the circuit, the airplane encountered wind up to 47 km/h and due to inappropriate techniques on part of the pilot-in-command, the aircraft descended to a height of 20 metres. While completing a turn, it stalled and crashed 2 km from the runway, bursting into flames. The aircraft was destroyed and all 10 occupants were killed.", "Crash cause": "Human factor"}, {"Date": "8/24/1934", "Time": "13H 15M 0S", "Aircraft": "Waco UIC", "Operator": "K. de Geus van den Heuvel", "Registration": "PH-KGH", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Soesterberg \u2013 Twenthe", "MSN": "3833", "YOM": "1933", "Flight number": "NA", "Crash location": "Soesterberg Utrecht", "Country": "Netherlands", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after take off, while climbing, the pilot encountered engine problems and elected to return. On final, the airplane stalled and crashed 500 metres from the terrain, coming to rest upside down. All four occupants were injured and the aircraft was damaged beyond repair. It departed Soesterberg on a flight to Twenthe (Enschede).", "Crash cause": "Technical failure"}, {"Date": "10/3/1934", "Time": "NA", "Aircraft": "GVF PS-4", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L417", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Russia All Russia", "Country": "Russia", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "10/15/1934", "Time": "NA", "Aircraft": "Junkers A.20", "Operator": "Hansa Luftbild", "Registration": "D-404", "Flight phase": "Flight", "Flight type": "Aerial photography", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "459", "YOM": "1924", "Flight number": "NA", "Crash location": "K\u00f6nigswinter North Rhine-Westphalia", "Country": "Germany", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane was engaged in an aerial photography mission, carrying one photographer and one pilot. It crashed in unknown circumstances in K\u00f6nigswinter, some 10 km southeast of Bonn. The pilot Grobe was killed and the photographer Schmidt was seriously injured.", "Crash cause": "Unknown"}, {"Date": "10/17/1934", "Time": "NA", "Aircraft": "Airspeed AS.5 Courier", "Operator": "Air Taxis", "Registration": "G-ACLS", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Brindisi \u2013 Croydon", "MSN": "13", "YOM": "1934", "Flight number": "NA", "Crash location": "Grenoble Is\u00e8re", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances near Grenoble. The pilot Mr. Crundall was uninjured and the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "10/22/1934", "Time": "NA", "Aircraft": "Tupolev ANT-9", "Operator": "Deruluft - Deutsch-Russische Luftverkehrs Gesellschaft", "Registration": "D-2831", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Berlin - Moscow", "MSN": "145", "YOM": "1933", "Flight number": "NA", "Crash location": "Moscow Moscow oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Moscow Airport, the crew encountered poor weather conditions. Apparently to establish a visual contact with the ground, the crew reduced his altitude when the aircraft impacted trees and crashed in a wooded area located 5 km from Shakhovskaya, in the suburb of Moscow. All three occupants were injured and the aircraft was destroyed.", "Crash cause": "Human factor"}, {"Date": "10/26/1934", "Time": "NA", "Aircraft": "Ford 4", "Operator": "Ptarmigan Airlines", "Registration": "NC8403", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "4-AT-065", "YOM": "1929", "Flight number": "NA", "Crash location": "Flat Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following an uneventful cargo flight, the crew encountered marginal weather conditions upon arrival with strong winds. Upon touchdown, the airplane landed hard, causing the undercarriage to be torn off. The airplane went out of control, came to rest and was damaged beyond repair. Both pilots evacuated safely. The airplane was carrying spare parts for tractors and it is believed that its total weight was within limit upon landing.", "Crash cause": "Weather"}, {"Date": "11/3/1934", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Nottingham Aero Club", "Registration": "G-EBXG", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Nottingham - Nottingham", "MSN": "615", "YOM": "1928", "Flight number": "NA", "Crash location": "Nottingham Nottinghamshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a local pleasance flight and departed Tollerton Airfield that day. While making aerobatics manoeuvres, the crew lost control of the aircraft that dove into the ground and crashed in an open field located in Chilwell, southwest of Nottingham. Both pilots Philip S. Rook and Alan C. Grant-Dalton were killed.", "Crash cause": "Technical failure"}, {"Date": "11/23/1934", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Geoffrey H. Turner", "Registration": "G-AAZN", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Heston \u2013 Barton", "MSN": "2043", "YOM": "1930", "Flight number": "NA", "Crash location": "Leek Staffordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While flying at low altitude in foggy conditions, the aircraft hit the ground and crashed in a wheat field located in Rough Stone Farm, between the villages of Bradnop and Ipstones, Staffordshire. The pilot, sole on board, was killed.", "Crash cause": "Human factor"}, {"Date": "12/25/1934", "Time": "NA", "Aircraft": "Kalinin K-5", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L544", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Yanaul \u2013 Sverdlovsk", "MSN": "34", "YOM": "1930", "Flight number": "NA", "Crash location": "Ananino Sverdlovsk oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew departed Yanaul at 1000LT on a schedule service to Sverdlovsk. En route, weather conditions worsened and the visibility was very low due to thick fog. Approaching the village of Ananino, the airplane passed over houses at a height of about 4 metres. Then the pilot initiated a turn when the airplane stalled and crashed in a field outside the village. The airplane was destroyed and the mechanic was killed. Seriously injured, the pilot was transferred to a local hospital but he died few hours later.", "Crash cause": "Human factor"}, {"Date": "1/19/1935", "Time": "14H 0M 0S", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Canterbury Aero Club", "Registration": "ZK-ABQ", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Sockburn \u2013 Wellington", "MSN": "1806", "YOM": "1930", "Flight number": "NA", "Crash location": "Waipara Canterbury Regional Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The airplane departed Sockburn Aerodrome on a Saturday morning in an intended flight to Wellington. The foggy flying conditions encountered caused the pilot to land at Blenheim to await an improvement in the weather but when, after waiting for the rest of the morning, no improvement looked likely the decision was made to return to Christchurch. The pilot was hugging the coastline in bad visibility and at a low height about seven miles (12 kilometres) north of the Waipara River mouth when he took evasive action as a cliff appeared ahead. In doing so he lost control of the aircraft and it dived into the sea about 250 yards from the rocky coastline. On impact the Moth nosed over and began to sink upside down. The passenger, Cecil Haigh, was able to vacate his cockpit and help the pilot, Richard Roake, out of his. Using the aircraft's tires that been had torn off in the crash as life-buoys, they were able after a struggle to reach the shore. Unfortunately Mr Roake had hit his head on a rock before getting ashore and could proceed no further. Mr Haigh then set off alone in a harrowing trek along the steep and wild coastline to get help. At about 7 p.m., around 5 hours after the crash, Cecil Haigh came to the the homestead of Glenaffric Station, where despite his exhaustion he insisted on accompanying the rescue party that was quickly assembled. The searchers were unable to locate Mr. Roake that night, but in the morning he was found dead. The medical opinion was that he had died as the result of his head injuries. Crew: Richard Roake, pilot. \u2020 Passenger: Cecil Haigh.", "Crash cause": "Human factor"}, {"Date": "1/20/1935", "Time": "13H 50M 0S", "Aircraft": "CAMS 53", "Operator": "Air France", "Registration": "F-ALCF", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Saigon \u2013 Yangon \u2013 Akyab \u2013 Calcutta \u2013 Allahabad \u2013 Agra \u2013 Basra \u2013 Cairo \u2013 Benghazi \u2013 Kerky - Naples \u2013 Marseille", "MSN": "30", "YOM": "1931", "Flight number": "NA", "Crash location": "Santa Maria di Leuca Apulia", "Country": "Italy", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route from Kerkyra to Naples, the crew encountered poor weather conditions with snow falls. The captain decided to ditch the airplane in the Ionian Sea some 50 km southeast of Santa Maria di Leuca, Apulia. All six occupants were rescued by the crew of the Italian ship named 'Paganini' while the aircraft sank and was lost.", "Crash cause": "Weather"}, {"Date": "1/25/1935", "Time": "NA", "Aircraft": "Caudron C.280 Phal\u00e8ne", "Operator": "Compagnie G\u00e9n\u00e9rale TransSaharienne - CGT France", "Registration": "F-AMVD", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "Algiers \u2013 Colomb-B\u00e9char \u2013 Bidon V \u2013 Gao \u2013 Cotonou", "MSN": "6889.6", "YOM": "1934", "Flight number": "NA", "Crash location": "Parakou Borgou", "Country": "Benin", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crew was performing a mail flight from Algiers to Cotonou with intermediate stops in Colomb-B\u00e9char, Bidon 5 and Gao. On the last leg from Gao to Cotonou, crew encountered poor weather conditions due to a sandstorm. In low visibility, he decided to reduce his altitude when the aircraft hit the ground and crashed. While both occupants were slightly injured, the aircraft was destroyed by impact forces.", "Crash cause": "Weather"}, {"Date": "3/7/1935", "Time": "NA", "Aircraft": "Rohrbach Ro.VIII Roland II", "Operator": "Deruluft - Deutsch-Russische Luftverkehrs Gesellschaft", "Registration": "D-AJYP", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "45", "YOM": "NA", "Flight number": "NA", "Crash location": "Swidwin Pomeranian Voivodeship (Pomorskie)", "Country": "Poland", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Strctural failure in flight forced the crew to make an emergency landing. The aircraft landed in a wheat field but was damaged beyond repair. All three crew escaped unhurt.", "Crash cause": "Unknown"}, {"Date": "3/29/1935", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "Deutsche Lufthansa", "Registration": "D-OHIL", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "723", "YOM": "1924", "Flight number": "NA", "Crash location": "Svetlogorsk Kaliningrad oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew (three student pilots and two instructors) was performing a training flight over Baltic Sea, working on new telecommunications techniques. In flight, the single engine aircraft crashed into the sea for unknown reasons. No trace of the aircraft nor the crew was ever found. The aircraft crashed few km off the Samland coast, K\u00f6nigsberg (now Kaliningrad oblast, Russia).", "Crash cause": "Unknown"}, {"Date": "4/24/1935", "Time": "16H 45M 0S", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Newcastle upon Tyne Light Aeroplane Club", "Registration": "G-ABRD", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Newcastle - Newcastle", "MSN": "1877", "YOM": "1931", "Flight number": "NA", "Crash location": "Consett Durham", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot was performing a local private flight. After making a low pass over his house, he lost control of the aircraft that crashed in an wheat field located in Woodlands Hall, near Consett. The pilot Alexander Edward Sprot was seriously injured while the passenger Samuel Edward Sprot was killed.", "Crash cause": "Human factor"}, {"Date": "5/17/1935", "Time": "NA", "Aircraft": "Breguet 19", "Operator": "Belgian Air Force - Force A\u00e9rienne Belge - Belgische Luchtmacht", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Li\u00e8ge Li\u00e8ge", "Country": "Belgium", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The accident occurred in unknown circumstances in the vicinity of the Li\u00e8ge-Bierset Airport. Both pilots Joseph Partoens and Louis Slachmeulen were killed.", "Crash cause": "Unknown"}, {"Date": "5/31/1935", "Time": "NA", "Aircraft": "Avro 594 Avian", "Operator": "Private Indian", "Registration": "VT-AAN", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Benares - Calcutta", "MSN": "110", "YOM": "1928", "Flight number": "NA", "Crash location": "Calcutta West Bengal", "Country": "India", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft crashed on landing for unknown reason at Calcutta-Dum Dum Airport. While the pilot was injured, the aircraft was damaged beyond repair. It was owned by Yatis Chandra Ray.", "Crash cause": "Human factor"}, {"Date": "7/1/1935", "Time": "NA", "Aircraft": "De Havilland DH.84 Dragon", "Operator": "Railway Air Services", "Registration": "G-ADED", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Douglas \u2013 Blackpool \u2013 Liverpool \u2013 Manchester", "MSN": "6098", "YOM": "1935", "Flight number": "NA", "Crash location": "Douglas-Ronaldsway Isle of Man", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "6", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While taking off from Douglas-Ronaldsway Airport, the twin engine aircraft crashed and burst into flames. While all seven occupants were injured, the aircraft was destroyed by post crash fire. The airplane was on its way to Manchester-Ringway Airport with intermediate stops in Blackpool-Squires Gate Airport and Liverpool-Speke Airport.", "Crash cause": "Unknown"}, {"Date": "7/23/1935", "Time": "NA", "Aircraft": "Vickers Virginia", "Operator": "Royal Air Force - RAF", "Registration": "K2675", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Chobham Surrey", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crew was forced to make an emergency landing in Chobham. While the crew fate is unknown, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "8/15/1935", "Time": "18H 0M 0S", "Aircraft": "Lockheed 9 Orion", "Operator": "Private American", "Registration": "NR12283", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Seattle \u2013 Fairbanks \u2013 Lake Harding \u2013 Barrow", "MSN": "195", "YOM": "1933", "Flight number": "NA", "Crash location": "Barrow Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after take off from lake Walakpi located south of Barrow, while in initial climb to a height of some fifty feet, the aircraft stalled and crashed into the lake. Both occupants were killed. Crew: Wiley Post, 37, test pilot by Lockheed. Passenger: Will Rogers, 56, actor.", "Crash cause": "Other causes"}, {"Date": "9/7/1935", "Time": "NA", "Aircraft": "Avro 504", "Operator": "National Aviation Displays", "Registration": "G-ACOD", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "City", "Schedule": "NA", "MSN": "F8713", "YOM": "1934", "Flight number": "NA", "Crash location": "Blackpool Lancashire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The single engine aircraft departed Stanley Park in Blackpool for a local flight with two passengers and a pilot on board. While flying over the city of Blackpool, it collided with a Westland Wessex registered G-ADFZ. Flying on behalf of Trafalgar Advertising Company, the second aircraft was carrying two passengers and a pilot as well. After the collision, both aircraft dove into the ground and crashed in flames in Swainson Street, in Cedar Square. Both aircraft were destroyed by impact forces and post crash fire and all six occupants were killed.", "Crash cause": "Unknown"}, {"Date": "10/26/1935", "Time": "12H 8M 0S", "Aircraft": "De Havilland DH.84 Dragon", "Operator": "Railway Air Services", "Registration": "G-ADEE", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Manchester \u2013 Ronaldsway", "MSN": "6099", "YOM": "1935", "Flight number": "NA", "Crash location": "Blackpool Lancashire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The twin engine aircraft left Manchester-Barton Airport at 1100LT bound for Ronaldsway, Isle of Man, with one pilot and one passenger on board. At 1155LT, the pilot reported he was flying at a height of some 500 feet in poor visibility. Less than fifteen minutes later, while cruising at an altitude of 1,500 feet, he saw the mountain at the last moment and tried to gain altitude. Unfortunately, the aircraft hit the slope of Mount Fair Snape Fell located some 30 km northeast of Blackpool and was destroyed by impact forces and post crash fire. Both occupants were killed. It appears the aircraft hit the mountain 200 feet from the summit and the correction made by the pilot was too late to avoid the obstacle. At the time of the accident, the visibility was reduced due to mist. Crew: Cedric Rex Crow, pilot. Passenger: Ronald Swales.", "Crash cause": "Human factor"}, {"Date": "11/2/1935", "Time": "12H 0M 0S", "Aircraft": "Dornier DO.18", "Operator": "Deutsche Lufthansa", "Registration": "D-AHIS", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "253", "YOM": "1935", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "NA", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Crew was performing a test flight over the Baltic Sea. In unknown circumstances, seaplane crashed into the sea off Dahme, Germany. Three occupants were killed while two other were seriously injured.", "Crash cause": "Unknown"}, {"Date": "11/8/1935", "Time": "NA", "Aircraft": "Lockheed 8 Sirius/Altair", "Operator": "Private Australian", "Registration": "VH-USB", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Lympne - Allahabad - Singapore - Sydney", "MSN": "152", "YOM": "1935", "Flight number": "NA", "Crash location": "Myanmar All Myanmar", "Country": "Myanmar", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Sir Charles Kingsford Smith and his copilot John Thompson 'Tommy' Pethybridge were flying the aircraft christened 'Lady Southern Cross' overnight from Allahabad, India, to Singapore, as part of their attempt to break the England-Australia speed record held by C. W. A. Scott and Tom Campbell Black, when they disappeared over the Andaman Sea in the early hours of 8 November 1935. Despite brave search for 74 hours over the Bay of Bengal by test pilot Eric Stanley Greenwood OBE, their bodies were never recovered. Eighteen months later, Burmese fishermen found an undercarriage leg and wheel (with its tyre still inflated) which had been washed ashore at Aye Island in the Gulf of Martaban, some three km off the southeast coastline of Burma, some 137 km south of Mottama (formerly known as Martaban). Lockheed confirmed the undercarriage leg to be from the 'Lady Southern Cross'. Botanists who examined the weeds clinging to the undercarriage leg estimated that the aircraft itself lies not far from the island at a depth of approximately 27 meters. The undercarriage leg is now on public display at the Powerhouse Museum in Sydney, Australia.", "Crash cause": "Unknown"}, {"Date": "11/9/1935", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Braniff Airways", "Registration": "NC980Y", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "191", "YOM": "1932", "Flight number": "NA", "Crash location": "Fort Worth Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Crashed shortly after takeoff from Fort Worth Airport. The pilot was killed.", "Crash cause": "Unknown"}, {"Date": "11/10/1935", "Time": "13H 45M 0S", "Aircraft": "Waco UIC", "Operator": "Private American", "Registration": "NC13413", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Pontotoc - Pontotoc", "MSN": "3770", "YOM": "1933", "Flight number": "NA", "Crash location": "Thaxton Mississippi", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The aircraft was owned by Dean Faulkner. An Armistice Day Air Pageant was held at Pontotoc Airfield, Pontotoc County, Mississippi, on November 10 & 11, 1935. Air pageant organizer and pilot Dean Faulkner offered 1$ rides in his bright-red four-seat Waco UIC cabin biplane. On November 10, at 1330LT, he took up three of his cousins (Henry Graham, Lamon \u2018Red\u2019 Graham and Bud Warren) to fly over the Graham family farm. The Graham farm was located at 940 Benjamin Road, Thaxton, Pontotoc County, about 10 miles northwest of Pontotoc Airfield, about 4 miles north of Thaxton. The aircraft crashed within the boundaries of the Graham farm, killing the four occupants instantly. Reportedly the flip-over controls were found on the side of Lamon \u2018Red\u2019 Graham, who was a student pilot.", "Crash cause": "Human factor"}, {"Date": "11/23/1935", "Time": "NA", "Aircraft": "Fokker F7", "Operator": "Compagnie Internationale de Navigation A\u00e9rienne - CIDNA", "Registration": "F-ALGT", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "24", "YOM": "1932", "Flight number": "NA", "Crash location": "Vienna Vienna", "Country": "Austria", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. No casualties.", "Crash cause": "Unknown"}, {"Date": "12/15/1935", "Time": "NA", "Aircraft": "CAMS 53", "Operator": "Air France", "Registration": "F-AJZX", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Algiers \u2013 Ajaccio \u2013 Marseille", "MSN": "26", "YOM": "1930", "Flight number": "NA", "Crash location": "Ajaccio Corse-du-Sud", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On approach to Ajaccio, the seaplane crashed in unknown circumstances in the harbor of Ajaccio. All six occupants were rescued while the aircraft christened 'Saintonge' was lost.", "Crash cause": "Unknown"}, {"Date": "12/31/1935", "Time": "NA", "Aircraft": "Boeing 221 Monomail", "Operator": "Inland Airlines", "Registration": "NC10225", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "1154", "YOM": "1930", "Flight number": "NA", "Crash location": "Pueblo Colorado", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "1/17/1936", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Cochabamba \u2013 La Paz", "MSN": "4018", "YOM": "1932", "Flight number": "NA", "Crash location": "Tapacar\u00ed Cochabamba", "Country": "Bolivia", "Region": "South America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "10", "PAX fatalities": "10", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "Few minutes after takeoff from Cochabamba, while flying to the west, the three engine aircraft hit a mountain slope near the village of Tapacar\u00ed. All 13 occupants were killed. The aircraft did not have any registration but was christened 'Chorolque'.", "Crash cause": "Unknown"}, {"Date": "1/21/1936", "Time": "10H 0M 0S", "Aircraft": "CAMS 53", "Operator": "Air France", "Registration": "F-AJIR", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Marseille \u2013 Ajaccio \u2013 Tunis", "MSN": "19", "YOM": "1929", "Flight number": "NA", "Crash location": "Ajaccio Corse-du-Sud", "Country": "France", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While descending to Ajaccio, the crew sent a short mayday message following a power plant failure. The seaplane aircraft went out of control and crashed into the sea, few km off shore. All six occupants were killed. Crew: Edmond Larbonne, pilot, Laurent Caillebotte, radio navigator, Robert Juge, engineer.", "Crash cause": "Technical failure"}, {"Date": "2/15/1936", "Time": "3H 52M 0S", "Aircraft": "Dornier Do J Wal", "Operator": "Deutsche Lufthansa", "Registration": "D-ADYS", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Rio de Janeiro \u2013 Vit\u00f3ria \u2013 Belmonte \u2013 Salvador \u2013 Recife \u2013 Bathurst \u2013 Sevilla \u2013 Stuttgart \u2013 Berlin", "MSN": "299", "YOM": "NA", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was performing a mail flight from Rio de Janeiro to Berlin with several intermediate stops. The float plane christened 'Tornado' was catapulted from the deck of the German ship christened 'Westphalen' in the region of Fernando de Noronha around 18:18 (GMT time) on February 14, 1936. Some 9 hours and 34 minutes later, all communications ceased with the crew. SAR operations were conducted by seven countries but no trace of the aircraft nor the crew was ever found. According to the authorities, the crew was flying at a speed of some 200 km/h and some 3 to 5 meters above the surface of the water.", "Crash cause": "Unknown"}, {"Date": "4/11/1936", "Time": "5H 0M 0S", "Aircraft": "Sikorsky S-42", "Operator": "Pan American World Airways - PAA", "Registration": "NC15374", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Miami \u2013 Port of Spain \u2013 Natal \u2013 Rio de Janeiro \u2013 Buenos Aires", "MSN": "4204", "YOM": "1934", "Flight number": "NA", "Crash location": "Port of Spain All Trinidad and Tobago", "Country": "Trinidad and Tobago", "Region": "Central America", "Crew on board": "7", "Crew fatalities": "1", "Pax on board": "18", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "After takeoff from the harbor of Port of Spain, while climbing by night, captain saw a boat and made a sharp turn to avoid the collision. Nevertheless, the right pontoon hit the boat and the aircraft stalled before crashing into the bay. A crew and two passengers were drowned while all 22 other occupants were rescued. The aircraft christened 'Antilles Clipper' was lost. It was night at the time of the accident so the visibility was poor. Crew distinguished the boat to late and the avoiding manoeuvre was to late as well.", "Crash cause": "Human factor"}, {"Date": "5/10/1936", "Time": "NA", "Aircraft": "Simmonds Spartan", "Operator": "Air Trips", "Registration": "G-ABKK", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "58", "YOM": "1931", "Flight number": "NA", "Crash location": "Coventry West Midlands", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from the Westwood Airfield, the single engine aircraft collided with an Avro 504N registered G-AECR. Avro 504 landed safely but the Simmonds crashed in a wheat field, injuring his pilot who was taking part to a rally.", "Crash cause": "Unknown"}, {"Date": "6/10/1936", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Marlborough Aero Club", "Registration": "ZK-AAA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "888", "YOM": "1929", "Flight number": "NA", "Crash location": "Blenheim Marlborough District Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "6/20/1936", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Private British", "Registration": "G-EBRT", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "City", "Schedule": "NA", "MSN": "410", "YOM": "1927", "Flight number": "NA", "Crash location": "Southend Essex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff from Canute Airfield located in Ashingdon, north of Southend, the single engine aircraft encountered problem to gain altitude and hit a tree in the city of Ashingdon were it came to rest in a height of some 10 meters. Unhurt, both occupants went down the tree while the aircraft was later considered as damaged beyond repair. The aircraft was owned by John Henry Arthur Wells and William R. L. Beaumont. At the time of the accident, it was piloted by F. Fairhead.", "Crash cause": "Unknown"}, {"Date": "6/23/1936", "Time": "NA", "Aircraft": "Lat\u00e9co\u00e8re 28", "Operator": "Aeroposta Argentina", "Registration": "R-293", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "929", "YOM": "NA", "Flight number": "NA", "Crash location": "Comodoro Rivadavia Chubut", "Country": "Argentina", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances some 80 km from Comodoro Rivadavia. Crew fate unknown as well.", "Crash cause": "Unknown"}, {"Date": "8/27/1936", "Time": "NA", "Aircraft": "Stinson Model A", "Operator": "Delta Airlines", "Registration": "NC15134", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "9111", "YOM": "1935", "Flight number": "NA", "Crash location": "Atlanta Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "9/28/1936", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Varney Air Transport - VAT", "Registration": "NC176W", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "El paso \u2013 Pueblo", "MSN": "129", "YOM": "1930", "Flight number": "NA", "Crash location": "Walsenburg Colorado", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route, while flying some 30 miles south of Pueblo, the engine failed. The aircraft lost height and eventually crashed against a hill. All three occupants were killed.", "Crash cause": "Technical failure"}, {"Date": "10/9/1936", "Time": "NA", "Aircraft": "Blackburn B-2", "Operator": "North Sea Aerial %26 General Transport", "Registration": "G-ABWI", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "4700/1", "YOM": "1932", "Flight number": "NA", "Crash location": "Selby North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The pilot, sole aboard, was performing a mail flight. En route, the single engine aircraft went out of control for unknown reasons and crashed in Ellerton, near Selby. The pilot was killed.", "Crash cause": "Unknown"}, {"Date": "11/23/1936", "Time": "NA", "Aircraft": "Boeing 247", "Operator": "United Airlines", "Registration": "NC13319", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1700", "YOM": "1933", "Flight number": "NA", "Crash location": "Newark New Jersey", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. No casualties.", "Crash cause": "Unknown"}, {"Date": "12/5/1936", "Time": "NA", "Aircraft": "Douglas Dolphin", "Operator": "United States Coast Guard - USCG", "Registration": "V111", "Flight phase": "Takeoff (climb)", "Flight type": "Ambulance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Assateague - Norfolk", "MSN": "1122", "YOM": "NA", "Flight number": "NA", "Crash location": "Assateague Virginia", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Lieutenant Luke Christopher had been ordered from the Cape May Air Station to pick up a sick man in Assateague Harbor from an Assateague surfboat. He picked up the patient to transport him to the Norfolk Hospital, but crashed on takeoff and died shortly after. The sick man, who survived the crash, was later transported to the hospital at Salisbury, Maryland.", "Crash cause": "Unknown"}, {"Date": "12/18/1936", "Time": "3H 23M 0S", "Aircraft": "Lockheed 10 Electra", "Operator": "Northwest Airlines", "Registration": "NC14935", "Flight phase": "Flight", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Chicago \u2013 Minneapolis \u2013 Missoula \u2013 Seattle", "MSN": "1024", "YOM": "1935", "Flight number": "NA", "Crash location": "Kellogg Idaho", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While overflying west Idaho in poor weather conditions, the twin engine aircraft hit a mountain and was destroyed. Both crew members were killed. Crew: Joe Livermore, pilot, Arthur A. Haid, copilot.", "Crash cause": "Human factor"}, {"Date": "2/8/1937", "Time": "NA", "Aircraft": "Sikorsky S-43", "Operator": "Panair do Brasil", "Registration": "PP-PAR", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "4307", "YOM": "1937", "Flight number": "NA", "Crash location": "NA", "Country": "Brazil", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Occupant fate unknown as well.", "Crash cause": "Unknown"}, {"Date": "2/9/1937", "Time": "20H 50M 0S", "Aircraft": "Douglas DC-3", "Operator": "United Airlines", "Registration": "NC16073", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Los Angeles \u2013 San Francisco \u2013 Oakland", "MSN": "1913", "YOM": "1936", "Flight number": "NA", "Crash location": "San Francisco California", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "8", "PAX fatalities": "8", "Other fatalities": "0", "Total fatalities": 11, "Circumstances": "On final approach, the aircraft lost 400 feet in few seconds and eventually crashed into the bay of San Francisco, some two miles off the airport. All eleven occupants were killed. Crew: A. R. Thompson, pilot, Joe Decesaro, copilot, Ruth Kimmel, stewardess.", "Crash cause": "Human factor"}, {"Date": "3/24/1937", "Time": "14H 11M 0S", "Aircraft": "Short S.23 Empire Flying Boat", "Operator": "Imperial Airways", "Registration": "G-ADVA", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Southampton \u2013 Brindisi \u2013 Mirabella \u2013 Alexandria \u2013 Durban", "MSN": "S.818", "YOM": "1936", "Flight number": "NA", "Crash location": "Ouroux Rh\u00f4ne", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "4", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft left Southampton at 1150LT. While overflying Morvan, the radio navigator contacted ground control in Lyon-Bron to obtain a position briefing. While flying in snow falls, the four engine aircraft christened 'Capricornus' hit two pine trees and crashed near Ouroux, some 15 km southwest of M\u00e2con. The radio navigator survived and walk few km to find help. When he returned to the aircraft, he realize all five other occupants were killed. Crew: A. Paterson, pilot, G. E. Klein, copilot, Denis R. O'Brien, flight clerk, James L. Cooper, radio navigator, F. A. E. Jeffcoate, steward. Passenger: Beatrix 'Betty' Mercy Coats.", "Crash cause": "Human factor"}, {"Date": "3/26/1937", "Time": "NA", "Aircraft": "Junkers JU.160", "Operator": "Deutsche Lufthansa", "Registration": "D-UPOZ", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "4207", "YOM": "1935", "Flight number": "NA", "Crash location": "Hanover Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The engine failed in flight and the pilot attempted to make an emergency landing in an open field located in W\u00e4tzum, some 10 km southeast of Hanover. While the aircraft was damaged beyond repair, all six occupants were unhurt.", "Crash cause": "Technical failure"}, {"Date": "4/12/1937", "Time": "NA", "Aircraft": "Lockheed 8 Sirius/Altair", "Operator": "Mainichi Shinbun", "Registration": "J-BAMC", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "188", "YOM": "1932", "Flight number": "NA", "Crash location": "Osaka Kansai", "Country": "Japan", "Region": "Asia", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was sole on board this single engine aircraft that was carrying newspaper on behalf of the Japanese daily newspaper 'Mainichi Shinbun'. On final approach to Osaka Airport, the aircraft crashed in unknown circumstances. While the pilot was injured, the aircraft was destroyed.", "Crash cause": "Unknown"}, {"Date": "4/15/1937", "Time": "NA", "Aircraft": "Junkers A.20", "Operator": "Deutsche Lufthansa", "Registration": "D-IBUX", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "353", "YOM": "1923", "Flight number": "NA", "Crash location": "Germany All Germany", "Country": "Germany", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft christened 'Erde' crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "4/27/1937", "Time": "NA", "Aircraft": "Lockheed 1 Vega", "Operator": "Varney Air Transport - VAT", "Registration": "NC483M", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "136", "YOM": "1930", "Flight number": "NA", "Crash location": "El Paso Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The single engine airplane crashed in unknown circumstances and was destroyed. The pilot, sole on board, was injured.", "Crash cause": "Unknown"}, {"Date": "4/29/1937", "Time": "NA", "Aircraft": "Handley Page H.P.54 Harrow", "Operator": "Royal Air Force - RAF", "Registration": "K6950", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "RAF Methwold - RAF Methwold", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Methwold AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Crew from 214th Squadron was performing a demonstration flight in formation with another H.P.54 registered K6945. In flight, while making a turn, both aircraft collided and crashed in flames near the airfield. All five crew members on both aircraft were killed.", "Crash cause": "Human factor"}, {"Date": "4/29/1937", "Time": "NA", "Aircraft": "Handley Page H.P.54 Harrow", "Operator": "Royal Air Force - RAF", "Registration": "K6945", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "RAF Methwold - RAF Methwold", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Methwold AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Crew from 214th Squadron was performing a demonstration flight in formation with another H.P.54 registered K6950. In flight, while making a turn, both aircraft collided and crashed in flames near the airfield. All five crew members on both aircraft were killed.", "Crash cause": "Human factor"}, {"Date": "5/7/1937", "Time": "NA", "Aircraft": "Fokker F14", "Operator": "United States Army Air Corps - USAAC", "Registration": "31-385", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Edwards AFB - March AFB", "MSN": "1417", "YOM": "NA", "Flight number": "NA", "Crash location": "Victorville California", "Country": "United States of America", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the pilot encountered engine problems. He decided to abandon the aircraft and bailed out. The aircraft crashed near Cajon Pass, southwest of Victorville and was destroyed. The pilot was unhurt.", "Crash cause": "Technical failure"}, {"Date": "5/19/1937", "Time": "NA", "Aircraft": "Lior\u00e9-et-Olivier LeO H-47", "Operator": "Lior\u00e9-et-Olivier Industries", "Registration": "F-APPR", "Flight phase": "Takeoff (climb)", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Antibes - Antibes", "MSN": "1", "YOM": "1936", "Flight number": "NA", "Crash location": "Antibes Alpes-Maritimes", "Country": "France", "Region": "Europe", "Crew on board": "10", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a test flight on this first prototype. Few minutes after lift off, while climbing, the seaplane stalled and crashed into the sea off Antibes. Five crew were rescued while five other were killed. Crew: Lucien Bourdin, pilot, \u2020 Robert Blouin, radio navigator, \u2020 Marcel Juin, \u2020 Luce Brochet, \u2020 Charles Rayer. \u2020", "Crash cause": "Technical failure"}, {"Date": "6/19/1937", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Queensland Aero Club", "Registration": "VH-UAN", "Flight phase": "Flight", "Flight type": "Demonstration", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Brisbane - Brisbane", "MSN": "542", "YOM": "1928", "Flight number": "NA", "Crash location": "Brisbane-Archerfield Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "While taking part to an air race, the single engine aircraft collided in flight with another DH.60 of the Royal Queensland Aero Club registered VH-UAV. Both aircraft dove into the ground and crashed southeast of the airfield. Both pilots on both aircraft were killed.", "Crash cause": "Human factor"}, {"Date": "7/21/1937", "Time": "NA", "Aircraft": "Stinson SM-1 Detroiter", "Operator": "Norsk Lufttrafik", "Registration": "LN-ABN", "Flight phase": "Flight", "Flight type": "Delivery", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "514", "YOM": "NA", "Flight number": "NA", "Crash location": "Sweden All Sweden", "Country": "Sweden", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in Sweden while on a delivery flight. The fate of the pilot is uncertain.", "Crash cause": "Unknown"}, {"Date": "8/1/1937", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "Eurasia Aviation Corporation", "Registration": "XVIII", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "5294", "YOM": "1935", "Flight number": "NA", "Crash location": "Kunming Yunnan", "Country": "China", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the pilot was forced to attempt an emergency landing following an engine failure. No casualties but the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "8/6/1937", "Time": "NA", "Aircraft": "Douglas DC-2", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-M25", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Bucharest \u2013 Moscow", "MSN": "1413", "YOM": "1935", "Flight number": "NA", "Crash location": "Bistrita Bistri<U+021B>a-Nasaud", "Country": "Romania", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "En route, the aircraft caught fire and crashed in flames near Bistrita, Transylvania. All five occupants were killed.", "Crash cause": "Technical failure"}, {"Date": "8/8/1937", "Time": "NA", "Aircraft": "Farman F.190", "Operator": "Air Commerciale", "Registration": "CS-AAV", "Flight phase": "Flight", "Flight type": "Charter/Taxi (Non Scheduled Revenue Flight)", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Lisbon - Lisbon", "MSN": "7366", "YOM": "1932", "Flight number": "NA", "Crash location": "Figueira da Foz Centro", "Country": "Portugal", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "4", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The single engine aircraft departed Lisbon in the morning to follow the regatta in Figueira da Foz. On approach, the pilot lost control of the aircraft that crashed into the sea few kilometers off shore. All five occupants were killed. The aircraft was named 'Aguia Branca 2'.", "Crash cause": "Technical failure"}, {"Date": "8/15/1937", "Time": "NA", "Aircraft": "Avro 616 Avian IVM", "Operator": "Cape Breton Flying Club", "Registration": "CF-CDG", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Sydney - Sydney", "MSN": "307", "YOM": "1930", "Flight number": "NA", "Crash location": "Sydney Nova Scotia", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The student pilot was performing a circular training flight at Sydney Airport. For unknown reason, the pilot made a hard landing. The aircraft was damaged beyond repair and the pilot was unhurt.", "Crash cause": "Human factor"}, {"Date": "9/7/1937", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6227", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Penrhos \u2013 Sealand \u2013 Bircham Newton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Penmaenmawr Clwyd", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Following a bombing exercise off the RAF Penrhos, Wales, a formation of 14 Avro Anson was returning to its base at RAF Bircham Newton with an intermediate stop at RAF Sealand. En route, while flying southwest of Llandudno, the leader went through a foggy area and instructed all other crews to gain altitude. While on the left of the formation, the Anson was flying at a height of some 100 feet when its pilot decided to gain altitude. The twin engine aircraft went out of control and crashed into the sea of Penmaenmawr. All three crew of the 220th Squadron were killed. Crew: W. H. V. Rimer 2.", "Crash cause": "Human factor"}, {"Date": "9/10/1937", "Time": "12H 0M 0S", "Aircraft": "Miles M.3B Falcon Major", "Operator": "Phillips %26 Powis Aircraft", "Registration": "G-AENG", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "234", "YOM": "1936", "Flight number": "NA", "Crash location": "Scarborough North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Crew was taking part of Kings Cup Race when the aircraft was thrown to a cliff by strong winds. Both crew killed.", "Crash cause": "Weather"}, {"Date": "12/1/1937", "Time": "NA", "Aircraft": "De Havilland DH.50", "Operator": "North Queensland Airways", "Registration": "VH-UFA", "Flight phase": "Landing (descent or approach)", "Flight type": "Ambulance", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1", "YOM": "1929", "Flight number": "NA", "Crash location": "Cairns Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing at Cairns Airport. The aircraft was damaged beyond repair while all occupants survived.", "Crash cause": "Unknown"}, {"Date": "12/6/1937", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "SAAF Aero Club", "Registration": "ZS-AAL", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "502", "YOM": "1928", "Flight number": "NA", "Crash location": "Muldersdrift Gauteng", "Country": "South Africa", "Region": "Africa", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight from Roberts Heights Airport in Pretoria when the single engine aircraft crashed in unknown circumstances in Muldersdrift, Gauteng Province. The aircraft owned by SAAF Aero Club was destroyed and both occupants were injured.", "Crash cause": "Unknown"}, {"Date": "12/24/1937", "Time": "17H 29M 0S", "Aircraft": "Wibault 282/283", "Operator": "Air France", "Registration": "F-AMYD", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Bucharest \u2013 Vienna \u2013 Prague \u2013 Paris", "MSN": "11", "YOM": "1934", "Flight number": "NA", "Crash location": "Ka\u0161persk\u00e9 Hory Plzen Region (Plzensk\u00fd kraj)", "Country": "Czech Republic", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The three engine aircraft left Vienna at 1555LT bound for Prague. Approaching the Czech capital city, crew encountered poor weather conditions and was instructed by ATC to return to Vienna. Few minutes later, crew decided to start the descent but did not realize he was off course by 120 km. While descending in low visibility, at an altitude of some 700 meters, the aircraft hit tree tops and crashed in a snowy forest located on the north slope of Mt Hut'ska. A day later, SAR found the three dead bodies in 60 cm of snow. The aircraft christened 'Le Glorieux' was totally destroyed. Crew: Frantisck Lehky, pilot, Pierre Astruc, radio navigator. Passenger: Karel Flanderka.", "Crash cause": "Human factor"}, {"Date": "12/29/1937", "Time": "NA", "Aircraft": "Stinson SR-9 Reliant", "Operator": "Cuban Air Force - Cuerpo de Aviaci\u00f3n del Ej\u00e9rcito de Cuba", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Bogot\u00e1 \u2013 Panama City", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Felidia Valle del Cauca", "Country": "Colombia", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While flying in foggy conditions, the aircraft struck a mountain and crashed near Felidia, west of Cali. All three occupants were killed, among them a journalist. Two other similar aircraft crashed at the same time in similar conditions.", "Crash cause": "Weather"}, {"Date": "1/8/1938", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Private Mexican", "Registration": "XA-BHJ", "Flight phase": "NA", "Flight type": "Private", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "61", "YOM": "1929", "Flight number": "NA", "Crash location": "Chicago Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances.", "Crash cause": "Unknown"}, {"Date": "2/2/1938", "Time": "20H 40M 0S", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "United States Navy - USN", "Registration": "463", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "San Diego - San Diego", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "San Clemente Island NAS California", "Country": "United States of America", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "4", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Crew was performing a night flight in formation with another Catalina registered 0462. While cruising side by side in heavy rain falls, both aircraft collided and crashed into the sea, off the San Clemente Island, some 110 km west of San Diego. All occupants on board 0462 were killed while three crew survived in the 0463.", "Crash cause": "Human factor"}, {"Date": "3/5/1938", "Time": "NA", "Aircraft": "De Havilland DH.83 Fox Moth", "Operator": "Guinea Airways", "Registration": "VH-UQS", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Surprise Creek \u2013 Port Moresby", "MSN": "4019", "YOM": "1932", "Flight number": "NA", "Crash location": "Surprise Creek (Wai Ungu) Western (Fly)", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff, while climbing, the single engine aircraft stalled and crashed in flames in a prairie. The pilot E. W. Ditton was injured and the aircraft was destroyed by fire.", "Crash cause": "Unknown"}, {"Date": "3/17/1938", "Time": "NA", "Aircraft": "Tupolev ANT-6 (TB-3 & G-2)", "Operator": "Polyarnaya Aviatsiya", "Registration": "CCCP-N210", "Flight phase": "Landing (descent or approach)", "Flight type": "Geographical / Geophysical / Scientific", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Bukhta Tikhaya - Bukhta Teplits", "MSN": "22 752", "YOM": "1937", "Flight number": "NA", "Crash location": "Bukhta Teplits Arkhangelsk oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "3", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On a flight from Bukhta Tikhaya to Buhkta Teplits (N81\u00b047.5') on Rudolph island (Franz-Joseph-Land Archipelago) when had to go around due to a layer of ground fog. Insufficient crew resource management resulted in the aircraft entering the fog layer. The ski of the left main landing gear hit the snow and the undercarriage was ripped off. Aircraft crashed and came to rest on ice. Two crew and one passenger were seriously injured while two other crew and two other passengers were slightly injured. The wreckage still in site in 2006.", "Crash cause": "Human factor"}, {"Date": "5/5/1938", "Time": "NA", "Aircraft": "Lockheed 5 Vega", "Operator": "Lineas A\u00e9reas Mineras - LAMSA", "Registration": "XA-BFR", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mexico City - Mexico City", "MSN": "124", "YOM": "1930", "Flight number": "NA", "Crash location": "Mexico City Federal District of Mexico City", "Country": "Mexico", "Region": "Central America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "5", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "For unknown reason, the pilot took off from a taxiway. Shortly after rotation, the single engine aircraft stalled and crashed. All five passengers, LAMSA employees, were injured while the pilot Miguel Angel Padilla was killed. It appears that the flight was not granted.", "Crash cause": "Human factor"}, {"Date": "5/12/1938", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "SCADTA - Sociedad Colombo-Alemana de Transportes A\u00e9reos", "Registration": "C-35", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Tumaco \u2013 Buenaventura", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Buenaventura Valle del Cauca", "Country": "Colombia", "Region": "South America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Probable cause: While approaching Buenaventura, the single engine aircraft christened 'Dari\u00e9n' crashed in unknown circumstances in the mouth of Rio Cajambre, some 40 km south of Buenaventura. All three occupants were injured while the aircraft was lost. Crew: Mr. Loest, pilot, Guillermo Calvo, copilot.", "Crash cause": "Unknown"}, {"Date": "5/18/1938", "Time": "NA", "Aircraft": "Junkers JU.86", "Operator": "Swedish Air Force - Flygvapnet", "Registration": "154", "Flight phase": "Flight", "Flight type": "Delivery", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "154", "YOM": "1937", "Flight number": "NA", "Crash location": "Trelleborg Sk\u00e5ne", "Country": "Sweden", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The aircraft was on its delivery to the Swedish Air Force from Dessau to Sweden. While flying off Trelleborg, the twin engine aircraft went out of control and crashed in unknown circumstances in the Baltic Sea. All three crew were killed.", "Crash cause": "Unknown"}, {"Date": "7/11/1938", "Time": "NA", "Aircraft": "Emsco B.3", "Operator": "Transportes A\u00e9reos de Chiapas", "Registration": "XA-BFX", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "M\u00e9rida \u2013 Chetumal", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Chetumal Quintana Roo", "Country": "Mexico", "Region": "Central America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "7", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The aircraft was on its way from M\u00e9rida to Chetumal but failed to arrive. SAR mission was conducted but all operations were eventually suspended after few days as no trace of the aircraft nor the eight occupant was ever found.", "Crash cause": "Unknown"}, {"Date": "7/27/1938", "Time": "20H 30M 0S", "Aircraft": "Bloch MB.200", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "48", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Istres - Istres", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Albon Dr\u00f4me", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a training flight on behalf of the group based in Istres AFB. While performing a combined exercise with other aircraft based in Lyon-Bron Airport, the aircraft hit a hill near Albon, south of Vienne. All five occupants were killed and the aircraft was destroyed. Crew: Under-Lieutenant Richaud, Adjutant Courrant, Sergeant Perrial, Adjutant Cazenave, Sergeant Brunet.", "Crash cause": "Unknown"}, {"Date": "8/7/1938", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K8816", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Leuchars - Leuchars", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Groombridge Sussex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a night training exercise when he encountered problems and attempted a wheels up landing in an open field. The aircraft was damaged beyond repair and all three crew from the 224th Squadron escaped uninjured.", "Crash cause": "Unknown"}, {"Date": "8/18/1938", "Time": "NA", "Aircraft": "Lockheed 14 Super Electra", "Operator": "LOT Polish Airlines - Polskie Linie Lotnicze", "Registration": "SP-BNJ", "Flight phase": "Taxiing", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lydda \u2013 Athens \u2013 Thessaloniki \u2013 Sofia \u2013 Bucharest \u2013 Warsaw", "MSN": "1424", "YOM": "1938", "Flight number": "NA", "Crash location": "Bucharest-Baneasa Bucure<U+0219>ti", "Country": "Romania", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Following an uneventful landing, pilot was vacating the runway to reach his parking place when a sudden fire erupted. The airplane was quickly stopped and all seven occupants were able to disembark before the aircraft was totally destroyed by fire. No one was injured.", "Crash cause": "Technical failure"}, {"Date": "8/24/1938", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Romford Flying Club", "Registration": "G-EBTG", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mayland - Mayland", "MSN": "469", "YOM": "1928", "Flight number": "NA", "Crash location": "Mayland Essex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. The pilot was uninjured while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "9/3/1938", "Time": "NA", "Aircraft": "Ford 5", "Operator": "Johnson Flying Service", "Registration": "NC435H", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "5-AT-102", "YOM": "1932", "Flight number": "NA", "Crash location": "Big Prairie Montana", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reason. No casualties.", "Crash cause": "Unknown"}, {"Date": "9/22/1938", "Time": "NA", "Aircraft": "Saro A.29 Cloud", "Operator": "Royal Air Force - RAF", "Registration": "K3723", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coventry West Midlands", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew conducting a training mission when an engine failed. The pilot attempted to make an emergency in a field located in Walsgrave, in the suburb of Coventry. All three crew escaped unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "9/29/1938", "Time": "NA", "Aircraft": "Supermarine Walrus", "Operator": "Royal Air Force - RAF", "Registration": "L2237", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wick Caithness", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew of four was performing a maritime patrol flight on behalf of the 712th Squadron. En route, pilot lost control of the aircraft following an engine failure. The seaplane crashed into the sea few yards off Wick and was lost. The fate of the crew is uncertain.", "Crash cause": "Technical failure"}, {"Date": "9/30/1938", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Sarajevo Aeronautical Club", "Registration": "YU-PAS", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1267", "YOM": "1930", "Flight number": "NA", "Crash location": "Sarajevo East Herzegovina", "Country": "Bosnia and Herzegovina", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The single engine aircraft crashed in unknown circumstances near the airport of Sarajevo-Rajlovac. Both occupants killed, among them the pilot Vojske D. Isajic.", "Crash cause": "Unknown"}, {"Date": "11/3/1938", "Time": "NA", "Aircraft": "De Havilland DH.84 Dragon", "Operator": "Private French", "Registration": "F-AMTM", "Flight phase": "Flight", "Flight type": "Private", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Buc - Agen", "MSN": "6040", "YOM": "1933", "Flight number": "NA", "Crash location": "Agen Lot-et-Garonne", "Country": "France", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "5", "PAX fatalities": "5", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The twin engine aircraft left Buc Airfield in Seine-et-Oise in the day bound for Agen. While descending to Agen Airport, the aircraft went out of control and crashed in a field located in La R\u00e9ole. All six occupants were killed. Crew: Albert Garric, pilot and owner. Passengers: Mrs Garric, Max Garric, Mary Garric, Brigitte Fortune, Jean Castaing.", "Crash cause": "Unknown"}, {"Date": "11/7/1938", "Time": "NA", "Aircraft": "Fokker Super Universal", "Operator": "Northern Airways", "Registration": "CF-ATJ", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "853", "YOM": "1932", "Flight number": "NA", "Crash location": "Carcross Yukon", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after takeoff, while climbing, the aircraft hit a tree and crashed. No casualties.", "Crash cause": "Unknown"}, {"Date": "11/18/1938", "Time": "NA", "Aircraft": "Lockheed 14 Super Electra", "Operator": "Trans-Canada Air Lines - TCAL", "Registration": "CF-TCL", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Winnipeg \u2013 Regina \u2013 Vancouver", "MSN": "1475", "YOM": "1938", "Flight number": "NA", "Crash location": "Regina Saskatchewan", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Shortly after take off from Regina Airport, while climbing, the twin engine aircraft went out of control and crashed. Both pilots were killed. They were performing a mail flight from Winnipeg to Vancouver with an intermediate stop in Regina.", "Crash cause": "Unknown"}, {"Date": "11/18/1938", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4562", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Hooton Park AFB Cheshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to RAF Hooton Park, the twine engine aircraft stalled and hit the runway surface. The undercarriage were sheared off and the aircraft slid for several yards before coming to rest. While both pilots were uninjured, the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "12/23/1938", "Time": "NA", "Aircraft": "Supermarine Walrus", "Operator": "Royal Air Force - RAF", "Registration": "L2255", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cochin Kerala", "Country": "India", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a maritime patrol flight off Cochin, with a crew of three on board, all from the 'HMS Manchester' ship cruising off shore. While flying at low height along the shore in Cochin, the seaplane hit telephone cables, stalled and crashed in the harbor. Two crew members were killed while the third occupants was injured. Crew: Sub-Lieutenant John Frederick Repington Collins, pilot, \u2020 Sub-Lieutenant Peter Noble Boxer, \u2020 Lieutenant Francis Myrddin Griffiths.", "Crash cause": "Human factor"}, {"Date": "12/31/1938", "Time": "NA", "Aircraft": "Sikorsky S-38", "Operator": "Panair do Brasil", "Registration": "PP-PAM", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "214-06", "YOM": "1929", "Flight number": "NA", "Crash location": "Rio Branco Acre", "Country": "Brazil", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. Occupant fate unknown as well. The exact date of the accident remains unknown.", "Crash cause": "Unknown"}, {"Date": "1/7/1939", "Time": "NA", "Aircraft": "Simmonds Spartan", "Operator": "Private Australian", "Registration": "VH-UIT", "Flight phase": "Takeoff (climb)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "3", "YOM": "1929", "Flight number": "NA", "Crash location": "Balranald New South Wales", "Country": "Australia", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Engine failed shortly after take off from Balranald. The aircraft crashed and was destroyed, the pilot was injured.", "Crash cause": "Technical failure"}, {"Date": "1/13/1939", "Time": "NA", "Aircraft": "Fokker F18", "Operator": "Commercial Aviation Company - Palestine", "Registration": "VQ-PAF", "Flight phase": "Landing (descent or approach)", "Flight type": "Demonstration", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Lydda - Lydda", "MSN": "5310", "YOM": "1935", "Flight number": "NA", "Crash location": "Lydda All Palestine", "Country": "Palestine", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was celebrating the inauguration of the company and was performing a demonstrating flight around Lydda Airport. While landing, the three engine aircraft went out of control, veered off runway and came to rest. While both occupants were unhurt, the aircraft was damaged beyond repair. Crew: Haim Leibovitz, pilot, Mr. Dushinsky, pilot.", "Crash cause": "Unknown"}, {"Date": "1/18/1939", "Time": "7H 50M 0S", "Aircraft": "Lockheed 14 Super Electra", "Operator": "Guinea Airways", "Registration": "VH-ABI", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Darwin \u2013 Katherine \u2013 Adelaide", "MSN": "1418", "YOM": "1938", "Flight number": "NA", "Crash location": "Katherine Northern Territory", "Country": "Australia", "Region": "Oceania", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The aircraft was carrying a load of 700 pounds of mail from Darwin to Adelaide with an intermediate stop in Katherine. Shortly after takeoff, while in initial climb, the twin engine aircraft encountered problem to gain height. It eventually stalled and crashed in the Katherine River located near the airport and came to rest in 6 feet of water. The aircraft was destroyed and all four occupants were killed. Crew: J. A. Jukes, pilot, C. R. Clarke, pilot, P. I. Donegan, copilot and flight engineer. Passenger: A. McDonald, Chief Inspector of Aerodromes in the Northern Territory.", "Crash cause": "Human factor"}, {"Date": "1/21/1939", "Time": "13H 9M 0S", "Aircraft": "Short S.23 Empire Flying Boat", "Operator": "Imperial Airways", "Registration": "G-ADUU", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Port Washington \u2013 Hamilton \u2013 Southampton", "MSN": "S.812", "YOM": "1936", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "8", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The seaplane christened 'Cavalier' left Port Washington seaplane base in Long Island at 1038LT on a transatlantic flight to Southampton with an intermediate stop in Hamilton, Bermuda. Some two hours later, crew encountered poor weather conditions and decided to modify his route to avoid a cumulonimbus area. During this maneuver, the aircraft lost height and while cruising in poor weather with low temperature, the pilot decided to return to his initial route when both inner engines stopped while both outboard engine lost power. In such situation, the captain decide to make an emergency landing into the Atlantic Ocean, some 285 miles southeast of Port Washington. The radio operator was able to give his position and the aircraft sunk four minutes after landing. Crew: M. R. Alderson, pilot, Neil Richardson, copilot.", "Crash cause": "Weather"}, {"Date": "1/24/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6314", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Tangmere - Tangmere", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tangmere AFB West Sussex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to RAF Tangmere, the twin engine aircraft was hit by a flare and crashed in flames on runway. While all three crew were injured, the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "1/27/1939", "Time": "12H 20M 0S", "Aircraft": "Potez 62", "Operator": "Air France", "Registration": "F-ANPJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "City", "Schedule": "Paris \u2013 Cologne \u2013 Berlin", "MSN": "3926/4", "YOM": "1935", "Flight number": "NA", "Crash location": "Cologne North Rhine-Westphalia", "Country": "Germany", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew was performing a flight from Paris to Berlin with an intermediate stop in Cologne. While on approach to Cologne-Butzweilerhof Airport, pilot encountered poor visibility. Some 7 km short of runway, the aircraft christened 'Courlis' hit a chimney and crashed in flames in Knapsack, in the suburb of Cologne. All six occupants were killed. Crew: Andr\u00e9 Tellet-Larente, pilot, Jean-Pierre Pain, copilot, Ren\u00e9 Harrault, radio navigator, Guy Baranton, engineer. Passengers: Raoul Civet, journalist, Mr. Buchalowski.", "Crash cause": "Human factor"}, {"Date": "2/27/1939", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Kingston Flying Club", "Registration": "CF-CEI", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Kingston - Kingston", "MSN": "749", "YOM": "1928", "Flight number": "NA", "Crash location": "Kingston Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Kingston Airfield, the single engine aircraft was too low, hit tree tops and crashed upside down. Both occupants were injured while the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "3/26/1939", "Time": "2H 48M 0S", "Aircraft": "Douglas DC-2", "Operator": "Braniff Airways", "Registration": "NC13727", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Chicago \u2013 Kansas City \u2013 Wichita \u2013 Oklahoma City \u2013 Dallas", "MSN": "1253", "YOM": "1934", "Flight number": "NA", "Crash location": "Oklahoma City Oklahoma", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "9", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "Shortly after take off, in initial climb, the left engine exploded. Crew attempted to return but during last turn, while flying at 80 knots, the left wing stalled and hit the ground. Aircraft crashed in flames 600 metres from runway threshold. Eight occupants were killed. Crew: Claude H. Seaton, pilot, Malcolm Wallace, copilot, Louise Zarr, stewardess.", "Crash cause": "Technical failure"}, {"Date": "4/4/1939", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4628", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "South Cerney AFB - South Cerney AFB", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "South Cerney AFB Gloucestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a solo training flight. Landing was hard and the aircraft bounced several times, so the pilot decided to abandon the landing and attempted to take off. After departure, during initial climb, the twin engine aircraft stalled, hit a hedge and trees before coming to rest in bushes located one mile from the air base. While the aircraft was damaged beyond repair, the pilot was slightly injured. Crew: Sergeant T. H. Nicholls, pilot.", "Crash cause": "Unknown"}, {"Date": "4/12/1939", "Time": "NA", "Aircraft": "Junkers W.34", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "NA", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2607", "YOM": "1929", "Flight number": "NA", "Crash location": "Villavicencio Meta", "Country": "Colombia", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The single engine aircraft christened 'Vanguardia' crashed on landing for unknown reason at Villavicencio-La Vanguardia Airport. Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "4/15/1939", "Time": "NA", "Aircraft": "Fokker F8", "Operator": "Venezuelan Government", "Registration": "YV-AFO", "Flight phase": "Landing (descent or approach)", "Flight type": "Government", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "5041", "YOM": "1928", "Flight number": "NA", "Crash location": "Uruy\u00e9n Bol\u00edvar", "Country": "Venezuela", "Region": "South America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a search flight following the abduction of Captain Cardona Puig by local Indians. Pilot landed with a tail wind and was unable to stop the aircraft on the remaining distance. The aircraft overrun and came to rest in flames in a ditch. The fire was quickly extinguished, all four occupants were uninjured while the aircraft was damaged beyond repair. It was recovered in 2001 and ferried to The Netherlands by the Aviadome Musuem.", "Crash cause": "Weather"}, {"Date": "4/22/1939", "Time": "11H 0M 0S", "Aircraft": "Bloch MB.210", "Operator": "French Air Force - Arm\u00e9e de l'Air", "Registration": "152", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Angers - Tours", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Tours-Par\u00e7ay-Meslay Indre-et-Loire", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a special flight from Angers on behalf of the Territory Aerial Defence (DAT - D\u00e9fense A\u00e9rienne du Territoire). A total of four Bloch MB.210 was flying together, making a 'Diamond' formation. While approaching the Tours-Par\u00e7ay-Meslay Airport, the aircraft positioned on the left side of the 'Diamond' left the formation to the left while the aircraft positioned on the right side of the 'Diamond' left the formation to the right. Suddenly, both aircraft flying one behind the other collided. Both aircraft went out of control, crashed in an open field and were destroyed. All nine crew members on both aircraft were killed. Crew aboard 152: Sergeant Paul Bredela, Warrant Officer Gaston Fran\u00e7ois, Sergeant Girard, Corporal-Chief G\u00e9n\u00e9bault, Warrant Officer Lagarce. Second aircraft's crew (registration unconfirmed): Lieutenant-Colonel Louis Mailloux, Lieutenant Henry de Rilly d'Oysonville, Warrant Officer Gonin, Sergeant Robert Call\u00e8de.", "Crash cause": "Human factor"}, {"Date": "4/22/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6185", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bircham Newton - Bircham Newton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bircham Newton AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a night training flight. On final approach, while flying too low, the aircraft hit tree tops and crashed in a field short of runway threshold. Both pilots were injured and the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "5/9/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6210", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bircham Newton AFB - Bircham Newton AFB", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bircham Newton AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was performing a training flight with four other Avro Anson. At the end of the exercise, crew was returning to his base when the propeller blades of an Avro flying in a upper position from the K6210 hit its tail. Out of control, K6210 went into a spin and crashed in a field located 1,5 km from the airport. All three crew were killed while all other aircraft landed safely.", "Crash cause": "Human factor"}, {"Date": "5/12/1939", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Private Australian", "Registration": "VH-UPY", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Roma - Roma", "MSN": "550", "YOM": "1928", "Flight number": "NA", "Crash location": "Roma Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was performing a training flight when he lost control of the aircraft that crashed near the airport. While the instructor was killed, the student pilot was injured. It is believed that the pilot who was not an instructor was giving flight instruction. Also, the flight was considered as unauthorized/illegal.", "Crash cause": "Human factor"}, {"Date": "8/1/1939", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "N6297", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Lossiemouth - Lossiemouth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Lossiemouth AFB Moray (Elginshire)", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was engaged in a training exercise. While flying off the RAF Lossiemouth, the twin engine aircraft collided in unknown circumstances with another RAF Airspeed AS.10 Oxford registered N6329 and carrying one pilot. Both aircraft crashed into the sea and were lost. All three crewmen were killed. Crew (15 SFTS): F/O Eric Wilson Yates, P/O Douglas Henry Kitson Alwood.", "Crash cause": "Human factor"}, {"Date": "9/7/1939", "Time": "NA", "Aircraft": "Handley Page H.P.54 Harrow", "Operator": "Royal Air Force - RAF", "Registration": "K7003", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "West Freugh AFB Wigtownshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Aircraft was approaching West Freugh AFB when it hit the ground, lost its undercarriage and came to rest in a field. No casualties.", "Crash cause": "Human factor"}, {"Date": "9/8/1939", "Time": "NA", "Aircraft": "Handley Page H.P.54 Harrow", "Operator": "Royal Air Force - RAF", "Registration": "K6959", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Penrhos AFB Gwynedd", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after take off from RAF Penrhos AFB, Wales, due to an engine failure. Crew fate unknown.", "Crash cause": "Technical failure"}, {"Date": "10/31/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "N5177", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Weston-on-the-Green Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a training mission on behalf of the 108th Squadron. In flight, the twin engine aircraft collided with another RAF Avro 652 Anson I registered N5158 and carrying one pilot. Both aircraft crashed in a prairie located 6 km southwest of Bicester, Oxfordshire. All three crew on both aircraft were killed. Crew (108th Squadron): F/O J. D. Cody, pilot, F/O R. E. Cox, pilot.", "Crash cause": "Human factor"}, {"Date": "11/2/1939", "Time": "NA", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Royal Norwegian Air Force - Kongelige Norske Luftforsvaret", "Registration": "123", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "145", "YOM": "1925", "Flight number": "NA", "Crash location": "Trondheim S\u00f8r-Tr\u00f8ndelag", "Country": "Norway", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a solo training flight when he lost control of the aircraft that crashed in the Trondheim harbor. The pilot was injured and the aircraft was lost.", "Crash cause": "Unknown"}, {"Date": "11/6/1939", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "K7185", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Abingdon - Abingdon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abingdon AFB Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a night training exercise on behalf of the 166th Squadron. The crew missed the runway and the aircraft lost its undercarriage while landing next to the runway. Both pilots escaped unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "11/11/1939", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "N1364", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Villeneuve-les-Vertus - Villeneuve-les-Vertus", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bouxurulles Vosges", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was returning to his base in Villeneuve-les-Vertus following a leaflets dropping mission over Frankfurt. En route, the aircraft went out of control and crashed in a field located in Bouxurulles, 6 km southwest of Charmes. All five crew were killed. Crew: S/L J. A. Bartlett, pilot, Sgt R. Walsh, pilot, AC1 H. Laybourne, wireless operator and air gunner, AC1 H. Taylor, wireless operator and air gunner, Sgt C. Thomas, observer.", "Crash cause": "Unknown"}, {"Date": "11/15/1939", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "N5196", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Cranfield - Cranfield", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cranfield Bedfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was performing a solo night training exercise. Shortly after lift off, the twin engine aircraft stalled and crashed in an open field past the runway end. The pilot was slightly injured while the aircraft was damaged beyond repair. Crew (35th Squadron): F/L G. R. Boles.", "Crash cause": "Technical failure"}, {"Date": "11/17/1939", "Time": "13H 45M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Bad W\u00f6rishofen - Bad W\u00f6rishofen", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Untertilliach Tyrol", "Country": "Austria", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "En route, while cruising in poor weather conditions, crew decided to bail out. The twin engine aircraft hit the slope of Mt Mitterkar located near Untertilliach. A crew was rescued while all three others were killed.", "Crash cause": "Unknown"}, {"Date": "11/20/1939", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "British Airways", "Registration": "G-AFFM", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "75", "YOM": "1938", "Flight number": "NA", "Crash location": "Gosport Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a training flight from Heston when flying in the region of Gosport, the twin engine aircraft collided with the moorings of a balloon. The aircraft went out of control and crashed in a huge explosion. Both pilots were killed. Crew: Arthur George Nicholson, pilot, Arthur Edward Eady, radio operator.", "Crash cause": "Human factor"}, {"Date": "11/22/1939", "Time": "NA", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "5J+FA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Torhout West Flanders", "Country": "Belgium", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The Heinkel He.111 was performing a sortie from the Quakenbr\u00fcck airbase in Germany. While flying over Belgium, the crew was attacked by few Curtiss Hawk 75 from the French First Squadron of the Fighter Group 1/4 based in Norrent-Fontes. Crew attempted to make an emergency landing but the aircraft crashed near Torhout. While the captain was injured, all three other crew were killed.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "12/13/1939", "Time": "NA", "Aircraft": "Vickers 290 Wellington I", "Operator": "Royal Air Force - RAF", "Registration": "R2699", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Methwold - Methwold", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Methwold AFB Norfolk", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to RAF Methwold, the aircraft went out of control and crashed in flames short of runway. Both crew were killed. Crew (214th Squadron): P/O W. L. Comer, P/O R. A. Russell-Forbes.", "Crash cause": "Unknown"}, {"Date": "12/17/1939", "Time": "NA", "Aircraft": "Fokker Universal", "Operator": "United Air Transport", "Registration": "G-CAFU", "Flight phase": "Takeoff (climb)", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "404", "YOM": "1926", "Flight number": "NA", "Crash location": "Fort Saint John British Columbia", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after take off from Fort Saint John-Charly Lake, while on initial climb, the pilot initiated a turn when the seaplane stalled and crashed. The aircraft was lost and the pilot was injured.", "Crash cause": "Unknown"}, {"Date": "12/18/1939", "Time": "NA", "Aircraft": "Vickers 408 Wellington IA", "Operator": "Royal Air Force - RAF", "Registration": "N2940", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Honington - Honington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wilhelmshaven Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "While performing a reconnaissance flight off the German coast, the aircraft was shot down by enemy fire, went out of control and crashed into the sea off Wilhelmshaven. All five crew members were killed. Crew (9th Squadron): P/O Eric Francis Lines, pilot, F/S Alfred Kitto Fearnside, copilot, AC1 Edward Malcolm George Polhill, wireless operator and air gunner, LAC Alex Morrison Dickie, air gunner, AC2 Clifford Walker, air gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "12/21/1939", "Time": "13H 0M 0S", "Aircraft": "Lockheed 14 Super Electra", "Operator": "British Airways", "Registration": "G-AFYU", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Alexandria \u2013 El Salloum \u2013 Valetta \u2013 Croydon", "MSN": "1444", "YOM": "1939", "Flight number": "NA", "Crash location": "Libya All Libya", "Country": "Libya", "Region": "Africa", "Crew on board": "5", "Crew fatalities": "2", "Pax on board": "6", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "Less than one hour after his departure from El Salloum Airport, at the border between Egypt and Libya, the pilot sent a mayday message due to unknown technical problems. He was forced to ditch the aircraft off the Libyan coast. The crew of a ship was quickly on the scene and was able to rescue six occupants, among them the pilot, while five other occupants were killed.", "Crash cause": "Technical failure"}, {"Date": "1/25/1940", "Time": "NA", "Aircraft": "Junkers W.34", "Operator": "Canadian Airways", "Registration": "CF-ARI", "Flight phase": "Takeoff (climb)", "Flight type": "Postal (mail)", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2732", "YOM": "24", "Flight number": "NA", "Crash location": "Fort McMurray Alberta", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "Shortly after takeoff from Fort McMurray, while in initial climb, the engine failed. The aircraft stalled and crashed in a wooded area located some 5 miles south of Waterways. The aircraft was destroyed and the pilot William Beaman Donoghue was killed.", "Crash cause": "Technical failure"}, {"Date": "2/3/1940", "Time": "9H 30M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "1H+HL", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Schleswig - Schleswig", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Amble Northumberland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While cruising off the British coast on a reconnaissance mission, the twin engine aircraft was shot down by the crew of a RAF Hawker Hurricane and crashed into the Druridge Bay located south of Amble, Northumberland. All four crew members were killed. Crew (26th Squadron): Uffz Walter Remishke, pilot, Lt Luther von Bruning, observer, Fw Herbert Panzlaff, wireless operator, Fw Herbert Peterson, engineer.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "2/11/1940", "Time": "4H 15M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "N7294", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Thornaby - Thornaby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Great Ayton North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "During a night training exercise, the pilot did not realize he was flying too low due to poor visibility. The twin engine aircraft hit a hill located in Easby Moor, east of Great Ayton. A crewmen was seriously injured while all three others occupants were killed. Crew (220th Squadron): F/O Tom MacKinlay Parker, pilot, \u2020 Sgt Harold Francis Bleksley, pilot, \u2020 Cpl Norman Rrichard Drury, wireless operator, \u2020 LAC Atholl Barker, air gunner.", "Crash cause": "Human factor"}, {"Date": "2/13/1940", "Time": "NA", "Aircraft": "Heston Phoenix I", "Operator": "British American Air Services - BAAS", "Registration": "G-AEHJ", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "3-Jan", "YOM": "1936", "Flight number": "NA", "Crash location": "Liverpool-John Lennon (ex Speke) Merseyside", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances into the Mersey River, off Liverpool. Occupant fate unknown.", "Crash cause": "Unknown"}, {"Date": "2/17/1940", "Time": "NA", "Aircraft": "De Havilland DH.85 Leopard Moth", "Operator": "Private Australian", "Registration": "VH-UUG", "Flight phase": "NA", "Flight type": "Private", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "7110", "YOM": "1935", "Flight number": "NA", "Crash location": "Cunnamulla Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances at Cunnamulla Airport. Was owned by G. W. Young.", "Crash cause": "Unknown"}, {"Date": "2/20/1940", "Time": "NA", "Aircraft": "Ford 5", "Operator": "TACA International Airlines - Transportes A\u00e9reos Centro Americanos", "Registration": "AN-AAT", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "5-AT-007", "YOM": "1928", "Flight number": "NA", "Crash location": "Prinzapolka Regi\u00f3n Aut\u00f3noma del Atl\u00e1ntico Norte", "Country": "Nicaragua", "Region": "Central America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "During a training exercise in the region of Prinzapolka, crew lost control of the aircraft that crashed in unknown circumstances. Both pilots were injured while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "2/27/1940", "Time": "NA", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Schleswig - Schleswig", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coquet Island Northumberland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was performing a reconnaissance mission on behalf of the 26th Squadron based in Schleswig. While approaching the British coast, the twin engine aircraft was shot down and crashed some ten miles off the Coquet Island, killing all five occupants.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "3/28/1940", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "N1351", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Driffield - Driffield", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Gerolstein Rhineland-Palatinate", "Country": "Germany", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was performing a reconnaissance mission over Germany and left RAF Driffield at 2240LT on March 27. While flying over the region of Pr\u00fcm, the aircraft was hit by Flak and crashed in an open field located in Gerolstein, some 18 km northeast of Pr\u00fcm. A crew member was killed while all four other occupants were taken POW. Crew (77th Squadron): F/O J. B. J. Boardman, P/O G. L. Norman, \u2020 Sgt W. R. Taylor, LAC J. Masters, AC1 W. Cowle.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "4/5/1940", "Time": "23H 45M 0S", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "K9040", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Dishforth - Dishforth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Milford Haven Pembrokeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft left RAF Dishforth in the evening on a night training exercise and was lost without trace. It is believed it crashed into the Bristol Channel, some 10 miles off Milford Haven. No trace of the aircraft nor the crew was ever found. Crew (51st Squadron): F/O D. E. Gould, F/L F. G. Dickson, Sgt R. G. Bruce, LAC E. Benyon, AC1 J. Boyd.", "Crash cause": "Unknown"}, {"Date": "4/12/1940", "Time": "NA", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "P9269", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Marham - Marham", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Norway All Norway", "Country": "Norway", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The aircraft left RAF Marham at 1215LT on a reconnaissance mission to search enemy shipping off the Norwegian coast. The bomber was shot down by enemy fire and crashed into the North Sea. All six occupants were killed. Crew (38th Squadron): S/L M. Nolan, F/O D. C. Maybury, Sgt F. F. Berfick, LAC M. F. Bedford, AC2 G. Flynn, P/O G. W. Brundish.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "4/14/1940", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "1Z+AS", "Flight phase": "Flight", "Flight type": "Supply", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Oslo - Oslo", "MSN": "6546", "YOM": "NA", "Flight number": "NA", "Crash location": "V\u00e5lebu Oppland", "Country": "Norway", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left Oslo-Fornebu Airport at 1700LT on a para dropping mission. In the region of Domb\u00e5s, after dropping its paratroopers, the aircraft was shot down by anti-aircraft battery and caught fire. The captain completed an emergency landing in a prairie and the aircraft slid for several yards before coming to rest in flames. All four crew members were unhurt while the aircraft was destroyed. Crew (6. Staffel II/KGzbV 1): Uffz Claus B\u00f6sch, Uffz Otto Schilling, Uffz Paul Kafzik, Uffz Walter Weyer. Source: http://ktsorens.tihlde.org/flyvrak/valebu.html", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "4/16/1940", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "1Z+IY", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Aalborg \u2013 Stavanger", "MSN": "6306", "YOM": "NA", "Flight number": "NA", "Crash location": "Birkeland Aust-Agder", "Country": "Norway", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was performing a cargo flight from Aalborg to Stavanger-Sola Airport with a load of oil barrels on board. While cruising in poor weather conditions, the three engine aircraft hit a mountain slope located near Birkeland and was destroyed in impact. All four crew members were killed. Crew (14. Staffel. IV./KGr.zbV l): Fldw Bernhard Kalth\u00f6ner, pilot, GfrLudwig Landstorfer, Uffz Karl Opitz, Uffz Peter Richter.", "Crash cause": "Human factor"}, {"Date": "5/10/1940", "Time": "5H 0M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "KS+DS", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Landsberg - Landsberg", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Charvieu-Chavagneux Is\u00e8re", "Country": "France", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a reconnaissance flight in the area of Lyon, France. While cruising by night, the twin engine aircraft was hit by Flak. Crew decided to abandon the aircraft and bailed out. Without pilot, the aircraft dove into the ground and crashed in an open field located in Charvieu-Chavagneux. All crew members survived but were taken POW.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/16/1940", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "Royal Canadian Air Force - RCAF", "Registration": "678", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "20", "YOM": "1938", "Flight number": "NA", "Crash location": "Grafton Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "2", "PAX fatalities": "2", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Crashed in unknown circumstances, killing all three occupants.", "Crash cause": "Unknown"}, {"Date": "5/17/1940", "Time": "NA", "Aircraft": "Junkers F.13", "Operator": "South African Air Force", "Registration": "258", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "NA", "Schedule": "NA", "MSN": "2055", "YOM": "1931", "Flight number": "NA", "Crash location": "South Africa All South Africa", "Country": "South Africa", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances somewhere in South Africa. The single engine aircraft was christened 'Cutty Sark'.", "Crash cause": "Unknown"}, {"Date": "5/19/1940", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "N1388", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Driffield - Driffield", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Sea All World", "Country": "World", "Region": "World", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left RAF Driffield at 2005LT on a bombing mission to Hanover. At 2135LT, while flying at 9,000 feet and some 60 miles off the Dutch coast, the Whitley was attacked by a Me.110 and damaged. In turn, the enemy aircraft was claimed destroyed by AC1 Parkes. Despite a painful foot wound, F/L Raphael ditched the bomber and the crew clambered into the dinghy. Their plight was seen by F/L Crockett, who happened to be in the area at the time, and he was able to direct a Royal Navy destroyer to the scene. After four hours afloat, the crew were rescued and take into Yarmouth. Crew (77th Squadron): F/L G. L. Raphael, P/O R. P. Payne, Sgt Prescott, LAC Storey, AC1 Parkes. Source: W. R. Chorley.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/23/1940", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "SABENA - Soci\u00e9t\u00e9 Anonyme Belge d'Exploitation de la Navigation A\u00e9rienne", "Registration": "OO-AUI", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2094", "YOM": "1938", "Flight number": "NA", "Crash location": "Arques Pas-de-Calais", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "2", "Pax on board": "2", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The aircraft was performing a flight from Brussels to the British Isles. While overflying the region of Merville, the aircraft was hot by the German Flak. The crew attempted to make an emergency landing but the aircraft eventually crashed in a field located near Arques and was destroyed. The pilot and the navigator were killed while both other crew members and both passengers were taken POW. Crew: Sgt Raymond Chartier, pilot, \u2020 Capt John M.H. Hoare, navigator, \u2020 P/O Benson Freeman, Pier Vrebos, engineer. Source: http://luchtvaartgeschiedenis.be/", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/26/1940", "Time": "16H 18M 0S", "Aircraft": "Junkers JU.52", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Supply", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "5636", "YOM": "NA", "Flight number": "NA", "Crash location": "Storfjellet (Saltdal) Nordland", "Country": "Norway", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "12", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While cruising east of Nordnes, the three engine aircraft was shot down by the pilot of a RAF Gloster Gladiator and crashed in the Storfjellet mountain range. Eleven paratroopers were able to bail out before the aircraft crashed. All three crew members and one passenger were killed. Crew (Transportstaffel 3./KGr zbV 106 ): Lt Robert Eid, pilot, Uffz Horst Sauer, radio navigator, Fw Willy Hellmann, engineer.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/29/1940", "Time": "18H 0M 0S", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "N5227", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Detling - Detling", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Sea All World", "Country": "World", "Region": "World", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The twin engine aircraft left RAF Detling at 1535. While cruising along the Dutch coast near a German destroyer (T61), the aircraft went out of control and crashed into the North Sea. All four crewmen were killed and only one dead body was found. Crew (500th Squadron). P/O Irvine S. Wheelwright, Sgt Herbert W. Johnson, LAC Frank H. Giles, F/S Russell G. T. Soper.", "Crash cause": "Unknown"}, {"Date": "6/6/1940", "Time": "NA", "Aircraft": "Vickers 408 Wellington IA", "Operator": "Royal Air Force - RAF", "Registration": "P9232", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Honington - Honington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Simonshaven South Holland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew left RAF Honington at 2125LT on June 5 on a bombing mission to Duisburg. Shortly after entering the Dutch airspace, the aircraft was fired by the German Flak. The captain ordered the crew to bail out and later tried to make an emergency landing when the aircraft exploded in mid-air, disintegrated and crashed in a field located in Simonshaven, southwest of Rotterdam. Four crew were taken POW while both other crew were killed. Crew: S/L George Ernest Peacock, pilot, \u2020 P/O Bertram Arthur James, pilot, Sgt Ronald Charles Hargrave, navigator and observer, \u2020 Sgt A. K. Griffiths, wireless operator and air gunner, P/O Sedgwick Whiteley Webster, air gunner, LAC C. Murton, air gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "6/21/1940", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K6272", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Prestwick Ayrshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "On approach to Prestwick Airport, the twin engine aircraft stalled and crashed few hundred yards short of runway. All four crew members were killed.", "Crash cause": "Human factor"}, {"Date": "6/27/1940", "Time": "NA", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "5J+EK", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Wittmundhafen - Wittmundhafen", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "NA", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While approaching the British coast north of Sunderland, the twin engine aircraft was shot down by enemy fire and crashed into the sea. All four crew were rescued and taken POW. Crew (2. Staffel I/KG 4): Fw Siegfried Gessert, pilot, Uffz Karl-Heinz Beck, Uffz Willhelm Dieter, Gfr Horst Filihowski.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "7/11/1940", "Time": "18H 0M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ligny-Thilloy Pas-de-Calais", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "On the return leg following a mission over Portsmouth, the twin engine aircraft was shot down by the pilots of RAF Hurricanes and crashed in flames in a field located in Ligny-Thilloy, south of Bapaume. All four crew members were killed. Crew: Lt Helmut Grunwald, Uffz Fridolin Hogg, Obergefr Herbert K\u00f6ster, Uffz G\u00fcnther Mende.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "7/16/1940", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4609", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Puddington Cheshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight when an engine failed en route. The pilot attempted to make an emergency landing in a field located in Puddington. Both crew were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "7/31/1940", "Time": "NA", "Aircraft": "Douglas B-18 Bolo", "Operator": "United States Army Air Corps - USAAC", "Registration": "36-319", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1707", "YOM": "NA", "Flight number": "NA", "Crash location": "San Carlos Panam\u00e1", "Country": "Panama", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the crew encountered an unexpected situation, was forced to abandon the aircraft and bailed out. The aircraft crashed in a pasture and was destroyed. No casualties.", "Crash cause": "Unknown"}, {"Date": "8/2/1940", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "N7314", "Flight phase": "Flight", "Flight type": "Supply", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Maltby South Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While on a supply mission from RAF Thornaby, the crew did not realize he was flying too low due to poor visibility. The twin engine aircraft hit power cables and crashed in flames in an open field. A crew member survived while all three others were killed. Crew (220th Squadron.): F/L Harold Wentworth Aylward Sheahan, pilot, \u2020 P/O Charles James Allsup, copilot, \u2020 Sgt Sydney Smith, wireless operator, \u2020 Sgt Eric Bale Butler.", "Crash cause": "Human factor"}, {"Date": "8/15/1940", "Time": "12H 0M 0S", "Aircraft": "Heinkel He.111", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "1H+?S", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Stavanger - Stavanger", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Northumberland Northumberland", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While approaching the British coast, the aircraft was shot down by the pilot of a RAF fighter and crashed into the sea off Northumberland. All four crew members were killed. Crew (8. Staffel III/KG 26): Oblt Hans von L\u00fcpke, pilot, Ofw Karl Hennicke, observer, Uffz Max Knauer, wireless operator, Uffz Karl Schlick, mechanic.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "8/21/1940", "Time": "NA", "Aircraft": "Vickers 290 Wellington I", "Operator": "Royal Air Force - RAF", "Registration": "L4335", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bassingbourn AFB Cambridgeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing for unknown reasons. No casualties.", "Crash cause": "Unknown"}, {"Date": "9/9/1940", "Time": "NA", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "P9245", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Mildenhall - Mildenhall", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Clacton-on-Sea Essex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft left RAF Mildenhall at 0014LT on a bombing mission to Boulogne, France. While flying off Clacton-on-Sea, the bomber crashed into the sea in unknown circumstances. A crew member was able to swim ashore while all five other occupants were drowned. Crew (149th Squadron): S/L L. V. Andrews, \u2020 P/O C. W. Parish, Sgt J. L. Brown, \u2020 Sgt N. J. Bull, \u2020 Sgt D. M. Payne, \u2020 P/O W. G. Searles. \u2020", "Crash cause": "Unknown"}, {"Date": "9/14/1940", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "L7976", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Heliopolis Cairo", "Country": "Egypt", "Region": "Africa", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on take off for unknown reason. No casualties.", "Crash cause": "Unknown"}, {"Date": "9/24/1940", "Time": "20H 59M 0S", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "N1470", "Flight phase": "Takeoff (climb)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Linton-on-Ouse - Linton-on-Ouse", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Linton-on-Ouse AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after lift off, while climbing, the aircraft stalled and crashed in flames 800 metres past the runway end. Three crew members were killed as two others were seriously injured. Crew (58th Squadron): Sgt Herbert Cornish, pilot, \u2020 F/O Arnold Irwin Watterson, pilot, \u2020 Sgt Leslie Hambleton Taylor, observer, \u2020 Sgt R. Fowlie, wireless operator, Sgt John William Chamberlain, air gunner.", "Crash cause": "Technical failure"}, {"Date": "9/25/1940", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "L7071", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Eaton Constantine Shropshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot, sole on board, was performing a training flight on behalf of the 10th OTU. En route, the twin engine aircraft hit a hill and crashed near Eaton Constantine. The pilot was uninjured while the aircraft was damaged beyond repair. Crew (10th OTU): Sgt Hilton Jones.", "Crash cause": "Human factor"}, {"Date": "10/3/1940", "Time": "NA", "Aircraft": "Fairchild 71", "Operator": "Canadian Airways", "Registration": "CF-AUJ", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "50", "YOM": "1935", "Flight number": "NA", "Crash location": "Sioux Lookout Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On take off from Lost Bay, near Sioux Lookout, the single engine seaplane hit a tree trunk floating on water, overturned and sunk. No casualties.", "Crash cause": "Other causes"}, {"Date": "10/6/1940", "Time": "NA", "Aircraft": "De Havilland DH.91 Albatross", "Operator": "British Overseas Airways Corporation - BOAC", "Registration": "G-AFDL", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Croydon \u2013 Whitchurch", "MSN": "6805", "YOM": "1939", "Flight number": "NA", "Crash location": "Pucklechurch Gloucestershire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "7", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft was performing a regular schedule flight to the RAF Whitchurch, south of Bristol. While on approach, the crew encountered engine problems and attempted to make an emergency landing in a field located in Pucklechurch, northeast of the airport. Just prior touch down, the four engine aircraft hit a house and crashed in a field. All twelve occupants were uninjured while the aircraft christened 'Fingal' was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "10/10/1940", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4659", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Habbaniyah - Habbaniyah", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Habbaniyah AFB Al-Anbar (<U+0627><U+0644><U+0623><U+0646><U+0628><U+0627><U+0631>)", "Country": "Iraq", "Region": "Asia", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was completing a training flight on behalf of 4th Pilot Army School. Shortly after touchdown, a tyre burst. The aircraft swerved, veered off runway and came to rest. Both occupants were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "10/11/1940", "Time": "NA", "Aircraft": "Dewoitine D.338", "Operator": "Air France", "Registration": "F-AQBJ", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Niamey - Cotonou", "MSN": "10", "YOM": "1938", "Flight number": "NA", "Crash location": "Dadjo Collines", "Country": "Benin", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On a cargo flight from Niamey to Cotonou, the crew encountered poor weather conditions. The three engine aircraft hit a mountain located near Dadjo, south of Carnotville. All three crew members were killed. Crew: Paul Perrichon, pilot, Emile Bossard, radio navigator, Marcel Locqueneux, flight engineer.", "Crash cause": "Weather"}, {"Date": "10/15/1940", "Time": "NA", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "T4206", "Flight phase": "Landing (descent or approach)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Topcliffe - Topcliffe", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Topcliffe AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The aircraft left RAF Topcliffe at 1740LT on October 14 on a bombing mission over a synthetic oil plant located in Szczecin, Poland. After completing this mission, the crew was returning to his base in the next early morning when, on final approach, the pilot made a sharp turn to line up with runway. Too low, the aircraft hit tree tops, stalled and crashed few yards short of runway threshold. The aircraft was wrecked and a crew member was killed. Crew (77th Squadron): S/L George Roderick Hartwell Black, pilot, \u2020 Sgt Thomas Edward Coogan, pilot, Sgt Boddington, observer, Sgt Garwood, wireless operator, Sgt Woodroffe, air gunner.", "Crash cause": "Human factor"}, {"Date": "10/16/1940", "Time": "21H 45M 0S", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7844", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "East Wretham - East Wretham", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Oosterwolde Friesland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The aircraft left RAF East Wretham at 1850LT on a bombing mission to Kiel. While flying over The Netherlands by night, the aircraft was shot down by a German fighter and crashed in a field located in Oosterwolde, southwest of Groningen. Four crew members were killed while both others were taken POW. Crew (311th Squadron): P/O Bohumil Landa, pilot, \u2020 Sgt Emanuel Novotn\u00fd, copilot, P/O Hubert Jaro\u0161ek, navigator, \u2020 Sgt Karel Klimt, wireless operator and air gunner, \u2020 Sgt Otto Jirs\u00e1k, front gunner, \u2020 Sgt August\u00fdn Karel \u0160est\u00e1k, rear gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "10/17/1940", "Time": "21H 45M 0S", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "N2771", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "East Wretham - East Wretham", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Stanmore Middlesex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew was engaged in a bombing mission over Bremen from the RAF East Wretham. On the return trip, heavy damaged by enemy fire, the aircraft collided with the cable of a barrage balloon, went out of control and crashed on a tennis court located in Bentley Priory, near Stanmore. Five crew members were killed while the sixth occupant was seriously injured. Crew (311th Squadron): S/L Jan Vesely, \u2020 P/O Jaroslav Matousek, \u2020 P/O Jaroslav Slaby, \u2020 Sgt Frantisek Zapletal, \u2020 Sgt Josef Albrecht, \u2020 P/O Frantisek Trular.", "Crash cause": "Other causes"}, {"Date": "10/20/1940", "Time": "NA", "Aircraft": "Vickers 290 Wellington I", "Operator": "Royal Air Force - RAF", "Registration": "L4220", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Hampstead Norris - Hampstead Norris", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Hampstead Norris AFB Berkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crash landed for unknown reasons. No casualties. Crew from the 15th OTU.", "Crash cause": "Unknown"}, {"Date": "10/22/1940", "Time": "NA", "Aircraft": "Lockheed 10 Electra", "Operator": "Aeroput", "Registration": "YU-SBE", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Belgrade \u2013 Osijek \u2013 Zagreb", "MSN": "1137", "YOM": "1937", "Flight number": "NA", "Crash location": "Osijek Baranja", "Country": "Croatia", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "9", "PAX fatalities": "4", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "On final approach to Osijek Airport, the twin engine aircraft crashed in unknown circumstances in Borovo, some 10 km east of the airport. All three crew members and four passengers were killed.", "Crash cause": "Unknown"}, {"Date": "10/29/1940", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "Deutsche Lufthansa", "Registration": "D-AAIH", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1973", "YOM": "1937", "Flight number": "NA", "Crash location": "Berlin-Tempelhof Berlin", "Country": "Germany", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "12", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach to Berlin-Tempelhof Airport, the pilots were bothered by the low visibility caused by poor weather conditions. The twin engine aircraft hit the ground short of runway and came to rest. Both pilots were killed while all other occupants were injured.", "Crash cause": "Weather"}, {"Date": "11/4/1940", "Time": "6H 50M 0S", "Aircraft": "Armstrong Whitworth AW.38 Whitley", "Operator": "Royal Air Force - RAF", "Registration": "T4205", "Flight phase": "Landing (descent or approach)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Topcliffe - Topcliffe", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Topcliffe AFB North Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left RAF Topcliffe at 1632LT on November 3 on a bombing mission to Mannheim, Germany. On the return leg, while on final approach to RAF Topcliffe, the aircraft ran out of fuel, crash landed, veered off runway and came to rest in flames. All five crew members were injured and the aircraft was destroyed by a post crash fire. Crew (77th Squadron): Sgt N. C. Bizley, pilot, P/O Leonard Edward Pearson, pilot, Sgt Sewell, observer, Sgt James William Middleton, wireless operator and air gunner, Sgt Engel, wireless operator and air gunner.", "Crash cause": "Technical failure"}, {"Date": "11/8/1940", "Time": "NA", "Aircraft": "De Havilland DH.90 Dragonfly", "Operator": "Shell-Mex Argentina", "Registration": "LV-KAB", "Flight phase": "Landing (descent or approach)", "Flight type": "Private", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "7563", "YOM": "1937", "Flight number": "NA", "Crash location": "Rio de Janeiro Rio de Janeiro", "Country": "Brazil", "Region": "South America", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The twin engine aircraft was approaching Rio de Janeiro-Santos Dumont Airport when it collided at a height of 1,500 feet with a Junkers JU.52 of VASP. Registered PP-SPF, the three engine aircraft was en route to Sao Paulo with 18 people on board. After the collision, both aircraft crashed into the Botafogo Bay, killing all 19 occupants.", "Crash cause": "Human factor"}, {"Date": "12/4/1940", "Time": "17H 48M 0S", "Aircraft": "Douglas DC-3", "Operator": "United Airlines", "Registration": "NC25678", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "New York-La Guardia \u2013 Philadelphia \u2013 Allentown \u2013 Akron \u2013 Cleveland \u2013 Chicago", "MSN": "2175", "YOM": "1940", "Flight number": "NA", "Crash location": "Chicago-Midway Illinois", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "13", "PAX fatalities": "7", "Other fatalities": "0", "Total fatalities": 10, "Circumstances": "On final approach to Chicago-Midway Airport, at an altitude of 160 feet, the aircraft stalled and crashed short of runway. All three crew members and seven passengers were killed. Crew: Philip Cramer Scott, pilot, George Sumner Young, copilot, Florence Little, stewardess.", "Crash cause": "Human factor"}, {"Date": "12/9/1940", "Time": "NA", "Aircraft": "Grumman G-21A Goose", "Operator": "United States Army Air Corps - USAAC", "Registration": "38-577", "Flight phase": "NA", "Flight type": "Military", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "1043", "YOM": "1939", "Flight number": "NA", "Crash location": "Lakeport California", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances into the Clear Lake, off Lakeport, and sunk. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "12/21/1940", "Time": "NA", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7865", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Sidi Barrani Matruh", "Country": "Egypt", "Region": "Africa", "Crew on board": "5", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a flight to Berka when an engine failed en route, forcing the pilot to reduce his altitude and to attempt an emergency landing. The aircraft crash landed and came to rest in flames in a desert area located 30 miles southeast of Sidi Barrani. The aircraft was wrecked while all crew members were rescued.", "Crash cause": "Technical failure"}, {"Date": "12/30/1940", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "R6226", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Ohakea - Ohakea", "MSN": "2690", "YOM": "NA", "Flight number": "NA", "Crash location": "Ashhurst Manawatu-Wanganui (Horizons Regional Council)", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was performing a training mission from Ohakea AFB. En route, while completing a sharp turn at low height, the crew lost control of the aircraft that dove into the ground and crashed on two farmhouses. Both pilots were killed. Crew (3rd SFTS): Sgt Rex Brooke-Taylor, LAC Thomas Alexander.", "Crash cause": "Human factor"}, {"Date": "1/16/1941", "Time": "12H 0M 0S", "Aircraft": "Douglas B-18 Bolo", "Operator": "United States Army Air Corps - USAAC", "Registration": "37-523", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "McChord - Edwards", "MSN": "2523", "YOM": "1937", "Flight number": "NA", "Crash location": "Morton Washington", "Country": "United States of America", "Region": "North America", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The twin engine aircraft was on its way from McChord AFB, Washington, to Edwards AFB, California, to take part to a training exercise at the Muroc Dry Lake. While cruising some 30 miles south of his departure point, the crew encountered poor weather conditions with low visibility due to clouds. The aircraft hit the slope of Mt Deschutes (4,322 feet high) located in the Snoqualmie National Forrest. The wreckage and seven dead bodies were found by two woodsmen on February 3, less than 30 feet from the summit. Crew: 1st Lt Robert M. Krummes, pilot, 2nd Lt Charles Thomas Nielsen, copilot, T/S Hearn A. Davis, flight engineer, 2nd Lt John F. Geis, navigator, Sgt Paul L. Maas, bombardier, Sgt Leo H. Nietling, radio operator. Passenger: 1st Lt Lewis E. MacKay. Source and photos: http://www.historylink.org/index.cfm?DisplayPage=output.cfm&file_id=9923", "Crash cause": "Human factor"}, {"Date": "1/17/1941", "Time": "3H 30M 0S", "Aircraft": "Savoia-Marchetti SM.75", "Operator": "Linee Aeree Transcontinentali Italiane - LATI", "Registration": "I-LUME", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Catania \u2013 Rome", "MSN": "32032", "YOM": "1939", "Flight number": "NA", "Crash location": "Catania Sicily", "Country": "Italy", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "13", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Some thirty minutes after take off from Catania-Fontanarossa Airport, the right engine fired, forcing the crew to return to his departure point. On landing, the three engine aircraft went out of control and collided with two Junkers JU.88. Several explosions occurred and the SM.75C was destroyed by fire. All 17 occupants were able to leave the cabin safely.", "Crash cause": "Technical failure"}, {"Date": "1/23/1941", "Time": "4H 13M 0S", "Aircraft": "Douglas DC-3", "Operator": "Transcontinental %26 Western Air - TWA", "Registration": "NC17315", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Los Angeles \u2013 Phoenix \u2013 El Paso \u2013 Amarillo \u2013 Kansas City \u2013 Saint Louis \u2013 Indianapolis \u2013 Pittsburgh \u2013 New York", "MSN": "1930", "YOM": "1937", "Flight number": "NA", "Crash location": "Saint Louis Missouri", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "1", "Pax on board": "11", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "On final approach in poor visibility due to fog and snow falls, while flying at 200 feet, pilots missed the runway 01 and applied full power on both engines to go around. After overflying the runway 01 for several yards, the captain made a turn at low height for a landing on runway 04 when the aircraft hit tree tops and crashed. As twelve occupants were injured, one crew member and one passenger were killed. Crew: P. T. W. Scott, pilot, O. J. DioGuardi, copilot, Mary T. Eshbach, stewardess.", "Crash cause": "Human factor"}, {"Date": "2/1/1941", "Time": "12H 0M 0S", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "L4568", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cranfield Bedfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on take off in unknown circumstances. Both pilots were injured.", "Crash cause": "Unknown"}, {"Date": "3/15/1941", "Time": "12H 0M 0S", "Aircraft": "Lockheed 5 Vega", "Operator": "Compa\u00f1ia Aeronautica Francisco Sarabia SA - CAFSSA", "Registration": "XA-BFP", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "108", "YOM": "1930", "Flight number": "NA", "Crash location": "M\u00e9rida Yucat\u00e1n", "Country": "Mexico", "Region": "Central America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. No casualties.", "Crash cause": "Unknown"}, {"Date": "3/24/1941", "Time": "14H 5M 0S", "Aircraft": "Saro A.36 Lerwick", "Operator": "Royal Air Force - RAF", "Registration": "L7252", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Pembroke Dock - Pembroke Dock", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Pembroke Dock Pembrokeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight consisting of tests with the Flying Boat Blind Approach System. En route, weather conditions worsened and the crew was forced to ditch the aircraft into the Bristol Channel. Both crew took place in a dinghy and the aircraft sunk 25 minutes later. The crew was later recovered. Crew: S/L Banks, pilot, Eddie E. Briggs, copilot.", "Crash cause": "Unknown"}, {"Date": "3/25/1941", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Royal Air Force - RAF", "Registration": "X9448", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "6263", "YOM": "1934", "Flight number": "NA", "Crash location": "Standish Lancashire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a ferry flight from RAF Sherburn-in-Elmet. En route, he encountered poor weather conditions and was forced to attempt an emergency landing. The aircraft hit a hedge and came to rest in a field. While both occupants were unhurt, the aircraft was later declared as written off.", "Crash cause": "Unknown"}, {"Date": "3/25/1941", "Time": "NA", "Aircraft": "De Havilland DH.89 Dragon Rapide", "Operator": "Royal Air Force - RAF", "Registration": "R9551", "Flight phase": "Flight", "Flight type": "Ferry", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "6479", "YOM": "1940", "Flight number": "NA", "Crash location": "Yoxall Staffordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a ferry flight from RAF Hendon. En route, he encountered bad weather conditions and attempted to make an emergency landing. Both pilots were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "3/26/1941", "Time": "NA", "Aircraft": "De Havilland DH.80 Puss Moth", "Operator": "Royal Air Force - RAF", "Registration": "DP850", "Flight phase": "Flight", "Flight type": "Delivery", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2185", "YOM": "1931", "Flight number": "NA", "Crash location": "Beaconsfield Buckinghamshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was completing a delivery flight to RAF White Waltham. En route, the engine failed, forcing the pilot to attempt an emergency landing. The aircraft was written off.", "Crash cause": "Technical failure"}, {"Date": "3/28/1941", "Time": "NA", "Aircraft": "Lockheed 18 LodeStar", "Operator": "South African Airways -SAA - Suid Afrikaanse Lugdiens - SAL", "Registration": "ZS-AST", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Luanda \u2013 Windhoek \u2013 Cape Town", "MSN": "2034", "YOM": "1940", "Flight number": "NA", "Crash location": "Elands Bay Western Cape", "Country": "South Africa", "Region": "Africa", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "6", "PAX fatalities": "6", "Other fatalities": "0", "Total fatalities": 10, "Circumstances": "While flying in poor weather conditions and low visibility, the crew did not realize his altitude was insufficient. The twin engine aircraft hit a hill near Elands Bay and was destroyed. All 10 occupants were killed, among them three civilians. Crew: Adm Guy W. Hallifax, Col Harold E. Cilliers, Lt Col Gordon P. Shearer, Cpt Fred W. Le Roux. Passengers: Lt J. P. Meyer, Sgt John W. Shelly, Sgt Andries P. Van Wyk, C. P. McMichael, Morris Kaplan, Alexandre Kendierski.", "Crash cause": "Unknown"}, {"Date": "5/18/1941", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7393", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Waddington - Waddington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Perranporth Cornwall", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left RAF Waddington with a scratch crew to carry out an engine test, following recent grounding of the Manchesters. An engine fire developed while over the Bristol Channel, but by skilful airmanship, S/L McIntosh succeeded in a crash-landing at Perranporth airfield, Cornwall. The airframe was later converted for instructional use. Crew (207th Squadron): S/L J. C. McIntosh 7. Source: W. R. Chorley.", "Crash cause": "Technical failure"}, {"Date": "6/19/1941", "Time": "12H 0M 0S", "Aircraft": "Douglas DC-3", "Operator": "Liniile Aeriene Rom\u00e2ne Exploatate cu Statul - LARES", "Registration": "YR-PAF", "Flight phase": "Takeoff (climb)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bucharest \u2013 Sofia", "MSN": "1986", "YOM": "1937", "Flight number": "NA", "Crash location": "Bucharest Bucure<U+0219>ti", "Country": "Romania", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "15", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On take off, the aircraft went out of control, stalled and crashed. All 18 occupants were rescued while the aircraft was wrecked. The exact circumstances of the occurrence remains unknown.", "Crash cause": "Unknown"}, {"Date": "6/21/1941", "Time": "12H 0M 0S", "Aircraft": "Mitsubishi MC-20", "Operator": "Manchurian Air Lines", "Registration": "M-604", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Japan Sea All World", "Country": "World", "Region": "World", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "15", "PAX fatalities": "15", "Other fatalities": "0", "Total fatalities": 18, "Circumstances": "While performing a scheduled flight between Japan and China, the twin engine aircraft crashed in unknown circumstances into the sea of Japan. All 18 occupants were killed.", "Crash cause": "Unknown"}, {"Date": "6/22/1941", "Time": "1H 55M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7314", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Waddington - Waddington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wollaston Northamptonshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The aircraft left RAF Waddington in the evening of June 21 on a bombing mission over Boulogne. On the return trip, the bomber was mistakenly shot down by the pilot of a RAF Beaufighter and crashed in a field located in Wollaston, east of Northampton. All seven crew members were killed. Crew (207th Squadron): F/O J. D. G. Withers, Sgt A. M. James, Sgt W. Brown, Sgt A. Malone, Sgt S. Veitch, Sgt J. A. Maville, Sgt M. V. Browne.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "6/27/1941", "Time": "NA", "Aircraft": "Junkers W.33", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "NA", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "69", "YOM": "NA", "Flight number": "NA", "Crash location": "Otrokovice Zl\u00edn Region (Zl\u00ednsk\u00fd kraj)", "Country": "Czech Republic", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While completing a local training flight on behalf of the Aviation School n\u00b0 A/B 113, the single engine aircraft collided with a German Air Force Focke-Wulf Fw.56. Out of control, it dove into the ground and crashed in flames in an open field. Both pilots were killed. Crew: Ludwig Henn, Alfred Neumerkl.", "Crash cause": "Unknown"}, {"Date": "7/28/1941", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "Royal Air Force - RAF", "Registration": "AN534", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2073", "YOM": "1940", "Flight number": "NA", "Crash location": "Wilbarston Northamptonshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "Went out of control and into a dive. Broke in two prior to hit the ground and was totally wrecked. All seven crew members were killed. Ice was suspected. Crew (90th Squadron): F/S Reginald G. Bradley, F/S Hubert C. G. Brook, Sgt Robert Henderson, 1/Lt Laird W. Hendricks, F/S Ronald C. A. Muir, Sgt Philip S. Pugh, Sgt Roy Smith.", "Crash cause": "Technical failure"}, {"Date": "8/3/1941", "Time": "12H 0M 0S", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "N4568", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Sychnant Pass Powys", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While performing a flight within UK, the twin engine aircraft hit a mountain near the Sychnant Pass, Wales. Both pilots were killed.", "Crash cause": "Human factor"}, {"Date": "8/4/1941", "Time": "12H 0M 0S", "Aircraft": "Caudron C.440 Go\u00e9land", "Operator": "Air France", "Registration": "F-AOMR", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "7267/3", "YOM": "1936", "Flight number": "NA", "Crash location": "Salvezines Aude", "Country": "France", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "While on a cargo flight, the crew did not realize he was flying too low due to bad weather conditions. The aircraft hit a mountain and was destroyed near Salvezines. Both crewmen were killed. Crew: Max Rives, pilot, Jean Joly, radio navigator.", "Crash cause": "Weather"}, {"Date": "8/7/1941", "Time": "12H 0M 0S", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Provincial Air Service of Lands %26 Forests", "Registration": "G-CAOY", "Flight phase": "Takeoff (climb)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Gogama - Sault Sainte Marie", "MSN": "504", "YOM": "1928", "Flight number": "NA", "Crash location": "Gogama Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed shortly after take off from a lake located some 24 km of Gogama. The crew was en route to Sault Sainte Marie on a fire fighting mission. The aircraft was destroyed and both occupants were injured.", "Crash cause": "Unknown"}, {"Date": "8/16/1941", "Time": "12H 0M 0S", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "Royal Air Force - RAF", "Registration": "AN523", "Flight phase": "Landing (descent or approach)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2055", "YOM": "1940", "Flight number": "NA", "Crash location": "Plymouth Devon", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While cruising in the region of Brest at an altitude of 32,000 feet, the aircraft was attacked by the pilots of two German fighters. The crew was able to leave the area and attempted a descent to Plymouth Airport. On approach, the aircraft crashed in flames in Roborough and was destroyed. Three crew members were killed while four others were injured. Crew (90th Squadron): Sturmey, Franks, Mulligan, Goldsmith, H. Needle, \u2020 S. Abrose, \u2020 M. Leahy. \u2020", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "9/7/1941", "Time": "12H 0M 0S", "Aircraft": "De Havilland DH.60 Moth", "Operator": "Guinea Airways", "Registration": "VH-ULJ", "Flight phase": "Landing (descent or approach)", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bulolo \u2013 Wau", "MSN": "1074", "YOM": "1929", "Flight number": "NA", "Crash location": "Wau Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "1", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Landed hard for unknown reason. No casualties. The aircraft was written off after cracks were found in the rear fuselage spars.", "Crash cause": "Unknown"}, {"Date": "9/13/1941", "Time": "20H 20M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7306", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Coningsby - Coningsby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coningsby AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On take off, the aircraft went unstable, stalled and crashed in flames. While all seven occupants were quickly rescued, the aircraft was destroyed. The crew was engaged in a training exercise. Crew (97th Squadron): Sgt G. H. Hartley, Sgt Appleyard, Sgt J. Canham, Sgt Dean, Sgt Baker, Sgt Mayland, Sgt Gross.", "Crash cause": "Technical failure"}, {"Date": "9/27/1941", "Time": "NA", "Aircraft": "Fokker F8", "Operator": "Finnish Air Force - Suomen Ilmavoimat", "Registration": "FE-1", "Flight phase": "Takeoff (climb)", "Flight type": "Ambulance", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Orip\u00e4\u00e4 - Turku", "MSN": "5046", "YOM": "1928", "Flight number": "NA", "Crash location": "Orip\u00e4\u00e4 Finland Proper", "Country": "Finland", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "1", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft departed Orip\u00e4\u00e4 Airport bound for Turku with a crew of three and one wounded soldier on board. Shortly after take off, at least one engine failed. The aircraft stalled and crashed in a wooded area located in Latva, some 5 km of the airport. While the aircraft was destroyed, all three crew members were unhurt and the soldier was later transferred to the hospital.", "Crash cause": "Technical failure"}, {"Date": "9/29/1941", "Time": "NA", "Aircraft": "Tupolev ANT-4 (TB-1 & G-1)", "Operator": "Polyarnaya Aviatsiya", "Registration": "CCCP-N289", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Anadyr \u2013 Snezhnoye", "MSN": "795", "YOM": "1939", "Flight number": "NA", "Crash location": "Snezhnoye Chukotka okrug", "Country": "Russia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The pilot failed to cope with landing on the river Anadyr near Snezhnoye in 'mirror' conditions. The aircraft crashed into the water and came to rest in a depth of 8-9 meters. All four crew members were killed.", "Crash cause": "Human factor"}, {"Date": "10/10/1941", "Time": "12H 0M 0S", "Aircraft": "Sikorsky S-38", "Operator": "Lloyd A\u00e9reo Boliviano - LAB Airlines", "Registration": "Nicol\u00e1s Su\u00e1rez", "Flight phase": "NA", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "114-15", "YOM": "1930", "Flight number": "NA", "Crash location": "Guayaramer\u00edn Beni", "Country": "Bolivia", "Region": "South America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances. No casualties. The aircraft did not have any registration but was christened 'Nicol\u00e1s Su\u00e1rez'. Source & photos: http://www.aviacionboliviana.net/civil/aeronaves/sikorsky.htm", "Crash cause": "Unknown"}, {"Date": "10/16/1941", "Time": "12H 0M 0S", "Aircraft": "Saro A.36 Lerwick", "Operator": "Royal Air Force - RAF", "Registration": "L7254", "Flight phase": "Taxiing", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Helensburgh Argyll", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While taxiing in the Bay of Helensburgh, the seaplane hit a rock and was damaged beyond repair. No casualties.", "Crash cause": "Unknown"}, {"Date": "11/2/1941", "Time": "12H 0M 0S", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-2047", "Flight phase": "Flight", "Flight type": "Positioning", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Salt Lake City - McClellan AFB", "MSN": "2047", "YOM": "1940", "Flight number": "NA", "Crash location": "Georgetown California", "Country": "United States of America", "Region": "North America", "Crew on board": "9", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "The crew was on his way to McClellan AFB as one of the four engine has to be changed. The departure from Salt Lake City was delayed, awaiting a weather improvement on the east of California. En route, while cruising at an altitude of 18,000 feet, the crew encountered several technical problems with engine, controls, navigation radio and flight instrument. The Captain ordered the crew to bail out and later attempted to make an emergency landing when the aircraft went out of control and dove into the ground before crashing in a wooded area located in the region of Georgetown. The Captain Leo Walker was killed while all eight other crew members were rescued. Source and photos: http://www.ghosttownexplorers.org/aircraft/b17c/01.htm", "Crash cause": "Technical failure"}, {"Date": "11/8/1941", "Time": "16H 0M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7466", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Coningsby - Coningsby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Sea All World", "Country": "World", "Region": "World", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The crew left RAF Coningsby at 1320LT on an air sea rescue operation to search for crews reported missing from the previous nights operations. The aircraft was last seen around 1600LT and disappeared without trace. Crew (97th Squadron): F/L C. F. D. Price, P/O G. H. J. Pickering, Sgt N. J. Weston, F/Sgt C. Stanley, Sgt A. R. A. Dexter, Sgt C. R. Bronson, Sgt F. W. Manners.", "Crash cause": "Unknown"}, {"Date": "11/8/1941", "Time": "12H 0M 0S", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "Royal Air Force - RAF", "Registration": "AN529", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Desert", "Schedule": "Shallufa - Shallufa", "MSN": "2065", "YOM": "1940", "Flight number": "NA", "Crash location": "Libya All Libya", "Country": "Libya", "Region": "Africa", "Crew on board": "8", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew left RAF Shallufa that day to bomb all ships parked in the Benghazi harbor. Following a successful mission, the crew was returning to his base when the aircraft run out of fuel. As the engines number one, two and three failed, the captain decided to reduce his altitude and attempted an emergency landing in a desert area located 128 km west of Fort Maddalena. While the aircraft was damaged beyond repair, all eight crew members were unhurt and later rescued by a ground unit. Crew (220th Squadron): Jimmy Stevenson, pilot, Ken Brailsford, pilot, Dick Parnell, Tony Barwood, Tom Gwynn, Ken Waddle, Bill Struthers, Colin Barber.", "Crash cause": "Technical failure"}, {"Date": "11/12/1941", "Time": "13H 3M 0S", "Aircraft": "Potez 662", "Operator": "French Government", "Registration": "F-ARAY", "Flight phase": "Flight", "Flight type": "Government", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Algiers \u2013 Vichy", "MSN": "1", "YOM": "1937", "Flight number": "NA", "Crash location": "Valleraugue Gard", "Country": "France", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "3", "PAX fatalities": "3", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The four engine aircraft was en route from Algiers to Vichy with a crew of four and three passengers on board. At 1247LT, while cruising in poor weather conditions, the crew informed ATC he wanted to divert to Marseille due to icing conditions. Sixteen minutes later, the aircraft lost altitude, hit tree tops and crashed in a wooded area located on the south slope of Mt Aigoual, near the Minier Pass, north of Villeraugue. The aircraft was destroyed by impact forces and post impact fire. All seven occupants were killed, among them the French General Charles Huntziger, Chief of Ground Forces. Unique example built in 1937, the aircraft was christened 'Plus est en nous'. Crew: Jean Lef\u00e8vre, pilot. Passengers: General Charles Huntziger, Jean Labusqui\u00e8re, Chief of Staff, Captain de Roy\u00e8re.", "Crash cause": "Weather"}, {"Date": "11/14/1941", "Time": "12H 0M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "AM534", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Silloth - Silloth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Silloth AFB Cumbria", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "En route, while performing a training exercise, the twin engine aircraft went out of control and crashed into the Solway Firth, off RAF Silloth. All four crew members were killed. Crew (1st OTU): Sgt George Richard Stookes, Sgt John Wycliffe Watson, Sgt John Alexander Stark, Sgt Frank Prime.", "Crash cause": "Unknown"}, {"Date": "11/16/1941", "Time": "21H 47M 0S", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7873", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Waterbeach - Waterbeach", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Terschelling Friesland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew departed RAF Waterbeach at 1720LT on a bombing mission over Emden. While approaching the Dutch coast, the aircraft was probably shot down by the German Flak and crashed into the North Sea off terschelling. The last message got by the crew was at 2120LT, some 27 minutes before the accident. It was confirmed on December 21 that the aircraft was shot down. Crew (99th Squadron): F/Sgt Thomas Crawford Bentley Patterson, pilot, Sgt Dennis Edward Hall, Sgt Leonard Ronald Townsend, Sgt Ronald Llewellyn Cooke, Sgt Bernard John Dermody, Sgt William Albert McAllen.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "12/11/1941", "Time": "11H 30M 0S", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal Air Force - RAF", "Registration": "T1052", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cranwell AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "1", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route, the twin engine aircraft collided in unknown circumstances with a RAF Spitfire registered AD291. The pilot of the Oxford attempted to divert to RAF Cranwell for an emergency landing but the aircraft crashed on final approach at Roxholm. The pilot was killed. Crew: LAC Ernest Aubrey Griffin, pilot.", "Crash cause": "Unknown"}, {"Date": "12/15/1941", "Time": "19H 15M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "NZ2007", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Nelson - Nelson", "MSN": "414-0502", "YOM": "1940", "Flight number": "NA", "Crash location": "Nelson Nelson City Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was engaged in a three hours survey flight within New Zealand. While cruising at low altitude in poor weather conditions and by night, the aircraft hit a mountain slope located in Westhaven Inlet, near Nelson. The wreckage was found seven days later and all four crew members were killed. Crew: P/O Alexander John MacFarlane, pilot, P/O Louis George William Volzke, navigator, Sgt Keith Robertson Jack, wireless operator and air gunner, Sgt Phillip David Harris, wireless operator and air gunner. Photos and more details on: http://www.pacificwrecks.com/aircraft/hudson/NZ2007.html", "Crash cause": "Human factor"}, {"Date": "1/1/1942", "Time": "16H 40M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A16-29", "Flight phase": "Takeoff (climb)", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "414-1880", "YOM": "1940", "Flight number": "NA", "Crash location": "Ambon-Pattimura Maluku", "Country": "Indonesia", "Region": "Asia", "Crew on board": "4", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after take off, while climbing, the aircraft stalled and crashed into the sea few hundred yards off shore. Three crew members were killed while the fourth occupant was injured. Crew (13th Squadron): F/O John Turnbull, pilot, \u2020 F/O Robert Kelvin Allen, \u2020 Sgt Walter John Lay, \u2020 Sgt B. E. Hack.", "Crash cause": "Technical failure"}, {"Date": "1/5/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-2423", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2234", "YOM": "1941", "Flight number": "NA", "Crash location": "McDill AFB (Tampa) Florida", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on landing at McDill AFB, 13 km south from Tampa. After touchdown, the aircraft veered off runway and came to rest in flames. No casualties.", "Crash cause": "Unknown"}, {"Date": "1/13/1942", "Time": "7H 10M 0S", "Aircraft": "GVF PS-84", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L3438", "Flight phase": "Flight", "Flight type": "Supply", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Morozovski - Morozovski", "MSN": "7 5 15", "YOM": "1941", "Flight number": "NA", "Crash location": "Smelovka Tambov oblast", "Country": "Russia", "Region": "Asia", "Crew on board": "5", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew left Morozovski at 0315LT on a supply mission to a site behind the German lines. On the return leg, a fire emerged in the cabin and spread rapidly. All 5 crew members bailed out at a height of some 350 meters (1 of them was killed and 1 seriously injured) while the sole passenger (an Air Force officer) did not manage to bail out and was killed. The aircraft crashed near Smelovka, about 5 km east of Verkhnyaya Tarasovka.", "Crash cause": "Technical failure"}, {"Date": "1/17/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-3064", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "2092", "YOM": "1940", "Flight number": "NA", "Crash location": "Malang West Java", "Country": "Indonesia", "Region": "Asia", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft overshoot and crashed in a field past the runway end. All seven crew were slightly injured while the aircraft was written off.", "Crash cause": "Human factor"}, {"Date": "1/19/1942", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A16-145", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Lae \u2013 Rabaul", "MSN": "414-6074", "YOM": "1941", "Flight number": "NA", "Crash location": "Kabu River East New Britain", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While flying at night on a trip from Lae to Rabaul, the twin engine aircraft hit the slope of a mountain located in the region of the Kabu River. No trace of the aircraft nor the crew was found. Crew (24th Squadron): F/Lt Paul Pryde Paterson, F/O James Sinclair McIntyre, Sgt Oliver Frederick George Claxton, LAC James Arthur Wilson.", "Crash cause": "Unknown"}, {"Date": "1/24/1942", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "KNILM - Koninklijke Nederlandse Indies Luchtvaart Maatschappij", "Registration": "PK-AFW", "Flight phase": "Flight", "Flight type": "Cargo", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1982", "YOM": "1937", "Flight number": "NA", "Crash location": "Samarinda East Kalimantan", "Country": "Indonesia", "Region": "Asia", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, while performing a cargo flight, the aircraft was shot down over Borneo by the pilot of a Japanese fighter. The crew was able to reduce his altitude in an attempt to make an emergency landing. The aircraft was damaged beyond repair while all three occupants were rescued.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "1/31/1942", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "T9308", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Great Corby Cumbria", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "En route, the twin engine aircraft went out of control and crashed in flames in an open field. Both crew members were killed.", "Crash cause": "Unknown"}, {"Date": "2/10/1942", "Time": "14H 30M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7478", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Finningley - Finningley", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Finningley AFB South Yorkshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a training flight. On approach to RAF Finningley, an engine lost power. The aircraft swung, stalled and hit the ground near Bawtry, south of the airfield. The air gunner was killed, the pilot was injured and the four other crew members were unhurt. Crew (25th ATU): P/O Elwood Raymond Seibold, pilot, Sgt Frederick King, air gunner. \u2020", "Crash cause": "Technical failure"}, {"Date": "2/13/1942", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A4-6", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mallala - Mallala", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mallala South Australia", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew as engaged in a circular training flight in Mallala. On approach, the twin engine aircraft collided with a second RAAF Avro 652 Anson registered A4-31 with two pilots on board that just taken off. Both aircraft went out of control and crashed near the airport. All four crew members were killed. The exact circumstances of the mishap remains unknown. Crew (6th SFTS): LAC Stanley Livingstone McFarlane, LAC Charles Tilley Collett Shopee.", "Crash cause": "Human factor"}, {"Date": "2/15/1942", "Time": "NA", "Aircraft": "Tupolev ANT-9", "Operator": "Aeroflot - Russian International Airlines", "Registration": "CCCP-L189", "Flight phase": "Landing (descent or approach)", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "190", "YOM": "NA", "Flight number": "NA", "Crash location": "Frunze Bishkek City", "Country": "Kyrgyzstan", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Frunze, both engines failed. The crew attempted to make an emergency landing in a field. After touch down, the aircraft hit a drainage ditch and came to rest in a ravine. All occupants survived but the airplane was damaged beyond repair. It appears the Tupolev ANT-9 is a three engine aircraft but this model was a twin engine PS-9 version.", "Crash cause": "Technical failure"}, {"Date": "2/25/1942", "Time": "NA", "Aircraft": "Dornier DO.24", "Operator": "Royal Netherlands Navy - Marineluchtvaartdienst", "Registration": "X-18", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "778", "YOM": "NA", "Flight number": "NA", "Crash location": "Pangalasiang Central Sulawesi", "Country": "Indonesia", "Region": "Asia", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shot down by the pilot of a Japanese fighter and crashed into the sea off Pangalasiang. The aircraft sunk and was lost while all six crew members were rescued.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "2/26/1942", "Time": "NA", "Aircraft": "Junkers W.33", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "BV+CL", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2839", "YOM": "1933", "Flight number": "NA", "Crash location": "Tolga Hedmark", "Country": "Norway", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the crew was forced to attempt an emergency landing for unknown reason. While the aircraft was damaged beyond repair, all three crew members were injured and later rescued by locals. Crew: Mr. Gerber, pilot, Ober. Seget, Ober. Wernter. Source & photos: http://ktsorens.tihlde.org/flyvrak/vingelen.html", "Crash cause": "Unknown"}, {"Date": "3/2/1942", "Time": "NA", "Aircraft": "Noorduyn Norseman", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-5049", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "NA", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "81", "YOM": "1941", "Flight number": "NA", "Crash location": "Sheenjek River Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The pilot was forced to attempt an emergency landing for unknown reason near Sheenjek River. While the single engine aircraft was damaged beyond repair, the crew fate remains unknown.", "Crash cause": "Unknown"}, {"Date": "3/14/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-3079", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "2107", "YOM": "1940", "Flight number": "NA", "Crash location": "Daly Waters Northern Territory", "Country": "Australia", "Region": "Oceania", "Crew on board": "8", "Crew fatalities": "1", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 1, "Circumstances": "En route, the crew encountered technical problems and attempted to make an emergency landing. The aircraft came to rest in a field and a crew member was killed while all seven other occupants were uninjured.", "Crash cause": "Technical failure"}, {"Date": "3/14/1942", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7395", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Woolfox Lodge - Woolfox Lodge", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Wittering AFB Cambridgeshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The aircraft left RAF Woolfox Lodge at 1930LT on March 13 on a bombing mission to Germany. Following an uneventful mission and while returning to England, an engine failed. The crew decided to abandon the aircraft and bailed out. Out of control, the bomber dove into the ground and crashed in a field located two miles north of RAF Wittering. The aircraft was destroyed while all seven crew members were unhurt. Crew (61st Squadron): P/O John Ralph Hubbard, pilot, Sgt P. C. V. Joslin, P/O Robert Heggie, observer, F/Sgt John George Clelland, wireless operator and air gunner, Sgt Albert Wallace Baker, wireless operator and air gunner, Sgt T. C. Stanley, Sgt P. Jones.", "Crash cause": "Technical failure"}, {"Date": "3/18/1942", "Time": "13H 25M 0S", "Aircraft": "Vickers 290 Wellington I", "Operator": "Royal Air Force - RAF", "Registration": "L4265", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Mount Farm - Mount Farm", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mount Farm AFB Oxfordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "Two pilots and one instructor were performing a training flight on behalf of the fifteenth Army Training School. After rotation, the aircraft encountered problems to gain height. It hit the tail of a parked Lockheed Hudson, stalled and crashed in flames near the runway end. Quickly on scene, SAR teams were able to evacuate a pilot seriously injured while both other occupants were killed.", "Crash cause": "Human factor"}, {"Date": "3/19/1942", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "K8743", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Port Albert - Port Albert", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Port Albert Ontario", "Country": "Canada", "Region": "North America", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was performing a circular training mission at Port Albert. The approach was completed by night. After touchdown, the twin engine aircraft was unable to stop within the remaining runway, overrun, lost its undercarriage and came to rest. While the aircraft was damaged beyond repair, both pilots were unhurt.", "Crash cause": "Human factor"}, {"Date": "3/22/1942", "Time": "NA", "Aircraft": "Airspeed AS.6 Envoy", "Operator": "Indian National Airways - INA", "Registration": "VT-AHR", "Flight phase": "Flight", "Flight type": "Scheduled Revenue Flight", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "57", "YOM": "1936", "Flight number": "NA", "Crash location": "Jaipur Rajasthan", "Country": "India", "Region": "Asia", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknown circumstances near Jaipur. No casualties.", "Crash cause": "Unknown"}, {"Date": "3/28/1942", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-1128", "Flight phase": "Landing (descent or approach)", "Flight type": "Ferry", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "68", "YOM": "1941", "Flight number": "NA", "Crash location": "Macon Georgia", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "On final approach to Macon-Herbert-Smart Airport, the aircraft crashed in unknown circumstances and was destroyed. The crew fate remains unknown. The aircraft was ferried to Macon to get some modifications prior its delivery to the RAF.", "Crash cause": "Unknown"}, {"Date": "3/29/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1431", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "1431", "YOM": "1940", "Flight number": "NA", "Crash location": "Hickam AFB Hawaii", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed into the sea shortly after take off from Hickam Field, Hawaii. Crew fate remains unknown.", "Crash cause": "Unknown"}, {"Date": "4/1/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1398", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1398", "YOM": "1940", "Flight number": "NA", "Crash location": "Hickam AFB Hawaii", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed in unknow circumstances at Hickam Field, Pearl Harbour. Crew fate unknown.", "Crash cause": "Unknown"}, {"Date": "4/9/1942", "Time": "45M 0S", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7427", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Scampton - Scampton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cloppenburg Lower Saxony", "Country": "Germany", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew left RAF Scampton at 2215LT on April 8 on a bombing mission to Hamburg, Germany. While overflying Germany by night, the aircraft was apparently shot down by enemy fire and crashed in an open field located northeast of Cloppenburg. Six crew members were killed while the seventh occupant was injured. Claim by Fw Gerhard Goerke 1/NJG3 - West of Lastrup South East of Cloppenburg at 0049LT. Also claimed by Flak of 1/schw Res Flak Abt 603 (unknown type) near Lastrup, Cloppenburg at 0045LT. Crew (83rd Squadron): P/O Jack Heathcote Morphett, pilot, \u2020 P/O Peter Anthony Lovegrove, pilot, F/Sgt Geoffrey Douglas Hutchinson, observer, \u2020 F/Sgt Albert Henry Salter, wireless operator and air gunner, \u2020 Sgt Reginald Stanley Williams, wireless operator and air gunner, \u2020 Sgt George Charles Fisk, air gunner, \u2020 Sgt Charles Dewitt Gellatly, air gunner. \u2020", "Crash cause": "Unknown"}, {"Date": "4/15/1942", "Time": "NA", "Aircraft": "Simmonds Spartan", "Operator": "Private Papuan", "Registration": "VH-UKQ", "Flight phase": "Flight", "Flight type": "Humanitarian", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "5", "YOM": "1929", "Flight number": "NA", "Crash location": "Goroka Eastern Highlands", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The single engine aircraft was engaged in the region of Kaitantu to evacuate wounded people. En route, the pilot encountered technical problems and elected to make an emergency landing in Benabena, near Goroka. All occupants survived while the aircraft was damaged beyond repair.", "Crash cause": "Unknown"}, {"Date": "4/17/1942", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "W2630", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Newton Stewart - Newton Stewart", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Mt Cairnsmore of Fleet Dumfriesshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "1", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was engaged in a night training mission around RAF Newton Stewart. En route, the twin engine aircraft hit the east slope of Mt Cairnsmore of Fleet located some 10 km east of Newton Stewart. Two crew members were killed while the third occupant was injured. Crew (1st AOS): Sgt John Charles Hinton Allen, pilot, Sgt Edward Clifford Hirst, wireless operator. Passenger: Mr. W. Paterson (employee of Airwork).", "Crash cause": "Human factor"}, {"Date": "4/18/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1400", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "1400", "YOM": "1940", "Flight number": "NA", "Crash location": "Rabaul East New Britain", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "7", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "While flying near Rabaul, the twin engine aircraft was shot down by enemy fire and crashed. Five crew members were killed while two others were rescued and taken POW.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/15/1942", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Netherlands Navy - Marineluchtvaartdienst", "Registration": "AE525", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "414-3880", "YOM": "1941", "Flight number": "NA", "Crash location": "Terschelling Friesland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While performing a maritime patrol flight, the twin engine aircraft went out of control and crashed into the sea off Terschelling. All four crew members were killed. Crew (320th Squadron): F/O J. Stork, 2nd Lt J. M. Mulder, Sgt A. L. Sens, AC1 E. de Weerd.", "Crash cause": "Unknown"}, {"Date": "5/22/1942", "Time": "NA", "Aircraft": "Junkers JU.52", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "7U+IK", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Oslo \u2013 Bod\u00f8", "MSN": "2863", "YOM": "NA", "Flight number": "NA", "Crash location": "Bod\u00f8 Nordland", "Country": "Norway", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "1", "PAX fatalities": "1", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The crew departed Oslo-Fornebu Airport at 0655LT bound for Bod\u00f8. While approaching, the three engine aircraft hit the slope of Mt Fugl\u00f8y located some 25 km southwest of Bod\u00f8. All five crew members were killed. Crew (2./KG.zbV.108): Lt Gerhard Kleiner, Obgfr Gerhard Mathes, Uffz Erwin Burchardt, Obgfr Fritz Eilers. Passenger: Fw Friedrich Jurkat. Source & photos: https://ktsorens.tihlde.org/flyvrak/fugloy.html", "Crash cause": "Unknown"}, {"Date": "5/28/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1467", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "1467", "YOM": "1940", "Flight number": "NA", "Crash location": "Lae Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "The twin engine aircraft was shot down by enemy fire and crashed into the sea off Lae, killing all seven crew members.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "5/30/1942", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Netherlands Navy - Marineluchtvaartdienst", "Registration": "AM929", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Ameland Island Friesland", "Country": "Netherlands", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "The crew was engaged in a night maritime patrol flight when the captain decided to ditch the aircraft off Ameland Island for unknown reason. While the aircraft sunk, all four occupants were rescued.", "Crash cause": "Unknown"}, {"Date": "5/31/1942", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7290", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Scampton - Scampton", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "M\u00fclheim an der Ruhr North Rhine-Westphalia", "Country": "Germany", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew left RAF Scampton at 2255LT on May 30 on a bombing mission to Cologne, Germany. While overflying Duisburg by night, the aircraft was shot down by the German Flak and right engine exploded. Five crew members were able to bail out when the aircraft went out of control and crashed in a huge explosion, killing both other occupants. Crew (49th Squadron): P/O Philip Nevil Floyd, pilot, \u2020 Sgt D. E. Randall, Sgt J. R. McK. Valentine, Sgt John Smith, wireless operator and air gunner, \u2020 Sgt F. E. Woodrow, Sgt J. F. Wight, Sgt E. Probert.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "6/1/1942", "Time": "11H 42M 0S", "Aircraft": "Avro 652 Anson", "Operator": "Royal Australian Air Force - RAAF", "Registration": "AW902", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Bundaberg - Bundaberg", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bargara Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While on a training mission from Bundaberg, the twin engine aircraft went out of control and crashed into the sea 1,5 mile off Bargara, Queensland. The aircraft sunk in 32 feet of water and all three crew members were killed. Crew (8th SFTS): F/Sgt Ronald Campbell Davies, pilot, LAC Walter James Regan, LAC Clifford James Lucas.", "Crash cause": "Unknown"}, {"Date": "6/20/1942", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-11851", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "347", "YOM": "1941", "Flight number": "NA", "Crash location": "Davis-Monthan AFB Arizona", "Country": "United States of America", "Region": "North America", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "Crashed in unknown circumstances near Davis Monthan AFB. All eight crew members were killed.", "Crash cause": "Unknown"}, {"Date": "6/24/1942", "Time": "NA", "Aircraft": "Douglas C-49 (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-56621", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Volk Field - Volk Field", "MSN": "1932", "YOM": "1937", "Flight number": "NA", "Crash location": "Volk Field ANGB (Camp Williams) Wisconsin", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "While flying in the vicinity of the Volk Field ANGB (Camp Williams) located near Camp Douglas, the C-49 collided with a USAF C-48 registered 42-56611. While the second aircraft was able to land safely, the first went out of control and crashed, killing all three crew members.", "Crash cause": "Human factor"}, {"Date": "6/30/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-9014", "Flight phase": "Landing (descent or approach)", "Flight type": "Humanitarian", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kendari - Batchelor", "MSN": "2486", "YOM": "1941", "Flight number": "NA", "Crash location": "Noonamah Northern Territory", "Country": "Australia", "Region": "Oceania", "Crew on board": "5", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was returning to Batchelor following an evacuation flight from Kendari, Indonesia. After being hit by enemy fire, the crew elected to return to his base in Australia but while flying between Darwin and Batchelor by night, the crew encountered engine problems. The captain was forced to feather the engine number 3 while the engine number 4 failed shortly later. The captain attempted to make an emergency landing when the aircraft nosed down and crashed near Noonamah, north of Batchelor. Three crew members were killed while both others were injured. Crew (19th BG): Cpt Weldon Smith, pilot, Lt Everett Davis, bombardier, Sgt Glover J. Burke, Sgt Robert French, Sgt Bryson West.", "Crash cause": "Technical failure"}, {"Date": "7/4/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1468", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "1468", "YOM": "1940", "Flight number": "NA", "Crash location": "Lae Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "While cruising off Lae, the twin engine aircraft collided with a Japanese Mitsubishi Zero fighter and crashed into the sea. All six crew members were killed.", "Crash cause": "Unknown"}, {"Date": "7/13/1942", "Time": "2H 32M 0S", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-2655", "Flight phase": "Takeoff (climb)", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Horn Island - Horn Island", "MSN": "2466", "YOM": "1941", "Flight number": "NA", "Crash location": "Horn Island Queensland", "Country": "Australia", "Region": "Oceania", "Crew on board": "9", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "Shortly after a night take off, while in initial climb, the aircraft stalled and crashed into the sea some 300-400 meters off shore. Three crewmen were killed while six others were rescued. A first B-17 registered 41-2636 crashed at the same location and in similar circumstances two minutes earlier. Crew: Lt Paul D. Lindsay, pilot, Lt Edward R. Budz, navigator, \u2020 Sgt Ralph Dietz, air gunner, Sgt Vernon O. Elder, air gunner, S/Sgt Houston A. Rice, \u2020 S/Sgt James E. Houchins. \u2020", "Crash cause": "Unknown"}, {"Date": "7/13/1942", "Time": "NA", "Aircraft": "Short S.29 Stirling", "Operator": "Royal Air Force - RAF", "Registration": "N6075", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Mountains", "Schedule": "Oakington - Oakington", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Leek Staffordshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The aircraft left RAF Oakington on a cross country exercise. While cruising over the region of Biddulph, the captain reduced his altitude to show the house of Mr. Dolphin to the other members of the crew. Shortly later, the aircraft went through a cloudy area and hit the hill of Merrytown Low, near Leek. All eight crew members were killed. Crew: Sgt Roderick Urquhart Morrison, pilot, F/Sgt John Richard Griffin, observer, F/Sgt James Frederick Hirst, wireless operator and air gunner, F/Sgt Thorstein Enevold Helgesen, wireless operator and air gunner, F/Sgt Leo Joseph Regimbal, air gunner, F/Sgt John Ellis Williams, flight engineer, F/Sgt William Anthony George Atkins, flight engineer, F/Sgt Edgar Dolphin.", "Crash cause": "Human factor"}, {"Date": "7/14/1942", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "United States Navy - USN", "Registration": "4463", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Pacific Ocean All World", "Country": "World", "Region": "World", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "The crew left Sand Point NAS on a survey flight over the North Pacific Ocean. En route, the seaplane crashed in unknown circumstances. No trace of the aircraft nor the crew was ever found.", "Crash cause": "Unknown"}, {"Date": "7/29/1942", "Time": "NA", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7894", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Upper Heyford - Upper Heyford", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "North Sea All World", "Country": "World", "Region": "World", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The aircraft left RAF Upper Heyford at 2157LT on July 28 on a bombing mission to Hamburg, Germany. While overflying the North Sea by night, the aircraft disappeared and crashed into the sea. SAR did not find any trace of the aircraft nor the crew. Crew (16th OTU): F/Sgt Richard Elmer Stageman, pilot, W/O Cecil Charles David Hinks, observer, Sgt John George Watson, observer, F/Sgt Prentis Blair Andrew, wireless operator and air gunner, F/Sgt Robert Edward Fahey, wireless operator and air gunner.", "Crash cause": "Unknown"}, {"Date": "8/6/1942", "Time": "NA", "Aircraft": "Douglas A-20 Havoc", "Operator": "Royal Air Force - RAF", "Registration": "AH444", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Hunsdon - Hunsdon", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Clacton-on-Sea Essex", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "2", "Crew fatalities": "2", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 2, "Circumstances": "The crew was involved in a training mission when flying off Clacton-on-Sea, the twin engine aircraft went out of control and crashed into the sea some 200 yards off shore. Both crew members were killed. Crew (85th Squadron): P/O Hugh M. McKiernan, pilot, P/O Geoffrey M. Brearley, observer.", "Crash cause": "Unknown"}, {"Date": "8/9/1942", "Time": "NA", "Aircraft": "Consolidated PBY-5A Catalina", "Operator": "United States Navy - USN", "Registration": "4414", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Mountains", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Cape Korrishka Alaska", "Country": "United States of America", "Region": "North America", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "Crashed in unknown circumstances in Cape Korrishka. All nine crew members were killed.", "Crash cause": "Unknown"}, {"Date": "8/10/1942", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7431", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Coningsby AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "For unknown reasons, the crew missed the approach and the aircraft landed hard. On touchdown, all landing gears were torn off and the aircraft slid for several yards before coming to rest. While all seven crew members were unhurt, the aircraft was considered as damaged beyond repair.", "Crash cause": "Human factor"}, {"Date": "8/20/1942", "Time": "20H 10M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Air Force - RAF", "Registration": "AE646", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Silloth - Silloth", "MSN": "414-2999", "YOM": "1941", "Flight number": "NA", "Crash location": "Silloth AFB Cumbria", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The crew was involved in a combined training exercise with another RAF Lockheed L-414 Hudson registered T9273 and carrying four crew members as well. In flight, both twin engine aircraft collided and crashed into the Solway Firth, off RAF Silloth. All eight crew members on both aircraft were killed. Crew (1st OTU): Sgt K. J. Chandler, Sgt L. Hargrave, Sgt J. Brown, Sgt Morse.", "Crash cause": "Human factor"}, {"Date": "8/20/1942", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-11739", "Flight phase": "Landing (descent or approach)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "235", "YOM": "1941", "Flight number": "NA", "Crash location": "San Diego California", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crash landed at San Diego Airport in unclear circumstances. No casualties.", "Crash cause": "Unknown"}, {"Date": "9/3/1942", "Time": "NA", "Aircraft": "Airspeed AS.10 Oxford", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "NZ1221", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Wigram - Wigram", "MSN": "2599", "YOM": "NA", "Flight number": "NA", "Crash location": "Wigram AFB (Christchurch) Canterbury Regional Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The crew was performing a training flight in the vicinity of the Wigram FB, Christchurch. While flying at low altitude, the twin engine aircraft collided with another RNZAF Airspeed AS.10 Oxford registered NZ1303. Following the collision, the first aircraft dove into the ground and crashed, killing all three occupants. The second aircraft was able to land safely at Wigram AFB.", "Crash cause": "Unknown"}, {"Date": "9/6/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-9071", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Pouembout - Pouembout", "MSN": "2543", "YOM": "1941", "Flight number": "NA", "Crash location": "Rendova Island All Solomon Islands", "Country": "Solomon Islands", "Region": "Oceania", "Crew on board": "9", "Crew fatalities": "9", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 9, "Circumstances": "The aircraft left Pouembout-Plaine des Gaiacs AFB (New Caledonia) on a maritime patrol flight over the Solomon Islands. While cruising off the Rendova Island, the crew intercepted a Japanese flying boat but was shot down and crashed into the sea. All nine crew members were killed. Crew (11th BG): Cpt Robert H. Richards, pilot, 1st Lt Robert H. McGhee, copilot, 2nd Lt William F. B. Morris, navigator, S/Sgt Charles E. Bayer, bombardier, Cpl Otis O. Black Jr., flight engineer, Cpl Yvon W. Bailey, assistant to the flight engineer, Sgt Hugh M. King, radio operator, Cpl Peter Charuk, air gunner, Pvt William Omanoff, air gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "9/28/1942", "Time": "NA", "Aircraft": "Avro 652 Anson", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "NZ401", "Flight phase": "Takeoff (climb)", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "New Plymouth - New Plymouth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "New Plymouth Taranaki Regional Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "4", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after take off from New Plymouth Airport, while climbing, the twin engine aircraft stalled and crashed into the sea. While all four occupants were rescued, the aircraft was lost.", "Crash cause": "Unknown"}, {"Date": "9/29/1942", "Time": "15H 30M 0S", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal New Zealand Air Force - RNZAF", "Registration": "NZ2029", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Nelson - Nelson", "MSN": "414-3852", "YOM": "1941", "Flight number": "NA", "Crash location": "Nelson Nelson City Council", "Country": "New Zealand", "Region": "Oceania", "Crew on board": "7", "Crew fatalities": "6", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 6, "Circumstances": "The crew was engaged in a training flight off Nelson. In flight, the captain decided to reduce his altitude and made a very low pass over the Tasman Bay. Propeller blades hit the water surface and the pilot increased engine power to gain altitude. At a height of 200 feet, the aircraft went out of control, the pilot was able to send a brief mayday message and ditched the aircraft. Ten minutes later, the pilot of a RNZAF's Harvard spotted the Hudson floating with all crew alive, seating on both wings. Unfortunately, more than two hours were needed for the crew of a RNZAF ship to rich the site. Only one crew was found alive as all six other occupants died from hypothermia because the water temperature was too low. Crew (2nd Squadron): F/O Dean Horrocks, \u2020 Sgt Vincent Hill, \u2020 Sgt Jack Bryson, \u2020 Sgt Victor Chapple, \u2020 Sgt Gordon Stevens, \u2020 AC1 John Davis, \u2020 W/O J. Colway.", "Crash cause": "Human factor"}, {"Date": "9/30/1942", "Time": "6H 20M 0S", "Aircraft": "Short S.25 Sunderland", "Operator": "Royal Air Force - RAF", "Registration": "T9050", "Flight phase": "Flight", "Flight type": "Survey / Patrol / Reconnaissance", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Abu Qir - Abu Qir", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Abukir (Abu Qir) Alexandria", "Country": "Egypt", "Region": "Africa", "Crew on board": "12", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "The seaplane left Abu Qir seaplane base at 0545LT on a maritime patrol flight. After 35 minutes into the flight, the engine number one failed. The captain decided to stall the aircraft that broke its back while hitting the water surface. Three crew members were killed while all nine others were rescued. The aircraft was lost. Crew (230th Squadron): F/O R. J. Murphy, pilot, P/O R. C. Scott, pilot, F/O T. W. Sanderson, pilot, P/O A. H. Matthews, navigator, F/Sgt J. Harkins, wireless operator and air gunner, Sgt K. J. Carlsson, wireless operator and air gunner, \u2020 Sgt J. Adam, wireless operator and air gunner, \u2020 Sgt J. Groleau, wireless operator and air gunner, Sgt G. Lindsay, wireless operator and air gunner, \u2020 Sgt D. Hall, flight engineer, LAC D. McLean, fitter, LAC N. Kelly, rigger. Source by Alan Storr: http://static.awm.gov.au/images/collection/pdf/RC09125_007--1-.pdf", "Crash cause": "Human factor"}, {"Date": "10/18/1942", "Time": "NA", "Aircraft": "Avro 679 Manchester", "Operator": "Royal Air Force - RAF", "Registration": "L7376", "Flight phase": "Taxiing", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Swinderby - Swinderby", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Swinderby AFB Lincolnshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While taxiing, the aircraft went out off control and collided with military equipment. All seven crew members were unhurt while the aircraft was damaged beyond repair.", "Crash cause": "Technical failure"}, {"Date": "10/22/1942", "Time": "15H 30M 0S", "Aircraft": "Lockheed 18 LodeStar", "Operator": "Royal Air Force - RAF", "Registration": "EW984", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Bilbeis \u2013 Lydda", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Bilbeis Al Sharqia", "Country": "Egypt", "Region": "Africa", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "10", "PAX fatalities": "10", "Other fatalities": "0", "Total fatalities": 13, "Circumstances": "After take off from Bilbeis, the captain decided to make a low pass over the Officer's Mess. While flying at a height of eight feet, the aircraft hit the tent with its left wing tip that broke away. The aircraft overturned and crashed in a huge explosion. All 13 occupants were killed while there was no casualties on ground.", "Crash cause": "Human factor"}, {"Date": "11/1/1942", "Time": "NA", "Aircraft": "Boeing B-17 Flying Fortress", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-2635", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "Port Moresby - Port Moresby", "MSN": "2446", "YOM": "1941", "Flight number": "NA", "Crash location": "Buin Autonomous Region of Bougainville", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "8", "Crew fatalities": "8", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 8, "Circumstances": "The aircraft left Port Moresby-Seven Mile Airport in the early morning with a crew of eight and a load of 1,000 pounds of bombs to attack Japanese ships based in the Tonolei Harbor. Upon arrival in the target area, the crew encountered poor weather conditions and the aircraft disappeared in unknown circumstances. No trace was ever found. Crew (19th BG): 1st Lt John S. Hancock, pilot, Sgt Robert H. Burns, copilot, 1st Lt James W. Carver, navigator, Cpl Hiram D. Wilkinson, flight engineer, Sgt Edward R. Cipriani, radio operator, Sgt Mac S. Groesbeck, air gunner, Sgt Raymond A. Maxwell, air gunner, Cpl Curtis F. Longenberger, air gunner.", "Crash cause": "Unknown"}, {"Date": "11/4/1942", "Time": "11H 49M 0S", "Aircraft": "Douglas DC-3", "Operator": "Transcontinental %26 Western Air - TWA", "Registration": "NC18951", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Kansas City - Kansas City", "MSN": "2015", "YOM": "1937", "Flight number": "NA", "Crash location": "Kansas City Kansas", "Country": "United States of America", "Region": "North America", "Crew on board": "6", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "A mid-air collision involving aircraft of United States registry, a Douglas DC3, NC18951, and a US Army aircraft, type C-53, registered 41-20116, occurred at an altitude of between 3,500 and 3,900 feet about 4 1/4 miles northeast of the Kansas City Range Station and 1 3/4 miles north of the on course of the northeast leg of the Kansas City Radio Range. At the time of the accident, NC18951 was operating on a check flight in the vicinity of the Kansas City Municipal Airport as a part of the routine instrument flight instruction of Transcontinental & Western Air. The C-53 was on a non-stop cross-country flight from Indianapolis to Wichita via Kansas City, in the service of the US Army Air Forces. The DC-3 received major damage from the collision in the air and was demolished by the resultant crash landing in a group of small trees in the vicinity of Linden, Kansas. The C-53 received major damage as a result of the collision but succeeded in landing at the Kansas City Municipal Airport without further damage. The DC-3 captain sustained minor injuries. None of the 5 other persons involved was injured.", "Crash cause": "Human factor"}, {"Date": "11/6/1942", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-7404", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "NA", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "7404", "YOM": "1941", "Flight number": "NA", "Crash location": "Saint Louis Missouri", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Crashed on take off from Saint Louis-Lambert Airport and destroyed by fire. Crew fate remains unknown.", "Crash cause": "Unknown"}, {"Date": "11/7/1942", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "Royal Air Force - RAF", "Registration": "FK245", "Flight phase": "Landing (descent or approach)", "Flight type": "Bombing", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "Beaulieu - Beaulieu", "MSN": "222", "YOM": "1941", "Flight number": "NA", "Crash location": "Beaulieu AFB Hampshire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "7", "Crew fatalities": "7", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 7, "Circumstances": "On final approach to RAF Beaulieu, the bomber crashed in a huge explosion one mile short of runway. All seven crew members were killed. Crew (224th Squadron): F/Sgt K. Crabtree, Sgt K. E. Hunt, F/Sgt A. W. Colston, Sgt R. W. J. Harrison, Sgt H. R. Jennings, Sgt R. S. Horsley 1.", "Crash cause": "Unknown"}, {"Date": "11/14/1942", "Time": "2H 0M 0S", "Aircraft": "Avro 652 Anson", "Operator": "Royal Air Force - RAF", "Registration": "DJ628", "Flight phase": "Landing (descent or approach)", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Llandwrog \u2013 Penrhos", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Penrhos AFB Gwynedd", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "5", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "The twin engine aircraft left RAF Llandwrog located near Caernarfon at 0124LT on a night training exercise to RAF Penrhos. The crew contacted ground at 0132LT and this was the last radio contact ever. It seems the aircraft crashed into the sea while approaching RAF Penrhos as no trace of the aircraft nor the crew was ever found. Crew (9th AFU): Sgt Trevor Morgan Blakemore, pilot, P/O Keith Charman, navigator, Sgt John George Cairns, Sgt John Mallett, LAC Ronald Adam Simpson.", "Crash cause": "Unknown"}, {"Date": "11/16/1942", "Time": "NA", "Aircraft": "Fiat G.18", "Operator": "Avio Linee Italiane - ALI", "Registration": "I-ETNA", "Flight phase": "Flight", "Flight type": "Test", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Milan - Milan", "MSN": "3", "YOM": "1936", "Flight number": "NA", "Crash location": "Milan Lombardy", "Country": "Italy", "Region": "Europe", "Crew on board": "3", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "While performing a test flight in the Milan area, the crew encountered fuel problems and was forced to attempt an emergency landing in a field. The aircraft was wrecked while all occupants escaped unhurt.", "Crash cause": "Technical failure"}, {"Date": "11/18/1942", "Time": "NA", "Aircraft": "Douglas DC-3", "Operator": "United Airlines", "Registration": "NC16064", "Flight phase": "Landing (descent or approach)", "Flight type": "Cargo", "Survivors": "No", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1904", "YOM": "1937", "Flight number": "NA", "Crash location": "Wright-Patterson AFB (Dayton) Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "3", "Crew fatalities": "3", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 3, "Circumstances": "On final approach to the Wright-Patterson AFB, on of the wing hit a tree. The aircraft stalled and crashed in flames. All three crew members were killed. They were completing a cargo flight on behalf of the USAAF. For undetermined reasons, the aircraft was approaching too low.", "Crash cause": "Human factor"}, {"Date": "11/25/1942", "Time": "11H 1M 0S", "Aircraft": "Douglas DC-2", "Operator": "Royal Australian Air Force - RAAF", "Registration": "A30-10", "Flight phase": "Takeoff (climb)", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Airport (less than 10 km from airport)", "Schedule": "NA", "MSN": "1372", "YOM": "1935", "Flight number": "NA", "Crash location": "Mallacoota Victoria", "Country": "Australia", "Region": "Oceania", "Crew on board": "2", "Crew fatalities": "0", "Pax on board": "4", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "Shortly after take off, while climbing, the right engine failed. The aircraft stalled and crashed, injuring all six occupants. Crew (36th Squadron): F/O J. L. Whiteman, pilot, P/O F. J. Ball, pilot. Passengers: Sgt A. J. Scott, LAC J. Varderway, LAC R. L. Vance, Cpl Greenhill.", "Crash cause": "Technical failure"}, {"Date": "12/10/1942", "Time": "15H 0M 0S", "Aircraft": "Vickers 416 Wellington IC", "Operator": "Royal Air Force - RAF", "Registration": "L7867", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "Lossiemouth - Lossiemouth", "MSN": "NA", "YOM": "NA", "Flight number": "NA", "Crash location": "Corrour Inverness-shire", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "5", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 5, "Circumstances": "While on a training exercise from RAF Lossiemouth, the crew encountered poor weather conditions en route. The bomber was off course by 40 miles when it hit the slope of Leacann na Brathan located near Corrour. Five crew members were killed while the air gunner was badly injured. Crew (20th OTU): F/O James William Heck, pilot, \u2020 Sgt Maurice Hutt, bomb aimer, \u2020 Sgt William Ernest Riley, navigator, \u2020 Sgt Joseph Towers, navigator, \u2020 Sgt James Hemmings, wireless operator and air gunner, \u2020 Sgt Philip Edward Underwood, air gunner.", "Crash cause": "Human factor"}, {"Date": "12/27/1942", "Time": "NA", "Aircraft": "Focke-Wulf Fw.200 Condor", "Operator": "German Air Force - Deutsche Luftwaffe", "Registration": "F8+AK", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "Yes", "Crash site": "Mountains", "Schedule": "NA", "MSN": "140", "YOM": "NA", "Flight number": "NA", "Crash location": "Mt Kvitanosi Hordaland", "Country": "Norway", "Region": "Europe", "Crew on board": "6", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "En route, the four-engine aircraft hit the slope of Mt Kvitanosi located northwest of Vossevangen. Four crew members were killed on impact while two others, injured, walked away to find help. The aircraft was totally destroyed by impact forces. Crew (2./I./KG 40): Oblt Waldemar Hackel, pilot, \u2020 Uffz Adolf Liebscher, pilot, \u2020 Fldw Erwin Kopp, radio operator, \u2020 Uffz Walter Schwartz, radio operator, Gefr Karl Pech, \u2020 Gefr Fritz Albrechts, flight engineer.", "Crash cause": "Unknown"}, {"Date": "1/6/1943", "Time": "NA", "Aircraft": "Consolidated B-24 Liberator", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-11587", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Plain, Valley", "Schedule": "NA", "MSN": "83", "YOM": "1941", "Flight number": "NA", "Crash location": "Donnellsville Ohio", "Country": "United States of America", "Region": "North America", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "En route, the four-engine aircraft exploded in mid-air, disintegrated and crashed in a field located 2 miles west of Donnellsville. All four crew members were killed.", "Crash cause": "Technical failure"}, {"Date": "1/7/1943", "Time": "NA", "Aircraft": "Martin B-26 Marauder", "Operator": "United States Army Air Forces - USAAF", "Registration": "40-1421", "Flight phase": "Flight", "Flight type": "Bombing", "Survivors": "Yes", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Port Moresby - Port Moresby", "MSN": "1421", "YOM": "1940", "Flight number": "NA", "Crash location": "Salamaua Morobe", "Country": "Papua New Guinea", "Region": "Oceania", "Crew on board": "7", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "The aircraft christened 'Yeah' left Port Moresby-Seven Mile Airfield to attack Japanese ships off Lae. Over the target, the aircraft was attacked by Japanese Mitsubishi Zero. With the left engine on fire, the pilot was able to leave the combat area but was eventually forced to ditch the aircraft 40 miles south of Salamaua. Three crew members were rescued while four others were killed. Crew (22nd BG): 1st Lt Leonard T. Nicholson, pilot, 1st Lt Jack L. Childers, copilot, 1st Lt Norman E. Oefreese, navigator, \u2020 Sgt Jack C. Moseley, bombardier, \u2020 S/Sgt William M. Brown, flight engineer, \u2020 S/Sgt Joseph P. Papp, radio operator, \u2020 Cpl Thomas A. Moffitt, air gunner.", "Crash cause": "Terrorism act, Hijacking, Sabotage"}, {"Date": "1/11/1943", "Time": "NA", "Aircraft": "Lockheed L-414 Hudson", "Operator": "Royal Netherlands Navy - Marineluchtvaartdienst", "Registration": "AM863", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Silloth - Silloth", "MSN": "414-2945", "YOM": "1941", "Flight number": "NA", "Crash location": "Silloth AFB Cumbria", "Country": "United Kingdom", "Region": "Europe", "Crew on board": "4", "Crew fatalities": "4", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 4, "Circumstances": "While on a training sortie from RAF Silloth, the twin engine aircraft crashed in unknown circumstances into the Solway Firth, few miles off shore. All four crew members were killed. Crew: F/O E. A. van den Bogaert, F/O F. Schut, Cpl B. Corporaal, LAC A. F. Post.", "Crash cause": "Unknown"}, {"Date": "1/17/1943", "Time": "23H 0M 0S", "Aircraft": "Consolidated C-87 Liberator Express", "Operator": "United States Army Air Forces - USAAF", "Registration": "41-11708", "Flight phase": "Flight", "Flight type": "Military", "Survivors": "No", "Crash site": "Lake, Sea, Ocean, River", "Schedule": "Accra \u2013 Georgetown \u2013 Natal", "MSN": "204", "YOM": "1941", "Flight number": "NA", "Crash location": "Atlantic Ocean All World", "Country": "World", "Region": "World", "Crew on board": "6", "Crew fatalities": "6", "Pax on board": "20", "PAX fatalities": "20", "Other fatalities": "0", "Total fatalities": 26, "Circumstances": "While overflying the Atlantic Ocean by night, on the leg from Georgetown (Ascension Island) to Natal, while on a flight from Accra to Natal, the aircraft disappeared into the Ocean around 2300LT. SAR operations were conducted for several days but eventually suspended as no trace of the aircraft nor the crew was found. Two life vests were discovered on a Brazilian beach few days later.", "Crash cause": "Unknown"}, {"Date": "1/21/1943", "Time": "NA", "Aircraft": "Douglas C-49 (DC-3)", "Operator": "United States Army Air Forces - USAAF", "Registration": "42-56614", "Flight phase": "Flight", "Flight type": "Training", "Survivors": "Yes", "Crash site": "Plain, Valley", "Schedule": "Austin-del Valle - Austin-del Valle", "MSN": "1948", "YOM": "1937", "Flight number": "NA", "Crash location": "Austin-Bergstrom Texas", "Country": "United States of America", "Region": "North America", "Crew on board": "0", "Crew fatalities": "0", "Pax on board": "0", "PAX fatalities": "0", "Other fatalities": "0", "Total fatalities": 0, "Circumstances": "En route, the crew encountered technical problems with one or more engine and attempted to make an emergency landing 31 miles northwest of Austin-del Valle AFB. The aircraft was damaged beyond repair but there were no casualties. Austin-del Valle AFB was renamed Bergstr\u00f6m AFB two months later.", "Crash cause": "Technical failure"}], "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "665e04f9a0338a49680b1523", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/Plane Crashes.csv", "in": ["665e04f9a0338a49680b1522"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "PlanecrashesClassify_AutoML", "comment": "", "pipeline_id": "665e04f9a0338a49680b151e", "sub_type": "Automl", "stage_type": "ml", "mlCategory": "Classification", "stage_attributes": {"model_type": "classification", "label": "Survivors_stringindexer", "optimizeBy": "accuracy", "features": ["Total fatalities", "Date_stringindexer", "Time_stringindexer", "Aircraft_stringindexer", "Operator_stringindexer", "Registration_stringindexer", "Flight phase_stringindexer", "Flight type_stringindexer", "Crash site_stringindexer", "Schedule_stringindexer", "MSN_stringindexer", "YOM_stringindexer", "Flight number_stringindexer", "Crash location_stringindexer", "Country_stringindexer", "Region_stringindexer", "Crew on board_stringindexer", "Crew fatalities_stringindexer", "Pax on board_stringindexer", "PAX fatalities_stringindexer", "Other fatalities_stringindexer", "Circumstances_stringindexer", "Crash cause_stringindexer"], "percentage": "60", "executionTime": "10", "sampling_value": "none", "sampling": "1", "run_id": "10044869542b4121a732d5e68b1e0ec0", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/classification.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#333333", "type": "aml", "text": "Classification-AutoML", "slug": "auto-ml", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"model_type": "classification", "label": "Survivors_stringindexer", "optimizeBy": "accuracy", "features": ["Total fatalities", "Date_stringindexer", "Time_stringindexer", "Aircraft_stringindexer", "Operator_stringindexer", "Registration_stringindexer", "Flight phase_stringindexer", "Flight type_stringindexer", "Crash site_stringindexer", "Schedule_stringindexer", "MSN_stringindexer", "YOM_stringindexer", "Flight number_stringindexer", "Crash location_stringindexer", "Country_stringindexer", "Region_stringindexer", "Crew on board_stringindexer", "Crew fatalities_stringindexer", "Pax on board_stringindexer", "PAX fatalities_stringindexer", "Other fatalities_stringindexer", "Circumstances_stringindexer", "Crash cause_stringindexer"], "percentage": "60", "executionTime": "10", "sampling_value": "none", "sampling": "1", "run_id": "6682f95d0533401b98844b5b30a7ca94", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "_id": "665e04f9a0338a49680b1523"}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1570", "field": "Total fatalities", "alias": "Total fatalities", "type": "numeric", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1571", "field": "Date_stringindexer", "alias": "Date_stringindexer", "type": "real", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1572", "field": "Time_stringindexer", "alias": "Time_stringindexer", "type": "real", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1573", "field": "Aircraft_stringindexer", "alias": "Aircraft_stringindexer", "type": "real", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1574", "field": "Operator_stringindexer", "alias": "Operator_stringindexer", "type": "real", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1575", "field": "Registration_stringindexer", "alias": "Registration_stringindexer", "type": "real", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1576", "field": "Flight phase_stringindexer", "alias": "Flight phase_stringindexer", "type": "numeric", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1577", "field": "Flight type_stringindexer", "alias": "Flight type_stringindexer", "type": "real", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1578", "field": "Survivors_stringindexer", "alias": "Survivors_stringindexer", "type": "numeric", "position": "8"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1579", "field": "Crash site_stringindexer", "alias": "Crash site_stringindexer", "type": "real", "position": "9"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b157a", "field": "Schedule_stringindexer", "alias": "Schedule_stringindexer", "type": "real", "position": "10"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b157b", "field": "MSN_stringindexer", "alias": "MSN_stringindexer", "type": "real", "position": "11"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b157c", "field": "YOM_stringindexer", "alias": "YOM_stringindexer", "type": "real", "position": "12"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b157d", "field": "Flight number_stringindexer", "alias": "Flight number_stringindexer", "type": "numeric", "position": "13"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b157e", "field": "Crash location_stringindexer", "alias": "Crash location_stringindexer", "type": "real", "position": "14"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b157f", "field": "Country_stringindexer", "alias": "Country_stringindexer", "type": "real", "position": "15"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1580", "field": "Region_stringindexer", "alias": "Region_stringindexer", "type": "real", "position": "16"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1581", "field": "Crew on board_stringindexer", "alias": "Crew on board_stringindexer", "type": "real", "position": "17"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1582", "field": "Crew fatalities_stringindexer", "alias": "Crew fatalities_stringindexer", "type": "real", "position": "18"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1583", "field": "Pax on board_stringindexer", "alias": "Pax on board_stringindexer", "type": "real", "position": "19"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1584", "field": "PAX fatalities_stringindexer", "alias": "PAX fatalities_stringindexer", "type": "real", "position": "20"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1585", "field": "Other fatalities_stringindexer", "alias": "Other fatalities_stringindexer", "type": "numeric", "position": "21"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1586", "field": "Circumstances_stringindexer", "alias": "Circumstances_stringindexer", "type": "real", "position": "22"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1587", "field": "Crash cause_stringindexer", "alias": "Crash cause_stringindexer", "type": "real", "position": "23"}], "actual_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1558", "field": "Date", "alias": "Date", "type": "date", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1559", "field": "Time", "alias": "Time", "type": "String", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b155a", "field": "Aircraft", "alias": "Aircraft", "type": "String", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b155b", "field": "Operator", "alias": "Operator", "type": "String", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b155c", "field": "Registration", "alias": "Registration", "type": "String", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b155d", "field": "Flight phase", "alias": "Flight phase", "type": "String", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b155e", "field": "Flight type", "alias": "Flight type", "type": "String", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b155f", "field": "Survivors", "alias": "Survivors", "type": "String", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1560", "field": "Crash site", "alias": "Crash site", "type": "String", "position": "8"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1561", "field": "Schedule", "alias": "Schedule", "type": "String", "position": "9"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1562", "field": "MSN", "alias": "MSN", "type": "String", "position": "10"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1563", "field": "YOM", "alias": "YOM", "type": "String", "position": "11"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1564", "field": "Flight number", "alias": "Flight number", "type": "String", "position": "12"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1565", "field": "Crash location", "alias": "Crash location", "type": "String", "position": "13"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1566", "field": "Country", "alias": "Country", "type": "String", "position": "14"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1567", "field": "Region", "alias": "Region", "type": "String", "position": "15"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1568", "field": "Crew on board", "alias": "Crew on board", "type": "String", "position": "16"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b1569", "field": "Crew fatalities", "alias": "Crew fatalities", "type": "String", "position": "17"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b156a", "field": "Pax on board", "alias": "Pax on board", "type": "String", "position": "18"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b156b", "field": "PAX fatalities", "alias": "PAX fatalities", "type": "String", "position": "19"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b156c", "field": "Other fatalities", "alias": "Other fatalities", "type": "String", "position": "20"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b156d", "field": "Total fatalities", "alias": "Total fatalities", "type": "numeric", "position": "21"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b156e", "field": "Circumstances", "alias": "Circumstances", "type": "String", "position": "22"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "665e05ada0338a49680b156f", "field": "Crash cause", "alias": "Crash cause", "type": "String", "position": "23"}], "selected_schema": [], "created_at": "2024-06-03 18:01:29.588000", "originalcount": 28536, "samplecount": 2825, "samplefile": "/FileStore/platform/sampleData/665e04f9a0338a49680b1521/part-00000-c58812fc-c031-48a7-af86-b5a660ca85b6-c000.csv", "joinSchema": [], "updated_at": "2024-06-05 17:47:10.475000", "__v": 0, "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": {}}}]